

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun May 07 21:18:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 09/02/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   000D62                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _interfaz
    73   000D62  08                 	db	8
    74   000000                     _TRISC1	set	31905
    75                           
    76                           	psect	nvCOMRAM
    77   000013                     __pnvCOMRAM:
    78                           	callstack 0
    79   000013                     _d:
    80                           	callstack 0
    81   000013                     	ds	1
    82   000014                     _c:
    83                           	callstack 0
    84   000014                     	ds	1
    85   000015                     _b:
    86                           	callstack 0
    87   000015                     	ds	1
    88   000016                     _a:
    89                           	callstack 0
    90   000016                     	ds	1
    91   000000                     _RB3	set	31755
    92   000000                     _RB2	set	31754
    93   000000                     _RB1	set	31753
    94   000000                     _PEIE	set	32662
    95   000000                     _TRISC2	set	31906
    96   000000                     _LATD3	set	31843
    97   000000                     _LATD2	set	31842
    98   000000                     _LATD	set	3980
    99   000000                     _RB0	set	31752
   100   000000                     _TRISB	set	3987
   101   000000                     _TRISD	set	3989
   102   000000                     _ADCON1	set	4033
   103   000000                     _PR2	set	4043
   104   000000                     _CCP2CON	set	4026
   105   000000                     _CCP1CON	set	4029
   106   000000                     _CCPR1L	set	4030
   107   000000                     _CCPR2L	set	4027
   108   000000                     _GIE	set	32663
   109   000000                     _RD0	set	31768
   110                           
   111                           	psect	smallconst
   112   000800                     __psmallconst:
   113                           	callstack 0
   114   000800  00                 	db	0
   115   000801                     STR_6:
   116   000801  52                 	db	82	;'R'
   117   000802  65                 	db	101	;'e'
   118   000803  76                 	db	118	;'v'
   119   000804  69                 	db	105	;'i'
   120   000805  73                 	db	115	;'s'
   121   000806  65                 	db	101	;'e'
   122   000807  20                 	db	32
   123   000808  6C                 	db	108	;'l'
   124   000809  61                 	db	97	;'a'
   125   00080A  20                 	db	32
   126   00080B  63                 	db	99	;'c'
   127   00080C  6F                 	db	111	;'o'
   128   00080D  6E                 	db	110	;'n'
   129   00080E  65                 	db	101	;'e'
   130   00080F  78                 	db	120	;'x'
   131   000810  69                 	db	105	;'i'
   132   000811  6F                 	db	111	;'o'
   133   000812  6E                 	db	110	;'n'
   134   000813  20                 	db	32
   135   000814  61                 	db	97	;'a'
   136   000815  20                 	db	32
   137   000816  00                 	db	0
   138   000817                     STR_11:
   139   000817  41                 	db	65	;'A'
   140   000818  63                 	db	99	;'c'
   141   000819  74                 	db	116	;'t'
   142   00081A  69                 	db	105	;'i'
   143   00081B  76                 	db	118	;'v'
   144   00081C  65                 	db	101	;'e'
   145   00081D  20                 	db	32
   146   00081E  65                 	db	101	;'e'
   147   00081F  6C                 	db	108	;'l'
   148   000820  20                 	db	32
   149   000821  70                 	db	112	;'p'
   150   000822  75                 	db	117	;'u'
   151   000823  6C                 	db	108	;'l'
   152   000824  73                 	db	115	;'s'
   153   000825  61                 	db	97	;'a'
   154   000826  64                 	db	100	;'d'
   155   000827  6F                 	db	111	;'o'
   156   000828  72                 	db	114	;'r'
   157   000829  00                 	db	0
   158   00082A                     STR_2:
   159   00082A  45                 	db	69	;'E'
   160   00082B  73                 	db	115	;'s'
   161   00082C  70                 	db	112	;'p'
   162   00082D  65                 	db	101	;'e'
   163   00082E  72                 	db	114	;'r'
   164   00082F  65                 	db	101	;'e'
   165   000830  20                 	db	32
   166   000831  75                 	db	117	;'u'
   167   000832  6E                 	db	110	;'n'
   168   000833  20                 	db	32
   169   000834  6D                 	db	109	;'m'
   170   000835  6F                 	db	111	;'o'
   171   000836  6D                 	db	109	;'m'
   172   000837  65                 	db	101	;'e'
   173   000838  6E                 	db	110	;'n'
   174   000839  74                 	db	116	;'t'
   175   00083A  6F                 	db	111	;'o'
   176   00083B  00                 	db	0
   177   00083C                     STR_13:
   178   00083C  53                 	db	83	;'S'
   179   00083D  65                 	db	101	;'e'
   180   00083E  6C                 	db	108	;'l'
   181   00083F  65                 	db	101	;'e'
   182   000840  63                 	db	99	;'c'
   183   000841  63                 	db	99	;'c'
   184   000842  69                 	db	105	;'i'
   185   000843  6F                 	db	111	;'o'
   186   000844  6E                 	db	110	;'n'
   187   000845  65                 	db	101	;'e'
   188   000846  20                 	db	32
   189   000847  75                 	db	117	;'u'
   190   000848  6E                 	db	110	;'n'
   191   000849  20                 	db	32
   192   00084A  25                 	db	37
   193   00084B  00                 	db	0
   194   00084C                     STR_17:
   195   00084C  4D                 	db	77	;'M'
   196   00084D  6F                 	db	111	;'o'
   197   00084E  74                 	db	116	;'t'
   198   00084F  6F                 	db	111	;'o'
   199   000850  72                 	db	114	;'r'
   200   000851  20                 	db	32
   201   000852  70                 	db	112	;'p'
   202   000853  72                 	db	114	;'r'
   203   000854  65                 	db	101	;'e'
   204   000855  6E                 	db	110	;'n'
   205   000856  64                 	db	100	;'d'
   206   000857  69                 	db	105	;'i'
   207   000858  64                 	db	100	;'d'
   208   000859  6F                 	db	111	;'o'
   209   00085A  00                 	db	0
   210   00085B                     STR_12:
   211   00085B  70                 	db	112	;'p'
   212   00085C  61                 	db	97	;'a'
   213   00085D  72                 	db	114	;'r'
   214   00085E  61                 	db	97	;'a'
   215   00085F  20                 	db	32
   216   000860  61                 	db	97	;'a'
   217   000861  6A                 	db	106	;'j'
   218   000862  75                 	db	117	;'u'
   219   000863  73                 	db	115	;'s'
   220   000864  74                 	db	116	;'t'
   221   000865  61                 	db	97	;'a'
   222   000866  72                 	db	114	;'r'
   223   000867  6C                 	db	108	;'l'
   224   000868  6F                 	db	111	;'o'
   225   000869  00                 	db	0
   226   00086A                     STR_14:
   227   00086A  64                 	db	100	;'d'
   228   00086B  65                 	db	101	;'e'
   229   00086C  20                 	db	32
   230   00086D  6F                 	db	111	;'o'
   231   00086E  70                 	db	112	;'p'
   232   00086F  65                 	db	101	;'e'
   233   000870  72                 	db	114	;'r'
   234   000871  61                 	db	97	;'a'
   235   000872  63                 	db	99	;'c'
   236   000873  69                 	db	105	;'i'
   237   000874  6F                 	db	111	;'o'
   238   000875  6E                 	db	110	;'n'
   239   000876  3A                 	db	58	;':'
   240   000877  00                 	db	0
   241   000878                     STR_1:
   242   000878  43                 	db	67	;'C'
   243   000879  6F                 	db	111	;'o'
   244   00087A  72                 	db	114	;'r'
   245   00087B  74                 	db	116	;'t'
   246   00087C  61                 	db	97	;'a'
   247   00087D  64                 	db	100	;'d'
   248   00087E  6F                 	db	111	;'o'
   249   00087F  72                 	db	114	;'r'
   250   000880  61                 	db	97	;'a'
   251   000881  20                 	db	32
   252   000882  55                 	db	85	;'U'
   253   000883  4E                 	db	78	;'N'
   254   000884  00                 	db	0
   255   000885                     STR_7:
   256   000885  6C                 	db	108	;'l'
   257   000886  6F                 	db	111	;'o'
   258   000887  73                 	db	115	;'s'
   259   000888  20                 	db	32
   260   000889  6D                 	db	109	;'m'
   261   00088A  6F                 	db	111	;'o'
   262   00088B  74                 	db	116	;'t'
   263   00088C  6F                 	db	111	;'o'
   264   00088D  72                 	db	114	;'r'
   265   00088E  65                 	db	101	;'e'
   266   00088F  73                 	db	115	;'s'
   267   000890  00                 	db	0
   268   000891                     STR_18:
   269   000891  4F                 	db	79	;'O'
   270   000892  70                 	db	112	;'p'
   271   000893  65                 	db	101	;'e'
   272   000894  72                 	db	114	;'r'
   273   000895  61                 	db	97	;'a'
   274   000896  63                 	db	99	;'c'
   275   000897  69                 	db	105	;'i'
   276   000898  6F                 	db	111	;'o'
   277   000899  6E                 	db	110	;'n'
   278   00089A  3A                 	db	58	;':'
   279   00089B  00                 	db	0
   280   00089C                     STR_9:
   281   00089C  4D                 	db	77	;'M'
   282   00089D  6F                 	db	111	;'o'
   283   00089E  74                 	db	116	;'t'
   284   00089F  6F                 	db	111	;'o'
   285   0008A0  72                 	db	114	;'r'
   286   0008A1  20                 	db	32
   287   0008A2  4F                 	db	79	;'O'
   288   0008A3  46                 	db	70	;'F'
   289   0008A4  46                 	db	70	;'F'
   290   0008A5  00                 	db	0
   291   0008A6                     STR_4:
   292   0008A6  32                 	db	50	;'2'
   293   0008A7  30                 	db	48	;'0'
   294   0008A8  32                 	db	50	;'2'
   295   0008A9  33                 	db	51	;'3'
   296   0008AA  2D                 	db	45
   297   0008AB  31                 	db	49	;'1'
   298   0008AC  00                 	db	0
   299   0008AD                     STR_3:
   300   0008AD  55                 	db	85	;'U'
   301   0008AE  4E                 	db	78	;'N'
   302   0008AF  41                 	db	65	;'A'
   303   0008B0  4C                 	db	76	;'L'
   304   0008B1  00                 	db	0
   305   0008B2                     STR_8:
   306   0008B2  20                 	db	32
   307   0008B3  20                 	db	32
   308   0008B4  00                 	db	0
   309   0008B5                     STR_16:
   310   0008B5  30                 	db	48	;'0'
   311   0008B6  25                 	db	37
   312   0008B7  00                 	db	0
   313   0008B8  00                 	db	0	; dummy byte at the end
   314   000000                     
   315                           ; #config settings
   316                           
   317                           	psect	cinit
   318   000CD4                     __pcinit:
   319                           	callstack 0
   320   000CD4                     start_initialization:
   321                           	callstack 0
   322   000CD4                     __initialization:
   323                           	callstack 0
   324                           
   325                           ; Initialize objects allocated to COMRAM (1 bytes)
   326                           ; load TBLPTR registers with __pidataCOMRAM
   327   000CD4  0E62               	movlw	low __pidataCOMRAM
   328   000CD6  6EF6               	movwf	tblptrl,c
   329   000CD8  0E0D               	movlw	high __pidataCOMRAM
   330   000CDA  6EF7               	movwf	tblptrh,c
   331   000CDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   332   000CDE  6EF8               	movwf	tblptru,c
   333   000CE0  0009               	tblrd		*+	;fetch initializer
   334   000CE2  CFF5 F018          	movff	tablat,__pdataCOMRAM
   335                           
   336                           ; Clear objects allocated to COMRAM (1 bytes)
   337   000CE6  6A17               	clrf	__pbssCOMRAM& (0+255),c
   338   000CE8                     end_of_initialization:
   339                           	callstack 0
   340   000CE8                     __end_of__initialization:
   341                           	callstack 0
   342   000CE8  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343   000CEA  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344   000CEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   345   000CEE  6EF8               	movwf	tblptru,c
   346   000CF0  0100               	movlb	0
   347   000CF2  EF5D  F004         	goto	_main	;jump to C main() function
   348                           
   349                           	psect	bssCOMRAM
   350   000017                     __pbssCOMRAM:
   351                           	callstack 0
   352   000017                     _Estados:
   353                           	callstack 0
   354   000017                     	ds	1
   355                           
   356                           	psect	dataCOMRAM
   357   000018                     __pdataCOMRAM:
   358                           	callstack 0
   359   000018                     _interfaz:
   360                           	callstack 0
   361   000018                     	ds	1
   362                           
   363                           	psect	cstackCOMRAM
   364   000001                     __pcstackCOMRAM:
   365                           	callstack 0
   366   000001                     ??_RetardoLCD:
   367   000001                     ?_strlen:
   368                           	callstack 0
   369   000001                     ?___awdiv:
   370                           	callstack 0
   371   000001                     ConfiguraLCD@a:
   372                           	callstack 0
   373   000001                     strlen@s:
   374                           	callstack 0
   375   000001                     ___awdiv@dividend:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379   000001                     	ds	1
   380   000002                     RetardoLCD@a:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384   000002                     	ds	1
   385   000003                     ??_EnviaDato:
   386   000003                     strlen@cp:
   387                           	callstack 0
   388   000003                     ___awdiv@divisor:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x2
   392   000003                     	ds	1
   393   000004                     EnviaDato@a:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x3
   397   000004                     	ds	1
   398   000005                     EscribeLCD_c@a:
   399                           	callstack 0
   400   000005                     DireccionaLCD@a:
   401                           	callstack 0
   402   000005                     ___awdiv@counter:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x4
   406   000005                     	ds	1
   407   000006                     ___awdiv@sign:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x5
   411   000006                     	ds	1
   412   000007                     ___awdiv@quotient:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416   000007                     	ds	2
   417   000009                     Mensaje_LCD_Var_Centrado@a:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x8
   421   000009                     	ds	1
   422   00000A                     Mensaje_LCD_Var_Centrado@l:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x9
   426   00000A                     	ds	1
   427   00000B                     Mensaje_LCD_Var_Centrado@n:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xA
   431   00000B                     	ds	1
   432   00000C                     Mensaje_LCD_Var_Centrado@i:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xB
   436   00000C                     	ds	1
   437   00000D                     Mensaje_LCD_Var_Mensaje20x4@a:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xC
   441   00000D                     	ds	1
   442   00000E                     Mensaje_LCD_Var_Mensaje20x4@b:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0xD
   446   00000E                     	ds	1
   447   00000F                     Mensaje_LCD_Var_Mensaje20x4@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xE
   451   00000F                     	ds	1
   452   000010                     Mensaje_LCD_Var_Mensaje20x4@d:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xF
   456   000010                     	ds	1
   457   000011                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x10
   460   000011                     	ds	2
   461                           
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 15 in file "PAI.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         0       0       0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0
   483 ;;      Temps:          2       0       0       0       0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels required when called: 6
   487 ;; This function calls:
   488 ;;		_ConfiguraLCD
   489 ;;		_InicializaLCD
   490 ;;		_Mensaje_LCD_Var_Mensaje20x4
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text0
   497   0008BA                     __ptext0:
   498                           	callstack 0
   499   0008BA                     _main:
   500                           	callstack 25
   501                           
   502                           ;PAI.c: 18: ADCON1=15;
   503                           
   504                           ;incstack = 0
   505   0008BA  0E0F               	movlw	15
   506   0008BC  6EC1               	movwf	193,c	;volatile
   507                           
   508                           ;PAI.c: 19: TRISD=0;
   509   0008BE  0E00               	movlw	0
   510   0008C0  6E95               	movwf	149,c	;volatile
   511                           
   512                           ;PAI.c: 20: LATD=0;
   513   0008C2  0E00               	movlw	0
   514   0008C4  6E8C               	movwf	140,c	;volatile
   515                           
   516                           ;PAI.c: 21: TRISB=0b11111111;
   517   0008C6  6893               	setf	147,c	;volatile
   518                           
   519                           ;PAI.c: 25: CCP1CON=0b00001100;
   520   0008C8  0E0C               	movlw	12
   521   0008CA  6EBD               	movwf	189,c	;volatile
   522                           
   523                           ;PAI.c: 26: CCP2CON=0b00001100;
   524   0008CC  0E0C               	movlw	12
   525   0008CE  6EBA               	movwf	186,c	;volatile
   526                           
   527                           ;PAI.c: 27: PR2=124;
   528   0008D0  0E7C               	movlw	124
   529   0008D2  6ECB               	movwf	203,c	;volatile
   530                           
   531                           ;PAI.c: 28: CCPR1L=0;
   532   0008D4  0E00               	movlw	0
   533   0008D6  6EBE               	movwf	190,c	;volatile
   534                           
   535                           ;PAI.c: 29: CCPR2L=0;
   536   0008D8  0E00               	movlw	0
   537   0008DA  6EBB               	movwf	187,c	;volatile
   538                           
   539                           ;PAI.c: 31: TRISC1=0;
   540   0008DC  9294               	bcf	3988,1,c	;volatile
   541                           
   542                           ;PAI.c: 32: TRISC2=0;
   543   0008DE  9494               	bcf	3988,2,c	;volatile
   544                           
   545                           ;PAI.c: 44: GIE=1;
   546   0008E0  8EF2               	bsf	4082,7,c	;volatile
   547                           
   548                           ;PAI.c: 45: PEIE=1;
   549   0008E2  8CF2               	bsf	4082,6,c	;volatile
   550                           
   551                           ;PAI.c: 49: a=!RB0;
   552   0008E4  B081               	btfsc	3969,0,c	;volatile
   553   0008E6  D002               	goto	u490
   554   0008E8  0E01               	movlw	1
   555   0008EA  D001               	goto	u500
   556   0008EC                     u490:
   557   0008EC  0E00               	movlw	0
   558   0008EE                     u500:
   559   0008EE  6E16               	movwf	_a^0,c
   560                           
   561                           ;PAI.c: 50: b=!RB1;
   562   0008F0  B281               	btfsc	3969,1,c	;volatile
   563   0008F2  D002               	goto	u510
   564   0008F4  0E01               	movlw	1
   565   0008F6  D001               	goto	u520
   566   0008F8                     u510:
   567   0008F8  0E00               	movlw	0
   568   0008FA                     u520:
   569   0008FA  6E15               	movwf	_b^0,c
   570                           
   571                           ;PAI.c: 51: c=!RB2;
   572   0008FC  B481               	btfsc	3969,2,c	;volatile
   573   0008FE  D002               	goto	u530
   574   000900  0E01               	movlw	1
   575   000902  D001               	goto	u540
   576   000904                     u530:
   577   000904  0E00               	movlw	0
   578   000906                     u540:
   579   000906  6E14               	movwf	_c^0,c
   580                           
   581                           ;PAI.c: 52: d=!RB3;
   582   000908  B681               	btfsc	3969,3,c	;volatile
   583   00090A  D002               	goto	u550
   584   00090C  0E01               	movlw	1
   585   00090E  D001               	goto	u560
   586   000910                     u550:
   587   000910  0E00               	movlw	0
   588   000912                     u560:
   589   000912  6E13               	movwf	_d^0,c
   590                           
   591                           ;PAI.c: 54: ConfiguraLCD(4);
   592   000914  0E04               	movlw	4
   593   000916  EC7B  F006         	call	_ConfiguraLCD
   594                           
   595                           ;PAI.c: 55: InicializaLCD();
   596   00091A  EC24  F005         	call	_InicializaLCD	;wreg free
   597                           
   598                           ;PAI.c: 57: _delay((unsigned long)((500)*(1000000/4000.0)));
   599   00091E  0EA3               	movlw	163
   600   000920  6E11               	movwf	??_main^0,c
   601   000922  0E55               	movlw	85
   602   000924                     u717:
   603   000924  2EE8               	decfsz	wreg,f,c
   604   000926  D7FE               	bra	u717
   605   000928  2E11               	decfsz	??_main^0,f,c
   606   00092A  D7FC               	bra	u717
   607   00092C  F000               	nop	
   608   00092E                     l1345:
   609                           
   610                           ;PAI.c: 61: a=!RB0;
   611   00092E  B081               	btfsc	3969,0,c	;volatile
   612   000930  D002               	goto	u570
   613   000932  0E01               	movlw	1
   614   000934  D001               	goto	u580
   615   000936                     u570:
   616   000936  0E00               	movlw	0
   617   000938                     u580:
   618   000938  6E16               	movwf	_a^0,c
   619                           
   620                           ;PAI.c: 62: b=!RB1;
   621   00093A  B281               	btfsc	3969,1,c	;volatile
   622   00093C  D002               	goto	u590
   623   00093E  0E01               	movlw	1
   624   000940  D001               	goto	u600
   625   000942                     u590:
   626   000942  0E00               	movlw	0
   627   000944                     u600:
   628   000944  6E15               	movwf	_b^0,c
   629                           
   630                           ;PAI.c: 63: c=RB2;
   631   000946  0E00               	movlw	0
   632   000948  B481               	btfsc	3969,2,c	;volatile
   633   00094A  0E01               	movlw	1
   634   00094C  6E14               	movwf	_c^0,c
   635                           
   636                           ;PAI.c: 64: d=!RB3;
   637   00094E  B681               	btfsc	3969,3,c	;volatile
   638   000950  D002               	goto	u610
   639   000952  0E01               	movlw	1
   640   000954  D001               	goto	u620
   641   000956                     u610:
   642   000956  0E00               	movlw	0
   643   000958                     u620:
   644   000958  6E13               	movwf	_d^0,c
   645                           
   646                           ;PAI.c: 67: switch(Estados){
   647   00095A  D065               	goto	l1417
   648   00095C                     l1353:
   649                           
   650                           ;PAI.c: 70: Mensaje_LCD_Var_Mensaje20x4("Cortadora UN","Espere un momento","UNAL","2023-
      +                          1");
   651   00095C  0E78               	movlw	low STR_1
   652   00095E  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   653   000960  0E2A               	movlw	low STR_2
   654   000962  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   655   000964  0EAD               	movlw	low STR_3
   656   000966  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   657   000968  0EA6               	movlw	low STR_4
   658   00096A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   659   00096C  EC37  F006         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   660                           
   661                           ;PAI.c: 71: LATD=0;
   662   000970  0E00               	movlw	0
   663   000972  6E8C               	movwf	140,c	;volatile
   664                           
   665                           ;PAI.c: 72: _delay((unsigned long)((2000)*(1000000/4000.0)));
   666   000974  0E03               	movlw	3
   667   000976  6E12               	movwf	(??_main+1)^0,c
   668   000978  0E8A               	movlw	138
   669   00097A  6E11               	movwf	??_main^0,c
   670   00097C  0E56               	movlw	86
   671   00097E                     u727:
   672   00097E  2EE8               	decfsz	wreg,f,c
   673   000980  D7FE               	bra	u727
   674   000982  2E11               	decfsz	??_main^0,f,c
   675   000984  D7FC               	bra	u727
   676   000986  2E12               	decfsz	(??_main+1)^0,f,c
   677   000988  D7FA               	bra	u727
   678   00098A                     l1359:
   679                           
   680                           ;PAI.c: 73: Estados=1;
   681   00098A  0E01               	movlw	1
   682   00098C  D04A               	goto	L4
   683   00098E                     l1361:
   684                           
   685                           ;PAI.c: 77: Mensaje_LCD_Var_Mensaje20x4(" ","Revise la conexion a ","los motores","  ");
   686   00098E  0EB3               	movlw	low (STR_8+1)
   687   000990  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   688   000992  0E01               	movlw	low STR_6
   689   000994  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   690   000996  0E85               	movlw	low STR_7
   691   000998  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   692   00099A  0EB2               	movlw	low STR_8
   693   00099C  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   694   00099E  EC37  F006         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   695                           
   696                           ;PAI.c: 79: RD0=0;
   697   0009A2  9083               	bcf	3971,0,c	;volatile
   698                           
   699                           ;PAI.c: 80: if(a==0){Estados=1;break;}
   700   0009A4  5016               	movf	_a^0,w,c
   701   0009A6  B4D8               	btfsc	status,2,c
   702   0009A8  D7F0               	goto	l1359
   703   0009AA                     l1371:
   704                           
   705                           ;PAI.c: 81: else{Estados=2;break;}
   706   0009AA  0E02               	movlw	2
   707   0009AC  D03A               	goto	L4
   708   0009AE                     l1373:
   709                           
   710                           ;PAI.c: 85: Mensaje_LCD_Var_Mensaje20x4("Motor OFF","  ","Active el pulsador","para ajus
      +                          tarlo");
   711   0009AE  0E9C               	movlw	low STR_9
   712   0009B0  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   713   0009B2  0EB2               	movlw	low STR_8
   714   0009B4  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   715   0009B6  0E17               	movlw	low STR_11
   716   0009B8  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   717   0009BA  0E5B               	movlw	low STR_12
   718   0009BC  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   719   0009BE  EC37  F006         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   720                           
   721                           ;PAI.c: 87: RD0=1;
   722   0009C2  8083               	bsf	3971,0,c	;volatile
   723                           
   724                           ;PAI.c: 88: if(a==0){Estados=1;break;}
   725   0009C4  5016               	movf	_a^0,w,c
   726   0009C6  B4D8               	btfsc	status,2,c
   727   0009C8  D7E0               	goto	l1359
   728                           
   729                           ;PAI.c: 89: if(d==1){Estados=3;break;}
   730   0009CA  0413               	decf	_d^0,w,c
   731   0009CC  A4D8               	btfss	status,2,c
   732   0009CE  D7ED               	goto	l1371
   733   0009D0  0E03               	movlw	3
   734   0009D2  D027               	goto	L4
   735   0009D4                     l1389:
   736                           
   737                           ;PAI.c: 94: Mensaje_LCD_Var_Mensaje20x4("Seleccione un %","de operacion:"," ","0%");
   738   0009D4  0E3C               	movlw	low STR_13
   739   0009D6  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   740   0009D8  0E6A               	movlw	low STR_14
   741   0009DA  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   742   0009DC  0EB3               	movlw	low (STR_8+1)
   743   0009DE  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   744   0009E0  0EB5               	movlw	low STR_16
   745   0009E2  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   746   0009E4  EC37  F006         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   747                           
   748                           ;PAI.c: 97: if(a==0){Estados=1;break;}
   749   0009E8  5016               	movf	_a^0,w,c
   750   0009EA  B4D8               	btfsc	status,2,c
   751   0009EC  D7CE               	goto	l1359
   752                           
   753                           ;PAI.c: 99: if(b==1){Estados=2;break;}
   754   0009EE  0415               	decf	_b^0,w,c
   755   0009F0  B4D8               	btfsc	status,2,c
   756   0009F2  D7DB               	goto	l1371
   757                           
   758                           ;PAI.c: 100: if(c==1){Estados=4;break;}
   759   0009F4  0414               	decf	_c^0,w,c
   760   0009F6  A4D8               	btfss	status,2,c
   761   0009F8  D79A               	goto	l1345
   762   0009FA  0E04               	movlw	4
   763   0009FC  D012               	goto	L4
   764   0009FE                     l1403:
   765                           
   766                           ;PAI.c: 104: Mensaje_LCD_Var_Mensaje20x4("Motor prendido","Operacion:"," ","0%");
   767   0009FE  0E4C               	movlw	low STR_17
   768   000A00  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   769   000A02  0E91               	movlw	low STR_18
   770   000A04  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   771   000A06  0EB3               	movlw	low (STR_8+1)
   772   000A08  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   773   000A0A  0EB5               	movlw	low STR_16
   774   000A0C  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   775   000A0E  EC37  F006         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   776                           
   777                           ;PAI.c: 106: if(a==0){Estados=1;break;}
   778   000A12  5016               	movf	_a^0,w,c
   779   000A14  B4D8               	btfsc	status,2,c
   780   000A16  D7B9               	goto	l1359
   781                           
   782                           ;PAI.c: 107: if(b==1){Estados=2;break;}
   783   000A18  0415               	decf	_b^0,w,c
   784   000A1A  B4D8               	btfsc	status,2,c
   785   000A1C  D7C6               	goto	l1371
   786   000A1E  D787               	goto	l1345
   787   000A20                     l1413:
   788                           
   789                           ;PAI.c: 112: Estados=0;
   790   000A20  0E00               	movlw	0
   791   000A22                     L4:
   792   000A22  6E17               	movwf	_Estados^0,c
   793                           
   794                           ;PAI.c: 113: break;
   795   000A24  D784               	goto	l1345
   796   000A26                     l1417:
   797   000A26  5017               	movf	_Estados^0,w,c
   798                           
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 5, Range of values is 0 to 4
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte           16     9 (average)
   804                           ;	Chosen strategy is simple_byte
   805   000A28  0A00               	xorlw	0	; case 0
   806   000A2A  B4D8               	btfsc	status,2,c
   807   000A2C  D797               	goto	l1353
   808   000A2E  0A01               	xorlw	1	; case 1
   809   000A30  B4D8               	btfsc	status,2,c
   810   000A32  D7AD               	goto	l1361
   811   000A34  0A03               	xorlw	3	; case 2
   812   000A36  B4D8               	btfsc	status,2,c
   813   000A38  D7BA               	goto	l1373
   814   000A3A  0A01               	xorlw	1	; case 3
   815   000A3C  B4D8               	btfsc	status,2,c
   816   000A3E  D7CA               	goto	l1389
   817   000A40  0A07               	xorlw	7	; case 4
   818   000A42  B4D8               	btfsc	status,2,c
   819   000A44  D7DC               	goto	l1403
   820   000A46  D7EC               	goto	l1413
   821   000A48                     __end_of_main:
   822                           	callstack 0
   823                           
   824 ;; *************** function _Mensaje_LCD_Var_Mensaje20x4 *****************
   825 ;; Defined at:
   826 ;;		line 304 in file "LibLCDXC8.h"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  a               1   12[COMRAM] PTR unsigned char 
   829 ;;		 -> STR_17(15), STR_13(16), STR_9(10), STR_5(2), 
   830 ;;		 -> STR_1(13), 
   831 ;;  b               1   13[COMRAM] PTR unsigned char 
   832 ;;		 -> STR_18(11), STR_14(14), STR_10(3), STR_6(22), 
   833 ;;		 -> STR_2(18), 
   834 ;;  c               1   14[COMRAM] PTR unsigned char 
   835 ;;		 -> STR_19(2), STR_15(2), STR_11(19), STR_7(12), 
   836 ;;		 -> STR_3(5), 
   837 ;;  d               1   15[COMRAM] PTR unsigned char 
   838 ;;		 -> STR_20(3), STR_16(3), STR_12(15), STR_8(3), 
   839 ;;		 -> STR_4(7), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   851 ;;      Params:         4       0       0       0       0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0
   854 ;;      Totals:         4       0       0       0       0       0       0       0       0
   855 ;;Total ram usage:        4 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 5
   858 ;; This function calls:
   859 ;;		_BorraLCD
   860 ;;		_DireccionaLCD
   861 ;;		_Mensaje_LCD_Var_Centrado
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text1
   868   000C6E                     __ptext1:
   869                           	callstack 0
   870   000C6E                     _Mensaje_LCD_Var_Mensaje20x4:
   871                           	callstack 25
   872                           
   873                           ;LibLCDXC8.h: 305: BorraLCD();
   874                           
   875                           ;incstack = 0
   876   000C6E  EC9D  F006         	call	_BorraLCD	;wreg free
   877                           
   878                           ;LibLCDXC8.h: 306: DireccionaLCD(0x00);
   879   000C72  0E00               	movlw	0
   880   000C74  EC92  F006         	call	_DireccionaLCD
   881                           
   882                           ;LibLCDXC8.h: 307: Mensaje_LCD_Var_Centrado(a);
   883   000C78  C00D  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@a,Mensaje_LCD_Var_Centrado@a
   884   000C7C  ECB4  F005         	call	_Mensaje_LCD_Var_Centrado	;wreg free
   885                           
   886                           ;LibLCDXC8.h: 308: DireccionaLCD(0xC0);
   887   000C80  0EC0               	movlw	192
   888   000C82  EC92  F006         	call	_DireccionaLCD
   889                           
   890                           ;LibLCDXC8.h: 309: Mensaje_LCD_Var_Centrado(b);
   891   000C86  C00E  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@b,Mensaje_LCD_Var_Centrado@a
   892   000C8A  ECB4  F005         	call	_Mensaje_LCD_Var_Centrado	;wreg free
   893                           
   894                           ;LibLCDXC8.h: 310: DireccionaLCD(0xC0-44);
   895   000C8E  0E94               	movlw	148
   896   000C90  EC92  F006         	call	_DireccionaLCD
   897                           
   898                           ;LibLCDXC8.h: 311: Mensaje_LCD_Var_Centrado(c);
   899   000C94  C00F  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@c,Mensaje_LCD_Var_Centrado@a
   900   000C98  ECB4  F005         	call	_Mensaje_LCD_Var_Centrado	;wreg free
   901                           
   902                           ;LibLCDXC8.h: 312: DireccionaLCD(0xC0+20);
   903   000C9C  0ED4               	movlw	212
   904   000C9E  EC92  F006         	call	_DireccionaLCD
   905                           
   906                           ;LibLCDXC8.h: 313: Mensaje_LCD_Var_Centrado(d);
   907   000CA2  C010  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@d,Mensaje_LCD_Var_Centrado@a
   908   000CA6  ECB4  F005         	call	_Mensaje_LCD_Var_Centrado	;wreg free
   909   000CAA  0012               	return		;funcret
   910   000CAC                     __end_of_Mensaje_LCD_Var_Mensaje20x4:
   911                           	callstack 0
   912                           
   913 ;; *************** function _Mensaje_LCD_Var_Centrado *****************
   914 ;; Defined at:
   915 ;;		line 320 in file "LibLCDXC8.h"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  a               1    8[COMRAM] PTR unsigned char 
   918 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
   919 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
   920 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
   921 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
   922 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  i               1   11[COMRAM] unsigned char 
   925 ;;  n               1   10[COMRAM] unsigned char 
   926 ;;  l               1    9[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         1       0       0       0       0       0       0       0       0
   937 ;;      Locals:         3       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         4       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        4 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 4
   943 ;; This function calls:
   944 ;;		_EscribeLCD_c
   945 ;;		___awdiv
   946 ;;		_strlen
   947 ;; This function is called by:
   948 ;;		_Mensaje_LCD_Var_Mensaje20x4
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text2
   953   000B68                     __ptext2:
   954                           	callstack 0
   955   000B68                     _Mensaje_LCD_Var_Centrado:
   956                           	callstack 25
   957                           
   958                           ;LibLCDXC8.h: 321: char l =strlen(a);
   959                           
   960                           ;incstack = 0
   961   000B68  C009  F001         	movff	Mensaje_LCD_Var_Centrado@a,strlen@s
   962   000B6C  EC56  F006         	call	_strlen	;wreg free
   963   000B70  5001               	movf	?_strlen^0,w,c
   964   000B72  6E0A               	movwf	Mensaje_LCD_Var_Centrado@l^0,c
   965                           
   966                           ;LibLCDXC8.h: 322: char n=(20-l)/2;
   967   000B74  500A               	movf	Mensaje_LCD_Var_Centrado@l^0,w,c
   968   000B76  0814               	sublw	20
   969   000B78  6E01               	movwf	___awdiv@dividend^0,c
   970   000B7A  0E00               	movlw	0
   971   000B7C  A0D8               	btfss	status,0,c
   972   000B7E  2AE8               	incf	wreg,f,c
   973   000B80  0800               	sublw	0
   974   000B82  6E02               	movwf	(___awdiv@dividend+1)^0,c
   975   000B84  0E00               	movlw	0
   976   000B86  6E04               	movwf	(___awdiv@divisor+1)^0,c
   977   000B88  0E02               	movlw	2
   978   000B8A  6E03               	movwf	___awdiv@divisor^0,c
   979   000B8C  EC72  F005         	call	___awdiv	;wreg free
   980   000B90  5001               	movf	?___awdiv^0,w,c
   981   000B92  6E0B               	movwf	Mensaje_LCD_Var_Centrado@n^0,c
   982                           
   983                           ;LibLCDXC8.h: 323: char i;;LibLCDXC8.h: 325: for(i=0;i<n;i++){
   984   000B94  0E00               	movlw	0
   985   000B96  6E0C               	movwf	Mensaje_LCD_Var_Centrado@i^0,c
   986   000B98  D004               	goto	l1307
   987   000B9A                     l1303:
   988                           
   989                           ;LibLCDXC8.h: 326: EscribeLCD_c(' ');
   990   000B9A  0E20               	movlw	32
   991   000B9C  EC87  F006         	call	_EscribeLCD_c
   992   000BA0  2A0C               	incf	Mensaje_LCD_Var_Centrado@i^0,f,c
   993   000BA2                     l1307:
   994   000BA2  500B               	movf	Mensaje_LCD_Var_Centrado@n^0,w,c
   995   000BA4  5C0C               	subwf	Mensaje_LCD_Var_Centrado@i^0,w,c
   996   000BA6  B0D8               	btfsc	status,0,c
   997   000BA8  D00A               	goto	l1313
   998   000BAA  D7F7               	goto	l1303
   999   000BAC                     l1309:
  1000                           
  1001                           ;LibLCDXC8.h: 329: EscribeLCD_c(*a);
  1002   000BAC  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  1003   000BB0                     	if	1	;There is more than 1 active tblptr byte
  1004   000BB0  0E08               	movlw	high __smallconst
  1005   000BB2  6EF7               	movwf	tblptrh,c
  1006   000BB4                     	endif
  1007   000BB4                     	if	0	;tblptru may be non-zero
  1008   000BB4                     	endif
  1009   000BB4                     	if	0	;tblptru may be non-zero
  1010   000BB4                     	endif
  1011   000BB4  0008               	tblrd		*
  1012   000BB6  50F5               	movf	tablat,w,c
  1013   000BB8  EC87  F006         	call	_EscribeLCD_c
  1014                           
  1015                           ;LibLCDXC8.h: 330: a++;
  1016   000BBC  2A09               	incf	Mensaje_LCD_Var_Centrado@a^0,f,c
  1017   000BBE                     l1313:
  1018   000BBE  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  1019   000BC2                     	if	1	;There is more than 1 active tblptr byte
  1020   000BC2  0E08               	movlw	high __smallconst
  1021   000BC4  6EF7               	movwf	tblptrh,c
  1022   000BC6                     	endif
  1023   000BC6                     	if	0	;tblptru may be non-zero
  1024   000BC6                     	endif
  1025   000BC6                     	if	0	;tblptru may be non-zero
  1026   000BC6                     	endif
  1027   000BC6  0008               	tblrd		*
  1028   000BC8  50F5               	movf	tablat,w,c
  1029   000BCA  0900               	iorlw	0
  1030   000BCC  B4D8               	btfsc	status,2,c
  1031   000BCE  0012               	return	
  1032   000BD0  D7ED               	goto	l1309
  1033   000BD2                     __end_of_Mensaje_LCD_Var_Centrado:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _strlen *****************
  1037 ;; Defined at:
  1038 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1041 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
  1042 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
  1043 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
  1044 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
  1045 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  1048 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
  1049 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
  1050 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
  1051 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
  1052 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2    0[COMRAM] unsigned int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        3 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_Mensaje_LCD_Var_Centrado
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text3
  1077   000CAC                     __ptext3:
  1078                           	callstack 0
  1079   000CAC                     _strlen:
  1080                           	callstack 27
  1081                           
  1082                           ;incstack = 0
  1083   000CAC  C001  F003         	movff	strlen@s,strlen@cp
  1084   000CB0  D001               	goto	l1247
  1085   000CB2                     l1245:
  1086   000CB2  2A03               	incf	strlen@cp^0,f,c
  1087   000CB4                     l1247:
  1088   000CB4  C003  FFF6         	movff	strlen@cp,tblptrl
  1089   000CB8                     	if	1	;There is more than 1 active tblptr byte
  1090   000CB8  0E08               	movlw	high __smallconst
  1091   000CBA  6EF7               	movwf	tblptrh,c
  1092   000CBC                     	endif
  1093   000CBC                     	if	0	;tblptru may be non-zero
  1094   000CBC                     	endif
  1095   000CBC                     	if	0	;tblptru may be non-zero
  1096   000CBC                     	endif
  1097   000CBC  0008               	tblrd		*
  1098   000CBE  50F5               	movf	tablat,w,c
  1099   000CC0  0900               	iorlw	0
  1100   000CC2  A4D8               	btfss	status,2,c
  1101   000CC4  D7F6               	goto	l1245
  1102   000CC6  5001               	movf	strlen@s^0,w,c
  1103   000CC8  5C03               	subwf	strlen@cp^0,w,c
  1104   000CCA  6E01               	movwf	?_strlen^0,c
  1105   000CCC  6A02               	clrf	(?_strlen+1)^0,c
  1106   000CCE  BE01               	btfsc	?_strlen^0,7,c
  1107   000CD0  0602               	decf	(?_strlen+1)^0,f,c
  1108   000CD2  0012               	return		;funcret
  1109   000CD4                     __end_of_strlen:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function ___awdiv *****************
  1113 ;; Defined at:
  1114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  dividend        2    0[COMRAM] int 
  1117 ;;  divisor         2    2[COMRAM] int 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  quotient        2    6[COMRAM] int 
  1120 ;;  sign            1    5[COMRAM] unsigned char 
  1121 ;;  counter         1    4[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  2    0[COMRAM] int 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         4       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        8 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_Mensaje_LCD_Var_Centrado
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146   000AE4                     __ptext4:
  1147                           	callstack 0
  1148   000AE4                     ___awdiv:
  1149                           	callstack 27
  1150                           
  1151                           ;incstack = 0
  1152   000AE4  0E00               	movlw	0
  1153   000AE6  6E06               	movwf	___awdiv@sign^0,c
  1154   000AE8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1155   000AEA  D006               	goto	l1261
  1156   000AEC  6C03               	negf	___awdiv@divisor^0,c
  1157   000AEE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1158   000AF0  B0D8               	btfsc	status,0,c
  1159   000AF2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1160   000AF4  0E01               	movlw	1
  1161   000AF6  6E06               	movwf	___awdiv@sign^0,c
  1162   000AF8                     l1261:
  1163   000AF8  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  1164   000AFA  D006               	goto	l1267
  1165   000AFC  6C01               	negf	___awdiv@dividend^0,c
  1166   000AFE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1167   000B00  B0D8               	btfsc	status,0,c
  1168   000B02  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1169   000B04  0E01               	movlw	1
  1170   000B06  1A06               	xorwf	___awdiv@sign^0,f,c
  1171   000B08                     l1267:
  1172   000B08  0E00               	movlw	0
  1173   000B0A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1174   000B0C  0E00               	movlw	0
  1175   000B0E  6E07               	movwf	___awdiv@quotient^0,c
  1176   000B10  5003               	movf	___awdiv@divisor^0,w,c
  1177   000B12  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1178   000B14  B4D8               	btfsc	status,2,c
  1179   000B16  D01C               	goto	l1289
  1180   000B18  0E01               	movlw	1
  1181   000B1A  6E05               	movwf	___awdiv@counter^0,c
  1182   000B1C  D004               	goto	l1275
  1183   000B1E                     l1273:
  1184   000B1E  90D8               	bcf	status,0,c
  1185   000B20  3603               	rlcf	___awdiv@divisor^0,f,c
  1186   000B22  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1187   000B24  2A05               	incf	___awdiv@counter^0,f,c
  1188   000B26                     l1275:
  1189   000B26  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1190   000B28  D7FA               	goto	l1273
  1191   000B2A                     u440:
  1192   000B2A  90D8               	bcf	status,0,c
  1193   000B2C  3607               	rlcf	___awdiv@quotient^0,f,c
  1194   000B2E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1195   000B30  5003               	movf	___awdiv@divisor^0,w,c
  1196   000B32  5C01               	subwf	___awdiv@dividend^0,w,c
  1197   000B34  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1198   000B36  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1199   000B38  A0D8               	btfss	status,0,c
  1200   000B3A  D005               	goto	l1285
  1201   000B3C  5003               	movf	___awdiv@divisor^0,w,c
  1202   000B3E  5E01               	subwf	___awdiv@dividend^0,f,c
  1203   000B40  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1204   000B42  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1205   000B44  8007               	bsf	___awdiv@quotient^0,0,c
  1206   000B46                     l1285:
  1207   000B46  90D8               	bcf	status,0,c
  1208   000B48  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1209   000B4A  3203               	rrcf	___awdiv@divisor^0,f,c
  1210   000B4C  2E05               	decfsz	___awdiv@counter^0,f,c
  1211   000B4E  D7ED               	goto	u440
  1212   000B50                     l1289:
  1213   000B50  5006               	movf	___awdiv@sign^0,w,c
  1214   000B52  B4D8               	btfsc	status,2,c
  1215   000B54  D004               	goto	l1293
  1216   000B56  6C07               	negf	___awdiv@quotient^0,c
  1217   000B58  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1218   000B5A  B0D8               	btfsc	status,0,c
  1219   000B5C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1220   000B5E                     l1293:
  1221   000B5E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1222   000B62  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1223   000B66  0012               	return		;funcret
  1224   000B68                     __end_of___awdiv:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _EscribeLCD_c *****************
  1228 ;; Defined at:
  1229 ;;		line 121 in file "LibLCDXC8.h"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  a               1    wreg     unsigned char 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  a               1    4[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 3
  1250 ;; This function calls:
  1251 ;;		_EnviaDato
  1252 ;;		_HabilitaLCD
  1253 ;;		_RetardoLCD
  1254 ;; This function is called by:
  1255 ;;		_Mensaje_LCD_Var_Centrado
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text5
  1260   000D0E                     __ptext5:
  1261                           	callstack 0
  1262   000D0E                     _EscribeLCD_c:
  1263                           	callstack 25
  1264                           
  1265                           ;incstack = 0
  1266                           ;EscribeLCD_c@a stored from wreg
  1267   000D0E  6E05               	movwf	EscribeLCD_c@a^0,c
  1268                           
  1269                           ;LibLCDXC8.h: 125: LATD2=1;
  1270   000D10  848C               	bsf	3980,2,c	;volatile
  1271                           
  1272                           ;LibLCDXC8.h: 126: EnviaDato(a);
  1273   000D12  5005               	movf	EscribeLCD_c@a^0,w,c
  1274   000D14  EC14  F006         	call	_EnviaDato
  1275                           
  1276                           ;LibLCDXC8.h: 127: HabilitaLCD();
  1277   000D18  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1278                           
  1279                           ;LibLCDXC8.h: 128: RetardoLCD(4);
  1280   000D1C  0E04               	movlw	4
  1281   000D1E  ECE9  F005         	call	_RetardoLCD
  1282   000D22  0012               	return		;funcret
  1283   000D24                     __end_of_EscribeLCD_c:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _DireccionaLCD *****************
  1287 ;; Defined at:
  1288 ;;		line 346 in file "LibLCDXC8.h"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  a               1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  a               1    4[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0
  1303 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1305 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1306 ;;Total ram usage:        1 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 3
  1309 ;; This function calls:
  1310 ;;		_EnviaDato
  1311 ;;		_HabilitaLCD
  1312 ;;		_RetardoLCD
  1313 ;; This function is called by:
  1314 ;;		_Mensaje_LCD_Var_Mensaje20x4
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319   000D24                     __ptext6:
  1320                           	callstack 0
  1321   000D24                     _DireccionaLCD:
  1322                           	callstack 26
  1323                           
  1324                           ;incstack = 0
  1325                           ;DireccionaLCD@a stored from wreg
  1326   000D24  6E05               	movwf	DireccionaLCD@a^0,c
  1327                           
  1328                           ;LibLCDXC8.h: 349: LATD2=0;
  1329   000D26  948C               	bcf	3980,2,c	;volatile
  1330                           
  1331                           ;LibLCDXC8.h: 350: EnviaDato(a);
  1332   000D28  5005               	movf	DireccionaLCD@a^0,w,c
  1333   000D2A  EC14  F006         	call	_EnviaDato
  1334                           
  1335                           ;LibLCDXC8.h: 351: HabilitaLCD();
  1336   000D2E  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1337                           
  1338                           ;LibLCDXC8.h: 352: RetardoLCD(4);
  1339   000D32  0E04               	movlw	4
  1340   000D34  ECE9  F005         	call	_RetardoLCD
  1341   000D38  0012               	return		;funcret
  1342   000D3A                     __end_of_DireccionaLCD:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _InicializaLCD *****************
  1346 ;; Defined at:
  1347 ;;		line 70 in file "LibLCDXC8.h"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 4
  1368 ;; This function calls:
  1369 ;;		_BorraLCD
  1370 ;;		_EnviaDato
  1371 ;;		_HabilitaLCD
  1372 ;;		_RetardoLCD
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379   000A48                     __ptext7:
  1380                           	callstack 0
  1381   000A48                     _InicializaLCD:
  1382                           	callstack 26
  1383                           
  1384                           ;LibLCDXC8.h: 72: LATD2=0;
  1385                           
  1386                           ;incstack = 0
  1387   000A48  948C               	bcf	3980,2,c	;volatile
  1388                           
  1389                           ;LibLCDXC8.h: 73: if(interfaz==4)
  1390   000A4A  0E04               	movlw	4
  1391   000A4C  1818               	xorwf	_interfaz^0,w,c
  1392   000A4E  A4D8               	btfss	status,2,c
  1393   000A50  D004               	goto	l1091
  1394                           
  1395                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  1396   000A52  508C               	movf	140,w,c	;volatile
  1397   000A54  0B0F               	andlw	15
  1398   000A56  0930               	iorlw	48
  1399   000A58  D001               	goto	L5
  1400   000A5A                     l1091:
  1401                           
  1402                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  1403   000A5A  0E3F               	movlw	63
  1404   000A5C                     L5:
  1405   000A5C  6E8C               	movwf	140,c	;volatile
  1406                           
  1407                           ;LibLCDXC8.h: 77: HabilitaLCD();
  1408   000A5E  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1409                           
  1410                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  1411   000A62  0E01               	movlw	1
  1412   000A64  ECE9  F005         	call	_RetardoLCD
  1413                           
  1414                           ;LibLCDXC8.h: 79: if(interfaz==4)
  1415   000A68  0E04               	movlw	4
  1416   000A6A  1818               	xorwf	_interfaz^0,w,c
  1417   000A6C  A4D8               	btfss	status,2,c
  1418   000A6E  D004               	goto	l1101
  1419                           
  1420                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  1421   000A70  508C               	movf	140,w,c	;volatile
  1422   000A72  0B0F               	andlw	15
  1423   000A74  0930               	iorlw	48
  1424   000A76  D001               	goto	L6
  1425   000A78                     l1101:
  1426                           
  1427                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  1428   000A78  0E3F               	movlw	63
  1429   000A7A                     L6:
  1430   000A7A  6E8C               	movwf	140,c	;volatile
  1431                           
  1432                           ;LibLCDXC8.h: 83: HabilitaLCD();
  1433   000A7C  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1434                           
  1435                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  1436   000A80  0E03               	movlw	3
  1437   000A82  ECE9  F005         	call	_RetardoLCD
  1438                           
  1439                           ;LibLCDXC8.h: 85: if(interfaz==4)
  1440   000A86  0E04               	movlw	4
  1441   000A88  1818               	xorwf	_interfaz^0,w,c
  1442   000A8A  A4D8               	btfss	status,2,c
  1443   000A8C  D004               	goto	l1111
  1444                           
  1445                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x30;
  1446   000A8E  508C               	movf	140,w,c	;volatile
  1447   000A90  0B0F               	andlw	15
  1448   000A92  0930               	iorlw	48
  1449   000A94  D001               	goto	L7
  1450   000A96                     l1111:
  1451                           
  1452                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  1453   000A96  0E3F               	movlw	63
  1454   000A98                     L7:
  1455   000A98  6E8C               	movwf	140,c	;volatile
  1456                           
  1457                           ;LibLCDXC8.h: 89: HabilitaLCD();
  1458   000A9A  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1459                           
  1460                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  1461   000A9E  0E04               	movlw	4
  1462   000AA0  ECE9  F005         	call	_RetardoLCD
  1463                           
  1464                           ;LibLCDXC8.h: 91: if(interfaz==4){
  1465   000AA4  0E04               	movlw	4
  1466   000AA6  1818               	xorwf	_interfaz^0,w,c
  1467   000AA8  A4D8               	btfss	status,2,c
  1468   000AAA  D011               	goto	l1131
  1469                           
  1470                           ;LibLCDXC8.h: 92: LATD=(LATD & 0b00001111) | 0x20;
  1471   000AAC  508C               	movf	140,w,c	;volatile
  1472   000AAE  0B0F               	andlw	15
  1473   000AB0  0920               	iorlw	32
  1474   000AB2  6E8C               	movwf	140,c	;volatile
  1475                           
  1476                           ;LibLCDXC8.h: 93: HabilitaLCD();
  1477   000AB4  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1478                           
  1479                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  1480   000AB8  0E04               	movlw	4
  1481   000ABA  ECE9  F005         	call	_RetardoLCD
  1482                           
  1483                           ;LibLCDXC8.h: 95: EnviaDato(0x2F);
  1484   000ABE  0E2F               	movlw	47
  1485   000AC0  EC14  F006         	call	_EnviaDato
  1486                           
  1487                           ;LibLCDXC8.h: 96: HabilitaLCD();
  1488   000AC4  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1489                           
  1490                           ;LibLCDXC8.h: 97: RetardoLCD(4);
  1491   000AC8  0E04               	movlw	4
  1492   000ACA  ECE9  F005         	call	_RetardoLCD
  1493   000ACE                     l1131:
  1494                           
  1495                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  1496   000ACE  EC9D  F006         	call	_BorraLCD	;wreg free
  1497                           
  1498                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  1499   000AD2  0E0F               	movlw	15
  1500   000AD4  EC14  F006         	call	_EnviaDato
  1501                           
  1502                           ;LibLCDXC8.h: 101: HabilitaLCD();
  1503   000AD8  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1504                           
  1505                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  1506   000ADC  0E04               	movlw	4
  1507   000ADE  ECE9  F005         	call	_RetardoLCD
  1508   000AE2  0012               	return		;funcret
  1509   000AE4                     __end_of_InicializaLCD:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _BorraLCD *****************
  1513 ;; Defined at:
  1514 ;;		line 113 in file "LibLCDXC8.h"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 3
  1535 ;; This function calls:
  1536 ;;		_EnviaDato
  1537 ;;		_HabilitaLCD
  1538 ;;		_RetardoLCD
  1539 ;; This function is called by:
  1540 ;;		_InicializaLCD
  1541 ;;		_Mensaje_LCD_Var_Mensaje20x4
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text8
  1546   000D3A                     __ptext8:
  1547                           	callstack 0
  1548   000D3A                     _BorraLCD:
  1549                           	callstack 26
  1550                           
  1551                           ;LibLCDXC8.h: 115: LATD2=0;
  1552                           
  1553                           ;incstack = 0
  1554   000D3A  948C               	bcf	3980,2,c	;volatile
  1555                           
  1556                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  1557   000D3C  0E01               	movlw	1
  1558   000D3E  EC14  F006         	call	_EnviaDato
  1559                           
  1560                           ;LibLCDXC8.h: 117: HabilitaLCD();
  1561   000D42  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1562                           
  1563                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  1564   000D46  0E02               	movlw	2
  1565   000D48  ECE9  F005         	call	_RetardoLCD
  1566   000D4C  0012               	return		;funcret
  1567   000D4E                     __end_of_BorraLCD:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _EnviaDato *****************
  1571 ;; Defined at:
  1572 ;;		line 58 in file "LibLCDXC8.h"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  a               1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  a               1    3[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1589 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:        2 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 2
  1593 ;; This function calls:
  1594 ;;		_HabilitaLCD
  1595 ;;		_RetardoLCD
  1596 ;; This function is called by:
  1597 ;;		_InicializaLCD
  1598 ;;		_BorraLCD
  1599 ;;		_EscribeLCD_c
  1600 ;;		_DireccionaLCD
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text9
  1605   000C28                     __ptext9:
  1606                           	callstack 0
  1607   000C28                     _EnviaDato:
  1608                           	callstack 25
  1609                           
  1610                           ;incstack = 0
  1611                           ;EnviaDato@a stored from wreg
  1612   000C28  6E04               	movwf	EnviaDato@a^0,c
  1613                           
  1614                           ;LibLCDXC8.h: 59: if(interfaz==4){
  1615   000C2A  0E04               	movlw	4
  1616   000C2C  1818               	xorwf	_interfaz^0,w,c
  1617   000C2E  A4D8               	btfss	status,2,c
  1618   000C30  D017               	goto	l981
  1619                           
  1620                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1621   000C32  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  1622   000C36  0EF0               	movlw	240
  1623   000C38  1603               	andwf	??_EnviaDato^0,f,c
  1624   000C3A  508C               	movf	140,w,c	;volatile
  1625   000C3C  0B0F               	andlw	15
  1626   000C3E  1003               	iorwf	??_EnviaDato^0,w,c
  1627   000C40  6E8C               	movwf	140,c	;volatile
  1628                           
  1629                           ;LibLCDXC8.h: 61: HabilitaLCD();
  1630   000C42  ECA7  F006         	call	_HabilitaLCD	;wreg free
  1631                           
  1632                           ;LibLCDXC8.h: 62: RetardoLCD(1);
  1633   000C46  0E01               	movlw	1
  1634   000C48  ECE9  F005         	call	_RetardoLCD
  1635                           
  1636                           ;LibLCDXC8.h: 63: LATD=(LATD & 0b00001111) | (a<<4);
  1637   000C4C  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  1638   000C50  3A03               	swapf	??_EnviaDato^0,f,c
  1639   000C52  0EF0               	movlw	240
  1640   000C54  1603               	andwf	??_EnviaDato^0,f,c
  1641   000C56  508C               	movf	140,w,c	;volatile
  1642   000C58  0B0F               	andlw	15
  1643   000C5A  1003               	iorwf	??_EnviaDato^0,w,c
  1644   000C5C  6E8C               	movwf	140,c	;volatile
  1645                           
  1646                           ;LibLCDXC8.h: 66: }else if(interfaz==8){
  1647   000C5E  0012               	return	
  1648   000C60                     l981:
  1649   000C60  0E08               	movlw	8
  1650   000C62  1818               	xorwf	_interfaz^0,w,c
  1651   000C64  A4D8               	btfss	status,2,c
  1652   000C66  0012               	return	
  1653                           
  1654                           ;LibLCDXC8.h: 67: LATD=a;
  1655   000C68  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  1656   000C6C  0012               	return		;funcret
  1657   000C6E                     __end_of_EnviaDato:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _RetardoLCD *****************
  1661 ;; Defined at:
  1662 ;;		line 355 in file "LibLCDXC8.h"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  a               1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  a               1    1[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_EnviaDato
  1687 ;;		_InicializaLCD
  1688 ;;		_BorraLCD
  1689 ;;		_EscribeLCD_c
  1690 ;;		_DireccionaLCD
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text10
  1695   000BD2                     __ptext10:
  1696                           	callstack 0
  1697   000BD2                     _RetardoLCD:
  1698                           	callstack 26
  1699                           
  1700                           ;incstack = 0
  1701                           ;RetardoLCD@a stored from wreg
  1702   000BD2  6E02               	movwf	RetardoLCD@a^0,c
  1703                           
  1704                           ;LibLCDXC8.h: 356: switch(a){
  1705   000BD4  D01B               	goto	l969
  1706   000BD6                     l959:
  1707   000BD6  0E05               	movlw	5
  1708   000BD8  6E01               	movwf	??_RetardoLCD^0,c
  1709   000BDA  0EDE               	movlw	222
  1710   000BDC                     u737:
  1711   000BDC  2EE8               	decfsz	wreg,f,c
  1712   000BDE  D7FE               	bra	u737
  1713   000BE0  2E01               	decfsz	??_RetardoLCD^0,f,c
  1714   000BE2  D7FC               	bra	u737
  1715                           
  1716                           ;LibLCDXC8.h: 359: break;
  1717   000BE4  0012               	return	
  1718   000BE6                     l961:
  1719   000BE6  0E53               	movlw	83
  1720   000BE8                     u747:
  1721   000BE8  2EE8               	decfsz	wreg,f,c
  1722   000BEA  D7FE               	bra	u747
  1723   000BEC  F000               	nop	
  1724                           
  1725                           ;LibLCDXC8.h: 361: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1726   000BEE  0E35               	movlw	53
  1727   000BF0                     u757:
  1728   000BF0  2EE8               	decfsz	wreg,f,c
  1729   000BF2  D7FE               	bra	u757
  1730   000BF4  F000               	nop	
  1731                           
  1732                           ;LibLCDXC8.h: 363: break;
  1733   000BF6  0012               	return	
  1734   000BF8                     l963:
  1735   000BF8  0E08               	movlw	8
  1736   000BFA                     u767:
  1737   000BFA  2EE8               	decfsz	wreg,f,c
  1738   000BFC  D7FE               	bra	u767
  1739   000BFE  F000               	nop	
  1740                           
  1741                           ;LibLCDXC8.h: 366: break;
  1742   000C00  0012               	return	
  1743   000C02                     l965:
  1744   000C02  0E03               	movlw	3
  1745   000C04                     u777:
  1746   000C04  2EE8               	decfsz	wreg,f,c
  1747   000C06  D7FE               	bra	u777
  1748   000C08  F000               	nop	
  1749                           
  1750                           ;LibLCDXC8.h: 369: break;
  1751   000C0A  0012               	return	
  1752   000C0C                     l969:
  1753   000C0C  5002               	movf	RetardoLCD@a^0,w,c
  1754                           
  1755                           ; Switch size 1, requested type "simple"
  1756                           ; Number of cases is 4, Range of values is 1 to 4
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte           13     7 (average)
  1760                           ;	Chosen strategy is simple_byte
  1761   000C0E  0A01               	xorlw	1	; case 1
  1762   000C10  B4D8               	btfsc	status,2,c
  1763   000C12  D7E1               	goto	l959
  1764   000C14  0A03               	xorlw	3	; case 2
  1765   000C16  B4D8               	btfsc	status,2,c
  1766   000C18  D7E6               	goto	l961
  1767   000C1A  0A01               	xorlw	1	; case 3
  1768   000C1C  B4D8               	btfsc	status,2,c
  1769   000C1E  D7EC               	goto	l963
  1770   000C20  0A07               	xorlw	7	; case 4
  1771   000C22  A4D8               	btfss	status,2,c
  1772   000C24  0012               	return	
  1773   000C26  D7ED               	goto	l965
  1774   000C28                     __end_of_RetardoLCD:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _HabilitaLCD *****************
  1778 ;; Defined at:
  1779 ;;		line 105 in file "LibLCDXC8.h"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_EnviaDato
  1804 ;;		_InicializaLCD
  1805 ;;		_BorraLCD
  1806 ;;		_EscribeLCD_c
  1807 ;;		_DireccionaLCD
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text11
  1812   000D4E                     __ptext11:
  1813                           	callstack 0
  1814   000D4E                     _HabilitaLCD:
  1815                           	callstack 26
  1816                           
  1817                           ;LibLCDXC8.h: 107: LATD3=1;
  1818                           
  1819                           ;incstack = 0
  1820   000D4E  868C               	bsf	3980,3,c	;volatile
  1821                           
  1822                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1823   000D50  0E03               	movlw	3
  1824   000D52                     u787:
  1825   000D52  2EE8               	decfsz	wreg,f,c
  1826   000D54  D7FE               	bra	u787
  1827   000D56  F000               	nop	
  1828                           
  1829                           ;LibLCDXC8.h: 110: LATD3=0;
  1830   000D58  968C               	bcf	3980,3,c	;volatile
  1831   000D5A  0012               	return		;funcret
  1832   000D5C                     __end_of_HabilitaLCD:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _ConfiguraLCD *****************
  1836 ;; Defined at:
  1837 ;;		line 54 in file "LibLCDXC8.h"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  a               1    wreg     unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  a               1    0[COMRAM] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0
  1852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text12
  1866   000CF6                     __ptext12:
  1867                           	callstack 0
  1868   000CF6                     _ConfiguraLCD:
  1869                           	callstack 29
  1870                           
  1871                           ;incstack = 0
  1872                           ;ConfiguraLCD@a stored from wreg
  1873   000CF6  6E01               	movwf	ConfiguraLCD@a^0,c
  1874                           
  1875                           ;LibLCDXC8.h: 55: if(a==4 | a ==8)
  1876   000CF8  0E04               	movlw	4
  1877   000CFA  1801               	xorwf	ConfiguraLCD@a^0,w,c
  1878   000CFC  B4D8               	btfsc	status,2,c
  1879   000CFE  D004               	goto	u130
  1880   000D00  0E08               	movlw	8
  1881   000D02  1801               	xorwf	ConfiguraLCD@a^0,w,c
  1882   000D04  A4D8               	btfss	status,2,c
  1883   000D06  0012               	return	
  1884   000D08                     u130:
  1885                           
  1886                           ;LibLCDXC8.h: 56: interfaz=a;
  1887   000D08  C001  F018         	movff	ConfiguraLCD@a,_interfaz
  1888   000D0C  0012               	return		;funcret
  1889   000D0E                     __end_of_ConfiguraLCD:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _ISR *****************
  1893 ;; Defined at:
  1894 ;;		line 122 in file "PAI.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		None
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:        0 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		Interrupt level 2
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	intcode
  1922   000008                     __pintcode:
  1923                           	callstack 0
  1924   000008                     _ISR:
  1925                           	callstack 25
  1926                           
  1927                           ;incstack = 0
  1928   000008  8219               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1929   00000A  EDAE  F006         	call	int_func,f	;refresh shadow registers
  1930                           
  1931                           	psect	intcode_body
  1932   000D5C                     __pintcode_body:
  1933                           	callstack 25
  1934   000D5C                     int_func:
  1935                           	callstack 25
  1936   000D5C  0006               	pop		; remove dummy address from shadow register refresh
  1937   000D5E  9219               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1938   000D60  0011               	retfie		f
  1939   000D62                     __end_of_ISR:
  1940                           	callstack 0
  1941                           
  1942                           	psect	rparam
  1943   000000                     
  1944                           	psect	temp
  1945   000019                     btemp:
  1946                           	callstack 0
  1947   000019                     	ds	1
  1948   000000                     int$flags	set	btemp
  1949   000000                     wtemp8	set	btemp+1
  1950   000000                     ttemp5	set	btemp+1
  1951   000000                     ttemp6	set	btemp+4
  1952   000000                     ttemp7	set	btemp+8
  1953                           
  1954                           	psect	idloc
  1955                           
  1956                           ;Config register IDLOC0 @ 0x200000
  1957                           ;	unspecified, using default values
  1958   200000                     	org	2097152
  1959   200000  FF                 	db	255
  1960                           
  1961                           ;Config register IDLOC1 @ 0x200001
  1962                           ;	unspecified, using default values
  1963   200001                     	org	2097153
  1964   200001  FF                 	db	255
  1965                           
  1966                           ;Config register IDLOC2 @ 0x200002
  1967                           ;	unspecified, using default values
  1968   200002                     	org	2097154
  1969   200002  FF                 	db	255
  1970                           
  1971                           ;Config register IDLOC3 @ 0x200003
  1972                           ;	unspecified, using default values
  1973   200003                     	org	2097155
  1974   200003  FF                 	db	255
  1975                           
  1976                           ;Config register IDLOC4 @ 0x200004
  1977                           ;	unspecified, using default values
  1978   200004                     	org	2097156
  1979   200004  FF                 	db	255
  1980                           
  1981                           ;Config register IDLOC5 @ 0x200005
  1982                           ;	unspecified, using default values
  1983   200005                     	org	2097157
  1984   200005  FF                 	db	255
  1985                           
  1986                           ;Config register IDLOC6 @ 0x200006
  1987                           ;	unspecified, using default values
  1988   200006                     	org	2097158
  1989   200006  FF                 	db	255
  1990                           
  1991                           ;Config register IDLOC7 @ 0x200007
  1992                           ;	unspecified, using default values
  1993   200007                     	org	2097159
  1994   200007  FF                 	db	255
  1995                           
  1996                           	psect	config
  1997                           
  1998                           ;Config register CONFIG1L @ 0x300000
  1999                           ;	unspecified, using default values
  2000                           ;	PLL Prescaler Selection bits
  2001                           ;	PLLDIV = 0x0, unprogrammed default
  2002                           ;	System Clock Postscaler Selection bits
  2003                           ;	CPUDIV = 0x0, unprogrammed default
  2004                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2005                           ;	USBDIV = 0x0, unprogrammed default
  2006   300000                     	org	3145728
  2007   300000  00                 	db	0
  2008                           
  2009                           ;Config register CONFIG1H @ 0x300001
  2010                           ;	Oscillator Selection bits
  2011                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2012                           ;	Fail-Safe Clock Monitor Enable bit
  2013                           ;	FCMEN = 0x0, unprogrammed default
  2014                           ;	Internal/External Oscillator Switchover bit
  2015                           ;	IESO = 0x0, unprogrammed default
  2016   300001                     	org	3145729
  2017   300001  09                 	db	9
  2018                           
  2019                           ;Config register CONFIG2L @ 0x300002
  2020                           ;	unspecified, using default values
  2021                           ;	Power-up Timer Enable bit
  2022                           ;	PWRT = 0x1, unprogrammed default
  2023                           ;	Brown-out Reset Enable bits
  2024                           ;	BOR = 0x3, unprogrammed default
  2025                           ;	Brown-out Reset Voltage bits
  2026                           ;	BORV = 0x3, unprogrammed default
  2027                           ;	USB Voltage Regulator Enable bit
  2028                           ;	VREGEN = 0x0, unprogrammed default
  2029   300002                     	org	3145730
  2030   300002  1F                 	db	31
  2031                           
  2032                           ;Config register CONFIG2H @ 0x300003
  2033                           ;	Watchdog Timer Enable bit
  2034                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2035                           ;	Watchdog Timer Postscale Select bits
  2036                           ;	WDTPS = 0xF, unprogrammed default
  2037   300003                     	org	3145731
  2038   300003  1E                 	db	30
  2039                           
  2040                           ; Padding undefined space
  2041   300004                     	org	3145732
  2042   300004  FF                 	db	255
  2043                           
  2044                           ;Config register CONFIG3H @ 0x300005
  2045                           ;	unspecified, using default values
  2046                           ;	CCP2 MUX bit
  2047                           ;	CCP2MX = 0x1, unprogrammed default
  2048                           ;	PORTB A/D Enable bit
  2049                           ;	PBADEN = 0x1, unprogrammed default
  2050                           ;	Low-Power Timer 1 Oscillator Enable bit
  2051                           ;	LPT1OSC = 0x0, unprogrammed default
  2052                           ;	MCLR Pin Enable bit
  2053                           ;	MCLRE = 0x1, unprogrammed default
  2054   300005                     	org	3145733
  2055   300005  83                 	db	131
  2056                           
  2057                           ;Config register CONFIG4L @ 0x300006
  2058                           ;	unspecified, using default values
  2059                           ;	Stack Full/Underflow Reset Enable bit
  2060                           ;	STVREN = 0x1, unprogrammed default
  2061                           ;	Single-Supply ICSP Enable bit
  2062                           ;	LVP = 0x1, unprogrammed default
  2063                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2064                           ;	ICPRT = 0x0, unprogrammed default
  2065                           ;	Extended Instruction Set Enable bit
  2066                           ;	XINST = 0x0, unprogrammed default
  2067                           ;	Background Debugger Enable bit
  2068                           ;	DEBUG = 0x1, unprogrammed default
  2069   300006                     	org	3145734
  2070   300006  85                 	db	133
  2071                           
  2072                           ; Padding undefined space
  2073   300007                     	org	3145735
  2074   300007  FF                 	db	255
  2075                           
  2076                           ;Config register CONFIG5L @ 0x300008
  2077                           ;	unspecified, using default values
  2078                           ;	Code Protection bit
  2079                           ;	CP0 = 0x1, unprogrammed default
  2080                           ;	Code Protection bit
  2081                           ;	CP1 = 0x1, unprogrammed default
  2082                           ;	Code Protection bit
  2083                           ;	CP2 = 0x1, unprogrammed default
  2084                           ;	Code Protection bit
  2085                           ;	CP3 = 0x1, unprogrammed default
  2086   300008                     	org	3145736
  2087   300008  0F                 	db	15
  2088                           
  2089                           ;Config register CONFIG5H @ 0x300009
  2090                           ;	unspecified, using default values
  2091                           ;	Boot Block Code Protection bit
  2092                           ;	CPB = 0x1, unprogrammed default
  2093                           ;	Data EEPROM Code Protection bit
  2094                           ;	CPD = 0x1, unprogrammed default
  2095   300009                     	org	3145737
  2096   300009  C0                 	db	192
  2097                           
  2098                           ;Config register CONFIG6L @ 0x30000A
  2099                           ;	unspecified, using default values
  2100                           ;	Write Protection bit
  2101                           ;	WRT0 = 0x1, unprogrammed default
  2102                           ;	Write Protection bit
  2103                           ;	WRT1 = 0x1, unprogrammed default
  2104                           ;	Write Protection bit
  2105                           ;	WRT2 = 0x1, unprogrammed default
  2106                           ;	Write Protection bit
  2107                           ;	WRT3 = 0x1, unprogrammed default
  2108   30000A                     	org	3145738
  2109   30000A  0F                 	db	15
  2110                           
  2111                           ;Config register CONFIG6H @ 0x30000B
  2112                           ;	unspecified, using default values
  2113                           ;	Configuration Register Write Protection bit
  2114                           ;	WRTC = 0x1, unprogrammed default
  2115                           ;	Boot Block Write Protection bit
  2116                           ;	WRTB = 0x1, unprogrammed default
  2117                           ;	Data EEPROM Write Protection bit
  2118                           ;	WRTD = 0x1, unprogrammed default
  2119   30000B                     	org	3145739
  2120   30000B  E0                 	db	224
  2121                           
  2122                           ;Config register CONFIG7L @ 0x30000C
  2123                           ;	unspecified, using default values
  2124                           ;	Table Read Protection bit
  2125                           ;	EBTR0 = 0x1, unprogrammed default
  2126                           ;	Table Read Protection bit
  2127                           ;	EBTR1 = 0x1, unprogrammed default
  2128                           ;	Table Read Protection bit
  2129                           ;	EBTR2 = 0x1, unprogrammed default
  2130                           ;	Table Read Protection bit
  2131                           ;	EBTR3 = 0x1, unprogrammed default
  2132   30000C                     	org	3145740
  2133   30000C  0F                 	db	15
  2134                           
  2135                           ;Config register CONFIG7H @ 0x30000D
  2136                           ;	unspecified, using default values
  2137                           ;	Boot Block Table Read Protection bit
  2138                           ;	EBTRB = 0x1, unprogrammed default
  2139   30000D                     	org	3145741
  2140   30000D  40                 	db	64
  2141                           tosu	equ	0xFFF
  2142                           tosh	equ	0xFFE
  2143                           tosl	equ	0xFFD
  2144                           stkptr	equ	0xFFC
  2145                           pclatu	equ	0xFFB
  2146                           pclath	equ	0xFFA
  2147                           pcl	equ	0xFF9
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           indf0	equ	0xFEF
  2155                           postinc0	equ	0xFEE
  2156                           postdec0	equ	0xFED
  2157                           preinc0	equ	0xFEC
  2158                           plusw0	equ	0xFEB
  2159                           fsr0h	equ	0xFEA
  2160                           fsr0l	equ	0xFE9
  2161                           wreg	equ	0xFE8
  2162                           indf1	equ	0xFE7
  2163                           postinc1	equ	0xFE6
  2164                           postdec1	equ	0xFE5
  2165                           preinc1	equ	0xFE4
  2166                           plusw1	equ	0xFE3
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           bsr	equ	0xFE0
  2170                           indf2	equ	0xFDF
  2171                           postinc2	equ	0xFDE
  2172                           postdec2	equ	0xFDD
  2173                           preinc2	equ	0xFDC
  2174                           plusw2	equ	0xFDB
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8

Data Sizes:
    Strings     183
    Constant    0
    Data        1
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    Mensaje_LCD_Var_Centrado@a	PTR unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    Mensaje_LCD_Var_Mensaje20x4@d	PTR unsigned char  size(1) Largest target is 15
		 -> STR_20(CODE[3]), STR_16(CODE[3]), STR_12(CODE[15]), STR_8(CODE[3]), 
		 -> STR_4(CODE[7]), 

    Mensaje_LCD_Var_Mensaje20x4@c	PTR unsigned char  size(1) Largest target is 19
		 -> STR_19(CODE[2]), STR_15(CODE[2]), STR_11(CODE[19]), STR_7(CODE[12]), 
		 -> STR_3(CODE[5]), 

    Mensaje_LCD_Var_Mensaje20x4@b	PTR unsigned char  size(1) Largest target is 22
		 -> STR_18(CODE[11]), STR_14(CODE[14]), STR_10(CODE[3]), STR_6(CODE[22]), 
		 -> STR_2(CODE[18]), 

    Mensaje_LCD_Var_Mensaje20x4@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_17(CODE[15]), STR_13(CODE[16]), STR_9(CODE[10]), STR_5(CODE[2]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_Mensaje_LCD_Var_Mensaje20x4
    _Mensaje_LCD_Var_Mensaje20x4->_Mensaje_LCD_Var_Centrado
    _Mensaje_LCD_Var_Centrado->___awdiv
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3117
                                             16 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
        _Mensaje_LCD_Var_Mensaje20x4
 ---------------------------------------------------------------------------------
 (1) _Mensaje_LCD_Var_Mensaje20x4                          4     0      4    2922
                                             12 COMRAM     4     0      4
                           _BorraLCD
                      _DireccionaLCD
           _Mensaje_LCD_Var_Centrado
 ---------------------------------------------------------------------------------
 (2) _Mensaje_LCD_Var_Centrado                             4     3      1    1149
                                              8 COMRAM     4     3      1
                       _EscribeLCD_c
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Mensaje_LCD_Var_Mensaje20x4
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _Mensaje_LCD_Var_Centrado
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       ___awdiv
       _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      18       1       25.5%
BITBIGSFRhhhl       26      0       0      21        0.0%
BITBIGSFRhlhll      24      0       0      25        0.0%
BITBIGSFRll         21      0       0      29        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhl         9      0       0      22        0.0%
BITBIGSFRlhh         8      0       0      27        0.0%
BITBIGSFRhlll        6      0       0      26        0.0%
BITBIGSFRhlhh        2      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRhlhlh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      30        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun May 07 21:18:03 2023

                                  _a 0016                                    _b 0015  
                                  _c 0014                                    _d 0013  
                       ___awdiv@sign 0006                           EnviaDato@a 0004  
                      _InicializaLCD 0A48                                  l961 0BE6  
                                l963 0BF8                                  l965 0C02  
                                l981 0C60                                  l959 0BD6  
                                l969 0C0C                                  _GIE 7F97  
                                _RB0 7C08                                  _RB1 7C09  
                                _RB2 7C0A                                  _RB3 7C0B  
                                _RD0 7C18                                  u130 0D08  
                                u500 08EE                                  u510 08F8  
                                _PR2 0FCB                                  u440 0B2A  
                                u600 0944                                  u520 08FA  
                                u610 0956                                  u530 0904  
                                u620 0958                                  u540 0906  
                                _ISR 0008                                  u550 0910  
                                u560 0912                                  u570 0936  
                                u490 08EC                                  u580 0938  
                                u717 0924                                  u590 0942  
                                u727 097E                                  u737 0BDC  
                                u747 0BE8                                  u757 0BF0  
                                u767 0BFA                                  u777 0C04  
                                u787 0D52                                  wreg 0FE8  
                               ?_ISR 0001                                 l1101 0A78  
                               l1111 0A96                                 l1131 0ACE  
                               l1303 0B9A                                 l1313 0BBE  
                               l1091 0A5A                                 l1307 0BA2  
                               l1403 09FE                                 l1261 0AF8  
                               l1245 0CB2                                 l1309 0BAC  
                               l1413 0A20                                 l1247 0CB4  
                               l1273 0B1E                                 l1361 098E  
                               l1353 095C                                 l1417 0A26  
                               l1345 092E                                 l1275 0B26  
                               l1267 0B08                                 l1371 09AA  
                               l1293 0B5E                                 l1285 0B46  
                               l1373 09AE                                 l1359 098A  
                               l1289 0B50                                 l1389 09D4  
                               STR_1 0878                                 STR_2 082A  
                               STR_3 08AD                                 STR_4 08A6  
                               STR_5 08B3                                 STR_6 0801  
                               STR_7 0885                                 STR_8 08B2  
                               STR_9 089C                                 _LATD 0F8C  
                               _PEIE 7F96                       ??_EscribeLCD_c 0005  
                               _main 08BA                                 btemp 0019  
                               start 000E                         ___param_bank 0000  
                              ??_ISR 0001           ??_Mensaje_LCD_Var_Centrado 000A  
                     ?_InicializaLCD 0001                                ?_main 0001  
                    __end_of___awdiv 0B68                                STR_10 08B2  
                              STR_11 0817                                STR_20 08B5  
                              STR_12 085B                                STR_13 083C  
                              STR_14 086A                                STR_15 08B3  
                              STR_16 08B5                                STR_17 084C  
                              STR_18 0891                                STR_19 08B3  
                      EscribeLCD_c@a 0005                      ___awdiv@divisor 0003  
                              _LATD2 7C62                                _LATD3 7C63  
                    ___awdiv@counter 0005                                _TRISB 0F93  
                              _TRISD 0F95                                tablat 0FF5  
                        _HabilitaLCD 0D4E                                ttemp5 001A  
                              ttemp6 001D                                ttemp7 0021  
                              status 0FD8                                wtemp8 001A  
                   __end_of_BorraLCD 0D4E                      __initialization 0CD4  
                       __end_of_main 0A48                               ??_main 0011  
               __end_of_ConfiguraLCD 0D0E                        __activetblptr 0002  
          Mensaje_LCD_Var_Centrado@a 0009            Mensaje_LCD_Var_Centrado@i 000C  
          Mensaje_LCD_Var_Centrado@l 000A            Mensaje_LCD_Var_Centrado@n 000B  
                             _ADCON1 0FC1                       DireccionaLCD@a 0005  
                             _CCPR1L 0FBE                               _CCPR2L 0FBB  
                   ___awdiv@dividend 0001                               _TRISC1 7CA1  
                             _TRISC2 7CA2                __end_of_DireccionaLCD 0D3A  
                         _RetardoLCD 0BD2                            ??___awdiv 0005  
                    ??_InicializaLCD 0005                     ___awdiv@quotient 0007  
                             isa$std 0001                 __end_of_EscribeLCD_c 0D24  
                             _strlen 0CAC                         __pdataCOMRAM 0018  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                         __accesstop 0060              __end_of__initialization 0CE8  
                      ___rparam_used 0001         ?_Mensaje_LCD_Var_Mensaje20x4 000D  
                     __pcstackCOMRAM 0001                    __end_of_EnviaDato 0C6E  
                          ?_BorraLCD 0001                           __pnvCOMRAM 0013  
                        ?_RetardoLCD 0001                          RetardoLCD@a 0002  
      ??_Mensaje_LCD_Var_Mensaje20x4 0011                              _CCP1CON 0FBD  
                            _CCP2CON 0FBA                              ?_strlen 0001  
                         ??_BorraLCD 0005                         ?_HabilitaLCD 0001  
                       _ConfiguraLCD 0CF6                              _Estados 0017  
                            __Hparam 0000                              __Lparam 0000  
                            ___awdiv 0AE4                         __psmallconst 0800  
                            __pcinit 0CD4                              __ramtop 0800  
                            __ptext0 08BA                              __ptext1 0C6E  
                            __ptext2 0B68                              __ptext3 0CAC  
                            __ptext4 0AE4                              __ptext5 0D0E  
                            __ptext6 0D24                              __ptext7 0A48  
                            __ptext8 0D3A                              __ptext9 0C28  
          ?_Mensaje_LCD_Var_Centrado 0009                       __pintcode_body 0D5C  
               end_of_initialization 0CE8                        __Lmediumconst 0000  
                            int_func 0D5C                         _EscribeLCD_c 0D0E  
                            strlen@s 0001                        __pidataCOMRAM 0D62  
              __end_of_InicializaLCD 0AE4                            _EnviaDato 0C28  
                     __end_of_strlen 0CD4                  start_initialization 0CD4  
                        __end_of_ISR 0D62                         ??_RetardoLCD 0001  
                           ??_strlen 0003         Mensaje_LCD_Var_Mensaje20x4@a 000D  
       Mensaje_LCD_Var_Mensaje20x4@b 000E         Mensaje_LCD_Var_Mensaje20x4@c 000F  
       Mensaje_LCD_Var_Mensaje20x4@d 0010                           ?_EnviaDato 0001  
                        __pbssCOMRAM 0017                   __end_of_RetardoLCD 0C28  
                      _DireccionaLCD 0D24                            __pintcode 0008  
                           ?___awdiv 0001     __end_of_Mensaje_LCD_Var_Centrado 0BD2  
                        __smallconst 0800                       ?_DireccionaLCD 0001  
__end_of_Mensaje_LCD_Var_Mensaje20x4 0CAC          _Mensaje_LCD_Var_Mensaje20x4 0C6E  
                        ??_EnviaDato 0003                             _BorraLCD 0D3A  
                           __Hrparam 0000                             __Lrparam 0000  
                      ConfiguraLCD@a 0001             _Mensaje_LCD_Var_Centrado 0B68  
                           __ptext10 0BD2                             __ptext11 0D4E  
                           __ptext12 0CF6                      ??_DireccionaLCD 0005  
                           _interfaz 0018                             isa$xinst 0000  
                           int$flags 0019                             intlevel2 0000  
                      ??_HabilitaLCD 0001                        ?_ConfiguraLCD 0001  
                           strlen@cp 0003                       ??_ConfiguraLCD 0001  
                      ?_EscribeLCD_c 0001                  __end_of_HabilitaLCD 0D5C  
