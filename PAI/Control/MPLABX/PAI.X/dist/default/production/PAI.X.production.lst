

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 08 10:20:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 09/02/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   0010B6                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _interfaz
    77   0010B6  08                 	db	8
    78   000000                     _RBPU	set	32655
    79   000000                     _TRISC1	set	31905
    80                           
    81                           	psect	nvCOMRAM
    82   000040                     __pnvCOMRAM:
    83                           	callstack 0
    84   000040                     _d:
    85                           	callstack 0
    86   000040                     	ds	1
    87   000041                     _a:
    88                           	callstack 0
    89   000041                     	ds	1
    90   000000                     _RD1	set	31769
    91   000000                     _RB3	set	31755
    92   000000                     _PEIE	set	32662
    93   000000                     _GIE	set	32663
    94   000000                     _INT2IE	set	32644
    95   000000                     _INT2IF	set	32641
    96   000000                     _INT1IE	set	32643
    97   000000                     _INT0IE	set	32660
    98   000000                     _TRISC2	set	31906
    99   000000                     _TMR2ON	set	32338
   100   000000                     _LATD3	set	31843
   101   000000                     _LATD2	set	31842
   102   000000                     _LATD	set	3980
   103   000000                     _RB0	set	31752
   104   000000                     _TRISB	set	3987
   105   000000                     _TRISD	set	3989
   106   000000                     _ADCON1	set	4033
   107   000000                     _T2CON	set	4042
   108   000000                     _PR2	set	4043
   109   000000                     _CCP2CON	set	4026
   110   000000                     _CCP1CON	set	4029
   111   000000                     _CCPR1L	set	4030
   112   000000                     _CCPR2L	set	4027
   113   000000                     _TMR2	set	4044
   114   000000                     _INT1IF	set	32640
   115   000000                     _INT0IF	set	32657
   116   000000                     _RD0	set	31768
   117                           
   118                           	psect	smallconst
   119   000800                     __psmallconst:
   120                           	callstack 0
   121   000800  00                 	db	0
   122   000801                     STR_6:
   123   000801  52                 	db	82	;'R'
   124   000802  65                 	db	101	;'e'
   125   000803  76                 	db	118	;'v'
   126   000804  69                 	db	105	;'i'
   127   000805  73                 	db	115	;'s'
   128   000806  65                 	db	101	;'e'
   129   000807  20                 	db	32
   130   000808  6C                 	db	108	;'l'
   131   000809  61                 	db	97	;'a'
   132   00080A  20                 	db	32
   133   00080B  63                 	db	99	;'c'
   134   00080C  6F                 	db	111	;'o'
   135   00080D  6E                 	db	110	;'n'
   136   00080E  65                 	db	101	;'e'
   137   00080F  78                 	db	120	;'x'
   138   000810  69                 	db	105	;'i'
   139   000811  6F                 	db	111	;'o'
   140   000812  6E                 	db	110	;'n'
   141   000813  20                 	db	32
   142   000814  61                 	db	97	;'a'
   143   000815  20                 	db	32
   144   000816  00                 	db	0
   145   000817                     STR_11:
   146   000817  41                 	db	65	;'A'
   147   000818  63                 	db	99	;'c'
   148   000819  74                 	db	116	;'t'
   149   00081A  69                 	db	105	;'i'
   150   00081B  76                 	db	118	;'v'
   151   00081C  65                 	db	101	;'e'
   152   00081D  20                 	db	32
   153   00081E  65                 	db	101	;'e'
   154   00081F  6C                 	db	108	;'l'
   155   000820  20                 	db	32
   156   000821  70                 	db	112	;'p'
   157   000822  75                 	db	117	;'u'
   158   000823  6C                 	db	108	;'l'
   159   000824  73                 	db	115	;'s'
   160   000825  61                 	db	97	;'a'
   161   000826  64                 	db	100	;'d'
   162   000827  6F                 	db	111	;'o'
   163   000828  72                 	db	114	;'r'
   164   000829  00                 	db	0
   165   00082A                     STR_2:
   166   00082A  45                 	db	69	;'E'
   167   00082B  73                 	db	115	;'s'
   168   00082C  70                 	db	112	;'p'
   169   00082D  65                 	db	101	;'e'
   170   00082E  72                 	db	114	;'r'
   171   00082F  65                 	db	101	;'e'
   172   000830  20                 	db	32
   173   000831  75                 	db	117	;'u'
   174   000832  6E                 	db	110	;'n'
   175   000833  20                 	db	32
   176   000834  6D                 	db	109	;'m'
   177   000835  6F                 	db	111	;'o'
   178   000836  6D                 	db	109	;'m'
   179   000837  65                 	db	101	;'e'
   180   000838  6E                 	db	110	;'n'
   181   000839  74                 	db	116	;'t'
   182   00083A  6F                 	db	111	;'o'
   183   00083B  00                 	db	0
   184   00083C                     STR_13:
   185   00083C  53                 	db	83	;'S'
   186   00083D  65                 	db	101	;'e'
   187   00083E  6C                 	db	108	;'l'
   188   00083F  65                 	db	101	;'e'
   189   000840  63                 	db	99	;'c'
   190   000841  63                 	db	99	;'c'
   191   000842  69                 	db	105	;'i'
   192   000843  6F                 	db	111	;'o'
   193   000844  6E                 	db	110	;'n'
   194   000845  65                 	db	101	;'e'
   195   000846  20                 	db	32
   196   000847  75                 	db	117	;'u'
   197   000848  6E                 	db	110	;'n'
   198   000849  20                 	db	32
   199   00084A  25                 	db	37
   200   00084B  00                 	db	0
   201   00084C                     STR_17:
   202   00084C  4D                 	db	77	;'M'
   203   00084D  6F                 	db	111	;'o'
   204   00084E  74                 	db	116	;'t'
   205   00084F  6F                 	db	111	;'o'
   206   000850  72                 	db	114	;'r'
   207   000851  20                 	db	32
   208   000852  70                 	db	112	;'p'
   209   000853  72                 	db	114	;'r'
   210   000854  65                 	db	101	;'e'
   211   000855  6E                 	db	110	;'n'
   212   000856  64                 	db	100	;'d'
   213   000857  69                 	db	105	;'i'
   214   000858  64                 	db	100	;'d'
   215   000859  6F                 	db	111	;'o'
   216   00085A  00                 	db	0
   217   00085B                     STR_12:
   218   00085B  70                 	db	112	;'p'
   219   00085C  61                 	db	97	;'a'
   220   00085D  72                 	db	114	;'r'
   221   00085E  61                 	db	97	;'a'
   222   00085F  20                 	db	32
   223   000860  61                 	db	97	;'a'
   224   000861  6A                 	db	106	;'j'
   225   000862  75                 	db	117	;'u'
   226   000863  73                 	db	115	;'s'
   227   000864  74                 	db	116	;'t'
   228   000865  61                 	db	97	;'a'
   229   000866  72                 	db	114	;'r'
   230   000867  6C                 	db	108	;'l'
   231   000868  6F                 	db	111	;'o'
   232   000869  00                 	db	0
   233   00086A                     STR_14:
   234   00086A  64                 	db	100	;'d'
   235   00086B  65                 	db	101	;'e'
   236   00086C  20                 	db	32
   237   00086D  6F                 	db	111	;'o'
   238   00086E  70                 	db	112	;'p'
   239   00086F  65                 	db	101	;'e'
   240   000870  72                 	db	114	;'r'
   241   000871  61                 	db	97	;'a'
   242   000872  63                 	db	99	;'c'
   243   000873  69                 	db	105	;'i'
   244   000874  6F                 	db	111	;'o'
   245   000875  6E                 	db	110	;'n'
   246   000876  3A                 	db	58	;':'
   247   000877  00                 	db	0
   248   000878                     STR_1:
   249   000878  43                 	db	67	;'C'
   250   000879  6F                 	db	111	;'o'
   251   00087A  72                 	db	114	;'r'
   252   00087B  74                 	db	116	;'t'
   253   00087C  61                 	db	97	;'a'
   254   00087D  64                 	db	100	;'d'
   255   00087E  6F                 	db	111	;'o'
   256   00087F  72                 	db	114	;'r'
   257   000880  61                 	db	97	;'a'
   258   000881  20                 	db	32
   259   000882  55                 	db	85	;'U'
   260   000883  4E                 	db	78	;'N'
   261   000884  00                 	db	0
   262   000885                     STR_7:
   263   000885  6C                 	db	108	;'l'
   264   000886  6F                 	db	111	;'o'
   265   000887  73                 	db	115	;'s'
   266   000888  20                 	db	32
   267   000889  6D                 	db	109	;'m'
   268   00088A  6F                 	db	111	;'o'
   269   00088B  74                 	db	116	;'t'
   270   00088C  6F                 	db	111	;'o'
   271   00088D  72                 	db	114	;'r'
   272   00088E  65                 	db	101	;'e'
   273   00088F  73                 	db	115	;'s'
   274   000890  00                 	db	0
   275   000891                     STR_18:
   276   000891  4F                 	db	79	;'O'
   277   000892  70                 	db	112	;'p'
   278   000893  65                 	db	101	;'e'
   279   000894  72                 	db	114	;'r'
   280   000895  61                 	db	97	;'a'
   281   000896  63                 	db	99	;'c'
   282   000897  69                 	db	105	;'i'
   283   000898  6F                 	db	111	;'o'
   284   000899  6E                 	db	110	;'n'
   285   00089A  3A                 	db	58	;':'
   286   00089B  00                 	db	0
   287   00089C                     STR_9:
   288   00089C  4D                 	db	77	;'M'
   289   00089D  6F                 	db	111	;'o'
   290   00089E  74                 	db	116	;'t'
   291   00089F  6F                 	db	111	;'o'
   292   0008A0  72                 	db	114	;'r'
   293   0008A1  20                 	db	32
   294   0008A2  4F                 	db	79	;'O'
   295   0008A3  46                 	db	70	;'F'
   296   0008A4  46                 	db	70	;'F'
   297   0008A5  00                 	db	0
   298   0008A6                     STR_4:
   299   0008A6  32                 	db	50	;'2'
   300   0008A7  30                 	db	48	;'0'
   301   0008A8  32                 	db	50	;'2'
   302   0008A9  33                 	db	51	;'3'
   303   0008AA  2D                 	db	45
   304   0008AB  31                 	db	49	;'1'
   305   0008AC  00                 	db	0
   306   0008AD                     STR_3:
   307   0008AD  55                 	db	85	;'U'
   308   0008AE  4E                 	db	78	;'N'
   309   0008AF  41                 	db	65	;'A'
   310   0008B0  4C                 	db	76	;'L'
   311   0008B1  00                 	db	0
   312   0008B2                     STR_8:
   313   0008B2  20                 	db	32
   314   0008B3  20                 	db	32
   315   0008B4  00                 	db	0
   316   0008B5                     STR_16:
   317   0008B5  30                 	db	48	;'0'
   318   0008B6  25                 	db	37
   319   0008B7  00                 	db	0
   320   0008B8  00                 	db	0	; dummy byte at the end
   321   000000                     
   322                           ; #config settings
   323                           
   324                           	psect	cinit
   325   000FB4                     __pcinit:
   326                           	callstack 0
   327   000FB4                     start_initialization:
   328                           	callstack 0
   329   000FB4                     __initialization:
   330                           	callstack 0
   331                           
   332                           ; Initialize objects allocated to COMRAM (1 bytes)
   333                           ; load TBLPTR registers with __pidataCOMRAM
   334   000FB4  0EB6               	movlw	low __pidataCOMRAM
   335   000FB6  6EF6               	movwf	tblptrl,c
   336   000FB8  0E10               	movlw	high __pidataCOMRAM
   337   000FBA  6EF7               	movwf	tblptrh,c
   338   000FBC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   339   000FBE  6EF8               	movwf	tblptru,c
   340   000FC0  0009               	tblrd		*+	;fetch initializer
   341   000FC2  CFF5 F042          	movff	tablat,__pdataCOMRAM
   342                           
   343                           ; Clear objects allocated to COMRAM (19 bytes)
   344   000FC6  EE00  F02D         	lfsr	0,__pbssCOMRAM
   345   000FCA  0E13               	movlw	19
   346   000FCC                     clear_0:
   347   000FCC  6AEE               	clrf	postinc0,c
   348   000FCE  06E8               	decf	wreg,f,c
   349   000FD0  E1FD               	bnz	clear_0
   350   000FD2                     end_of_initialization:
   351                           	callstack 0
   352   000FD2                     __end_of__initialization:
   353                           	callstack 0
   354   000FD2  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   355   000FD4  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   356   000FD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   357   000FD8  6EF8               	movwf	tblptru,c
   358   000FDA  0100               	movlb	0
   359   000FDC  EF5D  F004         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMRAM
   362   00002D                     __pbssCOMRAM:
   363                           	callstack 0
   364   00002D                     _DutyF2:
   365                           	callstack 0
   366   00002D                     	ds	3
   367   000030                     _DeltaDuty:
   368                           	callstack 0
   369   000030                     	ds	3
   370   000033                     _Duty:
   371                           	callstack 0
   372   000033                     	ds	3
   373   000036                     _DutyF:
   374                           	callstack 0
   375   000036                     	ds	3
   376   000039                     _DutyI:
   377                           	callstack 0
   378   000039                     	ds	3
   379   00003C                     _c:
   380                           	callstack 0
   381   00003C                     	ds	1
   382   00003D                     _b:
   383                           	callstack 0
   384   00003D                     	ds	1
   385   00003E                     _EstadosPrev:
   386                           	callstack 0
   387   00003E                     	ds	1
   388   00003F                     _Estados:
   389                           	callstack 0
   390   00003F                     	ds	1
   391                           
   392                           	psect	dataCOMRAM
   393   000042                     __pdataCOMRAM:
   394                           	callstack 0
   395   000042                     _interfaz:
   396                           	callstack 0
   397   000042                     	ds	1
   398                           
   399                           	psect	cstackCOMRAM
   400   000001                     __pcstackCOMRAM:
   401                           	callstack 0
   402   000001                     ??_RetardoLCD:
   403   000001                     ?_strlen:
   404                           	callstack 0
   405   000001                     ?___awdiv:
   406                           	callstack 0
   407   000001                     ?___ftpack:
   408                           	callstack 0
   409   000001                     ConfiguraLCD@a:
   410                           	callstack 0
   411   000001                     strlen@s:
   412                           	callstack 0
   413   000001                     ___awdiv@dividend:
   414                           	callstack 0
   415   000001                     ___ftpack@arg:
   416                           	callstack 0
   417                           
   418                           ; 3 bytes @ 0x0
   419   000001                     	ds	1
   420   000002                     RetardoLCD@a:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x1
   424   000002                     	ds	1
   425   000003                     ??_EnviaDato:
   426   000003                     strlen@cp:
   427                           	callstack 0
   428   000003                     ___awdiv@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432   000003                     	ds	1
   433   000004                     EnviaDato@a:
   434                           	callstack 0
   435   000004                     ___ftpack@exp:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x3
   439   000004                     	ds	1
   440   000005                     EscribeLCD_c@a:
   441                           	callstack 0
   442   000005                     DireccionaLCD@a:
   443                           	callstack 0
   444   000005                     ___awdiv@counter:
   445                           	callstack 0
   446   000005                     ___ftpack@sign:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x4
   450   000005                     	ds	1
   451   000006                     ??___ftpack:
   452   000006                     ___awdiv@sign:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456   000006                     	ds	1
   457   000007                     ___awdiv@quotient:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x6
   461   000007                     	ds	2
   462   000009                     ?___lbtoft:
   463                           	callstack 0
   464   000009                     Mensaje_LCD_Var_Centrado@a:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x8
   468   000009                     	ds	1
   469   00000A                     Mensaje_LCD_Var_Centrado@l:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x9
   473   00000A                     	ds	1
   474   00000B                     Mensaje_LCD_Var_Centrado@n:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xA
   478   00000B                     	ds	1
   479   00000C                     Mensaje_LCD_Var_Centrado@i:
   480                           	callstack 0
   481   00000C                     ___lbtoft@c:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485   00000C                     	ds	1
   486   00000D                     ?___ftmul:
   487                           	callstack 0
   488   00000D                     Mensaje_LCD_Var_Mensaje20x4@a:
   489                           	callstack 0
   490   00000D                     ___ftmul@f1:
   491                           	callstack 0
   492                           
   493                           ; 3 bytes @ 0xC
   494   00000D                     	ds	1
   495   00000E                     Mensaje_LCD_Var_Mensaje20x4@b:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xD
   499   00000E                     	ds	1
   500   00000F                     Mensaje_LCD_Var_Mensaje20x4@c:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0xE
   504   00000F                     	ds	1
   505   000010                     Mensaje_LCD_Var_Mensaje20x4@d:
   506                           	callstack 0
   507   000010                     ___ftmul@f2:
   508                           	callstack 0
   509                           
   510                           ; 3 bytes @ 0xF
   511   000010                     	ds	1
   512   000011                     
   513                           ; 1 bytes @ 0x10
   514   000011                     	ds	2
   515   000013                     ??___ftmul:
   516                           
   517                           ; 1 bytes @ 0x12
   518   000013                     	ds	3
   519   000016                     ___ftmul@exp:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x15
   523   000016                     	ds	1
   524   000017                     ___ftmul@f3_as_product:
   525                           	callstack 0
   526                           
   527                           ; 3 bytes @ 0x16
   528   000017                     	ds	3
   529   00001A                     ___ftmul@cntr:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x19
   533   00001A                     	ds	1
   534   00001B                     ___ftmul@sign:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x1A
   538   00001B                     	ds	1
   539   00001C                     ?___fttol:
   540                           	callstack 0
   541   00001C                     ___fttol@f1:
   542                           	callstack 0
   543                           
   544                           ; 3 bytes @ 0x1B
   545   00001C                     	ds	4
   546   000020                     ??___fttol:
   547                           
   548                           ; 1 bytes @ 0x1F
   549   000020                     	ds	5
   550   000025                     ___fttol@sign1:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x24
   554   000025                     	ds	1
   555   000026                     ___fttol@lval:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x25
   559   000026                     	ds	4
   560   00002A                     ___fttol@exp1:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x29
   564   00002A                     	ds	1
   565   00002B                     ??_main:
   566                           
   567                           ; 1 bytes @ 0x2A
   568   00002B                     	ds	2
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 16 in file "PAI.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0
   591 ;;      Temps:          2       0       0       0       0       0       0       0       0
   592 ;;      Totals:         2       0       0       0       0       0       0       0       0
   593 ;;Total ram usage:        2 bytes
   594 ;; Hardware stack levels required when called: 6
   595 ;; This function calls:
   596 ;;		_ConfiguraLCD
   597 ;;		_InicializaLCD
   598 ;;		_Mensaje_LCD_Var_Mensaje20x4
   599 ;;		___ftmul
   600 ;;		___fttol
   601 ;;		___lbtoft
   602 ;; This function is called by:
   603 ;;		Startup code after reset
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text0
   608   0008BA                     __ptext0:
   609                           	callstack 0
   610   0008BA                     _main:
   611                           	callstack 25
   612                           
   613                           ;PAI.c: 19: ADCON1=15;
   614                           
   615                           ;incstack = 0
   616   0008BA  0E0F               	movlw	15
   617   0008BC  6EC1               	movwf	193,c	;volatile
   618                           
   619                           ;PAI.c: 20: TRISD=0;
   620   0008BE  0E00               	movlw	0
   621   0008C0  6E95               	movwf	149,c	;volatile
   622                           
   623                           ;PAI.c: 21: LATD=0;
   624   0008C2  0E00               	movlw	0
   625   0008C4  6E8C               	movwf	140,c	;volatile
   626                           
   627                           ;PAI.c: 22: TRISB=0b11111111;
   628   0008C6  6893               	setf	147,c	;volatile
   629                           
   630                           ;PAI.c: 26: CCP1CON=0b00001100;
   631   0008C8  0E0C               	movlw	12
   632   0008CA  6EBD               	movwf	189,c	;volatile
   633                           
   634                           ;PAI.c: 27: CCP2CON=0b00001100;
   635   0008CC  0E0C               	movlw	12
   636   0008CE  6EBA               	movwf	186,c	;volatile
   637                           
   638                           ;PAI.c: 29: PR2=249;
   639   0008D0  0EF9               	movlw	249
   640   0008D2  6ECB               	movwf	203,c	;volatile
   641                           
   642                           ;PAI.c: 30: CCPR1L=0;
   643   0008D4  0E00               	movlw	0
   644   0008D6  6EBE               	movwf	190,c	;volatile
   645                           
   646                           ;PAI.c: 31: CCPR2L=0;
   647   0008D8  0E00               	movlw	0
   648   0008DA  6EBB               	movwf	187,c	;volatile
   649                           
   650                           ;PAI.c: 32: T2CON=0b00000000;
   651   0008DC  0E00               	movlw	0
   652   0008DE  6ECA               	movwf	202,c	;volatile
   653                           
   654                           ;PAI.c: 33: TMR2=0;
   655   0008E0  0E00               	movlw	0
   656   0008E2  6ECC               	movwf	204,c	;volatile
   657                           
   658                           ;PAI.c: 34: TMR2ON=1;
   659   0008E4  84CA               	bsf	4042,2,c	;volatile
   660                           
   661                           ;PAI.c: 36: TRISC1=0;
   662   0008E6  9294               	bcf	3988,1,c	;volatile
   663                           
   664                           ;PAI.c: 37: TRISC2=0;
   665   0008E8  9494               	bcf	3988,2,c	;volatile
   666                           
   667                           ;PAI.c: 50: INT0IF=0;
   668   0008EA  92F2               	bcf	4082,1,c	;volatile
   669                           
   670                           ;PAI.c: 51: INT0IE=1;
   671   0008EC  88F2               	bsf	4082,4,c	;volatile
   672                           
   673                           ;PAI.c: 53: INT1IF=0;
   674   0008EE  90F0               	bcf	4080,0,c	;volatile
   675                           
   676                           ;PAI.c: 54: INT1IE=1;
   677   0008F0  86F0               	bsf	4080,3,c	;volatile
   678                           
   679                           ;PAI.c: 55: INT2IF=0;
   680   0008F2  92F0               	bcf	4080,1,c	;volatile
   681                           
   682                           ;PAI.c: 56: INT2IE=1;
   683   0008F4  88F0               	bsf	4080,4,c	;volatile
   684                           
   685                           ;PAI.c: 57: RBPU=1;
   686   0008F6  8EF1               	bsf	4081,7,c	;volatile
   687                           
   688                           ;PAI.c: 58: GIE=1;
   689   0008F8  8EF2               	bsf	4082,7,c	;volatile
   690                           
   691                           ;PAI.c: 59: PEIE=1;
   692   0008FA  8CF2               	bsf	4082,6,c	;volatile
   693                           
   694                           ;PAI.c: 63: a=!RB0;
   695   0008FC  B081               	btfsc	3969,0,c	;volatile
   696   0008FE  D002               	goto	u940
   697   000900  0E01               	movlw	1
   698   000902  D001               	goto	u950
   699   000904                     u940:
   700   000904  0E00               	movlw	0
   701   000906                     u950:
   702   000906  6E41               	movwf	_a^0,c
   703                           
   704                           ;PAI.c: 65: d=!RB3;
   705   000908  B681               	btfsc	3969,3,c	;volatile
   706   00090A  D002               	goto	u960
   707   00090C  0E01               	movlw	1
   708   00090E  D001               	goto	u970
   709   000910                     u960:
   710   000910  0E00               	movlw	0
   711   000912                     u970:
   712   000912  6E40               	movwf	_d^0,c
   713                           
   714                           ;PAI.c: 67: ConfiguraLCD(4);
   715   000914  0E04               	movlw	4
   716   000916  EC28  F008         	call	_ConfiguraLCD
   717                           
   718                           ;PAI.c: 68: InicializaLCD();
   719   00091A  ECA8  F006         	call	_InicializaLCD	;wreg free
   720                           
   721                           ;PAI.c: 70: _delay((unsigned long)((500)*(1000000/4000.0)));
   722   00091E  0EA3               	movlw	163
   723   000920  6E2B               	movwf	??_main^0,c
   724   000922  0E55               	movlw	85
   725   000924                     u1147:
   726   000924  2EE8               	decfsz	wreg,f,c
   727   000926  D7FE               	bra	u1147
   728   000928  2E2B               	decfsz	??_main^0,f,c
   729   00092A  D7FC               	bra	u1147
   730   00092C  F000               	nop	
   731   00092E                     l1714:
   732                           
   733                           ;PAI.c: 74: a=!RB0;
   734   00092E  B081               	btfsc	3969,0,c	;volatile
   735   000930  D002               	goto	u980
   736   000932  0E01               	movlw	1
   737   000934  D001               	goto	u990
   738   000936                     u980:
   739   000936  0E00               	movlw	0
   740   000938                     u990:
   741   000938  6E41               	movwf	_a^0,c
   742                           
   743                           ;PAI.c: 76: d=!RB3;
   744   00093A  B681               	btfsc	3969,3,c	;volatile
   745   00093C  D002               	goto	u1000
   746   00093E  0E01               	movlw	1
   747   000940  D001               	goto	u1010
   748   000942                     u1000:
   749   000942  0E00               	movlw	0
   750   000944                     u1010:
   751   000944  6E40               	movwf	_d^0,c
   752                           
   753                           ;PAI.c: 79: switch(Estados){
   754   000946  D0B9               	goto	l1800
   755   000948                     l1718:
   756                           
   757                           ;PAI.c: 82: LATD=0;
   758   000948  0E00               	movlw	0
   759   00094A  6E8C               	movwf	140,c	;volatile
   760                           
   761                           ;PAI.c: 83: Mensaje_LCD_Var_Mensaje20x4("Cortadora UN","Espere un momento","UNAL","2023-
      +                          1");
   762   00094C  0E78               	movlw	low STR_1
   763   00094E  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   764   000950  0E2A               	movlw	low STR_2
   765   000952  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   766   000954  0EAD               	movlw	low STR_3
   767   000956  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   768   000958  0EA6               	movlw	low STR_4
   769   00095A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   770   00095C  ECBB  F007         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   771                           
   772                           ;PAI.c: 84: Estados=1;
   773   000960  0E01               	movlw	1
   774   000962  6E3F               	movwf	_Estados^0,c
   775                           
   776                           ;PAI.c: 85: _delay((unsigned long)((2000)*(1000000/4000.0)));
   777   000964  0E03               	movlw	3
   778   000966  6E2C               	movwf	(??_main+1)^0,c
   779   000968  0E8A               	movlw	138
   780   00096A  6E2B               	movwf	??_main^0,c
   781   00096C  0E56               	movlw	86
   782   00096E                     u1157:
   783   00096E  2EE8               	decfsz	wreg,f,c
   784   000970  D7FE               	bra	u1157
   785   000972  2E2B               	decfsz	??_main^0,f,c
   786   000974  D7FC               	bra	u1157
   787   000976  2E2C               	decfsz	(??_main+1)^0,f,c
   788   000978  D7FA               	bra	u1157
   789                           
   790                           ;PAI.c: 86: break;
   791   00097A  D7D9               	goto	l1714
   792   00097C                     l205:
   793                           
   794                           ;PAI.c: 90: RD0=0;
   795   00097C  9083               	bcf	3971,0,c	;volatile
   796                           
   797                           ;PAI.c: 91: RD1=0;
   798   00097E  9283               	bcf	3971,1,c	;volatile
   799                           
   800                           ;PAI.c: 92: CCPR1L=0;
   801   000980  0E00               	movlw	0
   802   000982  6EBE               	movwf	190,c	;volatile
   803                           
   804                           ;PAI.c: 93: c=0;
   805   000984  0E00               	movlw	0
   806   000986  6E3C               	movwf	_c^0,c
   807                           
   808                           ;PAI.c: 94: if(Estados!=EstadosPrev){
   809   000988  503E               	movf	_EstadosPrev^0,w,c
   810   00098A  183F               	xorwf	_Estados^0,w,c
   811   00098C  B4D8               	btfsc	status,2,c
   812   00098E  D00A               	goto	l1732
   813                           
   814                           ;PAI.c: 95: Mensaje_LCD_Var_Mensaje20x4(" ","Revise la conexion a ","los motores","  ");
   815   000990  0EB3               	movlw	low (STR_8+1)
   816   000992  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   817   000994  0E01               	movlw	low STR_6
   818   000996  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   819   000998  0E85               	movlw	low STR_7
   820   00099A  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   821   00099C  0EB2               	movlw	low STR_8
   822   00099E  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   823   0009A0  ECBB  F007         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   824   0009A4                     l1732:
   825                           
   826                           ;PAI.c: 96: };PAI.c: 97: EstadosPrev=1;
   827   0009A4  0E01               	movlw	1
   828   0009A6  6E3E               	movwf	_EstadosPrev^0,c
   829                           
   830                           ;PAI.c: 98: if(a==0){Estados=1;break;}
   831   0009A8  5041               	movf	_a^0,w,c
   832   0009AA  A4D8               	btfss	status,2,c
   833   0009AC  D002               	goto	l1740
   834   0009AE                     u1030:
   835   0009AE  0E01               	movlw	1
   836   0009B0  D082               	goto	L2
   837   0009B2                     l1740:
   838                           
   839                           ;PAI.c: 99: else{Estados=2;break;}
   840   0009B2  0E02               	movlw	2
   841   0009B4  D080               	goto	L2
   842   0009B6                     l209:
   843                           
   844                           ;PAI.c: 104: RD0=1;
   845   0009B6  8083               	bsf	3971,0,c	;volatile
   846                           
   847                           ;PAI.c: 105: RD1=0;
   848   0009B8  9283               	bcf	3971,1,c	;volatile
   849                           
   850                           ;PAI.c: 106: b=1;
   851   0009BA  0E01               	movlw	1
   852   0009BC  6E3D               	movwf	_b^0,c
   853                           
   854                           ;PAI.c: 107: c=0;
   855   0009BE  0E00               	movlw	0
   856   0009C0  6E3C               	movwf	_c^0,c
   857                           
   858                           ;PAI.c: 108: CCPR1L=0;
   859   0009C2  0E00               	movlw	0
   860   0009C4  6EBE               	movwf	190,c	;volatile
   861                           
   862                           ;PAI.c: 109: if(Estados!=EstadosPrev){
   863   0009C6  503E               	movf	_EstadosPrev^0,w,c
   864   0009C8  183F               	xorwf	_Estados^0,w,c
   865   0009CA  B4D8               	btfsc	status,2,c
   866   0009CC  D00A               	goto	l1748
   867                           
   868                           ;PAI.c: 110: Mensaje_LCD_Var_Mensaje20x4("Motor OFF","  ","Active el pulsador","para aju
      +                          starlo");
   869   0009CE  0E9C               	movlw	low STR_9
   870   0009D0  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   871   0009D2  0EB2               	movlw	low STR_8
   872   0009D4  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   873   0009D6  0E17               	movlw	low STR_11
   874   0009D8  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   875   0009DA  0E5B               	movlw	low STR_12
   876   0009DC  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   877   0009DE  ECBB  F007         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   878   0009E2                     l1748:
   879                           
   880                           ;PAI.c: 111: };PAI.c: 113: EstadosPrev=2;
   881   0009E2  0E02               	movlw	2
   882   0009E4  6E3E               	movwf	_EstadosPrev^0,c
   883                           
   884                           ;PAI.c: 114: if(a==0){Estados=1;break;}
   885   0009E6  5041               	movf	_a^0,w,c
   886   0009E8  B4D8               	btfsc	status,2,c
   887   0009EA  D7E1               	goto	u1030
   888                           
   889                           ;PAI.c: 115: if(d==1){Estados=3;b=0;break;}
   890   0009EC  0440               	decf	_d^0,w,c
   891   0009EE  A4D8               	btfss	status,2,c
   892   0009F0  D7E0               	goto	l1740
   893   0009F2  0E03               	movlw	3
   894   0009F4  D020               	goto	L3
   895   0009F6                     l214:
   896                           
   897                           ;PAI.c: 120: RD1=0;
   898   0009F6  9283               	bcf	3971,1,c	;volatile
   899                           
   900                           ;PAI.c: 122: Duty=1;
   901   0009F8  0E00               	movlw	0
   902   0009FA  6E33               	movwf	_Duty^0,c
   903   0009FC  0E80               	movlw	128
   904   0009FE  6E34               	movwf	(_Duty+1)^0,c
   905   000A00  0E3F               	movlw	63
   906   000A02  6E35               	movwf	(_Duty+2)^0,c
   907                           
   908                           ;PAI.c: 123: CCPR1L=0;
   909   000A04  0E00               	movlw	0
   910   000A06  6EBE               	movwf	190,c	;volatile
   911                           
   912                           ;PAI.c: 124: if(a==0){Estados=1;break;}
   913   000A08  5041               	movf	_a^0,w,c
   914   000A0A  B4D8               	btfsc	status,2,c
   915   000A0C  D7D0               	goto	u1030
   916                           
   917                           ;PAI.c: 126: if(Estados!=EstadosPrev){
   918   000A0E  503E               	movf	_EstadosPrev^0,w,c
   919   000A10  183F               	xorwf	_Estados^0,w,c
   920   000A12  B4D8               	btfsc	status,2,c
   921   000A14  D00A               	goto	l1770
   922                           
   923                           ;PAI.c: 127: Mensaje_LCD_Var_Mensaje20x4("Seleccione un %","de operacion:"," ","0%");
   924   000A16  0E3C               	movlw	low STR_13
   925   000A18  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   926   000A1A  0E6A               	movlw	low STR_14
   927   000A1C  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   928   000A1E  0EB3               	movlw	low (STR_8+1)
   929   000A20  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   930   000A22  0EB5               	movlw	low STR_16
   931   000A24  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   932   000A26  ECBB  F007         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   933   000A2A                     l1770:
   934                           
   935                           ;PAI.c: 128: };PAI.c: 130: EstadosPrev=3;
   936   000A2A  0E03               	movlw	3
   937   000A2C  6E3E               	movwf	_EstadosPrev^0,c
   938                           
   939                           ;PAI.c: 131: if(b==1){Estados=2;b=0;break;}
   940   000A2E  043D               	decf	_b^0,w,c
   941   000A30  A4D8               	btfss	status,2,c
   942   000A32  D005               	goto	l1776
   943   000A34                     u1090:
   944   000A34  0E02               	movlw	2
   945   000A36                     L3:
   946   000A36  6E3F               	movwf	_Estados^0,c
   947   000A38  0E00               	movlw	0
   948   000A3A  6E3D               	movwf	_b^0,c
   949   000A3C  D778               	goto	l1714
   950   000A3E                     l1776:
   951                           
   952                           ;PAI.c: 132: if(c==1){Estados=4;c=0;break;}
   953   000A3E  043C               	decf	_c^0,w,c
   954   000A40  A4D8               	btfss	status,2,c
   955   000A42  D775               	goto	l1714
   956   000A44  0E04               	movlw	4
   957   000A46  6E3F               	movwf	_Estados^0,c
   958   000A48  0E00               	movlw	0
   959   000A4A  6E3C               	movwf	_c^0,c
   960   000A4C  D770               	goto	l1714
   961   000A4E                     l219:
   962                           
   963                           ;PAI.c: 136: RD1=1;
   964   000A4E  8283               	bsf	3971,1,c	;volatile
   965                           
   966                           ;PAI.c: 137: CCPR1L=Duty*PR2;
   967   000A50  C033  F010         	movff	_Duty,___ftmul@f2
   968   000A54  C034  F011         	movff	_Duty+1,___ftmul@f2+1
   969   000A58  C035  F012         	movff	_Duty+2,___ftmul@f2+2
   970   000A5C  50CB               	movf	203,w,c	;volatile
   971   000A5E  EC04  F008         	call	___lbtoft
   972   000A62  C009  F00D         	movff	?___lbtoft,___ftmul@f1
   973   000A66  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
   974   000A6A  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
   975   000A6E  EC6E  F005         	call	___ftmul	;wreg free
   976   000A72  C00D  F01C         	movff	?___ftmul,___fttol@f1
   977   000A76  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
   978   000A7A  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
   979   000A7E  ECE8  F005         	call	___fttol	;wreg free
   980   000A82  501C               	movf	?___fttol^0,w,c
   981   000A84  6EBE               	movwf	190,c	;volatile
   982                           
   983                           ;PAI.c: 138: if(Estados!=EstadosPrev){
   984   000A86  503E               	movf	_EstadosPrev^0,w,c
   985   000A88  183F               	xorwf	_Estados^0,w,c
   986   000A8A  B4D8               	btfsc	status,2,c
   987   000A8C  D00A               	goto	l1786
   988                           
   989                           ;PAI.c: 139: Mensaje_LCD_Var_Mensaje20x4("Motor prendido","Operacion:"," ","0%");
   990   000A8E  0E4C               	movlw	low STR_17
   991   000A90  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
   992   000A92  0E91               	movlw	low STR_18
   993   000A94  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
   994   000A96  0EB3               	movlw	low (STR_8+1)
   995   000A98  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
   996   000A9A  0EB5               	movlw	low STR_16
   997   000A9C  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
   998   000A9E  ECBB  F007         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
   999   000AA2                     l1786:
  1000                           
  1001                           ;PAI.c: 140: };PAI.c: 142: EstadosPrev=4;
  1002   000AA2  0E04               	movlw	4
  1003   000AA4  6E3E               	movwf	_EstadosPrev^0,c
  1004                           
  1005                           ;PAI.c: 144: if(a==0){Estados=1;break;}
  1006   000AA6  5041               	movf	_a^0,w,c
  1007   000AA8  B4D8               	btfsc	status,2,c
  1008   000AAA  D781               	goto	u1030
  1009                           
  1010                           ;PAI.c: 145: if(b==1){Estados=2;b=0;break;}
  1011   000AAC  043D               	decf	_b^0,w,c
  1012   000AAE  B4D8               	btfsc	status,2,c
  1013   000AB0  D7C1               	goto	u1090
  1014   000AB2  D73D               	goto	l1714
  1015   000AB4                     l1796:
  1016                           
  1017                           ;PAI.c: 150: Estados=0;
  1018   000AB4  0E00               	movlw	0
  1019   000AB6                     L2:
  1020   000AB6  6E3F               	movwf	_Estados^0,c
  1021                           
  1022                           ;PAI.c: 151: break;
  1023   000AB8  D73A               	goto	l1714
  1024   000ABA                     l1800:
  1025   000ABA  503F               	movf	_Estados^0,w,c
  1026                           
  1027                           ; Switch size 1, requested type "simple"
  1028                           ; Number of cases is 5, Range of values is 0 to 4
  1029                           ; switch strategies available:
  1030                           ; Name         Instructions Cycles
  1031                           ; simple_byte           16     9 (average)
  1032                           ;	Chosen strategy is simple_byte
  1033   000ABC  0A00               	xorlw	0	; case 0
  1034   000ABE  B4D8               	btfsc	status,2,c
  1035   000AC0  D743               	goto	l1718
  1036   000AC2  0A01               	xorlw	1	; case 1
  1037   000AC4  B4D8               	btfsc	status,2,c
  1038   000AC6  D75A               	goto	l205
  1039   000AC8  0A03               	xorlw	3	; case 2
  1040   000ACA  B4D8               	btfsc	status,2,c
  1041   000ACC  D774               	goto	l209
  1042   000ACE  0A01               	xorlw	1	; case 3
  1043   000AD0  B4D8               	btfsc	status,2,c
  1044   000AD2  D791               	goto	l214
  1045   000AD4  0A07               	xorlw	7	; case 4
  1046   000AD6  B4D8               	btfsc	status,2,c
  1047   000AD8  D7BA               	goto	l219
  1048   000ADA  D7EC               	goto	l1796
  1049   000ADC                     __end_of_main:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function ___lbtoft *****************
  1053 ;; Defined at:
  1054 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbtoft.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  c               1    wreg     unsigned char 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  c               1   11[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  3    8[COMRAM] float 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         3       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        4 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 2
  1075 ;; This function calls:
  1076 ;;		___ftpack
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text1
  1083   001008                     __ptext1:
  1084                           	callstack 0
  1085   001008                     ___lbtoft:
  1086                           	callstack 28
  1087                           
  1088                           ;incstack = 0
  1089                           ;___lbtoft@c stored from wreg
  1090   001008  6E0C               	movwf	___lbtoft@c^0,c
  1091   00100A  500C               	movf	___lbtoft@c^0,w,c
  1092   00100C  6E01               	movwf	___ftpack@arg^0,c
  1093   00100E  6A02               	clrf	(___ftpack@arg+1)^0,c
  1094   001010  6A03               	clrf	(___ftpack@arg+2)^0,c
  1095   001012  0E8E               	movlw	142
  1096   001014  6E04               	movwf	___ftpack@exp^0,c
  1097   001016  0E00               	movlw	0
  1098   001018  6E05               	movwf	___ftpack@sign^0,c
  1099   00101A  EC51  F006         	call	___ftpack	;wreg free
  1100   00101E  C001  F009         	movff	?___ftpack,?___lbtoft
  1101   001022  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1102   001026  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1103   00102A  0012               	return		;funcret
  1104   00102C                     __end_of___lbtoft:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function ___fttol *****************
  1108 ;; Defined at:
  1109 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  f1              3   27[COMRAM] float 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  lval            4   37[COMRAM] unsigned long 
  1114 ;;  exp1            1   41[COMRAM] unsigned char 
  1115 ;;  sign1           1   36[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  4   27[COMRAM] long 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         4       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1128 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:       15 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text2
  1140   000BD0                     __ptext2:
  1141                           	callstack 0
  1142   000BD0                     ___fttol:
  1143                           	callstack 29
  1144                           
  1145                           ;incstack = 0
  1146   000BD0  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1147   000BD4  6A21               	clrf	(??___fttol+1)^0,c
  1148   000BD6  6A22               	clrf	(??___fttol+2)^0,c
  1149   000BD8  341D               	rlcf	(___fttol@f1+1)^0,w,c
  1150   000BDA  3620               	rlcf	??___fttol^0,f,c
  1151   000BDC  E301               	bnc	u861
  1152   000BDE  8021               	bsf	(??___fttol+1)^0,0,c
  1153   000BE0                     u861:
  1154   000BE0  5020               	movf	??___fttol^0,w,c
  1155   000BE2  6E2A               	movwf	___fttol@exp1^0,c
  1156   000BE4  502A               	movf	___fttol@exp1^0,w,c
  1157   000BE6  A4D8               	btfss	status,2,c
  1158   000BE8  D009               	goto	l1636
  1159   000BEA                     u870:
  1160   000BEA  0E00               	movlw	0
  1161   000BEC  6E1C               	movwf	?___fttol^0,c
  1162   000BEE  0E00               	movlw	0
  1163   000BF0  6E1D               	movwf	(?___fttol+1)^0,c
  1164   000BF2  0E00               	movlw	0
  1165   000BF4  6E1E               	movwf	(?___fttol+2)^0,c
  1166   000BF6  0E00               	movlw	0
  1167   000BF8  6E1F               	movwf	(?___fttol+3)^0,c
  1168   000BFA  0012               	return	
  1169   000BFC                     l1636:
  1170   000BFC  0E17               	movlw	23
  1171   000BFE  6E20               	movwf	??___fttol^0,c
  1172   000C00  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1173   000C04  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1174   000C08  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1175   000C0C  2820               	incf	??___fttol^0,w,c
  1176   000C0E  6E24               	movwf	(??___fttol+4)^0,c
  1177   000C10  D004               	goto	u880
  1178   000C12                     u885:
  1179   000C12  90D8               	bcf	status,0,c
  1180   000C14  3223               	rrcf	(??___fttol+3)^0,f,c
  1181   000C16  3222               	rrcf	(??___fttol+2)^0,f,c
  1182   000C18  3221               	rrcf	(??___fttol+1)^0,f,c
  1183   000C1A                     u880:
  1184   000C1A  2E24               	decfsz	(??___fttol+4)^0,f,c
  1185   000C1C  D7FA               	goto	u885
  1186   000C1E  5021               	movf	(??___fttol+1)^0,w,c
  1187   000C20  6E25               	movwf	___fttol@sign1^0,c
  1188   000C22  8E1D               	bsf	(___fttol@f1+1)^0,7,c
  1189   000C24  0EFF               	movlw	255
  1190   000C26  161C               	andwf	___fttol@f1^0,f,c
  1191   000C28  0EFF               	movlw	255
  1192   000C2A  161D               	andwf	(___fttol@f1+1)^0,f,c
  1193   000C2C  0E00               	movlw	0
  1194   000C2E  161E               	andwf	(___fttol@f1+2)^0,f,c
  1195   000C30  501C               	movf	___fttol@f1^0,w,c
  1196   000C32  6E26               	movwf	___fttol@lval^0,c
  1197   000C34  501D               	movf	(___fttol@f1+1)^0,w,c
  1198   000C36  6E27               	movwf	(___fttol@lval+1)^0,c
  1199   000C38  501E               	movf	(___fttol@f1+2)^0,w,c
  1200   000C3A  6E28               	movwf	(___fttol@lval+2)^0,c
  1201   000C3C  6A29               	clrf	(___fttol@lval+3)^0,c
  1202   000C3E  0E8E               	movlw	142
  1203   000C40  5E2A               	subwf	___fttol@exp1^0,f,c
  1204   000C42  AE2A               	btfss	___fttol@exp1^0,7,c
  1205   000C44  D00D               	goto	l1658
  1206   000C46  502A               	movf	___fttol@exp1^0,w,c
  1207   000C48  0A80               	xorlw	128
  1208   000C4A  0F8F               	addlw	143
  1209   000C4C  A0D8               	btfss	status,0,c
  1210   000C4E  D7CD               	goto	u870
  1211   000C50                     l1654:
  1212   000C50  90D8               	bcf	status,0,c
  1213   000C52  3229               	rrcf	(___fttol@lval+3)^0,f,c
  1214   000C54  3228               	rrcf	(___fttol@lval+2)^0,f,c
  1215   000C56  3227               	rrcf	(___fttol@lval+1)^0,f,c
  1216   000C58  3226               	rrcf	___fttol@lval^0,f,c
  1217   000C5A  3E2A               	incfsz	___fttol@exp1^0,f,c
  1218   000C5C  D7F9               	goto	l1654
  1219   000C5E  D00D               	goto	u920
  1220   000C60                     l1658:
  1221   000C60  0E17               	movlw	23
  1222   000C62  642A               	cpfsgt	___fttol@exp1^0,c
  1223   000C64  D007               	goto	l1666
  1224   000C66  D7C1               	goto	u870
  1225   000C68                     l1664:
  1226   000C68  90D8               	bcf	status,0,c
  1227   000C6A  3626               	rlcf	___fttol@lval^0,f,c
  1228   000C6C  3627               	rlcf	(___fttol@lval+1)^0,f,c
  1229   000C6E  3628               	rlcf	(___fttol@lval+2)^0,f,c
  1230   000C70  3629               	rlcf	(___fttol@lval+3)^0,f,c
  1231   000C72  062A               	decf	___fttol@exp1^0,f,c
  1232   000C74                     l1666:
  1233   000C74  502A               	movf	___fttol@exp1^0,w,c
  1234   000C76  A4D8               	btfss	status,2,c
  1235   000C78  D7F7               	goto	l1664
  1236   000C7A                     u920:
  1237   000C7A  5025               	movf	___fttol@sign1^0,w,c
  1238   000C7C  B4D8               	btfsc	status,2,c
  1239   000C7E  D008               	goto	l1672
  1240   000C80  1E29               	comf	(___fttol@lval+3)^0,f,c
  1241   000C82  1E28               	comf	(___fttol@lval+2)^0,f,c
  1242   000C84  1E27               	comf	(___fttol@lval+1)^0,f,c
  1243   000C86  6C26               	negf	___fttol@lval^0,c
  1244   000C88  0E00               	movlw	0
  1245   000C8A  2227               	addwfc	(___fttol@lval+1)^0,f,c
  1246   000C8C  2228               	addwfc	(___fttol@lval+2)^0,f,c
  1247   000C8E  2229               	addwfc	(___fttol@lval+3)^0,f,c
  1248   000C90                     l1672:
  1249   000C90  C026  F01C         	movff	___fttol@lval,?___fttol
  1250   000C94  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1251   000C98  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1252   000C9C  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1253   000CA0  0012               	return		;funcret
  1254   000CA2                     __end_of___fttol:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function ___ftmul *****************
  1258 ;; Defined at:
  1259 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  f1              3   12[COMRAM] float 
  1262 ;;  f2              3   15[COMRAM] float 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1265 ;;  sign            1   26[COMRAM] unsigned char 
  1266 ;;  cntr            1   25[COMRAM] unsigned char 
  1267 ;;  exp             1   21[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  3   12[COMRAM] float 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:         6       0       0       0       0       0       0       0       0
  1278 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1280 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:       15 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 2
  1284 ;; This function calls:
  1285 ;;		___ftpack
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text3
  1292   000ADC                     __ptext3:
  1293                           	callstack 0
  1294   000ADC                     ___ftmul:
  1295                           	callstack 28
  1296                           
  1297                           ;incstack = 0
  1298   000ADC  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1299   000AE0  6A14               	clrf	(??___ftmul+1)^0,c
  1300   000AE2  6A15               	clrf	(??___ftmul+2)^0,c
  1301   000AE4  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  1302   000AE6  3613               	rlcf	??___ftmul^0,f,c
  1303   000AE8  E301               	bnc	u801
  1304   000AEA  8014               	bsf	(??___ftmul+1)^0,0,c
  1305   000AEC                     u801:
  1306   000AEC  5013               	movf	??___ftmul^0,w,c
  1307   000AEE  6E16               	movwf	___ftmul@exp^0,c
  1308   000AF0  5016               	movf	___ftmul@exp^0,w,c
  1309   000AF2  A4D8               	btfss	status,2,c
  1310   000AF4  D007               	goto	l1588
  1311   000AF6  0E00               	movlw	0
  1312   000AF8  6E0D               	movwf	?___ftmul^0,c
  1313   000AFA  0E00               	movlw	0
  1314   000AFC  6E0E               	movwf	(?___ftmul+1)^0,c
  1315   000AFE  0E00               	movlw	0
  1316   000B00  6E0F               	movwf	(?___ftmul+2)^0,c
  1317   000B02  0012               	return	
  1318   000B04                     l1588:
  1319   000B04  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1320   000B08  6A14               	clrf	(??___ftmul+1)^0,c
  1321   000B0A  6A15               	clrf	(??___ftmul+2)^0,c
  1322   000B0C  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  1323   000B0E  3613               	rlcf	??___ftmul^0,f,c
  1324   000B10  E301               	bnc	u821
  1325   000B12  8014               	bsf	(??___ftmul+1)^0,0,c
  1326   000B14                     u821:
  1327   000B14  5013               	movf	??___ftmul^0,w,c
  1328   000B16  6E1B               	movwf	___ftmul@sign^0,c
  1329   000B18  501B               	movf	___ftmul@sign^0,w,c
  1330   000B1A  A4D8               	btfss	status,2,c
  1331   000B1C  D007               	goto	l1594
  1332   000B1E  0E00               	movlw	0
  1333   000B20  6E0D               	movwf	?___ftmul^0,c
  1334   000B22  0E00               	movlw	0
  1335   000B24  6E0E               	movwf	(?___ftmul+1)^0,c
  1336   000B26  0E00               	movlw	0
  1337   000B28  6E0F               	movwf	(?___ftmul+2)^0,c
  1338   000B2A  0012               	return	
  1339   000B2C                     l1594:
  1340   000B2C  501B               	movf	___ftmul@sign^0,w,c
  1341   000B2E  0F7B               	addlw	123
  1342   000B30  2616               	addwf	___ftmul@exp^0,f,c
  1343   000B32  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1344   000B36  5012               	movf	(___ftmul@f2+2)^0,w,c
  1345   000B38  1A1B               	xorwf	___ftmul@sign^0,f,c
  1346   000B3A  0E80               	movlw	128
  1347   000B3C  161B               	andwf	___ftmul@sign^0,f,c
  1348   000B3E  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  1349   000B40  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  1350   000B42  0EFF               	movlw	255
  1351   000B44  1610               	andwf	___ftmul@f2^0,f,c
  1352   000B46  0EFF               	movlw	255
  1353   000B48  1611               	andwf	(___ftmul@f2+1)^0,f,c
  1354   000B4A  0E00               	movlw	0
  1355   000B4C  1612               	andwf	(___ftmul@f2+2)^0,f,c
  1356   000B4E  0E00               	movlw	0
  1357   000B50  6E17               	movwf	___ftmul@f3_as_product^0,c
  1358   000B52  0E00               	movlw	0
  1359   000B54  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  1360   000B56  0E00               	movlw	0
  1361   000B58  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  1362   000B5A  0E07               	movlw	7
  1363   000B5C  6E1A               	movwf	___ftmul@cntr^0,c
  1364   000B5E                     l1608:
  1365   000B5E  A00D               	btfss	___ftmul@f1^0,0,c
  1366   000B60  D006               	goto	l1612
  1367   000B62  5010               	movf	___ftmul@f2^0,w,c
  1368   000B64  2617               	addwf	___ftmul@f3_as_product^0,f,c
  1369   000B66  5011               	movf	(___ftmul@f2+1)^0,w,c
  1370   000B68  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1371   000B6A  5012               	movf	(___ftmul@f2+2)^0,w,c
  1372   000B6C  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1373   000B6E                     l1612:
  1374   000B6E  90D8               	bcf	status,0,c
  1375   000B70  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  1376   000B72  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  1377   000B74  320D               	rrcf	___ftmul@f1^0,f,c
  1378   000B76  90D8               	bcf	status,0,c
  1379   000B78  3610               	rlcf	___ftmul@f2^0,f,c
  1380   000B7A  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  1381   000B7C  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  1382   000B7E  2E1A               	decfsz	___ftmul@cntr^0,f,c
  1383   000B80  D7EE               	goto	l1608
  1384   000B82  0E09               	movlw	9
  1385   000B84  6E1A               	movwf	___ftmul@cntr^0,c
  1386   000B86                     l1618:
  1387   000B86  A00D               	btfss	___ftmul@f1^0,0,c
  1388   000B88  D006               	goto	l1622
  1389   000B8A  5010               	movf	___ftmul@f2^0,w,c
  1390   000B8C  2617               	addwf	___ftmul@f3_as_product^0,f,c
  1391   000B8E  5011               	movf	(___ftmul@f2+1)^0,w,c
  1392   000B90  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1393   000B92  5012               	movf	(___ftmul@f2+2)^0,w,c
  1394   000B94  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1395   000B96                     l1622:
  1396   000B96  90D8               	bcf	status,0,c
  1397   000B98  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  1398   000B9A  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  1399   000B9C  320D               	rrcf	___ftmul@f1^0,f,c
  1400   000B9E  90D8               	bcf	status,0,c
  1401   000BA0  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  1402   000BA2  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  1403   000BA4  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  1404   000BA6  2E1A               	decfsz	___ftmul@cntr^0,f,c
  1405   000BA8  D7EE               	goto	l1618
  1406   000BAA  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1407   000BAE  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1408   000BB2  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1409   000BB6  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1410   000BBA  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1411   000BBE  EC51  F006         	call	___ftpack	;wreg free
  1412   000BC2  C001  F00D         	movff	?___ftpack,?___ftmul
  1413   000BC6  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1414   000BCA  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1415   000BCE  0012               	return		;funcret
  1416   000BD0                     __end_of___ftmul:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function ___ftpack *****************
  1420 ;; Defined at:
  1421 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  arg             3    0[COMRAM] unsigned um
  1424 ;;  exp             1    3[COMRAM] unsigned char 
  1425 ;;  sign            1    4[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  3    0[COMRAM] float 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1437 ;;      Params:         5       0       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1439 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1440 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        8 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		___ftmul
  1448 ;;		___lbtoft
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text4
  1453   000CA2                     __ptext4:
  1454                           	callstack 0
  1455   000CA2                     ___ftpack:
  1456                           	callstack 28
  1457                           
  1458                           ;incstack = 0
  1459   000CA2  5004               	movf	___ftpack@exp^0,w,c
  1460   000CA4  B4D8               	btfsc	status,2,c
  1461   000CA6  D005               	goto	u730
  1462   000CA8  5001               	movf	___ftpack@arg^0,w,c
  1463   000CAA  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  1464   000CAC  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  1465   000CAE  A4D8               	btfss	status,2,c
  1466   000CB0  D00C               	goto	l1544
  1467   000CB2                     u730:
  1468   000CB2  0E00               	movlw	0
  1469   000CB4  6E01               	movwf	?___ftpack^0,c
  1470   000CB6  0E00               	movlw	0
  1471   000CB8  6E02               	movwf	(?___ftpack+1)^0,c
  1472   000CBA  0E00               	movlw	0
  1473   000CBC  6E03               	movwf	(?___ftpack+2)^0,c
  1474   000CBE  0012               	return	
  1475   000CC0                     l1542:
  1476   000CC0  2A04               	incf	___ftpack@exp^0,f,c
  1477   000CC2  90D8               	bcf	status,0,c
  1478   000CC4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  1479   000CC6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  1480   000CC8  3201               	rrcf	___ftpack@arg^0,f,c
  1481   000CCA                     l1544:
  1482   000CCA  0E00               	movlw	0
  1483   000CCC  1401               	andwf	___ftpack@arg^0,w,c
  1484   000CCE  6E06               	movwf	??___ftpack^0,c
  1485   000CD0  0E00               	movlw	0
  1486   000CD2  1402               	andwf	(___ftpack@arg+1)^0,w,c
  1487   000CD4  6E07               	movwf	(??___ftpack+1)^0,c
  1488   000CD6  0EFE               	movlw	254
  1489   000CD8  1403               	andwf	(___ftpack@arg+2)^0,w,c
  1490   000CDA  6E08               	movwf	(??___ftpack+2)^0,c
  1491   000CDC  5006               	movf	??___ftpack^0,w,c
  1492   000CDE  1007               	iorwf	(??___ftpack+1)^0,w,c
  1493   000CE0  1008               	iorwf	(??___ftpack+2)^0,w,c
  1494   000CE2  B4D8               	btfsc	status,2,c
  1495   000CE4  D00C               	goto	l1550
  1496   000CE6  D7EC               	goto	l1542
  1497   000CE8                     l1546:
  1498   000CE8  2A04               	incf	___ftpack@exp^0,f,c
  1499   000CEA  0E01               	movlw	1
  1500   000CEC  2601               	addwf	___ftpack@arg^0,f,c
  1501   000CEE  0E00               	movlw	0
  1502   000CF0  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  1503   000CF2  0E00               	movlw	0
  1504   000CF4  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  1505   000CF6  90D8               	bcf	status,0,c
  1506   000CF8  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  1507   000CFA  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  1508   000CFC  3201               	rrcf	___ftpack@arg^0,f,c
  1509   000CFE                     l1550:
  1510   000CFE  0E00               	movlw	0
  1511   000D00  1401               	andwf	___ftpack@arg^0,w,c
  1512   000D02  6E06               	movwf	??___ftpack^0,c
  1513   000D04  0E00               	movlw	0
  1514   000D06  1402               	andwf	(___ftpack@arg+1)^0,w,c
  1515   000D08  6E07               	movwf	(??___ftpack+1)^0,c
  1516   000D0A  0EFF               	movlw	255
  1517   000D0C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  1518   000D0E  6E08               	movwf	(??___ftpack+2)^0,c
  1519   000D10  5006               	movf	??___ftpack^0,w,c
  1520   000D12  1007               	iorwf	(??___ftpack+1)^0,w,c
  1521   000D14  1008               	iorwf	(??___ftpack+2)^0,w,c
  1522   000D16  B4D8               	btfsc	status,2,c
  1523   000D18  D006               	goto	l1554
  1524   000D1A  D7E6               	goto	l1546
  1525   000D1C                     l1552:
  1526   000D1C  0604               	decf	___ftpack@exp^0,f,c
  1527   000D1E  90D8               	bcf	status,0,c
  1528   000D20  3601               	rlcf	___ftpack@arg^0,f,c
  1529   000D22  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  1530   000D24  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  1531   000D26                     l1554:
  1532   000D26  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  1533   000D28  D003               	goto	u770
  1534   000D2A  0E02               	movlw	2
  1535   000D2C  6004               	cpfslt	___ftpack@exp^0,c
  1536   000D2E  D7F6               	goto	l1552
  1537   000D30                     u770:
  1538   000D30  A004               	btfss	___ftpack@exp^0,0,c
  1539   000D32  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  1540   000D34  90D8               	bcf	status,0,c
  1541   000D36  3204               	rrcf	___ftpack@exp^0,f,c
  1542   000D38  5004               	movf	___ftpack@exp^0,w,c
  1543   000D3A  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  1544   000D3C  5005               	movf	___ftpack@sign^0,w,c
  1545   000D3E  A4D8               	btfss	status,2,c
  1546   000D40  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  1547   000D42  C001  F001         	movff	___ftpack@arg,?___ftpack
  1548   000D46  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1549   000D4A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1550   000D4E  0012               	return		;funcret
  1551   000D50                     __end_of___ftpack:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _Mensaje_LCD_Var_Mensaje20x4 *****************
  1555 ;; Defined at:
  1556 ;;		line 304 in file "LibLCDXC8.h"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  a               1   12[COMRAM] PTR unsigned char 
  1559 ;;		 -> STR_17(15), STR_13(16), STR_9(10), STR_5(2), 
  1560 ;;		 -> STR_1(13), 
  1561 ;;  b               1   13[COMRAM] PTR unsigned char 
  1562 ;;		 -> STR_18(11), STR_14(14), STR_10(3), STR_6(22), 
  1563 ;;		 -> STR_2(18), 
  1564 ;;  c               1   14[COMRAM] PTR unsigned char 
  1565 ;;		 -> STR_19(2), STR_15(2), STR_11(19), STR_7(12), 
  1566 ;;		 -> STR_3(5), 
  1567 ;;  d               1   15[COMRAM] PTR unsigned char 
  1568 ;;		 -> STR_20(3), STR_16(3), STR_12(15), STR_8(3), 
  1569 ;;		 -> STR_4(7), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         4       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        4 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 5
  1588 ;; This function calls:
  1589 ;;		_BorraLCD
  1590 ;;		_DireccionaLCD
  1591 ;;		_Mensaje_LCD_Var_Centrado
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text5
  1598   000F76                     __ptext5:
  1599                           	callstack 0
  1600   000F76                     _Mensaje_LCD_Var_Mensaje20x4:
  1601                           	callstack 25
  1602                           
  1603                           ;LibLCDXC8.h: 305: BorraLCD();
  1604                           
  1605                           ;incstack = 0
  1606   000F76  EC4A  F008         	call	_BorraLCD	;wreg free
  1607                           
  1608                           ;LibLCDXC8.h: 306: DireccionaLCD(0x00);
  1609   000F7A  0E00               	movlw	0
  1610   000F7C  EC3F  F008         	call	_DireccionaLCD
  1611                           
  1612                           ;LibLCDXC8.h: 307: Mensaje_LCD_Var_Centrado(a);
  1613   000F80  C00D  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@a,Mensaje_LCD_Var_Centrado@a
  1614   000F84  EC38  F007         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  1615                           
  1616                           ;LibLCDXC8.h: 308: DireccionaLCD(0xC0);
  1617   000F88  0EC0               	movlw	192
  1618   000F8A  EC3F  F008         	call	_DireccionaLCD
  1619                           
  1620                           ;LibLCDXC8.h: 309: Mensaje_LCD_Var_Centrado(b);
  1621   000F8E  C00E  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@b,Mensaje_LCD_Var_Centrado@a
  1622   000F92  EC38  F007         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  1623                           
  1624                           ;LibLCDXC8.h: 310: DireccionaLCD(0xC0-44);
  1625   000F96  0E94               	movlw	148
  1626   000F98  EC3F  F008         	call	_DireccionaLCD
  1627                           
  1628                           ;LibLCDXC8.h: 311: Mensaje_LCD_Var_Centrado(c);
  1629   000F9C  C00F  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@c,Mensaje_LCD_Var_Centrado@a
  1630   000FA0  EC38  F007         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  1631                           
  1632                           ;LibLCDXC8.h: 312: DireccionaLCD(0xC0+20);
  1633   000FA4  0ED4               	movlw	212
  1634   000FA6  EC3F  F008         	call	_DireccionaLCD
  1635                           
  1636                           ;LibLCDXC8.h: 313: Mensaje_LCD_Var_Centrado(d);
  1637   000FAA  C010  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@d,Mensaje_LCD_Var_Centrado@a
  1638   000FAE  EC38  F007         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  1639   000FB2  0012               	return		;funcret
  1640   000FB4                     __end_of_Mensaje_LCD_Var_Mensaje20x4:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _Mensaje_LCD_Var_Centrado *****************
  1644 ;; Defined at:
  1645 ;;		line 320 in file "LibLCDXC8.h"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  a               1    8[COMRAM] PTR unsigned char 
  1648 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
  1649 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
  1650 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
  1651 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
  1652 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  i               1   11[COMRAM] unsigned char 
  1655 ;;  n               1   10[COMRAM] unsigned char 
  1656 ;;  l               1    9[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         1       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        4 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 4
  1673 ;; This function calls:
  1674 ;;		_EscribeLCD_c
  1675 ;;		___awdiv
  1676 ;;		_strlen
  1677 ;; This function is called by:
  1678 ;;		_Mensaje_LCD_Var_Mensaje20x4
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683   000E70                     __ptext6:
  1684                           	callstack 0
  1685   000E70                     _Mensaje_LCD_Var_Centrado:
  1686                           	callstack 25
  1687                           
  1688                           ;LibLCDXC8.h: 321: char l =strlen(a);
  1689                           
  1690                           ;incstack = 0
  1691   000E70  C009  F001         	movff	Mensaje_LCD_Var_Centrado@a,strlen@s
  1692   000E74  ECF0  F007         	call	_strlen	;wreg free
  1693   000E78  5001               	movf	?_strlen^0,w,c
  1694   000E7A  6E0A               	movwf	Mensaje_LCD_Var_Centrado@l^0,c
  1695                           
  1696                           ;LibLCDXC8.h: 322: char n=(20-l)/2;
  1697   000E7C  500A               	movf	Mensaje_LCD_Var_Centrado@l^0,w,c
  1698   000E7E  0814               	sublw	20
  1699   000E80  6E01               	movwf	___awdiv@dividend^0,c
  1700   000E82  0E00               	movlw	0
  1701   000E84  A0D8               	btfss	status,0,c
  1702   000E86  2AE8               	incf	wreg,f,c
  1703   000E88  0800               	sublw	0
  1704   000E8A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1705   000E8C  0E00               	movlw	0
  1706   000E8E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1707   000E90  0E02               	movlw	2
  1708   000E92  6E03               	movwf	___awdiv@divisor^0,c
  1709   000E94  ECF6  F006         	call	___awdiv	;wreg free
  1710   000E98  5001               	movf	?___awdiv^0,w,c
  1711   000E9A  6E0B               	movwf	Mensaje_LCD_Var_Centrado@n^0,c
  1712                           
  1713                           ;LibLCDXC8.h: 323: char i;;LibLCDXC8.h: 325: for(i=0;i<n;i++){
  1714   000E9C  0E00               	movlw	0
  1715   000E9E  6E0C               	movwf	Mensaje_LCD_Var_Centrado@i^0,c
  1716   000EA0  D004               	goto	l1526
  1717   000EA2                     l1522:
  1718                           
  1719                           ;LibLCDXC8.h: 326: EscribeLCD_c(' ');
  1720   000EA2  0E20               	movlw	32
  1721   000EA4  EC34  F008         	call	_EscribeLCD_c
  1722   000EA8  2A0C               	incf	Mensaje_LCD_Var_Centrado@i^0,f,c
  1723   000EAA                     l1526:
  1724   000EAA  500B               	movf	Mensaje_LCD_Var_Centrado@n^0,w,c
  1725   000EAC  5C0C               	subwf	Mensaje_LCD_Var_Centrado@i^0,w,c
  1726   000EAE  B0D8               	btfsc	status,0,c
  1727   000EB0  D00A               	goto	l1532
  1728   000EB2  D7F7               	goto	l1522
  1729   000EB4                     l1528:
  1730                           
  1731                           ;LibLCDXC8.h: 329: EscribeLCD_c(*a);
  1732   000EB4  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  1733   000EB8                     	if	1	;There is more than 1 active tblptr byte
  1734   000EB8  0E08               	movlw	high __smallconst
  1735   000EBA  6EF7               	movwf	tblptrh,c
  1736   000EBC                     	endif
  1737   000EBC                     	if	0	;tblptru may be non-zero
  1738   000EBC                     	endif
  1739   000EBC                     	if	0	;tblptru may be non-zero
  1740   000EBC                     	endif
  1741   000EBC  0008               	tblrd		*
  1742   000EBE  50F5               	movf	tablat,w,c
  1743   000EC0  EC34  F008         	call	_EscribeLCD_c
  1744                           
  1745                           ;LibLCDXC8.h: 330: a++;
  1746   000EC4  2A09               	incf	Mensaje_LCD_Var_Centrado@a^0,f,c
  1747   000EC6                     l1532:
  1748   000EC6  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  1749   000ECA                     	if	1	;There is more than 1 active tblptr byte
  1750   000ECA  0E08               	movlw	high __smallconst
  1751   000ECC  6EF7               	movwf	tblptrh,c
  1752   000ECE                     	endif
  1753   000ECE                     	if	0	;tblptru may be non-zero
  1754   000ECE                     	endif
  1755   000ECE                     	if	0	;tblptru may be non-zero
  1756   000ECE                     	endif
  1757   000ECE  0008               	tblrd		*
  1758   000ED0  50F5               	movf	tablat,w,c
  1759   000ED2  0900               	iorlw	0
  1760   000ED4  B4D8               	btfsc	status,2,c
  1761   000ED6  0012               	return	
  1762   000ED8  D7ED               	goto	l1528
  1763   000EDA                     __end_of_Mensaje_LCD_Var_Centrado:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _strlen *****************
  1767 ;; Defined at:
  1768 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1771 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
  1772 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
  1773 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
  1774 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
  1775 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  1778 ;;		 -> STR_20(3), STR_19(2), STR_18(11), STR_17(15), 
  1779 ;;		 -> STR_16(3), STR_15(2), STR_14(14), STR_13(16), 
  1780 ;;		 -> STR_12(15), STR_11(19), STR_10(3), STR_9(10), 
  1781 ;;		 -> STR_8(3), STR_7(12), STR_6(22), STR_5(2), 
  1782 ;;		 -> STR_4(7), STR_3(5), STR_2(18), STR_1(13), 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2    0[COMRAM] unsigned int 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         2       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        3 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_Mensaje_LCD_Var_Centrado
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text7
  1807   000FE0                     __ptext7:
  1808                           	callstack 0
  1809   000FE0                     _strlen:
  1810                           	callstack 27
  1811                           
  1812                           ;incstack = 0
  1813   000FE0  C001  F003         	movff	strlen@s,strlen@cp
  1814   000FE4  D001               	goto	l1466
  1815   000FE6                     l1464:
  1816   000FE6  2A03               	incf	strlen@cp^0,f,c
  1817   000FE8                     l1466:
  1818   000FE8  C003  FFF6         	movff	strlen@cp,tblptrl
  1819   000FEC                     	if	1	;There is more than 1 active tblptr byte
  1820   000FEC  0E08               	movlw	high __smallconst
  1821   000FEE  6EF7               	movwf	tblptrh,c
  1822   000FF0                     	endif
  1823   000FF0                     	if	0	;tblptru may be non-zero
  1824   000FF0                     	endif
  1825   000FF0                     	if	0	;tblptru may be non-zero
  1826   000FF0                     	endif
  1827   000FF0  0008               	tblrd		*
  1828   000FF2  50F5               	movf	tablat,w,c
  1829   000FF4  0900               	iorlw	0
  1830   000FF6  A4D8               	btfss	status,2,c
  1831   000FF8  D7F6               	goto	l1464
  1832   000FFA  5001               	movf	strlen@s^0,w,c
  1833   000FFC  5C03               	subwf	strlen@cp^0,w,c
  1834   000FFE  6E01               	movwf	?_strlen^0,c
  1835   001000  6A02               	clrf	(?_strlen+1)^0,c
  1836   001002  BE01               	btfsc	?_strlen^0,7,c
  1837   001004  0602               	decf	(?_strlen+1)^0,f,c
  1838   001006  0012               	return		;funcret
  1839   001008                     __end_of_strlen:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function ___awdiv *****************
  1843 ;; Defined at:
  1844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  dividend        2    0[COMRAM] int 
  1847 ;;  divisor         2    2[COMRAM] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  quotient        2    6[COMRAM] int 
  1850 ;;  sign            1    5[COMRAM] unsigned char 
  1851 ;;  counter         1    4[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    0[COMRAM] int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         4       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        8 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_Mensaje_LCD_Var_Centrado
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text8
  1876   000DEC                     __ptext8:
  1877                           	callstack 0
  1878   000DEC                     ___awdiv:
  1879                           	callstack 27
  1880                           
  1881                           ;incstack = 0
  1882   000DEC  0E00               	movlw	0
  1883   000DEE  6E06               	movwf	___awdiv@sign^0,c
  1884   000DF0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1885   000DF2  D006               	goto	l1480
  1886   000DF4  6C03               	negf	___awdiv@divisor^0,c
  1887   000DF6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1888   000DF8  B0D8               	btfsc	status,0,c
  1889   000DFA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1890   000DFC  0E01               	movlw	1
  1891   000DFE  6E06               	movwf	___awdiv@sign^0,c
  1892   000E00                     l1480:
  1893   000E00  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  1894   000E02  D006               	goto	l1486
  1895   000E04  6C01               	negf	___awdiv@dividend^0,c
  1896   000E06  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1897   000E08  B0D8               	btfsc	status,0,c
  1898   000E0A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1899   000E0C  0E01               	movlw	1
  1900   000E0E  1A06               	xorwf	___awdiv@sign^0,f,c
  1901   000E10                     l1486:
  1902   000E10  0E00               	movlw	0
  1903   000E12  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1904   000E14  0E00               	movlw	0
  1905   000E16  6E07               	movwf	___awdiv@quotient^0,c
  1906   000E18  5003               	movf	___awdiv@divisor^0,w,c
  1907   000E1A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1908   000E1C  B4D8               	btfsc	status,2,c
  1909   000E1E  D01C               	goto	l1508
  1910   000E20  0E01               	movlw	1
  1911   000E22  6E05               	movwf	___awdiv@counter^0,c
  1912   000E24  D004               	goto	l1494
  1913   000E26                     l1492:
  1914   000E26  90D8               	bcf	status,0,c
  1915   000E28  3603               	rlcf	___awdiv@divisor^0,f,c
  1916   000E2A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1917   000E2C  2A05               	incf	___awdiv@counter^0,f,c
  1918   000E2E                     l1494:
  1919   000E2E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1920   000E30  D7FA               	goto	l1492
  1921   000E32                     u670:
  1922   000E32  90D8               	bcf	status,0,c
  1923   000E34  3607               	rlcf	___awdiv@quotient^0,f,c
  1924   000E36  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1925   000E38  5003               	movf	___awdiv@divisor^0,w,c
  1926   000E3A  5C01               	subwf	___awdiv@dividend^0,w,c
  1927   000E3C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1928   000E3E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1929   000E40  A0D8               	btfss	status,0,c
  1930   000E42  D005               	goto	l1504
  1931   000E44  5003               	movf	___awdiv@divisor^0,w,c
  1932   000E46  5E01               	subwf	___awdiv@dividend^0,f,c
  1933   000E48  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1934   000E4A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1935   000E4C  8007               	bsf	___awdiv@quotient^0,0,c
  1936   000E4E                     l1504:
  1937   000E4E  90D8               	bcf	status,0,c
  1938   000E50  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1939   000E52  3203               	rrcf	___awdiv@divisor^0,f,c
  1940   000E54  2E05               	decfsz	___awdiv@counter^0,f,c
  1941   000E56  D7ED               	goto	u670
  1942   000E58                     l1508:
  1943   000E58  5006               	movf	___awdiv@sign^0,w,c
  1944   000E5A  B4D8               	btfsc	status,2,c
  1945   000E5C  D004               	goto	l1512
  1946   000E5E  6C07               	negf	___awdiv@quotient^0,c
  1947   000E60  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1948   000E62  B0D8               	btfsc	status,0,c
  1949   000E64  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1950   000E66                     l1512:
  1951   000E66  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1952   000E6A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1953   000E6E  0012               	return		;funcret
  1954   000E70                     __end_of___awdiv:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _EscribeLCD_c *****************
  1958 ;; Defined at:
  1959 ;;		line 121 in file "LibLCDXC8.h"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  a               1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  a               1    4[COMRAM] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 3
  1980 ;; This function calls:
  1981 ;;		_EnviaDato
  1982 ;;		_HabilitaLCD
  1983 ;;		_RetardoLCD
  1984 ;; This function is called by:
  1985 ;;		_Mensaje_LCD_Var_Centrado
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text9
  1990   001068                     __ptext9:
  1991                           	callstack 0
  1992   001068                     _EscribeLCD_c:
  1993                           	callstack 25
  1994                           
  1995                           ;incstack = 0
  1996                           ;EscribeLCD_c@a stored from wreg
  1997   001068  6E05               	movwf	EscribeLCD_c@a^0,c
  1998                           
  1999                           ;LibLCDXC8.h: 125: LATD2=1;
  2000   00106A  848C               	bsf	3980,2,c	;volatile
  2001                           
  2002                           ;LibLCDXC8.h: 126: EnviaDato(a);
  2003   00106C  5005               	movf	EscribeLCD_c@a^0,w,c
  2004   00106E  EC98  F007         	call	_EnviaDato
  2005                           
  2006                           ;LibLCDXC8.h: 127: HabilitaLCD();
  2007   001072  EC54  F008         	call	_HabilitaLCD	;wreg free
  2008                           
  2009                           ;LibLCDXC8.h: 128: RetardoLCD(4);
  2010   001076  0E04               	movlw	4
  2011   001078  EC6D  F007         	call	_RetardoLCD
  2012   00107C  0012               	return		;funcret
  2013   00107E                     __end_of_EscribeLCD_c:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _DireccionaLCD *****************
  2017 ;; Defined at:
  2018 ;;		line 346 in file "LibLCDXC8.h"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  a               1    wreg     unsigned char 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  a               1    4[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2032 ;;      Params:         0       0       0       0       0       0       0       0       0
  2033 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2036 ;;Total ram usage:        1 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 3
  2039 ;; This function calls:
  2040 ;;		_EnviaDato
  2041 ;;		_HabilitaLCD
  2042 ;;		_RetardoLCD
  2043 ;; This function is called by:
  2044 ;;		_Mensaje_LCD_Var_Mensaje20x4
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text10
  2049   00107E                     __ptext10:
  2050                           	callstack 0
  2051   00107E                     _DireccionaLCD:
  2052                           	callstack 26
  2053                           
  2054                           ;incstack = 0
  2055                           ;DireccionaLCD@a stored from wreg
  2056   00107E  6E05               	movwf	DireccionaLCD@a^0,c
  2057                           
  2058                           ;LibLCDXC8.h: 349: LATD2=0;
  2059   001080  948C               	bcf	3980,2,c	;volatile
  2060                           
  2061                           ;LibLCDXC8.h: 350: EnviaDato(a);
  2062   001082  5005               	movf	DireccionaLCD@a^0,w,c
  2063   001084  EC98  F007         	call	_EnviaDato
  2064                           
  2065                           ;LibLCDXC8.h: 351: HabilitaLCD();
  2066   001088  EC54  F008         	call	_HabilitaLCD	;wreg free
  2067                           
  2068                           ;LibLCDXC8.h: 352: RetardoLCD(4);
  2069   00108C  0E04               	movlw	4
  2070   00108E  EC6D  F007         	call	_RetardoLCD
  2071   001092  0012               	return		;funcret
  2072   001094                     __end_of_DireccionaLCD:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _InicializaLCD *****************
  2076 ;; Defined at:
  2077 ;;		line 70 in file "LibLCDXC8.h"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 4
  2098 ;; This function calls:
  2099 ;;		_BorraLCD
  2100 ;;		_EnviaDato
  2101 ;;		_HabilitaLCD
  2102 ;;		_RetardoLCD
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text11
  2109   000D50                     __ptext11:
  2110                           	callstack 0
  2111   000D50                     _InicializaLCD:
  2112                           	callstack 26
  2113                           
  2114                           ;LibLCDXC8.h: 72: LATD2=0;
  2115                           
  2116                           ;incstack = 0
  2117   000D50  948C               	bcf	3980,2,c	;volatile
  2118                           
  2119                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2120   000D52  0E04               	movlw	4
  2121   000D54  1842               	xorwf	_interfaz^0,w,c
  2122   000D56  A4D8               	btfss	status,2,c
  2123   000D58  D004               	goto	l1164
  2124                           
  2125                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2126   000D5A  508C               	movf	140,w,c	;volatile
  2127   000D5C  0B0F               	andlw	15
  2128   000D5E  0930               	iorlw	48
  2129   000D60  D001               	goto	L4
  2130   000D62                     l1164:
  2131                           
  2132                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2133   000D62  0E3F               	movlw	63
  2134   000D64                     L4:
  2135   000D64  6E8C               	movwf	140,c	;volatile
  2136                           
  2137                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2138   000D66  EC54  F008         	call	_HabilitaLCD	;wreg free
  2139                           
  2140                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  2141   000D6A  0E01               	movlw	1
  2142   000D6C  EC6D  F007         	call	_RetardoLCD
  2143                           
  2144                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2145   000D70  0E04               	movlw	4
  2146   000D72  1842               	xorwf	_interfaz^0,w,c
  2147   000D74  A4D8               	btfss	status,2,c
  2148   000D76  D004               	goto	l1174
  2149                           
  2150                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2151   000D78  508C               	movf	140,w,c	;volatile
  2152   000D7A  0B0F               	andlw	15
  2153   000D7C  0930               	iorlw	48
  2154   000D7E  D001               	goto	L5
  2155   000D80                     l1174:
  2156                           
  2157                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2158   000D80  0E3F               	movlw	63
  2159   000D82                     L5:
  2160   000D82  6E8C               	movwf	140,c	;volatile
  2161                           
  2162                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2163   000D84  EC54  F008         	call	_HabilitaLCD	;wreg free
  2164                           
  2165                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  2166   000D88  0E03               	movlw	3
  2167   000D8A  EC6D  F007         	call	_RetardoLCD
  2168                           
  2169                           ;LibLCDXC8.h: 85: if(interfaz==4)
  2170   000D8E  0E04               	movlw	4
  2171   000D90  1842               	xorwf	_interfaz^0,w,c
  2172   000D92  A4D8               	btfss	status,2,c
  2173   000D94  D004               	goto	l1184
  2174                           
  2175                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x30;
  2176   000D96  508C               	movf	140,w,c	;volatile
  2177   000D98  0B0F               	andlw	15
  2178   000D9A  0930               	iorlw	48
  2179   000D9C  D001               	goto	L6
  2180   000D9E                     l1184:
  2181                           
  2182                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  2183   000D9E  0E3F               	movlw	63
  2184   000DA0                     L6:
  2185   000DA0  6E8C               	movwf	140,c	;volatile
  2186                           
  2187                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2188   000DA2  EC54  F008         	call	_HabilitaLCD	;wreg free
  2189                           
  2190                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2191   000DA6  0E04               	movlw	4
  2192   000DA8  EC6D  F007         	call	_RetardoLCD
  2193                           
  2194                           ;LibLCDXC8.h: 91: if(interfaz==4){
  2195   000DAC  0E04               	movlw	4
  2196   000DAE  1842               	xorwf	_interfaz^0,w,c
  2197   000DB0  A4D8               	btfss	status,2,c
  2198   000DB2  D011               	goto	l1204
  2199                           
  2200                           ;LibLCDXC8.h: 92: LATD=(LATD & 0b00001111) | 0x20;
  2201   000DB4  508C               	movf	140,w,c	;volatile
  2202   000DB6  0B0F               	andlw	15
  2203   000DB8  0920               	iorlw	32
  2204   000DBA  6E8C               	movwf	140,c	;volatile
  2205                           
  2206                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2207   000DBC  EC54  F008         	call	_HabilitaLCD	;wreg free
  2208                           
  2209                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2210   000DC0  0E04               	movlw	4
  2211   000DC2  EC6D  F007         	call	_RetardoLCD
  2212                           
  2213                           ;LibLCDXC8.h: 95: EnviaDato(0x2F);
  2214   000DC6  0E2F               	movlw	47
  2215   000DC8  EC98  F007         	call	_EnviaDato
  2216                           
  2217                           ;LibLCDXC8.h: 96: HabilitaLCD();
  2218   000DCC  EC54  F008         	call	_HabilitaLCD	;wreg free
  2219                           
  2220                           ;LibLCDXC8.h: 97: RetardoLCD(4);
  2221   000DD0  0E04               	movlw	4
  2222   000DD2  EC6D  F007         	call	_RetardoLCD
  2223   000DD6                     l1204:
  2224                           
  2225                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  2226   000DD6  EC4A  F008         	call	_BorraLCD	;wreg free
  2227                           
  2228                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  2229   000DDA  0E0F               	movlw	15
  2230   000DDC  EC98  F007         	call	_EnviaDato
  2231                           
  2232                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2233   000DE0  EC54  F008         	call	_HabilitaLCD	;wreg free
  2234                           
  2235                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2236   000DE4  0E04               	movlw	4
  2237   000DE6  EC6D  F007         	call	_RetardoLCD
  2238   000DEA  0012               	return		;funcret
  2239   000DEC                     __end_of_InicializaLCD:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _BorraLCD *****************
  2243 ;; Defined at:
  2244 ;;		line 113 in file "LibLCDXC8.h"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 3
  2265 ;; This function calls:
  2266 ;;		_EnviaDato
  2267 ;;		_HabilitaLCD
  2268 ;;		_RetardoLCD
  2269 ;; This function is called by:
  2270 ;;		_InicializaLCD
  2271 ;;		_Mensaje_LCD_Var_Mensaje20x4
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text12
  2276   001094                     __ptext12:
  2277                           	callstack 0
  2278   001094                     _BorraLCD:
  2279                           	callstack 26
  2280                           
  2281                           ;LibLCDXC8.h: 115: LATD2=0;
  2282                           
  2283                           ;incstack = 0
  2284   001094  948C               	bcf	3980,2,c	;volatile
  2285                           
  2286                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  2287   001096  0E01               	movlw	1
  2288   001098  EC98  F007         	call	_EnviaDato
  2289                           
  2290                           ;LibLCDXC8.h: 117: HabilitaLCD();
  2291   00109C  EC54  F008         	call	_HabilitaLCD	;wreg free
  2292                           
  2293                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  2294   0010A0  0E02               	movlw	2
  2295   0010A2  EC6D  F007         	call	_RetardoLCD
  2296   0010A6  0012               	return		;funcret
  2297   0010A8                     __end_of_BorraLCD:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _EnviaDato *****************
  2301 ;; Defined at:
  2302 ;;		line 58 in file "LibLCDXC8.h"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  a               1    wreg     unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  a               1    3[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		_HabilitaLCD
  2325 ;;		_RetardoLCD
  2326 ;; This function is called by:
  2327 ;;		_InicializaLCD
  2328 ;;		_BorraLCD
  2329 ;;		_EscribeLCD_c
  2330 ;;		_DireccionaLCD
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text13
  2335   000F30                     __ptext13:
  2336                           	callstack 0
  2337   000F30                     _EnviaDato:
  2338                           	callstack 25
  2339                           
  2340                           ;incstack = 0
  2341                           ;EnviaDato@a stored from wreg
  2342   000F30  6E04               	movwf	EnviaDato@a^0,c
  2343                           
  2344                           ;LibLCDXC8.h: 59: if(interfaz==4){
  2345   000F32  0E04               	movlw	4
  2346   000F34  1842               	xorwf	_interfaz^0,w,c
  2347   000F36  A4D8               	btfss	status,2,c
  2348   000F38  D017               	goto	l1018
  2349                           
  2350                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2351   000F3A  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2352   000F3E  0EF0               	movlw	240
  2353   000F40  1603               	andwf	??_EnviaDato^0,f,c
  2354   000F42  508C               	movf	140,w,c	;volatile
  2355   000F44  0B0F               	andlw	15
  2356   000F46  1003               	iorwf	??_EnviaDato^0,w,c
  2357   000F48  6E8C               	movwf	140,c	;volatile
  2358                           
  2359                           ;LibLCDXC8.h: 61: HabilitaLCD();
  2360   000F4A  EC54  F008         	call	_HabilitaLCD	;wreg free
  2361                           
  2362                           ;LibLCDXC8.h: 62: RetardoLCD(1);
  2363   000F4E  0E01               	movlw	1
  2364   000F50  EC6D  F007         	call	_RetardoLCD
  2365                           
  2366                           ;LibLCDXC8.h: 63: LATD=(LATD & 0b00001111) | (a<<4);
  2367   000F54  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2368   000F58  3A03               	swapf	??_EnviaDato^0,f,c
  2369   000F5A  0EF0               	movlw	240
  2370   000F5C  1603               	andwf	??_EnviaDato^0,f,c
  2371   000F5E  508C               	movf	140,w,c	;volatile
  2372   000F60  0B0F               	andlw	15
  2373   000F62  1003               	iorwf	??_EnviaDato^0,w,c
  2374   000F64  6E8C               	movwf	140,c	;volatile
  2375                           
  2376                           ;LibLCDXC8.h: 66: }else if(interfaz==8){
  2377   000F66  0012               	return	
  2378   000F68                     l1018:
  2379   000F68  0E08               	movlw	8
  2380   000F6A  1842               	xorwf	_interfaz^0,w,c
  2381   000F6C  A4D8               	btfss	status,2,c
  2382   000F6E  0012               	return	
  2383                           
  2384                           ;LibLCDXC8.h: 67: LATD=a;
  2385   000F70  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  2386   000F74  0012               	return		;funcret
  2387   000F76                     __end_of_EnviaDato:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _RetardoLCD *****************
  2391 ;; Defined at:
  2392 ;;		line 355 in file "LibLCDXC8.h"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  a               1    wreg     unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  a               1    1[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0
  2407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2408 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2409 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2410 ;;Total ram usage:        2 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_EnviaDato
  2417 ;;		_InicializaLCD
  2418 ;;		_BorraLCD
  2419 ;;		_EscribeLCD_c
  2420 ;;		_DireccionaLCD
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text14
  2425   000EDA                     __ptext14:
  2426                           	callstack 0
  2427   000EDA                     _RetardoLCD:
  2428                           	callstack 26
  2429                           
  2430                           ;incstack = 0
  2431                           ;RetardoLCD@a stored from wreg
  2432   000EDA  6E02               	movwf	RetardoLCD@a^0,c
  2433                           
  2434                           ;LibLCDXC8.h: 356: switch(a){
  2435   000EDC  D01B               	goto	l1006
  2436   000EDE                     l996:
  2437   000EDE  0E05               	movlw	5
  2438   000EE0  6E01               	movwf	??_RetardoLCD^0,c
  2439   000EE2  0EDE               	movlw	222
  2440   000EE4                     u1167:
  2441   000EE4  2EE8               	decfsz	wreg,f,c
  2442   000EE6  D7FE               	bra	u1167
  2443   000EE8  2E01               	decfsz	??_RetardoLCD^0,f,c
  2444   000EEA  D7FC               	bra	u1167
  2445                           
  2446                           ;LibLCDXC8.h: 359: break;
  2447   000EEC  0012               	return	
  2448   000EEE                     l998:
  2449   000EEE  0E53               	movlw	83
  2450   000EF0                     u1177:
  2451   000EF0  2EE8               	decfsz	wreg,f,c
  2452   000EF2  D7FE               	bra	u1177
  2453   000EF4  F000               	nop	
  2454                           
  2455                           ;LibLCDXC8.h: 361: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2456   000EF6  0E35               	movlw	53
  2457   000EF8                     u1187:
  2458   000EF8  2EE8               	decfsz	wreg,f,c
  2459   000EFA  D7FE               	bra	u1187
  2460   000EFC  F000               	nop	
  2461                           
  2462                           ;LibLCDXC8.h: 363: break;
  2463   000EFE  0012               	return	
  2464   000F00                     l1000:
  2465   000F00  0E08               	movlw	8
  2466   000F02                     u1197:
  2467   000F02  2EE8               	decfsz	wreg,f,c
  2468   000F04  D7FE               	bra	u1197
  2469   000F06  F000               	nop	
  2470                           
  2471                           ;LibLCDXC8.h: 366: break;
  2472   000F08  0012               	return	
  2473   000F0A                     l1002:
  2474   000F0A  0E03               	movlw	3
  2475   000F0C                     u1207:
  2476   000F0C  2EE8               	decfsz	wreg,f,c
  2477   000F0E  D7FE               	bra	u1207
  2478   000F10  F000               	nop	
  2479                           
  2480                           ;LibLCDXC8.h: 369: break;
  2481   000F12  0012               	return	
  2482   000F14                     l1006:
  2483   000F14  5002               	movf	RetardoLCD@a^0,w,c
  2484                           
  2485                           ; Switch size 1, requested type "simple"
  2486                           ; Number of cases is 4, Range of values is 1 to 4
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte           13     7 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491   000F16  0A01               	xorlw	1	; case 1
  2492   000F18  B4D8               	btfsc	status,2,c
  2493   000F1A  D7E1               	goto	l996
  2494   000F1C  0A03               	xorlw	3	; case 2
  2495   000F1E  B4D8               	btfsc	status,2,c
  2496   000F20  D7E6               	goto	l998
  2497   000F22  0A01               	xorlw	1	; case 3
  2498   000F24  B4D8               	btfsc	status,2,c
  2499   000F26  D7EC               	goto	l1000
  2500   000F28  0A07               	xorlw	7	; case 4
  2501   000F2A  A4D8               	btfss	status,2,c
  2502   000F2C  0012               	return	
  2503   000F2E  D7ED               	goto	l1002
  2504   000F30                     __end_of_RetardoLCD:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function _HabilitaLCD *****************
  2508 ;; Defined at:
  2509 ;;		line 105 in file "LibLCDXC8.h"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_EnviaDato
  2534 ;;		_InicializaLCD
  2535 ;;		_BorraLCD
  2536 ;;		_EscribeLCD_c
  2537 ;;		_DireccionaLCD
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text15
  2542   0010A8                     __ptext15:
  2543                           	callstack 0
  2544   0010A8                     _HabilitaLCD:
  2545                           	callstack 26
  2546                           
  2547                           ;LibLCDXC8.h: 107: LATD3=1;
  2548                           
  2549                           ;incstack = 0
  2550   0010A8  868C               	bsf	3980,3,c	;volatile
  2551                           
  2552                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2553   0010AA  0E03               	movlw	3
  2554   0010AC                     u1217:
  2555   0010AC  2EE8               	decfsz	wreg,f,c
  2556   0010AE  D7FE               	bra	u1217
  2557   0010B0  F000               	nop	
  2558                           
  2559                           ;LibLCDXC8.h: 110: LATD3=0;
  2560   0010B2  968C               	bcf	3980,3,c	;volatile
  2561   0010B4  0012               	return		;funcret
  2562   0010B6                     __end_of_HabilitaLCD:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _ConfiguraLCD *****************
  2566 ;; Defined at:
  2567 ;;		line 54 in file "LibLCDXC8.h"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  a               1    wreg     unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  a               1    0[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0
  2582 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2584 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2585 ;;Total ram usage:        1 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text16
  2596   001050                     __ptext16:
  2597                           	callstack 0
  2598   001050                     _ConfiguraLCD:
  2599                           	callstack 29
  2600                           
  2601                           ;incstack = 0
  2602                           ;ConfiguraLCD@a stored from wreg
  2603   001050  6E01               	movwf	ConfiguraLCD@a^0,c
  2604                           
  2605                           ;LibLCDXC8.h: 55: if(a==4 | a ==8)
  2606   001052  0E04               	movlw	4
  2607   001054  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2608   001056  B4D8               	btfsc	status,2,c
  2609   001058  D004               	goto	u210
  2610   00105A  0E08               	movlw	8
  2611   00105C  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2612   00105E  A4D8               	btfss	status,2,c
  2613   001060  0012               	return	
  2614   001062                     u210:
  2615                           
  2616                           ;LibLCDXC8.h: 56: interfaz=a;
  2617   001062  C001  F042         	movff	ConfiguraLCD@a,_interfaz
  2618   001066  0012               	return		;funcret
  2619   001068                     __end_of_ConfiguraLCD:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _ISR *****************
  2623 ;; Defined at:
  2624 ;;		line 160 in file "PAI.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		Interrupt level 2
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	intcode
  2652   000008                     __pintcode:
  2653                           	callstack 0
  2654   000008                     _ISR:
  2655                           	callstack 25
  2656                           
  2657                           ;incstack = 0
  2658   000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2659   00000A  ED16  F008         	call	int_func,f	;refresh shadow registers
  2660                           
  2661                           	psect	intcode_body
  2662   00102C                     __pintcode_body:
  2663                           	callstack 25
  2664   00102C                     int_func:
  2665                           	callstack 25
  2666   00102C  0006               	pop		; remove dummy address from shadow register refresh
  2667                           
  2668                           ;PAI.c: 163: if(INT0IF==1){
  2669   00102E  A2F2               	btfss	4082,1,c	;volatile
  2670   001030  D003               	goto	i2l1450
  2671                           
  2672                           ;PAI.c: 165: a=0;
  2673   001032  0E00               	movlw	0
  2674   001034  6E41               	movwf	_a^0,c
  2675                           
  2676                           ;PAI.c: 166: INT0IF=0;
  2677   001036  92F2               	bcf	4082,1,c	;volatile
  2678   001038                     i2l1450:
  2679                           
  2680                           ;PAI.c: 167: };PAI.c: 169: if(INT1IF==1){
  2681   001038  A0F0               	btfss	4080,0,c	;volatile
  2682   00103A  D003               	goto	i2l1456
  2683                           
  2684                           ;PAI.c: 171: b=1;
  2685   00103C  0E01               	movlw	1
  2686   00103E  6E3D               	movwf	_b^0,c
  2687                           
  2688                           ;PAI.c: 172: INT1IF=0;
  2689   001040  90F0               	bcf	4080,0,c	;volatile
  2690   001042                     i2l1456:
  2691                           
  2692                           ;PAI.c: 173: };PAI.c: 176: if(INT2IF==1){
  2693   001042  A2F0               	btfss	4080,1,c	;volatile
  2694   001044  D003               	goto	i2l234
  2695                           
  2696                           ;PAI.c: 178: c=1;
  2697   001046  0E01               	movlw	1
  2698   001048  6E3C               	movwf	_c^0,c
  2699                           
  2700                           ;PAI.c: 179: INT2IF=0;
  2701   00104A  92F0               	bcf	4080,1,c	;volatile
  2702   00104C                     i2l234:
  2703   00104C  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2704   00104E  0011               	retfie		f
  2705   001050                     __end_of_ISR:
  2706                           	callstack 0
  2707                           
  2708                           	psect	rparam
  2709   000000                     
  2710                           	psect	temp
  2711   000043                     btemp:
  2712                           	callstack 0
  2713   000043                     	ds	1
  2714   000000                     int$flags	set	btemp
  2715   000000                     wtemp8	set	btemp+1
  2716   000000                     ttemp5	set	btemp+1
  2717   000000                     ttemp6	set	btemp+4
  2718   000000                     ttemp7	set	btemp+8
  2719                           
  2720                           	psect	idloc
  2721                           
  2722                           ;Config register IDLOC0 @ 0x200000
  2723                           ;	unspecified, using default values
  2724   200000                     	org	2097152
  2725   200000  FF                 	db	255
  2726                           
  2727                           ;Config register IDLOC1 @ 0x200001
  2728                           ;	unspecified, using default values
  2729   200001                     	org	2097153
  2730   200001  FF                 	db	255
  2731                           
  2732                           ;Config register IDLOC2 @ 0x200002
  2733                           ;	unspecified, using default values
  2734   200002                     	org	2097154
  2735   200002  FF                 	db	255
  2736                           
  2737                           ;Config register IDLOC3 @ 0x200003
  2738                           ;	unspecified, using default values
  2739   200003                     	org	2097155
  2740   200003  FF                 	db	255
  2741                           
  2742                           ;Config register IDLOC4 @ 0x200004
  2743                           ;	unspecified, using default values
  2744   200004                     	org	2097156
  2745   200004  FF                 	db	255
  2746                           
  2747                           ;Config register IDLOC5 @ 0x200005
  2748                           ;	unspecified, using default values
  2749   200005                     	org	2097157
  2750   200005  FF                 	db	255
  2751                           
  2752                           ;Config register IDLOC6 @ 0x200006
  2753                           ;	unspecified, using default values
  2754   200006                     	org	2097158
  2755   200006  FF                 	db	255
  2756                           
  2757                           ;Config register IDLOC7 @ 0x200007
  2758                           ;	unspecified, using default values
  2759   200007                     	org	2097159
  2760   200007  FF                 	db	255
  2761                           
  2762                           	psect	config
  2763                           
  2764                           ;Config register CONFIG1L @ 0x300000
  2765                           ;	unspecified, using default values
  2766                           ;	PLL Prescaler Selection bits
  2767                           ;	PLLDIV = 0x0, unprogrammed default
  2768                           ;	System Clock Postscaler Selection bits
  2769                           ;	CPUDIV = 0x0, unprogrammed default
  2770                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2771                           ;	USBDIV = 0x0, unprogrammed default
  2772   300000                     	org	3145728
  2773   300000  00                 	db	0
  2774                           
  2775                           ;Config register CONFIG1H @ 0x300001
  2776                           ;	Oscillator Selection bits
  2777                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2778                           ;	Fail-Safe Clock Monitor Enable bit
  2779                           ;	FCMEN = 0x0, unprogrammed default
  2780                           ;	Internal/External Oscillator Switchover bit
  2781                           ;	IESO = 0x0, unprogrammed default
  2782   300001                     	org	3145729
  2783   300001  09                 	db	9
  2784                           
  2785                           ;Config register CONFIG2L @ 0x300002
  2786                           ;	unspecified, using default values
  2787                           ;	Power-up Timer Enable bit
  2788                           ;	PWRT = 0x1, unprogrammed default
  2789                           ;	Brown-out Reset Enable bits
  2790                           ;	BOR = 0x3, unprogrammed default
  2791                           ;	Brown-out Reset Voltage bits
  2792                           ;	BORV = 0x3, unprogrammed default
  2793                           ;	USB Voltage Regulator Enable bit
  2794                           ;	VREGEN = 0x0, unprogrammed default
  2795   300002                     	org	3145730
  2796   300002  1F                 	db	31
  2797                           
  2798                           ;Config register CONFIG2H @ 0x300003
  2799                           ;	Watchdog Timer Enable bit
  2800                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2801                           ;	Watchdog Timer Postscale Select bits
  2802                           ;	WDTPS = 0xF, unprogrammed default
  2803   300003                     	org	3145731
  2804   300003  1E                 	db	30
  2805                           
  2806                           ; Padding undefined space
  2807   300004                     	org	3145732
  2808   300004  FF                 	db	255
  2809                           
  2810                           ;Config register CONFIG3H @ 0x300005
  2811                           ;	unspecified, using default values
  2812                           ;	CCP2 MUX bit
  2813                           ;	CCP2MX = 0x1, unprogrammed default
  2814                           ;	PORTB A/D Enable bit
  2815                           ;	PBADEN = 0x1, unprogrammed default
  2816                           ;	Low-Power Timer 1 Oscillator Enable bit
  2817                           ;	LPT1OSC = 0x0, unprogrammed default
  2818                           ;	MCLR Pin Enable bit
  2819                           ;	MCLRE = 0x1, unprogrammed default
  2820   300005                     	org	3145733
  2821   300005  83                 	db	131
  2822                           
  2823                           ;Config register CONFIG4L @ 0x300006
  2824                           ;	unspecified, using default values
  2825                           ;	Stack Full/Underflow Reset Enable bit
  2826                           ;	STVREN = 0x1, unprogrammed default
  2827                           ;	Single-Supply ICSP Enable bit
  2828                           ;	LVP = 0x1, unprogrammed default
  2829                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2830                           ;	ICPRT = 0x0, unprogrammed default
  2831                           ;	Extended Instruction Set Enable bit
  2832                           ;	XINST = 0x0, unprogrammed default
  2833                           ;	Background Debugger Enable bit
  2834                           ;	DEBUG = 0x1, unprogrammed default
  2835   300006                     	org	3145734
  2836   300006  85                 	db	133
  2837                           
  2838                           ; Padding undefined space
  2839   300007                     	org	3145735
  2840   300007  FF                 	db	255
  2841                           
  2842                           ;Config register CONFIG5L @ 0x300008
  2843                           ;	unspecified, using default values
  2844                           ;	Code Protection bit
  2845                           ;	CP0 = 0x1, unprogrammed default
  2846                           ;	Code Protection bit
  2847                           ;	CP1 = 0x1, unprogrammed default
  2848                           ;	Code Protection bit
  2849                           ;	CP2 = 0x1, unprogrammed default
  2850                           ;	Code Protection bit
  2851                           ;	CP3 = 0x1, unprogrammed default
  2852   300008                     	org	3145736
  2853   300008  0F                 	db	15
  2854                           
  2855                           ;Config register CONFIG5H @ 0x300009
  2856                           ;	unspecified, using default values
  2857                           ;	Boot Block Code Protection bit
  2858                           ;	CPB = 0x1, unprogrammed default
  2859                           ;	Data EEPROM Code Protection bit
  2860                           ;	CPD = 0x1, unprogrammed default
  2861   300009                     	org	3145737
  2862   300009  C0                 	db	192
  2863                           
  2864                           ;Config register CONFIG6L @ 0x30000A
  2865                           ;	unspecified, using default values
  2866                           ;	Write Protection bit
  2867                           ;	WRT0 = 0x1, unprogrammed default
  2868                           ;	Write Protection bit
  2869                           ;	WRT1 = 0x1, unprogrammed default
  2870                           ;	Write Protection bit
  2871                           ;	WRT2 = 0x1, unprogrammed default
  2872                           ;	Write Protection bit
  2873                           ;	WRT3 = 0x1, unprogrammed default
  2874   30000A                     	org	3145738
  2875   30000A  0F                 	db	15
  2876                           
  2877                           ;Config register CONFIG6H @ 0x30000B
  2878                           ;	unspecified, using default values
  2879                           ;	Configuration Register Write Protection bit
  2880                           ;	WRTC = 0x1, unprogrammed default
  2881                           ;	Boot Block Write Protection bit
  2882                           ;	WRTB = 0x1, unprogrammed default
  2883                           ;	Data EEPROM Write Protection bit
  2884                           ;	WRTD = 0x1, unprogrammed default
  2885   30000B                     	org	3145739
  2886   30000B  E0                 	db	224
  2887                           
  2888                           ;Config register CONFIG7L @ 0x30000C
  2889                           ;	unspecified, using default values
  2890                           ;	Table Read Protection bit
  2891                           ;	EBTR0 = 0x1, unprogrammed default
  2892                           ;	Table Read Protection bit
  2893                           ;	EBTR1 = 0x1, unprogrammed default
  2894                           ;	Table Read Protection bit
  2895                           ;	EBTR2 = 0x1, unprogrammed default
  2896                           ;	Table Read Protection bit
  2897                           ;	EBTR3 = 0x1, unprogrammed default
  2898   30000C                     	org	3145740
  2899   30000C  0F                 	db	15
  2900                           
  2901                           ;Config register CONFIG7H @ 0x30000D
  2902                           ;	unspecified, using default values
  2903                           ;	Boot Block Table Read Protection bit
  2904                           ;	EBTRB = 0x1, unprogrammed default
  2905   30000D                     	org	3145741
  2906   30000D  40                 	db	64
  2907                           tosu	equ	0xFFF
  2908                           tosh	equ	0xFFE
  2909                           tosl	equ	0xFFD
  2910                           stkptr	equ	0xFFC
  2911                           pclatu	equ	0xFFB
  2912                           pclath	equ	0xFFA
  2913                           pcl	equ	0xFF9
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           indf0	equ	0xFEF
  2921                           postinc0	equ	0xFEE
  2922                           postdec0	equ	0xFED
  2923                           preinc0	equ	0xFEC
  2924                           plusw0	equ	0xFEB
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           indf1	equ	0xFE7
  2929                           postinc1	equ	0xFE6
  2930                           postdec1	equ	0xFE5
  2931                           preinc1	equ	0xFE4
  2932                           plusw1	equ	0xFE3
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           bsr	equ	0xFE0
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           preinc2	equ	0xFDC
  2940                           plusw2	equ	0xFDB
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8

Data Sizes:
    Strings     183
    Constant    0
    Data        1
    BSS         19
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    Mensaje_LCD_Var_Centrado@a	PTR unsigned char  size(1) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[15]), STR_11(CODE[19]), STR_10(CODE[3]), STR_9(CODE[10]), 
		 -> STR_8(CODE[3]), STR_7(CODE[12]), STR_6(CODE[22]), STR_5(CODE[2]), 
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[18]), STR_1(CODE[13]), 

    Mensaje_LCD_Var_Mensaje20x4@d	PTR unsigned char  size(1) Largest target is 15
		 -> STR_20(CODE[3]), STR_16(CODE[3]), STR_12(CODE[15]), STR_8(CODE[3]), 
		 -> STR_4(CODE[7]), 

    Mensaje_LCD_Var_Mensaje20x4@c	PTR unsigned char  size(1) Largest target is 19
		 -> STR_19(CODE[2]), STR_15(CODE[2]), STR_11(CODE[19]), STR_7(CODE[12]), 
		 -> STR_3(CODE[5]), 

    Mensaje_LCD_Var_Mensaje20x4@b	PTR unsigned char  size(1) Largest target is 22
		 -> STR_18(CODE[11]), STR_14(CODE[14]), STR_10(CODE[3]), STR_6(CODE[22]), 
		 -> STR_2(CODE[18]), 

    Mensaje_LCD_Var_Mensaje20x4@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_17(CODE[15]), STR_13(CODE[16]), STR_9(CODE[10]), STR_5(CODE[2]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft
    _Mensaje_LCD_Var_Mensaje20x4->_Mensaje_LCD_Var_Centrado
    _Mensaje_LCD_Var_Centrado->___awdiv
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9857
                                             42 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
        _Mensaje_LCD_Var_Mensaje20x4
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2788
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     454
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3498
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2766
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Mensaje_LCD_Var_Mensaje20x4                          4     0      4    2922
                                             12 COMRAM     4     0      4
                           _BorraLCD
                      _DireccionaLCD
           _Mensaje_LCD_Var_Centrado
 ---------------------------------------------------------------------------------
 (2) _Mensaje_LCD_Var_Centrado                             4     3      1    1149
                                              8 COMRAM     4     3      1
                       _EscribeLCD_c
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Mensaje_LCD_Var_Mensaje20x4
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _Mensaje_LCD_Var_Centrado
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       ___awdiv
       _strlen
   ___ftmul
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
     ___lbtoft (ARG)
   ___lbtoft

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      42       1       70.2%
BITBIGSFRhlhll      24      0       0      25        0.0%
BITBIGSFRhhhll      23      0       0      21        0.0%
BITBIGSFRll         21      0       0      29        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlhh         8      0       0      27        0.0%
BITBIGSFRhhl         8      0       0      22        0.0%
BITBIGSFRhlll        6      0       0      26        0.0%
BITBIGSFRhlhh        2      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRhlhlh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      30        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 08 10:20:16 2023

                                  _a 0041                                    _b 003D  
                                  _c 003C                                    _d 0040  
                       ___awdiv@sign 0006                           EnviaDato@a 0004  
                                l205 097C                        _InicializaLCD 0D50  
                                l214 09F6                                  l209 09B6  
                                l219 0A4E                                  _GIE 7F97  
                                l996 0EDE                                  l998 0EEE  
                                _RB0 7C08                                  _RB3 7C0B  
                                _RD0 7C18                                  _RD1 7C19  
                                u210 1062                                  _PR2 0FCB  
                                _ISR 0008                                  u801 0AEC  
                                u730 0CB2                                  u821 0B14  
                                u670 0E32                                  u920 0C7A  
                                u770 0D30                                  u940 0904  
                                u861 0BE0                                  u870 0BEA  
                                u950 0906                                  u880 0C1A  
                                u960 0910                                  u970 0912  
                                u980 0936                                  u885 0C12  
                                u990 0938                                  wreg 0FE8  
                               ?_ISR 0001                                 l1000 0F00  
                               l1002 0F0A                                 l1006 0F14  
                               l1018 0F68                                 l1204 0DD6  
                               l1164 0D62                                 l1174 0D80  
                               l1184 0D9E                                 l1512 0E66  
                               l1504 0E4E                                 l1522 0EA2  
                               l1508 0E58                                 l1532 0EC6  
                               l1612 0B6E                                 l1526 0EAA  
                               l1550 0CFE                                 l1542 0CC0  
                               l1622 0B96                                 l1480 0E00  
                               l1464 0FE6                                 l1528 0EB4  
                               l1552 0D1C                                 l1544 0CCA  
                               l1608 0B5E                                 l1800 0ABA  
                               l1466 0FE8                                 l1554 0D26  
                               l1546 0CE8                                 l1618 0B86  
                               l1714 092E                                 l1492 0E26  
                               l1636 0BFC                                 l1740 09B2  
                               l1732 09A4                                 l1494 0E2E  
                               l1486 0E10                                 l1654 0C50  
                               l1718 0948                                 l1672 0C90  
                               l1664 0C68                                 l1594 0B2C  
                               l1666 0C74                                 l1658 0C60  
                               l1770 0A2A                                 l1588 0B04  
                               l1748 09E2                                 l1776 0A3E  
                               l1786 0AA2                                 l1796 0AB4  
                               STR_1 0878                                 STR_2 082A  
                               STR_3 08AD                                 STR_4 08A6  
                               STR_5 08B3                                 STR_6 0801  
                               STR_7 0885                                 STR_8 08B2  
                               STR_9 089C                                 u1000 0942  
                               u1010 0944                                 u1030 09AE  
                               u1207 0F0C                                 u1217 10AC  
                               u1090 0A34                                 u1147 0924  
                               u1157 096E                                 u1167 0EE4  
                               _LATD 0F8C                                 u1177 0EF0  
                               u1187 0EF8                                 u1197 0F02  
                               _PEIE 7F96                                 _RBPU 7F8F  
                               _TMR2 0FCC                       ??_EscribeLCD_c 0005  
                               _Duty 0033                                 _main 08BA  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               btemp 0043                                 start 000E  
                       ___ftmul@cntr 001A                         ___param_bank 0000  
                       ___ftmul@sign 001B                                ??_ISR 0001  
                       ___fttol@exp1 002A           ??_Mensaje_LCD_Var_Centrado 000A  
                       ___fttol@lval 0026                       ?_InicializaLCD 0001  
                              ?_main 0001                      __end_of___awdiv 0E70  
                              STR_10 08B2                                STR_11 0817  
                              STR_20 08B5                                STR_12 085B  
                              STR_13 083C                                STR_14 086A  
                              STR_15 08B3                                STR_16 08B5  
                              STR_17 084C                                STR_18 0891  
                              STR_19 08B3                        EscribeLCD_c@a 0005  
                    __end_of___ftmul 0BD0                      ___awdiv@divisor 0003  
                    __end_of___fttol 0CA2                                _T2CON 0FCA  
                              _LATD2 7C62                                _LATD3 7C63  
                              i2l234 104C                      ___awdiv@counter 0005  
                              _TRISB 0F93                                _TRISD 0F95  
                              _DutyF 0036                                _DutyI 0039  
                      ___ftpack@sign 0005                                tablat 0FF5  
                        _HabilitaLCD 10A8                                ttemp5 0044  
                              ttemp6 0047                                ttemp7 004B  
                              status 0FD8                                wtemp8 0044  
                   __end_of_BorraLCD 10A8                      __initialization 0FB4  
                       __end_of_main 0ADC                               ??_main 002B  
               __end_of_ConfiguraLCD 1068                        ___fttol@sign1 0025  
                      __activetblptr 0002            Mensaje_LCD_Var_Centrado@a 0009  
          Mensaje_LCD_Var_Centrado@i 000C            Mensaje_LCD_Var_Centrado@l 000A  
          Mensaje_LCD_Var_Centrado@n 000B                               _ADCON1 0FC1  
                     DireccionaLCD@a 0005                               _CCPR1L 0FBE  
                             _CCPR2L 0FBB                     ___awdiv@dividend 0001  
                   __end_of___ftpack 0D50                     __end_of___lbtoft 102C  
                             _INT0IE 7F94                               _INT0IF 7F91  
                             _INT1IE 7F83                               _INT1IF 7F80  
                             _INT2IE 7F84                               _INT2IF 7F81  
                             i2l1450 1038                               i2l1456 1042  
                             _TMR2ON 7E52                               _TRISC1 7CA1  
                             _TRISC2 7CA2                __end_of_DireccionaLCD 1094  
                         _RetardoLCD 0EDA                               _DutyF2 002D  
                          ??___awdiv 0005                            ??___ftmul 0013  
                          ??___fttol 0020                      ??_InicializaLCD 0005  
                             clear_0 0FCC                     ___awdiv@quotient 0007  
                             isa$std 0001                 __end_of_EscribeLCD_c 107E  
                             _strlen 0FE0                ___ftmul@f3_as_product 0017  
                       __pdataCOMRAM 0042                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                           __accesstop 0060  
            __end_of__initialization 0FD2                        ___rparam_used 0001  
                         ___lbtoft@c 000C                           ___ftmul@f1 000D  
                         ___ftmul@f2 0010                           ___fttol@f1 001C  
       ?_Mensaje_LCD_Var_Mensaje20x4 000D                       __pcstackCOMRAM 0001  
                        _EstadosPrev 003E                    __end_of_EnviaDato 0F76  
                          ?_BorraLCD 0001                           __pnvCOMRAM 0040  
                        ?_RetardoLCD 0001                          RetardoLCD@a 0002  
      ??_Mensaje_LCD_Var_Mensaje20x4 0011                              _CCP1CON 0FBD  
                            _CCP2CON 0FBA                            ?___ftpack 0001  
                          ?___lbtoft 0009                              ?_strlen 0001  
                         ??_BorraLCD 0005                         ?_HabilitaLCD 0001  
                       _ConfiguraLCD 1050                              _Estados 003F  
                            __Hparam 0000                              __Lparam 0000  
                            ___awdiv 0DEC                              ___ftmul 0ADC  
                            ___fttol 0BD0                         __psmallconst 0800  
                            __pcinit 0FB4                           ??___ftpack 0006  
                         ??___lbtoft 000C                              __ramtop 0800  
                            __ptext0 08BA                              __ptext1 1008  
                            __ptext2 0BD0                              __ptext3 0ADC  
                            __ptext4 0CA2                              __ptext5 0F76  
                            __ptext6 0E70                              __ptext7 0FE0  
                            __ptext8 0DEC                              __ptext9 1068  
          ?_Mensaje_LCD_Var_Centrado 0009                       __pintcode_body 102C  
               end_of_initialization 0FD2                        __Lmediumconst 0000  
                            int_func 102C                         _EscribeLCD_c 1068  
                            postinc0 0FEE                              strlen@s 0001  
                          _DeltaDuty 0030                          ___ftmul@exp 0016  
                      __pidataCOMRAM 10B6                __end_of_InicializaLCD 0DEC  
                          _EnviaDato 0F30                       __end_of_strlen 1008  
                start_initialization 0FB4                          __end_of_ISR 1050  
                       ??_RetardoLCD 0001                             ??_strlen 0003  
       Mensaje_LCD_Var_Mensaje20x4@a 000D         Mensaje_LCD_Var_Mensaje20x4@b 000E  
       Mensaje_LCD_Var_Mensaje20x4@c 000F         Mensaje_LCD_Var_Mensaje20x4@d 0010  
                         ?_EnviaDato 0001                          __pbssCOMRAM 002D  
                 __end_of_RetardoLCD 0F30                        _DireccionaLCD 107E  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___ftmul 000D                             ?___fttol 001C  
   __end_of_Mensaje_LCD_Var_Centrado 0EDA                          __smallconst 0800  
                     ?_DireccionaLCD 0001  __end_of_Mensaje_LCD_Var_Mensaje20x4 0FB4  
        _Mensaje_LCD_Var_Mensaje20x4 0F76                          ??_EnviaDato 0003  
                           _BorraLCD 1094                             __Hrparam 0000  
                           __Lrparam 0000                             ___ftpack 0CA2  
                           ___lbtoft 1008                        ConfiguraLCD@a 0001  
           _Mensaje_LCD_Var_Centrado 0E70                             __ptext10 107E  
                           __ptext11 0D50                             __ptext12 1094  
                           __ptext13 0F30                             __ptext14 0EDA  
                           __ptext15 10A8                             __ptext16 1050  
                    ??_DireccionaLCD 0005                             _interfaz 0042  
                           isa$xinst 0000                             int$flags 0043  
                           intlevel2 0000                        ??_HabilitaLCD 0001  
                      ?_ConfiguraLCD 0001                             strlen@cp 0003  
                     ??_ConfiguraLCD 0001                        ?_EscribeLCD_c 0001  
                __end_of_HabilitaLCD 10B6  
