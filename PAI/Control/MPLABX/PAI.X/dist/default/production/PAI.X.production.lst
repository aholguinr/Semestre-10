

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 22 21:22:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 09/02/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   001812                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _ts
    88   001812  0014               	dw	20
    89                           
    90                           ;initializer for _len
    91   001814  00FB               	dw	251
    92                           
    93                           ;initializer for _interfaz
    94   001816  08                 	db	8
    95                           
    96                           	psect	idataBIGRAM
    97   000C52                     __pidataBIGRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _Vals24
   101   000C52  0000               	dw	0
   102   000C54  0000               	dw	0
   103   000C56  0000               	dw	0
   104   000C58  0000               	dw	0
   105   000C5A  0000               	dw	0
   106   000C5C  0000               	dw	0
   107   000C5E  0000               	dw	0
   108   000C60  0000               	dw	0
   109   000C62  0000               	dw	0
   110   000C64  0000               	dw	0
   111   000C66  0000               	dw	0
   112   000C68  0000               	dw	0
   113   000C6A  0000               	dw	0
   114   000C6C  0000               	dw	0
   115   000C6E  0000               	dw	0
   116   000C70  0000               	dw	0
   117   000C72  0001               	dw	1
   118   000C74  0001               	dw	1
   119   000C76  0001               	dw	1
   120   000C78  0001               	dw	1
   121   000C7A  0001               	dw	1
   122   000C7C  0001               	dw	1
   123   000C7E  0001               	dw	1
   124   000C80  0002               	dw	2
   125   000C82  0002               	dw	2
   126   000C84  0002               	dw	2
   127   000C86  0002               	dw	2
   128   000C88  0003               	dw	3
   129   000C8A  0003               	dw	3
   130   000C8C  0003               	dw	3
   131   000C8E  0004               	dw	4
   132   000C90  0004               	dw	4
   133   000C92  0004               	dw	4
   134   000C94  0005               	dw	5
   135   000C96  0005               	dw	5
   136   000C98  0005               	dw	5
   137   000C9A  0006               	dw	6
   138   000C9C  0006               	dw	6
   139   000C9E  0007               	dw	7
   140   000CA0  0007               	dw	7
   141   000CA2  0008               	dw	8
   142   000CA4  0008               	dw	8
   143   000CA6  0009               	dw	9
   144   000CA8  000A               	dw	10
   145   000CAA  000A               	dw	10
   146   000CAC  000B               	dw	11
   147   000CAE  000C               	dw	12
   148   000CB0  000C               	dw	12
   149   000CB2  000D               	dw	13
   150   000CB4  000E               	dw	14
   151   000CB6  000E               	dw	14
   152   000CB8  000F               	dw	15
   153   000CBA  0010               	dw	16
   154   000CBC  0011               	dw	17
   155   000CBE  0012               	dw	18
   156   000CC0  0013               	dw	19
   157   000CC2  0013               	dw	19
   158   000CC4  0014               	dw	20
   159   000CC6  0015               	dw	21
   160   000CC8  0016               	dw	22
   161   000CCA  0017               	dw	23
   162   000CCC  0018               	dw	24
   163   000CCE  0019               	dw	25
   164   000CD0  001A               	dw	26
   165   000CD2  001B               	dw	27
   166   000CD4  001C               	dw	28
   167   000CD6  001E               	dw	30
   168   000CD8  001F               	dw	31
   169   000CDA  0020               	dw	32
   170   000CDC  0021               	dw	33
   171   000CDE  0022               	dw	34
   172   000CE0  0023               	dw	35
   173   000CE2  0025               	dw	37
   174   000CE4  0026               	dw	38
   175   000CE6  0027               	dw	39
   176   000CE8  0029               	dw	41
   177   000CEA  002A               	dw	42
   178   000CEC  002B               	dw	43
   179   000CEE  002D               	dw	45
   180   000CF0  002E               	dw	46
   181   000CF2  002F               	dw	47
   182   000CF4  0031               	dw	49
   183   000CF6  0032               	dw	50
   184   000CF8  0034               	dw	52
   185   000CFA  0035               	dw	53
   186   000CFC  0037               	dw	55
   187   000CFE  0038               	dw	56
   188   000D00  003A               	dw	58
   189   000D02  003B               	dw	59
   190   000D04  003D               	dw	61
   191   000D06  003E               	dw	62
   192   000D08  0040               	dw	64
   193   000D0A  0042               	dw	66
   194   000D0C  0043               	dw	67
   195   000D0E  0045               	dw	69
   196   000D10  0047               	dw	71
   197   000D12  0048               	dw	72
   198   000D14  004A               	dw	74
   199   000D16  004C               	dw	76
   200   000D18  004D               	dw	77
   201   000D1A  004F               	dw	79
   202   000D1C  0051               	dw	81
   203   000D1E  0053               	dw	83
   204   000D20  0054               	dw	84
   205   000D22  0056               	dw	86
   206   000D24  0058               	dw	88
   207   000D26  005A               	dw	90
   208   000D28  005B               	dw	91
   209   000D2A  005D               	dw	93
   210   000D2C  005F               	dw	95
   211   000D2E  0061               	dw	97
   212   000D30  0063               	dw	99
   213   000D32  0064               	dw	100
   214   000D34  0066               	dw	102
   215   000D36  0068               	dw	104
   216   000D38  006A               	dw	106
   217   000D3A  006C               	dw	108
   218   000D3C  006E               	dw	110
   219   000D3E  006F               	dw	111
   220   000D40  0071               	dw	113
   221   000D42  0073               	dw	115
   222   000D44  0075               	dw	117
   223   000D46  0077               	dw	119
   224   000D48  0079               	dw	121
   225   000D4A  007B               	dw	123
   226   000D4C  007C               	dw	124
   227   000D4E  007E               	dw	126
   228   000D50  0080               	dw	128
   229   000D52  0082               	dw	130
   230   000D54  0084               	dw	132
   231   000D56  0086               	dw	134
   232   000D58  0088               	dw	136
   233   000D5A  008A               	dw	138
   234   000D5C  008B               	dw	139
   235   000D5E  008D               	dw	141
   236   000D60  008F               	dw	143
   237   000D62  0091               	dw	145
   238   000D64  0093               	dw	147
   239   000D66  0095               	dw	149
   240   000D68  0096               	dw	150
   241   000D6A  0098               	dw	152
   242   000D6C  009A               	dw	154
   243   000D6E  009C               	dw	156
   244   000D70  009E               	dw	158
   245   000D72  009F               	dw	159
   246   000D74  00A1               	dw	161
   247   000D76  00A3               	dw	163
   248   000D78  00A5               	dw	165
   249   000D7A  00A6               	dw	166
   250   000D7C  00A8               	dw	168
   251   000D7E  00AA               	dw	170
   252   000D80  00AC               	dw	172
   253   000D82  00AD               	dw	173
   254   000D84  00AF               	dw	175
   255   000D86  00B1               	dw	177
   256   000D88  00B2               	dw	178
   257   000D8A  00B4               	dw	180
   258   000D8C  00B6               	dw	182
   259   000D8E  00B7               	dw	183
   260   000D90  00B9               	dw	185
   261   000D92  00BB               	dw	187
   262   000D94  00BC               	dw	188
   263   000D96  00BE               	dw	190
   264   000D98  00BF               	dw	191
   265   000D9A  00C1               	dw	193
   266   000D9C  00C2               	dw	194
   267   000D9E  00C4               	dw	196
   268   000DA0  00C5               	dw	197
   269   000DA2  00C7               	dw	199
   270   000DA4  00C8               	dw	200
   271   000DA6  00CA               	dw	202
   272   000DA8  00CB               	dw	203
   273   000DAA  00CC               	dw	204
   274   000DAC  00CE               	dw	206
   275   000DAE  00CF               	dw	207
   276   000DB0  00D0               	dw	208
   277   000DB2  00D2               	dw	210
   278   000DB4  00D3               	dw	211
   279   000DB6  00D4               	dw	212
   280   000DB8  00D6               	dw	214
   281   000DBA  00D7               	dw	215
   282   000DBC  00D8               	dw	216
   283   000DBE  00D9               	dw	217
   284   000DC0  00DA               	dw	218
   285   000DC2  00DB               	dw	219
   286   000DC4  00DD               	dw	221
   287   000DC6  00DE               	dw	222
   288   000DC8  00DF               	dw	223
   289   000DCA  00E0               	dw	224
   290   000DCC  00E1               	dw	225
   291   000DCE  00E2               	dw	226
   292   000DD0  00E3               	dw	227
   293   000DD2  00E4               	dw	228
   294   000DD4  00E5               	dw	229
   295   000DD6  00E6               	dw	230
   296   000DD8  00E6               	dw	230
   297   000DDA  00E7               	dw	231
   298   000DDC  00E8               	dw	232
   299   000DDE  00E9               	dw	233
   300   000DE0  00EA               	dw	234
   301   000DE2  00EB               	dw	235
   302   000DE4  00EB               	dw	235
   303   000DE6  00EC               	dw	236
   304   000DE8  00ED               	dw	237
   305   000DEA  00ED               	dw	237
   306   000DEC  00EE               	dw	238
   307   000DEE  00EF               	dw	239
   308   000DF0  00EF               	dw	239
   309   000DF2  00F0               	dw	240
   310   000DF4  00F1               	dw	241
   311   000DF6  00F1               	dw	241
   312   000DF8  00F2               	dw	242
   313   000DFA  00F2               	dw	242
   314   000DFC  00F3               	dw	243
   315   000DFE  00F3               	dw	243
   316   000E00  00F4               	dw	244
   317   000E02  00F4               	dw	244
   318   000E04  00F4               	dw	244
   319   000E06  00F5               	dw	245
   320   000E08  00F5               	dw	245
   321   000E0A  00F5               	dw	245
   322   000E0C  00F6               	dw	246
   323   000E0E  00F6               	dw	246
   324   000E10  00F6               	dw	246
   325   000E12  00F7               	dw	247
   326   000E14  00F7               	dw	247
   327   000E16  00F7               	dw	247
   328   000E18  00F7               	dw	247
   329   000E1A  00F8               	dw	248
   330   000E1C  00F8               	dw	248
   331   000E1E  00F8               	dw	248
   332   000E20  00F8               	dw	248
   333   000E22  00F8               	dw	248
   334   000E24  00F8               	dw	248
   335   000E26  00F8               	dw	248
   336   000E28  00F9               	dw	249
   337   000E2A  00F9               	dw	249
   338   000E2C  00F9               	dw	249
   339   000E2E  00F9               	dw	249
   340   000E30  00F9               	dw	249
   341   000E32  00F9               	dw	249
   342   000E34  00F9               	dw	249
   343   000E36  00F9               	dw	249
   344   000E38  00F9               	dw	249
   345   000E3A  00F9               	dw	249
   346   000E3C  00F9               	dw	249
   347   000E3E  00F9               	dw	249
   348   000E40  00F9               	dw	249
   349   000E42  00F9               	dw	249
   350   000E44  00F9               	dw	249
   351   000E46  00F9               	dw	249
   352   000000                     _RBPU	set	32655
   353   000000                     _TRISC1	set	31905
   354                           
   355                           	psect	nvCOMRAM
   356   000050                     __pnvCOMRAM:
   357                           	callstack 0
   358   000050                     _a:
   359                           	callstack 0
   360   000050                     	ds	1
   361   000000                     _GO	set	32273
   362   000000                     _RD1	set	31769
   363   000000                     _PEIE	set	32662
   364   000000                     _GIE	set	32663
   365   000000                     _INT2IE	set	32644
   366   000000                     _INT2IF	set	32641
   367   000000                     _INT1IE	set	32643
   368   000000                     _INT0IE	set	32660
   369   000000                     _TRISC2	set	31906
   370   000000                     _TMR2ON	set	32338
   371   000000                     _IRCF0	set	32412
   372   000000                     _IRCF1	set	32413
   373   000000                     _LATD3	set	31843
   374   000000                     _LATD2	set	31842
   375   000000                     _LATD	set	3980
   376   000000                     _RB0	set	31752
   377   000000                     _TRISB	set	3987
   378   000000                     _TRISD	set	3989
   379   000000                     _ADCON2	set	4032
   380   000000                     _ADCON1	set	4033
   381   000000                     _ADCON0	set	4034
   382   000000                     _IRCF2	set	32414
   383   000000                     _INT1IF	set	32640
   384   000000                     _INT0IF	set	32657
   385   000000                     _ADRES	set	4035
   386   000000                     _T2CON	set	4042
   387   000000                     _PR2	set	4043
   388   000000                     _CCP2CON	set	4026
   389   000000                     _CCP1CON	set	4029
   390   000000                     _RCIE	set	31981
   391   000000                     _CCPR1L	set	4030
   392   000000                     _CCPR2L	set	4027
   393   000000                     _TMR2	set	4044
   394   000000                     _RCIF	set	31989
   395   000000                     _RD0	set	31768
   396                           
   397                           	psect	smallconst
   398   000800                     __psmallconst:
   399                           	callstack 0
   400   000800  00                 	db	0
   401   000801                     STR_11:
   402   000801  52                 	db	82	;'R'
   403   000802  65                 	db	101	;'e'
   404   000803  76                 	db	118	;'v'
   405   000804  69                 	db	105	;'i'
   406   000805  73                 	db	115	;'s'
   407   000806  65                 	db	101	;'e'
   408   000807  20                 	db	32
   409   000808  6C                 	db	108	;'l'
   410   000809  61                 	db	97	;'a'
   411   00080A  20                 	db	32
   412   00080B  63                 	db	99	;'c'
   413   00080C  6F                 	db	111	;'o'
   414   00080D  6E                 	db	110	;'n'
   415   00080E  65                 	db	101	;'e'
   416   00080F  78                 	db	120	;'x'
   417   000810  69                 	db	105	;'i'
   418   000811  6F                 	db	111	;'o'
   419   000812  6E                 	db	110	;'n'
   420   000813  20                 	db	32
   421   000814  61                 	db	97	;'a'
   422   000815  20                 	db	32
   423   000816  00                 	db	0
   424   000817                     STR_1:
   425   000817  20                 	db	32
   426   000818  20                 	db	32
   427   000819  20                 	db	32
   428   00081A  20                 	db	32
   429   00081B  20                 	db	32
   430   00081C  20                 	db	32
   431   00081D  20                 	db	32
   432   00081E  20                 	db	32
   433   00081F  20                 	db	32
   434   000820  20                 	db	32
   435   000821  20                 	db	32
   436   000822  20                 	db	32
   437   000823  20                 	db	32
   438   000824  20                 	db	32
   439   000825  20                 	db	32
   440   000826  20                 	db	32
   441   000827  20                 	db	32
   442   000828  20                 	db	32
   443   000829  20                 	db	32
   444   00082A  20                 	db	32
   445   00082B  00                 	db	0
   446   00082C                     STR_16:
   447   00082C  41                 	db	65	;'A'
   448   00082D  63                 	db	99	;'c'
   449   00082E  74                 	db	116	;'t'
   450   00082F  69                 	db	105	;'i'
   451   000830  76                 	db	118	;'v'
   452   000831  65                 	db	101	;'e'
   453   000832  20                 	db	32
   454   000833  65                 	db	101	;'e'
   455   000834  6C                 	db	108	;'l'
   456   000835  20                 	db	32
   457   000836  70                 	db	112	;'p'
   458   000837  75                 	db	117	;'u'
   459   000838  6C                 	db	108	;'l'
   460   000839  73                 	db	115	;'s'
   461   00083A  61                 	db	97	;'a'
   462   00083B  64                 	db	100	;'d'
   463   00083C  6F                 	db	111	;'o'
   464   00083D  72                 	db	114	;'r'
   465   00083E  00                 	db	0
   466   00083F                     STR_3:
   467   00083F  45                 	db	69	;'E'
   468   000840  73                 	db	115	;'s'
   469   000841  70                 	db	112	;'p'
   470   000842  65                 	db	101	;'e'
   471   000843  72                 	db	114	;'r'
   472   000844  65                 	db	101	;'e'
   473   000845  20                 	db	32
   474   000846  75                 	db	117	;'u'
   475   000847  6E                 	db	110	;'n'
   476   000848  20                 	db	32
   477   000849  6D                 	db	109	;'m'
   478   00084A  6F                 	db	111	;'o'
   479   00084B  6D                 	db	109	;'m'
   480   00084C  65                 	db	101	;'e'
   481   00084D  6E                 	db	110	;'n'
   482   00084E  74                 	db	116	;'t'
   483   00084F  6F                 	db	111	;'o'
   484   000850  00                 	db	0
   485   000851                     STR_23:
   486   000851  50                 	db	80	;'P'
   487   000852  72                 	db	114	;'r'
   488   000853  65                 	db	101	;'e'
   489   000854  6E                 	db	110	;'n'
   490   000855  64                 	db	100	;'d'
   491   000856  69                 	db	105	;'i'
   492   000857  65                 	db	101	;'e'
   493   000858  6E                 	db	110	;'n'
   494   000859  64                 	db	100	;'d'
   495   00085A  6F                 	db	111	;'o'
   496   00085B  20                 	db	32
   497   00085C  4D                 	db	77	;'M'
   498   00085D  6F                 	db	111	;'o'
   499   00085E  74                 	db	116	;'t'
   500   00085F  6F                 	db	111	;'o'
   501   000860  72                 	db	114	;'r'
   502   000861  00                 	db	0
   503   000862                     STR_18:
   504   000862  53                 	db	83	;'S'
   505   000863  65                 	db	101	;'e'
   506   000864  6C                 	db	108	;'l'
   507   000865  65                 	db	101	;'e'
   508   000866  63                 	db	99	;'c'
   509   000867  63                 	db	99	;'c'
   510   000868  69                 	db	105	;'i'
   511   000869  6F                 	db	111	;'o'
   512   00086A  6E                 	db	110	;'n'
   513   00086B  65                 	db	101	;'e'
   514   00086C  20                 	db	32
   515   00086D  75                 	db	117	;'u'
   516   00086E  6E                 	db	110	;'n'
   517   00086F  20                 	db	32
   518   000870  25                 	db	37
   519   000871  00                 	db	0
   520   000872                     STR_26:
   521   000872  4D                 	db	77	;'M'
   522   000873  6F                 	db	111	;'o'
   523   000874  74                 	db	116	;'t'
   524   000875  6F                 	db	111	;'o'
   525   000876  72                 	db	114	;'r'
   526   000877  20                 	db	32
   527   000878  70                 	db	112	;'p'
   528   000879  72                 	db	114	;'r'
   529   00087A  65                 	db	101	;'e'
   530   00087B  6E                 	db	110	;'n'
   531   00087C  64                 	db	100	;'d'
   532   00087D  69                 	db	105	;'i'
   533   00087E  64                 	db	100	;'d'
   534   00087F  6F                 	db	111	;'o'
   535   000880  00                 	db	0
   536   000881                     STR_17:
   537   000881  70                 	db	112	;'p'
   538   000882  61                 	db	97	;'a'
   539   000883  72                 	db	114	;'r'
   540   000884  61                 	db	97	;'a'
   541   000885  20                 	db	32
   542   000886  61                 	db	97	;'a'
   543   000887  6A                 	db	106	;'j'
   544   000888  75                 	db	117	;'u'
   545   000889  73                 	db	115	;'s'
   546   00088A  74                 	db	116	;'t'
   547   00088B  61                 	db	97	;'a'
   548   00088C  72                 	db	114	;'r'
   549   00088D  6C                 	db	108	;'l'
   550   00088E  6F                 	db	111	;'o'
   551   00088F  00                 	db	0
   552   000890                     STR_19:
   553   000890  64                 	db	100	;'d'
   554   000891  65                 	db	101	;'e'
   555   000892  20                 	db	32
   556   000893  6F                 	db	111	;'o'
   557   000894  70                 	db	112	;'p'
   558   000895  65                 	db	101	;'e'
   559   000896  72                 	db	114	;'r'
   560   000897  61                 	db	97	;'a'
   561   000898  63                 	db	99	;'c'
   562   000899  69                 	db	105	;'i'
   563   00089A  6F                 	db	111	;'o'
   564   00089B  6E                 	db	110	;'n'
   565   00089C  3A                 	db	58	;':'
   566   00089D  00                 	db	0
   567   00089E                     STR_6:
   568   00089E  43                 	db	67	;'C'
   569   00089F  6F                 	db	111	;'o'
   570   0008A0  72                 	db	114	;'r'
   571   0008A1  74                 	db	116	;'t'
   572   0008A2  61                 	db	97	;'a'
   573   0008A3  64                 	db	100	;'d'
   574   0008A4  6F                 	db	111	;'o'
   575   0008A5  72                 	db	114	;'r'
   576   0008A6  61                 	db	97	;'a'
   577   0008A7  20                 	db	32
   578   0008A8  55                 	db	85	;'U'
   579   0008A9  4E                 	db	78	;'N'
   580   0008AA  00                 	db	0
   581   0008AB                     STR_12:
   582   0008AB  6C                 	db	108	;'l'
   583   0008AC  6F                 	db	111	;'o'
   584   0008AD  73                 	db	115	;'s'
   585   0008AE  20                 	db	32
   586   0008AF  6D                 	db	109	;'m'
   587   0008B0  6F                 	db	111	;'o'
   588   0008B1  74                 	db	116	;'t'
   589   0008B2  6F                 	db	111	;'o'
   590   0008B3  72                 	db	114	;'r'
   591   0008B4  65                 	db	101	;'e'
   592   0008B5  73                 	db	115	;'s'
   593   0008B6  00                 	db	0
   594   0008B7                     STR_27:
   595   0008B7  4F                 	db	79	;'O'
   596   0008B8  70                 	db	112	;'p'
   597   0008B9  65                 	db	101	;'e'
   598   0008BA  72                 	db	114	;'r'
   599   0008BB  61                 	db	97	;'a'
   600   0008BC  63                 	db	99	;'c'
   601   0008BD  69                 	db	105	;'i'
   602   0008BE  6F                 	db	111	;'o'
   603   0008BF  6E                 	db	110	;'n'
   604   0008C0  3A                 	db	58	;':'
   605   0008C1  00                 	db	0
   606   0008C2                     STR_14:
   607   0008C2  4D                 	db	77	;'M'
   608   0008C3  6F                 	db	111	;'o'
   609   0008C4  74                 	db	116	;'t'
   610   0008C5  6F                 	db	111	;'o'
   611   0008C6  72                 	db	114	;'r'
   612   0008C7  20                 	db	32
   613   0008C8  4F                 	db	79	;'O'
   614   0008C9  46                 	db	70	;'F'
   615   0008CA  46                 	db	70	;'F'
   616   0008CB  00                 	db	0
   617   0008CC                     STR_5:
   618   0008CC  32                 	db	50	;'2'
   619   0008CD  30                 	db	48	;'0'
   620   0008CE  32                 	db	50	;'2'
   621   0008CF  33                 	db	51	;'3'
   622   0008D0  2D                 	db	45
   623   0008D1  31                 	db	49	;'1'
   624   0008D2  00                 	db	0
   625   0008D3                     STR_4:
   626   0008D3  55                 	db	85	;'U'
   627   0008D4  4E                 	db	78	;'N'
   628   0008D5  41                 	db	65	;'A'
   629   0008D6  4C                 	db	76	;'L'
   630   0008D7  00                 	db	0
   631   0008D8                     STR_2:
   632   0008D8  43                 	db	67	;'C'
   633   0008D9  6F                 	db	111	;'o'
   634   0008DA  00                 	db	0
   635   0008DB  00                 	db	0	; dummy byte at the end
   636   000000                     
   637                           ; #config settings
   638                           
   639                           	psect	cinit
   640   001504                     __pcinit:
   641                           	callstack 0
   642   001504                     start_initialization:
   643                           	callstack 0
   644   001504                     __initialization:
   645                           	callstack 0
   646                           
   647                           ; Initialize objects allocated to BIGRAM (502 bytes)
   648                           ; load TBLPTR registers with __pidataBIGRAM
   649   001504  0E52               	movlw	low __pidataBIGRAM
   650   001506  6EF6               	movwf	tblptrl,c
   651   001508  0E0C               	movlw	high __pidataBIGRAM
   652   00150A  6EF7               	movwf	tblptrh,c
   653   00150C  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   654   00150E  6EF8               	movwf	tblptru,c
   655   001510  EE06  F00A         	lfsr	0,__pdataBIGRAM
   656   001514  EE11 F0F6          	lfsr	1,502
   657   001518                     copy_data0:
   658   001518  0009               	tblrd		*+
   659   00151A  CFF5 FFEE          	movff	tablat,postinc0
   660   00151E  50E5               	movf	postdec1,w,c
   661   001520  50E1               	movf	fsr1l,w,c
   662   001522  E1FA               	bnz	copy_data0
   663   001524  50E2               	movf	fsr1h,w,c
   664   001526  E1F8               	bnz	copy_data0
   665                           
   666                           ; Initialize objects allocated to COMRAM (5 bytes)
   667                           ; load TBLPTR registers with __pidataCOMRAM
   668   001528  0E12               	movlw	low __pidataCOMRAM
   669   00152A  6EF6               	movwf	tblptrl,c
   670   00152C  0E18               	movlw	high __pidataCOMRAM
   671   00152E  6EF7               	movwf	tblptrh,c
   672   001530  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   673   001532  6EF8               	movwf	tblptru,c
   674   001534  EE00  F04B         	lfsr	0,__pdataCOMRAM
   675   001538  EE10 F005          	lfsr	1,5
   676   00153C                     copy_data1:
   677   00153C  0009               	tblrd		*+
   678   00153E  CFF5 FFEE          	movff	tablat,postinc0
   679   001542  50E5               	movf	postdec1,w,c
   680   001544  50E1               	movf	fsr1l,w,c
   681   001546  E1FA               	bnz	copy_data1
   682                           
   683                           ; Clear objects allocated to COMRAM (28 bytes)
   684   001548  EE00  F02F         	lfsr	0,__pbssCOMRAM
   685   00154C  0E1C               	movlw	28
   686   00154E                     clear_0:
   687   00154E  6AEE               	clrf	postinc0,c
   688   001550  06E8               	decf	wreg,f,c
   689   001552  E1FD               	bnz	clear_0
   690   001554                     end_of_initialization:
   691                           	callstack 0
   692   001554                     __end_of__initialization:
   693                           	callstack 0
   694   001554  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   695   001556  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   696   001558  0E00               	movlw	low (__Lmediumconst shr (0+16))
   697   00155A  6EF8               	movwf	tblptru,c
   698   00155C  0100               	movlb	0
   699   00155E  EF6E  F004         	goto	_main	;jump to C main() function
   700                           
   701                           	psect	bssCOMRAM
   702   00002F                     __pbssCOMRAM:
   703                           	callstack 0
   704   00002F                     _Val_PWM:
   705                           	callstack 0
   706   00002F                     	ds	3
   707   000032                     _ValAn_PWM:
   708                           	callstack 0
   709   000032                     	ds	3
   710   000035                     _DutyF2:
   711                           	callstack 0
   712   000035                     	ds	3
   713   000038                     _DeltaDuty:
   714                           	callstack 0
   715   000038                     	ds	3
   716   00003B                     _Duty:
   717                           	callstack 0
   718   00003B                     	ds	3
   719   00003E                     _DutyF:
   720                           	callstack 0
   721   00003E                     	ds	3
   722   000041                     _DutyI:
   723                           	callstack 0
   724   000041                     	ds	3
   725   000044                     _Val_PWM_LCD_prev:
   726                           	callstack 0
   727   000044                     	ds	1
   728   000045                     _Val_PWM_LCD:
   729                           	callstack 0
   730   000045                     	ds	1
   731   000046                     _d:
   732                           	callstack 0
   733   000046                     	ds	1
   734   000047                     _c:
   735                           	callstack 0
   736   000047                     	ds	1
   737   000048                     _b:
   738                           	callstack 0
   739   000048                     	ds	1
   740   000049                     _EstadosPrev:
   741                           	callstack 0
   742   000049                     	ds	1
   743   00004A                     _Estados:
   744                           	callstack 0
   745   00004A                     	ds	1
   746                           
   747                           	psect	dataCOMRAM
   748   00004B                     __pdataCOMRAM:
   749                           	callstack 0
   750   00004B                     _ts:
   751                           	callstack 0
   752   00004B                     	ds	2
   753   00004D                     _len:
   754                           	callstack 0
   755   00004D                     	ds	2
   756   00004F                     _interfaz:
   757                           	callstack 0
   758   00004F                     	ds	1
   759                           
   760                           	psect	dataBIGRAM
   761   00060A                     __pdataBIGRAM:
   762                           	callstack 0
   763   00060A                     _Vals24:
   764                           	callstack 0
   765   00060A                     	ds	502
   766                           
   767                           	psect	cstackCOMRAM
   768   000001                     __pcstackCOMRAM:
   769                           	callstack 0
   770   000001                     ??_RetardoLCD:
   771   000001                     ?_strlen:
   772                           	callstack 0
   773   000001                     ?_Conversion:
   774                           	callstack 0
   775   000001                     ?___awdiv:
   776                           	callstack 0
   777   000001                     ?___ftpack:
   778                           	callstack 0
   779   000001                     ConfiguraLCD@a:
   780                           	callstack 0
   781   000001                     ___lbmod@divisor:
   782                           	callstack 0
   783   000001                     strlen@s:
   784                           	callstack 0
   785   000001                     ___awdiv@dividend:
   786                           	callstack 0
   787   000001                     ___ftpack@arg:
   788                           	callstack 0
   789   000001                     ___ftge@ff1:
   790                           	callstack 0
   791                           
   792                           ; 3 bytes @ 0x0
   793   000001                     	ds	1
   794   000002                     RetardoLCD@a:
   795                           	callstack 0
   796   000002                     ___lbmod@dividend:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x1
   800   000002                     	ds	1
   801   000003                     ??_Conversion:
   802   000003                     ??_EnviaDato:
   803   000003                     ___lbmod@counter:
   804                           	callstack 0
   805   000003                     strlen@cp:
   806                           	callstack 0
   807   000003                     ___awdiv@divisor:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811   000003                     	ds	1
   812   000004                     EnviaDato@a:
   813                           	callstack 0
   814   000004                     Conversion@canal:
   815                           	callstack 0
   816   000004                     ___ftpack@exp:
   817                           	callstack 0
   818   000004                     ___lbmod@rem:
   819                           	callstack 0
   820   000004                     ___ftge@ff2:
   821                           	callstack 0
   822                           
   823                           ; 3 bytes @ 0x3
   824   000004                     	ds	1
   825   000005                     EscribeLCD_c@a:
   826                           	callstack 0
   827   000005                     DireccionaLCD@a:
   828                           	callstack 0
   829   000005                     ___awdiv@counter:
   830                           	callstack 0
   831   000005                     ___ftpack@sign:
   832                           	callstack 0
   833   000005                     ___lbdiv@divisor:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x4
   837   000005                     	ds	1
   838   000006                     ??___ftpack:
   839   000006                     MensajeLCD_Var@a:
   840                           	callstack 0
   841   000006                     ___awdiv@sign:
   842                           	callstack 0
   843   000006                     ___lbdiv@dividend:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x5
   847   000006                     	ds	1
   848   000007                     ??___ftge:
   849   000007                     ___lbdiv@counter:
   850                           	callstack 0
   851   000007                     ___awdiv@quotient:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x6
   855   000007                     	ds	1
   856   000008                     ___lbdiv@quotient:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x7
   860   000008                     	ds	1
   861   000009                     ?___awtoft:
   862                           	callstack 0
   863   000009                     ?___lwtoft:
   864                           	callstack 0
   865   000009                     EscribeLCD_n8@b:
   866                           	callstack 0
   867   000009                     Mensaje_LCD_Var_Centrado@a:
   868                           	callstack 0
   869   000009                     ___awtoft@c:
   870                           	callstack 0
   871   000009                     ___lwtoft@c:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x8
   875   000009                     	ds	1
   876   00000A                     EscribeLCD_n8@centena:
   877                           	callstack 0
   878   00000A                     Mensaje_LCD_Var_Centrado@l:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x9
   882   00000A                     	ds	1
   883   00000B                     EscribeLCD_n8@decena:
   884                           	callstack 0
   885   00000B                     Mensaje_LCD_Var_Centrado@n:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xA
   889   00000B                     	ds	1
   890   00000C                     EscribeLCD_n8@unidad:
   891                           	callstack 0
   892   00000C                     Mensaje_LCD_Var_Centrado@i:
   893                           	callstack 0
   894   00000C                     ___awtoft@sign:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0xB
   898   00000C                     	ds	1
   899   00000D                     ?___ftmul:
   900                           	callstack 0
   901   00000D                     EscribeLCD_n8@a:
   902                           	callstack 0
   903   00000D                     Mensaje_LCD_Var_Mensaje20x4@a:
   904                           	callstack 0
   905   00000D                     ___ftmul@f1:
   906                           	callstack 0
   907                           
   908                           ; 3 bytes @ 0xC
   909   00000D                     	ds	1
   910   00000E                     Mensaje_LCD_Var_Mensaje20x4@b:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0xD
   914   00000E                     	ds	1
   915   00000F                     Mensaje_LCD_Var_Mensaje20x4@c:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0xE
   919   00000F                     	ds	1
   920   000010                     Mensaje_LCD_Var_Mensaje20x4@d:
   921                           	callstack 0
   922   000010                     ___ftmul@f2:
   923                           	callstack 0
   924                           
   925                           ; 3 bytes @ 0xF
   926   000010                     	ds	1
   927   000011                     
   928                           ; 1 bytes @ 0x10
   929   000011                     	ds	2
   930   000013                     ??___ftmul:
   931                           
   932                           ; 1 bytes @ 0x12
   933   000013                     	ds	3
   934   000016                     ___ftmul@exp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x15
   938   000016                     	ds	1
   939   000017                     ___ftmul@f3_as_product:
   940                           	callstack 0
   941                           
   942                           ; 3 bytes @ 0x16
   943   000017                     	ds	3
   944   00001A                     ___ftmul@cntr:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x19
   948   00001A                     	ds	1
   949   00001B                     ___ftmul@sign:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x1A
   953   00001B                     	ds	1
   954   00001C                     ?___ftdiv:
   955                           	callstack 0
   956   00001C                     ?___fttol:
   957                           	callstack 0
   958   00001C                     ___ftdiv@f1:
   959                           	callstack 0
   960   00001C                     ___fttol@f1:
   961                           	callstack 0
   962                           
   963                           ; 3 bytes @ 0x1B
   964   00001C                     	ds	3
   965   00001F                     ___ftdiv@f2:
   966                           	callstack 0
   967                           
   968                           ; 3 bytes @ 0x1E
   969   00001F                     	ds	1
   970   000020                     ??___fttol:
   971                           
   972                           ; 1 bytes @ 0x1F
   973   000020                     	ds	2
   974   000022                     ??___ftdiv:
   975                           
   976                           ; 1 bytes @ 0x21
   977   000022                     	ds	3
   978   000025                     ___ftdiv@cntr:
   979                           	callstack 0
   980   000025                     ___fttol@sign1:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x24
   984   000025                     	ds	1
   985   000026                     ___ftdiv@f3:
   986                           	callstack 0
   987   000026                     ___fttol@lval:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x25
   991   000026                     	ds	3
   992   000029                     ___ftdiv@exp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x28
   996   000029                     	ds	1
   997   00002A                     ___ftdiv@sign:
   998                           	callstack 0
   999   00002A                     ___fttol@exp1:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x29
  1003   00002A                     	ds	1
  1004   00002B                     ??_main:
  1005                           
  1006                           ; 1 bytes @ 0x2A
  1007   00002B                     	ds	2
  1008   00002D                     main@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2C
  1012   00002D                     	ds	2
  1013                           
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 30 in file "PAI.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  i               2   44[COMRAM] int 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels required when called: 6
  1039 ;; This function calls:
  1040 ;;		_ConfiguraLCD
  1041 ;;		_Conversion
  1042 ;;		_InicializaLCD
  1043 ;;		_Mensaje_LCD_Var_Mensaje20x4
  1044 ;;		___awtoft
  1045 ;;		___ftdiv
  1046 ;;		___ftmul
  1047 ;;		___fttol
  1048 ;;		___lwtoft
  1049 ;;		_imprimir_porcentaje
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text0
  1056   0008DC                     __ptext0:
  1057                           	callstack 0
  1058   0008DC                     _main:
  1059                           	callstack 25
  1060                           
  1061                           ;PAI.c: 31: IRCF2=1;
  1062                           
  1063                           ;incstack = 0
  1064   0008DC  8CD3               	bsf	4051,6,c	;volatile
  1065                           
  1066                           ;PAI.c: 32: IRCF1=1;
  1067   0008DE  8AD3               	bsf	4051,5,c	;volatile
  1068                           
  1069                           ;PAI.c: 33: IRCF0=0;
  1070   0008E0  98D3               	bcf	4051,4,c	;volatile
  1071                           
  1072                           ;PAI.c: 37: ADCON0=0b00000001;
  1073   0008E2  0E01               	movlw	1
  1074   0008E4  6EC2               	movwf	194,c	;volatile
  1075                           
  1076                           ;PAI.c: 38: ADCON1=13;
  1077   0008E6  0E0D               	movlw	13
  1078   0008E8  6EC1               	movwf	193,c	;volatile
  1079                           
  1080                           ;PAI.c: 39: ADCON2=0b10001000;
  1081   0008EA  0E88               	movlw	136
  1082   0008EC  6EC0               	movwf	192,c	;volatile
  1083                           
  1084                           ;PAI.c: 40: TRISD=0;
  1085   0008EE  0E00               	movlw	0
  1086   0008F0  6E95               	movwf	149,c	;volatile
  1087                           
  1088                           ;PAI.c: 41: LATD=0;
  1089   0008F2  0E00               	movlw	0
  1090   0008F4  6E8C               	movwf	140,c	;volatile
  1091                           
  1092                           ;PAI.c: 42: TRISB=0b11111111;
  1093   0008F6  6893               	setf	147,c	;volatile
  1094                           
  1095                           ;PAI.c: 44: CCP1CON=0b00001100;
  1096   0008F8  0E0C               	movlw	12
  1097   0008FA  6EBD               	movwf	189,c	;volatile
  1098                           
  1099                           ;PAI.c: 45: CCP2CON=0b00001100;
  1100   0008FC  0E0C               	movlw	12
  1101   0008FE  6EBA               	movwf	186,c	;volatile
  1102                           
  1103                           ;PAI.c: 48: PR2=249;
  1104   000900  0EF9               	movlw	249
  1105   000902  6ECB               	movwf	203,c	;volatile
  1106                           
  1107                           ;PAI.c: 49: CCPR1L=0;
  1108   000904  0E00               	movlw	0
  1109   000906  6EBE               	movwf	190,c	;volatile
  1110                           
  1111                           ;PAI.c: 50: CCPR2L=0;
  1112   000908  0E00               	movlw	0
  1113   00090A  6EBB               	movwf	187,c	;volatile
  1114                           
  1115                           ;PAI.c: 51: T2CON=0b00000000;
  1116   00090C  0E00               	movlw	0
  1117   00090E  6ECA               	movwf	202,c	;volatile
  1118                           
  1119                           ;PAI.c: 52: TMR2=0;
  1120   000910  0E00               	movlw	0
  1121   000912  6ECC               	movwf	204,c	;volatile
  1122                           
  1123                           ;PAI.c: 53: TMR2ON=1;
  1124   000914  84CA               	bsf	4042,2,c	;volatile
  1125                           
  1126                           ;PAI.c: 55: TRISC1=0;
  1127   000916  9294               	bcf	3988,1,c	;volatile
  1128                           
  1129                           ;PAI.c: 56: TRISC2=0;
  1130   000918  9494               	bcf	3988,2,c	;volatile
  1131                           
  1132                           ;PAI.c: 69: INT0IF=0;
  1133   00091A  92F2               	bcf	4082,1,c	;volatile
  1134                           
  1135                           ;PAI.c: 70: INT0IE=1;
  1136   00091C  88F2               	bsf	4082,4,c	;volatile
  1137                           
  1138                           ;PAI.c: 72: INT1IF=0;
  1139   00091E  90F0               	bcf	4080,0,c	;volatile
  1140                           
  1141                           ;PAI.c: 73: INT1IE=1;
  1142   000920  86F0               	bsf	4080,3,c	;volatile
  1143                           
  1144                           ;PAI.c: 74: INT2IF=0;
  1145   000922  92F0               	bcf	4080,1,c	;volatile
  1146                           
  1147                           ;PAI.c: 75: INT2IE=1;
  1148   000924  88F0               	bsf	4080,4,c	;volatile
  1149                           
  1150                           ;PAI.c: 76: RBPU=1;
  1151   000926  8EF1               	bsf	4081,7,c	;volatile
  1152                           
  1153                           ;PAI.c: 79: RCIE=1;
  1154   000928  8A9D               	bsf	3997,5,c	;volatile
  1155                           
  1156                           ;PAI.c: 80: RCIF=0;
  1157   00092A  9A9E               	bcf	3998,5,c	;volatile
  1158                           
  1159                           ;PAI.c: 81: GIE=1;
  1160   00092C  8EF2               	bsf	4082,7,c	;volatile
  1161                           
  1162                           ;PAI.c: 82: PEIE=1;
  1163   00092E  8CF2               	bsf	4082,6,c	;volatile
  1164                           
  1165                           ;PAI.c: 85: a=!RB0;
  1166   000930  B081               	btfsc	3969,0,c	;volatile
  1167   000932  D002               	goto	u1400
  1168   000934  0E01               	movlw	1
  1169   000936  D001               	goto	u1410
  1170   000938                     u1400:
  1171   000938  0E00               	movlw	0
  1172   00093A                     u1410:
  1173   00093A  6E50               	movwf	_a^0,c
  1174                           
  1175                           ;PAI.c: 87: ConfiguraLCD(4);
  1176   00093C  0E04               	movlw	4
  1177   00093E  ECD6  F00B         	call	_ConfiguraLCD
  1178                           
  1179                           ;PAI.c: 88: InicializaLCD();
  1180   000942  EC44  F009         	call	_InicializaLCD	;wreg free
  1181                           
  1182                           ;PAI.c: 90: _delay((unsigned long)((500)*(4000000/4000.0)));
  1183   000946  0E03               	movlw	3
  1184   000948  6E2C               	movwf	(??_main+1)^0,c
  1185   00094A  0E8A               	movlw	138
  1186   00094C  6E2B               	movwf	??_main^0,c
  1187   00094E  0E56               	movlw	86
  1188   000950                     u1627:
  1189   000950  2EE8               	decfsz	wreg,f,c
  1190   000952  D7FE               	bra	u1627
  1191   000954  2E2B               	decfsz	??_main^0,f,c
  1192   000956  D7FC               	bra	u1627
  1193   000958  2E2C               	decfsz	(??_main+1)^0,f,c
  1194   00095A  D7FA               	bra	u1627
  1195                           
  1196                           ;PAI.c: 92: Mensaje_LCD_Var_Mensaje20x4("Co","Espere un momento","UNAL","2023-1");
  1197   00095C  0ED8               	movlw	low STR_2
  1198   00095E  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1199   000960  0E3F               	movlw	low STR_3
  1200   000962  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1201   000964  0ED3               	movlw	low STR_4
  1202   000966  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1203   000968  0ECC               	movlw	low STR_5
  1204   00096A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1205   00096C  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1206                           
  1207                           ;PAI.c: 93: _delay((unsigned long)((5000)*(4000000/4000.0)));
  1208   000970  0E1A               	movlw	26
  1209   000972  6E2C               	movwf	(??_main+1)^0,c
  1210   000974  0E5E               	movlw	94
  1211   000976  6E2B               	movwf	??_main^0,c
  1212   000978  0E6E               	movlw	110
  1213   00097A                     u1637:
  1214   00097A  2EE8               	decfsz	wreg,f,c
  1215   00097C  D7FE               	bra	u1637
  1216   00097E  2E2B               	decfsz	??_main^0,f,c
  1217   000980  D7FC               	bra	u1637
  1218   000982  2E2C               	decfsz	(??_main+1)^0,f,c
  1219   000984  D7FA               	bra	u1637
  1220   000986  D000               	nop2	
  1221   000988                     l2339:
  1222                           
  1223                           ;PAI.c: 98: a=!RB0;
  1224   000988  B081               	btfsc	3969,0,c	;volatile
  1225   00098A  D002               	goto	u1420
  1226   00098C  0E01               	movlw	1
  1227   00098E  D001               	goto	u1430
  1228   000990                     u1420:
  1229   000990  0E00               	movlw	0
  1230   000992                     u1430:
  1231   000992  6E50               	movwf	_a^0,c
  1232                           
  1233                           ;PAI.c: 99: ValAn_PWM=Conversion(0);
  1234   000994  0E00               	movlw	0
  1235   000996  ECB1  F00B         	call	_Conversion
  1236   00099A  C001  F009         	movff	?_Conversion,___lwtoft@c
  1237   00099E  C002  F00A         	movff	?_Conversion+1,___lwtoft@c+1
  1238   0009A2  ECC4  F00B         	call	___lwtoft	;wreg free
  1239   0009A6  C009  F032         	movff	?___lwtoft,_ValAn_PWM
  1240   0009AA  C00A  F033         	movff	?___lwtoft+1,_ValAn_PWM+1
  1241   0009AE  C00B  F034         	movff	?___lwtoft+2,_ValAn_PWM+2
  1242                           
  1243                           ;PAI.c: 100: Val_PWM=ValAn_PWM*100/1024;
  1244   0009B2  0E00               	movlw	0
  1245   0009B4  6E10               	movwf	___ftmul@f2^0,c
  1246   0009B6  0EC8               	movlw	200
  1247   0009B8  6E11               	movwf	(___ftmul@f2+1)^0,c
  1248   0009BA  0E42               	movlw	66
  1249   0009BC  6E12               	movwf	(___ftmul@f2+2)^0,c
  1250   0009BE  C032  F00D         	movff	_ValAn_PWM,___ftmul@f1
  1251   0009C2  C033  F00E         	movff	_ValAn_PWM+1,___ftmul@f1+1
  1252   0009C6  C034  F00F         	movff	_ValAn_PWM+2,___ftmul@f1+2
  1253   0009CA  EC24  F007         	call	___ftmul	;wreg free
  1254   0009CE  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  1255   0009D2  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  1256   0009D6  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  1257   0009DA  0E00               	movlw	0
  1258   0009DC  6E1F               	movwf	___ftdiv@f2^0,c
  1259   0009DE  0E80               	movlw	128
  1260   0009E0  6E20               	movwf	(___ftdiv@f2+1)^0,c
  1261   0009E2  0E44               	movlw	68
  1262   0009E4  6E21               	movwf	(___ftdiv@f2+2)^0,c
  1263   0009E6  EC11  F008         	call	___ftdiv	;wreg free
  1264   0009EA  C01C  F02F         	movff	?___ftdiv,_Val_PWM
  1265   0009EE  C01D  F030         	movff	?___ftdiv+1,_Val_PWM+1
  1266   0009F2  C01E  F031         	movff	?___ftdiv+2,_Val_PWM+2
  1267                           
  1268                           ;PAI.c: 102: switch(Estados){
  1269   0009F6  D11C               	goto	l2461
  1270   0009F8                     l2345:
  1271                           
  1272                           ;PAI.c: 105: LATD=0;
  1273   0009F8  0E00               	movlw	0
  1274   0009FA  6E8C               	movwf	140,c	;volatile
  1275                           
  1276                           ;PAI.c: 106: Mensaje_LCD_Var_Mensaje20x4("Cortadora UN","Espere un momento","UNAL","2023
      +                          -1");
  1277   0009FC  0E9E               	movlw	low STR_6
  1278   0009FE  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1279   000A00  0E3F               	movlw	low STR_3
  1280   000A02  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1281   000A04  0ED3               	movlw	low STR_4
  1282   000A06  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1283   000A08  0ECC               	movlw	low STR_5
  1284   000A0A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1285   000A0C  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1286                           
  1287                           ;PAI.c: 107: Estados=1;
  1288   000A10  0E01               	movlw	1
  1289   000A12  6E4A               	movwf	_Estados^0,c
  1290                           
  1291                           ;PAI.c: 109: CCPR1L=0;
  1292   000A14  0E00               	movlw	0
  1293   000A16  6EBE               	movwf	190,c	;volatile
  1294                           
  1295                           ;PAI.c: 110: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1296   000A18  0E0B               	movlw	11
  1297   000A1A  6E2C               	movwf	(??_main+1)^0,c
  1298   000A1C  0E26               	movlw	38
  1299   000A1E  6E2B               	movwf	??_main^0,c
  1300   000A20  0E5E               	movlw	94
  1301   000A22                     u1647:
  1302   000A22  2EE8               	decfsz	wreg,f,c
  1303   000A24  D7FE               	bra	u1647
  1304   000A26  2E2B               	decfsz	??_main^0,f,c
  1305   000A28  D7FC               	bra	u1647
  1306   000A2A  2E2C               	decfsz	(??_main+1)^0,f,c
  1307   000A2C  D7FA               	bra	u1647
  1308                           
  1309                           ;PAI.c: 111: break;
  1310   000A2E  D7AC               	goto	l2339
  1311   000A30                     l244:
  1312                           
  1313                           ;PAI.c: 115: RD0=1;
  1314   000A30  8083               	bsf	3971,0,c	;volatile
  1315                           
  1316                           ;PAI.c: 116: RD1=1;
  1317   000A32  8283               	bsf	3971,1,c	;volatile
  1318                           
  1319                           ;PAI.c: 118: CCPR1L=0;
  1320   000A34  0E00               	movlw	0
  1321   000A36  6EBE               	movwf	190,c	;volatile
  1322                           
  1323                           ;PAI.c: 119: c=0;
  1324   000A38  0E00               	movlw	0
  1325   000A3A  6E47               	movwf	_c^0,c
  1326                           
  1327                           ;PAI.c: 120: if(Estados!=EstadosPrev){
  1328   000A3C  5049               	movf	_EstadosPrev^0,w,c
  1329   000A3E  184A               	xorwf	_Estados^0,w,c
  1330   000A40  B4D8               	btfsc	status,2,c
  1331   000A42  D00A               	goto	l2361
  1332                           
  1333                           ;PAI.c: 121: Mensaje_LCD_Var_Mensaje20x4(" ","Revise la conexion a ","los motores","  ")
      +                          ;
  1334   000A44  0E2A               	movlw	low (STR_1+19)
  1335   000A46  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1336   000A48  0E01               	movlw	low STR_11
  1337   000A4A  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1338   000A4C  0EAB               	movlw	low STR_12
  1339   000A4E  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1340   000A50  0E29               	movlw	low (STR_1+18)
  1341   000A52  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1342   000A54  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1343   000A58                     l2361:
  1344                           
  1345                           ;PAI.c: 122: };PAI.c: 123: EstadosPrev=1;
  1346   000A58  0E01               	movlw	1
  1347   000A5A  6E49               	movwf	_EstadosPrev^0,c
  1348                           
  1349                           ;PAI.c: 124: if(a==0){Estados=1;break;}
  1350   000A5C  5050               	movf	_a^0,w,c
  1351   000A5E  A4D8               	btfss	status,2,c
  1352   000A60  D002               	goto	l2369
  1353   000A62                     u1450:
  1354   000A62  0E01               	movlw	1
  1355   000A64  D0E3               	goto	L2
  1356   000A66                     l2369:
  1357                           
  1358                           ;PAI.c: 125: else{Estados=2;break;}
  1359   000A66  0E02               	movlw	2
  1360   000A68  D0E1               	goto	L2
  1361   000A6A                     l248:
  1362                           
  1363                           ;PAI.c: 130: RD0=0;
  1364   000A6A  9083               	bcf	3971,0,c	;volatile
  1365                           
  1366                           ;PAI.c: 131: RD1=0;
  1367   000A6C  9283               	bcf	3971,1,c	;volatile
  1368                           
  1369                           ;PAI.c: 133: b=1;
  1370   000A6E  0E01               	movlw	1
  1371   000A70  6E48               	movwf	_b^0,c
  1372                           
  1373                           ;PAI.c: 134: c=0;
  1374   000A72  0E00               	movlw	0
  1375   000A74  6E47               	movwf	_c^0,c
  1376                           
  1377                           ;PAI.c: 135: CCPR1L=0;
  1378   000A76  0E00               	movlw	0
  1379   000A78  6EBE               	movwf	190,c	;volatile
  1380                           
  1381                           ;PAI.c: 136: if(Estados!=EstadosPrev){
  1382   000A7A  5049               	movf	_EstadosPrev^0,w,c
  1383   000A7C  184A               	xorwf	_Estados^0,w,c
  1384   000A7E  B4D8               	btfsc	status,2,c
  1385   000A80  D00A               	goto	l2377
  1386                           
  1387                           ;PAI.c: 137: Mensaje_LCD_Var_Mensaje20x4("Motor OFF","  ","Active el pulsador","para aju
      +                          starlo");
  1388   000A82  0EC2               	movlw	low STR_14
  1389   000A84  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1390   000A86  0E29               	movlw	low (STR_1+18)
  1391   000A88  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1392   000A8A  0E2C               	movlw	low STR_16
  1393   000A8C  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1394   000A8E  0E81               	movlw	low STR_17
  1395   000A90  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1396   000A92  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1397   000A96                     l2377:
  1398                           
  1399                           ;PAI.c: 138: };PAI.c: 140: EstadosPrev=2;
  1400   000A96  0E02               	movlw	2
  1401   000A98  6E49               	movwf	_EstadosPrev^0,c
  1402                           
  1403                           ;PAI.c: 141: if(a==0){Estados=1;break;}
  1404   000A9A  5050               	movf	_a^0,w,c
  1405   000A9C  B4D8               	btfsc	status,2,c
  1406   000A9E  D7E1               	goto	u1450
  1407                           
  1408                           ;PAI.c: 142: if(d==1){Estados=3;b=0;Val_PWM_LCD_prev=0;break;}
  1409   000AA0  0446               	decf	_d^0,w,c
  1410   000AA2  A4D8               	btfss	status,2,c
  1411   000AA4  D7E0               	goto	l2369
  1412   000AA6  0E03               	movlw	3
  1413   000AA8  6E4A               	movwf	_Estados^0,c
  1414   000AAA  0E00               	movlw	0
  1415   000AAC  6E48               	movwf	_b^0,c
  1416   000AAE  0E00               	movlw	0
  1417   000AB0  6E44               	movwf	_Val_PWM_LCD_prev^0,c
  1418   000AB2  D76A               	goto	l2339
  1419   000AB4                     l2391:
  1420                           
  1421                           ;PAI.c: 148: if(b==1){Estados=2;b=0;break;}
  1422   000AB4  0448               	decf	_b^0,w,c
  1423   000AB6  A4D8               	btfss	status,2,c
  1424   000AB8  D005               	goto	l254
  1425   000ABA                     u1490:
  1426   000ABA  0E02               	movlw	2
  1427   000ABC  6E4A               	movwf	_Estados^0,c
  1428   000ABE  0E00               	movlw	0
  1429   000AC0  6E48               	movwf	_b^0,c
  1430   000AC2  D762               	goto	l2339
  1431   000AC4                     l254:
  1432                           
  1433                           ;PAI.c: 150: RD0=1;
  1434   000AC4  8083               	bsf	3971,0,c	;volatile
  1435                           
  1436                           ;PAI.c: 151: RD1=1;
  1437   000AC6  8283               	bsf	3971,1,c	;volatile
  1438                           
  1439                           ;PAI.c: 152: d=0;
  1440   000AC8  0E00               	movlw	0
  1441   000ACA  6E46               	movwf	_d^0,c
  1442                           
  1443                           ;PAI.c: 153: CCPR1L=0;
  1444   000ACC  0E00               	movlw	0
  1445   000ACE  6EBE               	movwf	190,c	;volatile
  1446                           
  1447                           ;PAI.c: 154: if(a==0){Estados=1;break;}
  1448   000AD0  5050               	movf	_a^0,w,c
  1449   000AD2  B4D8               	btfsc	status,2,c
  1450   000AD4  D7C6               	goto	u1450
  1451                           
  1452                           ;PAI.c: 156: if(Estados!=EstadosPrev){
  1453   000AD6  5049               	movf	_EstadosPrev^0,w,c
  1454   000AD8  184A               	xorwf	_Estados^0,w,c
  1455   000ADA  B4D8               	btfsc	status,2,c
  1456   000ADC  D00A               	goto	l2403
  1457                           
  1458                           ;PAI.c: 157: Mensaje_LCD_Var_Mensaje20x4("Seleccione un %","de operacion:"," ","    ");
  1459   000ADE  0E62               	movlw	low STR_18
  1460   000AE0  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1461   000AE2  0E90               	movlw	low STR_19
  1462   000AE4  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1463   000AE6  0E2A               	movlw	low (STR_1+19)
  1464   000AE8  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1465   000AEA  0E27               	movlw	low (STR_1+16)
  1466   000AEC  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1467   000AEE  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1468   000AF2                     l2403:
  1469                           
  1470                           ;PAI.c: 158: };PAI.c: 160: Val_PWM_LCD=Val_PWM;
  1471   000AF2  C02F  F01C         	movff	_Val_PWM,___fttol@f1
  1472   000AF6  C030  F01D         	movff	_Val_PWM+1,___fttol@f1+1
  1473   000AFA  C031  F01E         	movff	_Val_PWM+2,___fttol@f1+2
  1474   000AFE  EC84  F008         	call	___fttol	;wreg free
  1475   000B02  501C               	movf	?___fttol^0,w,c
  1476   000B04  6E45               	movwf	_Val_PWM_LCD^0,c
  1477                           
  1478                           ;PAI.c: 162: if(Val_PWM_LCD_prev!=Val_PWM_LCD){
  1479   000B06  5045               	movf	_Val_PWM_LCD^0,w,c
  1480   000B08  1844               	xorwf	_Val_PWM_LCD_prev^0,w,c
  1481   000B0A  A4D8               	btfss	status,2,c
  1482                           
  1483                           ;PAI.c: 163: imprimir_porcentaje();
  1484   000B0C  ECD4  F009         	call	_imprimir_porcentaje	;wreg free
  1485                           
  1486                           ;PAI.c: 164: };PAI.c: 165: Val_PWM_LCD_prev=Val_PWM_LCD;
  1487   000B10  C045  F044         	movff	_Val_PWM_LCD,_Val_PWM_LCD_prev
  1488                           
  1489                           ;PAI.c: 168: EstadosPrev=3;
  1490   000B14  0E03               	movlw	3
  1491   000B16  6E49               	movwf	_EstadosPrev^0,c
  1492                           
  1493                           ;PAI.c: 170: if(c==1){Estados=4;c=0;break;}
  1494   000B18  0447               	decf	_c^0,w,c
  1495   000B1A  A4D8               	btfss	status,2,c
  1496   000B1C  D735               	goto	l2339
  1497   000B1E  0E04               	movlw	4
  1498   000B20  6E4A               	movwf	_Estados^0,c
  1499   000B22  0E00               	movlw	0
  1500   000B24  6E47               	movwf	_c^0,c
  1501   000B26  D730               	goto	l2339
  1502   000B28                     l2417:
  1503                           
  1504                           ;PAI.c: 175: if(a==0){Estados=1;break;}
  1505   000B28  5050               	movf	_a^0,w,c
  1506   000B2A  B4D8               	btfsc	status,2,c
  1507   000B2C  D79A               	goto	u1450
  1508                           
  1509                           ;PAI.c: 176: if(b==1){Estados=2;b=0;break;}
  1510   000B2E  0448               	decf	_b^0,w,c
  1511   000B30  B4D8               	btfsc	status,2,c
  1512   000B32  D7C3               	goto	u1490
  1513                           
  1514                           ;PAI.c: 177: Duty=Val_PWM/100;
  1515   000B34  C02F  F01C         	movff	_Val_PWM,___ftdiv@f1
  1516   000B38  C030  F01D         	movff	_Val_PWM+1,___ftdiv@f1+1
  1517   000B3C  C031  F01E         	movff	_Val_PWM+2,___ftdiv@f1+2
  1518   000B40  0E00               	movlw	0
  1519   000B42  6E1F               	movwf	___ftdiv@f2^0,c
  1520   000B44  0EC8               	movlw	200
  1521   000B46  6E20               	movwf	(___ftdiv@f2+1)^0,c
  1522   000B48  0E42               	movlw	66
  1523   000B4A  6E21               	movwf	(___ftdiv@f2+2)^0,c
  1524   000B4C  EC11  F008         	call	___ftdiv	;wreg free
  1525   000B50  C01C  F03B         	movff	?___ftdiv,_Duty
  1526   000B54  C01D  F03C         	movff	?___ftdiv+1,_Duty+1
  1527   000B58  C01E  F03D         	movff	?___ftdiv+2,_Duty+2
  1528                           
  1529                           ;PAI.c: 180: if(Estados!=EstadosPrev){
  1530   000B5C  5049               	movf	_EstadosPrev^0,w,c
  1531   000B5E  184A               	xorwf	_Estados^0,w,c
  1532   000B60  B4D8               	btfsc	status,2,c
  1533   000B62  D060               	goto	l2455
  1534                           
  1535                           ;PAI.c: 185: Mensaje_LCD_Var_Mensaje20x4("  ","Prendiendo Motor"," ","Espere un momento"
      +                          );
  1536   000B64  0E29               	movlw	low (STR_1+18)
  1537   000B66  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1538   000B68  0E51               	movlw	low STR_23
  1539   000B6A  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1540   000B6C  0E2A               	movlw	low (STR_1+19)
  1541   000B6E  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1542   000B70  0E3F               	movlw	low STR_3
  1543   000B72  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1544   000B74  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1545                           
  1546                           ;PAI.c: 187: int i;;PAI.c: 188: for (i = 0; i < len; i++) {
  1547   000B78  0E00               	movlw	0
  1548   000B7A  6E2E               	movwf	(main@i+1)^0,c
  1549   000B7C  0E00               	movlw	0
  1550   000B7E  6E2D               	movwf	main@i^0,c
  1551   000B80  D037               	goto	l2443
  1552   000B82                     l2433:
  1553                           
  1554                           ;PAI.c: 189: if(b==1||a==0){break;}
  1555   000B82  0448               	decf	_b^0,w,c
  1556   000B84  B4D8               	btfsc	status,2,c
  1557   000B86  D03C               	goto	u1590
  1558   000B88  5050               	movf	_a^0,w,c
  1559   000B8A  B4D8               	btfsc	status,2,c
  1560   000B8C  D039               	goto	u1590
  1561                           
  1562                           ;PAI.c: 190: CCPR1L = Vals24[i]*Duty;
  1563   000B8E  C03B  F010         	movff	_Duty,___ftmul@f2
  1564   000B92  C03C  F011         	movff	_Duty+1,___ftmul@f2+1
  1565   000B96  C03D  F012         	movff	_Duty+2,___ftmul@f2+2
  1566   000B9A  90D8               	bcf	status,0,c
  1567   000B9C  342D               	rlcf	main@i^0,w,c
  1568   000B9E  6ED9               	movwf	fsr2l,c
  1569   000BA0  342E               	rlcf	(main@i+1)^0,w,c
  1570   000BA2  6EDA               	movwf	fsr2h,c
  1571   000BA4  0E0A               	movlw	low _Vals24
  1572   000BA6  26D9               	addwf	fsr2l,f,c
  1573   000BA8  0E06               	movlw	high _Vals24
  1574   000BAA  22DA               	addwfc	fsr2h,f,c
  1575   000BAC  CFDE F009          	movff	postinc2,___awtoft@c
  1576   000BB0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  1577   000BB4  EC58  F00B         	call	___awtoft	;wreg free
  1578   000BB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1579   000BBC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1580   000BC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1581   000BC4  EC24  F007         	call	___ftmul	;wreg free
  1582   000BC8  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1583   000BCC  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1584   000BD0  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1585   000BD4  EC84  F008         	call	___fttol	;wreg free
  1586   000BD8  501C               	movf	?___fttol^0,w,c
  1587   000BDA  6EBE               	movwf	190,c	;volatile
  1588                           
  1589                           ;PAI.c: 191: _delay((unsigned long)((ts)*(4000000/4000.0)));
  1590   000BDC  0E1A               	movlw	26
  1591   000BDE  6E2B               	movwf	??_main^0,c
  1592   000BE0  0EF8               	movlw	248
  1593   000BE2                     u1657:
  1594   000BE2  2EE8               	decfsz	wreg,f,c
  1595   000BE4  D7FE               	bra	u1657
  1596   000BE6  2E2B               	decfsz	??_main^0,f,c
  1597   000BE8  D7FC               	bra	u1657
  1598   000BEA  D000               	nop2	
  1599   000BEC  4A2D               	infsnz	main@i^0,f,c
  1600   000BEE  2A2E               	incf	(main@i+1)^0,f,c
  1601   000BF0                     l2443:
  1602   000BF0  BE2E               	btfsc	(main@i+1)^0,7,c
  1603   000BF2  D7C7               	goto	l2433
  1604   000BF4  502E               	movf	(main@i+1)^0,w,c
  1605   000BF6  E104               	bnz	u1590
  1606   000BF8  0EFB               	movlw	251
  1607   000BFA  5C2D               	subwf	main@i^0,w,c
  1608   000BFC  A0D8               	btfss	status,0,c
  1609   000BFE  D7C1               	goto	l2433
  1610   000C00                     u1590:
  1611                           
  1612                           ;PAI.c: 192: };PAI.c: 194: if(a==0){Estados=1;break;}
  1613   000C00  5050               	movf	_a^0,w,c
  1614   000C02  B4D8               	btfsc	status,2,c
  1615   000C04  D72E               	goto	u1450
  1616                           
  1617                           ;PAI.c: 195: if(b==1){Estados=2;b=0;break;}
  1618   000C06  0448               	decf	_b^0,w,c
  1619   000C08  B4D8               	btfsc	status,2,c
  1620   000C0A  D757               	goto	u1490
  1621                           
  1622                           ;PAI.c: 198: Mensaje_LCD_Var_Mensaje20x4("Motor prendido","Operacion:"," ","    ");
  1623   000C0C  0E72               	movlw	low STR_26
  1624   000C0E  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1625   000C10  0EB7               	movlw	low STR_27
  1626   000C12  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1627   000C14  0E2A               	movlw	low (STR_1+19)
  1628   000C16  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1629   000C18  0E27               	movlw	low (STR_1+16)
  1630   000C1A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1631   000C1C  ECFF  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1632                           
  1633                           ;PAI.c: 199: imprimir_porcentaje();
  1634   000C20  ECD4  F009         	call	_imprimir_porcentaje	;wreg free
  1635   000C24                     l2455:
  1636                           
  1637                           ;PAI.c: 200: };PAI.c: 202: EstadosPrev=4;
  1638   000C24  0E04               	movlw	4
  1639   000C26  6E49               	movwf	_EstadosPrev^0,c
  1640                           
  1641                           ;PAI.c: 204: break;
  1642   000C28  D6AF               	goto	l2339
  1643   000C2A                     l2457:
  1644                           
  1645                           ;PAI.c: 207: Estados=0;
  1646   000C2A  0E00               	movlw	0
  1647   000C2C                     L2:
  1648   000C2C  6E4A               	movwf	_Estados^0,c
  1649                           
  1650                           ;PAI.c: 208: break;
  1651   000C2E  D6AC               	goto	l2339
  1652   000C30                     l2461:
  1653   000C30  504A               	movf	_Estados^0,w,c
  1654                           
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 5, Range of values is 0 to 4
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte           16     9 (average)
  1660                           ;	Chosen strategy is simple_byte
  1661   000C32  0A00               	xorlw	0	; case 0
  1662   000C34  B4D8               	btfsc	status,2,c
  1663   000C36  D6E0               	goto	l2345
  1664   000C38  0A01               	xorlw	1	; case 1
  1665   000C3A  B4D8               	btfsc	status,2,c
  1666   000C3C  D6F9               	goto	l244
  1667   000C3E  0A03               	xorlw	3	; case 2
  1668   000C40  B4D8               	btfsc	status,2,c
  1669   000C42  D713               	goto	l248
  1670   000C44  0A01               	xorlw	1	; case 3
  1671   000C46  B4D8               	btfsc	status,2,c
  1672   000C48  D735               	goto	l2391
  1673   000C4A  0A07               	xorlw	7	; case 4
  1674   000C4C  B4D8               	btfsc	status,2,c
  1675   000C4E  D76C               	goto	l2417
  1676   000C50  D7EC               	goto	l2457
  1677   000C52                     __end_of_main:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _imprimir_porcentaje *****************
  1681 ;; Defined at:
  1682 ;;		line 264 in file "PAI.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 5
  1703 ;; This function calls:
  1704 ;;		_DireccionaLCD
  1705 ;;		_EscribeLCD_c
  1706 ;;		_EscribeLCD_n8
  1707 ;;		_MensajeLCD_Var
  1708 ;;		___ftge
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715   0013A8                     __ptext1:
  1716                           	callstack 0
  1717   0013A8                     _imprimir_porcentaje:
  1718                           	callstack 25
  1719                           
  1720                           ;PAI.c: 269: DireccionaLCD(0xC0+4);
  1721                           
  1722                           ;incstack = 0
  1723   0013A8  0EC4               	movlw	196
  1724   0013AA  ECED  F00B         	call	_DireccionaLCD
  1725                           
  1726                           ;PAI.c: 270: MensajeLCD_Var("    ");
  1727   0013AE  0E27               	movlw	low (STR_1+16)
  1728   0013B0  6E06               	movwf	MensajeLCD_Var@a^0,c
  1729   0013B2  EC89  F00B         	call	_MensajeLCD_Var	;wreg free
  1730                           
  1731                           ;PAI.c: 271: DireccionaLCD(0xC0+4);
  1732   0013B6  0EC4               	movlw	196
  1733   0013B8  ECED  F00B         	call	_DireccionaLCD
  1734                           
  1735                           ;PAI.c: 273: if(Val_PWM>99){
  1736   0013BC  0E00               	movlw	0
  1737   0013BE  6E01               	movwf	___ftge@ff1^0,c
  1738   0013C0  0EC6               	movlw	198
  1739   0013C2  6E02               	movwf	(___ftge@ff1+1)^0,c
  1740   0013C4  0E42               	movlw	66
  1741   0013C6  6E03               	movwf	(___ftge@ff1+2)^0,c
  1742   0013C8  C02F  F004         	movff	_Val_PWM,___ftge@ff2
  1743   0013CC  C030  F005         	movff	_Val_PWM+1,___ftge@ff2+1
  1744   0013D0  C031  F006         	movff	_Val_PWM+2,___ftge@ff2+2
  1745   0013D4  EC13  F00A         	call	___ftge	;wreg free
  1746   0013D8  B0D8               	btfsc	status,0,c
  1747   0013DA  D006               	goto	l2133
  1748                           
  1749                           ;PAI.c: 274: EscribeLCD_n8(100,3);
  1750   0013DC  0E03               	movlw	3
  1751   0013DE  6E09               	movwf	EscribeLCD_n8@b^0,c
  1752   0013E0  0E64               	movlw	100
  1753   0013E2  EC9E  F007         	call	_EscribeLCD_n8
  1754                           
  1755                           ;PAI.c: 275: }else if (Val_PWM<=10){
  1756   0013E6  D01B               	goto	l295
  1757   0013E8                     l2133:
  1758   0013E8  0E00               	movlw	0
  1759   0013EA  6E01               	movwf	___ftge@ff1^0,c
  1760   0013EC  0E20               	movlw	32
  1761   0013EE  6E02               	movwf	(___ftge@ff1+1)^0,c
  1762   0013F0  0E41               	movlw	65
  1763   0013F2  6E03               	movwf	(___ftge@ff1+2)^0,c
  1764   0013F4  C02F  F004         	movff	_Val_PWM,___ftge@ff2
  1765   0013F8  C030  F005         	movff	_Val_PWM+1,___ftge@ff2+1
  1766   0013FC  C031  F006         	movff	_Val_PWM+2,___ftge@ff2+2
  1767   001400  EC13  F00A         	call	___ftge	;wreg free
  1768   001404  A0D8               	btfss	status,0,c
  1769   001406  D006               	goto	l2137
  1770                           
  1771                           ;PAI.c: 276: EscribeLCD_n8(Val_PWM_LCD,1);
  1772   001408  0E01               	movlw	1
  1773   00140A  6E09               	movwf	EscribeLCD_n8@b^0,c
  1774   00140C  5045               	movf	_Val_PWM_LCD^0,w,c
  1775   00140E  EC9E  F007         	call	_EscribeLCD_n8
  1776                           
  1777                           ;PAI.c: 277: }else{
  1778   001412  D005               	goto	l295
  1779   001414                     l2137:
  1780                           
  1781                           ;PAI.c: 278: EscribeLCD_n8(Val_PWM_LCD,2);
  1782   001414  0E02               	movlw	2
  1783   001416  6E09               	movwf	EscribeLCD_n8@b^0,c
  1784   001418  5045               	movf	_Val_PWM_LCD^0,w,c
  1785   00141A  EC9E  F007         	call	_EscribeLCD_n8
  1786   00141E                     l295:
  1787                           
  1788                           ;PAI.c: 279: };PAI.c: 280: EscribeLCD_c('%');
  1789   00141E  0E25               	movlw	37
  1790   001420  ECE2  F00B         	call	_EscribeLCD_c
  1791   001424  0012               	return		;funcret
  1792   001426                     __end_of_imprimir_porcentaje:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function ___ftge *****************
  1796 ;; Defined at:
  1797 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  ff1             3    0[COMRAM] float 
  1800 ;;  ff2             3    3[COMRAM] float 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;		None               void
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1812 ;;      Params:         6       0       0       0       0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1814 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1815 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1816 ;;Total ram usage:        9 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_imprimir_porcentaje
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text2
  1827   001426                     __ptext2:
  1828                           	callstack 0
  1829   001426                     ___ftge:
  1830                           	callstack 28
  1831                           
  1832                           ;incstack = 0
  1833   001426  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  1834   001428  D00F               	goto	l2035
  1835   00142A  0E00               	movlw	0
  1836   00142C  6E07               	movwf	??___ftge^0,c
  1837   00142E  0E00               	movlw	0
  1838   001430  6E08               	movwf	(??___ftge+1)^0,c
  1839   001432  0E80               	movlw	128
  1840   001434  6E09               	movwf	(??___ftge+2)^0,c
  1841   001436  5001               	movf	___ftge@ff1^0,w,c
  1842   001438  5C07               	subwf	??___ftge^0,w,c
  1843   00143A  6E01               	movwf	___ftge@ff1^0,c
  1844   00143C  5002               	movf	(___ftge@ff1+1)^0,w,c
  1845   00143E  5808               	subwfb	(??___ftge+1)^0,w,c
  1846   001440  6E02               	movwf	(___ftge@ff1+1)^0,c
  1847   001442  5003               	movf	(___ftge@ff1+2)^0,w,c
  1848   001444  5809               	subwfb	(??___ftge+2)^0,w,c
  1849   001446  6E03               	movwf	(___ftge@ff1+2)^0,c
  1850   001448                     l2035:
  1851   001448  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  1852   00144A  D00F               	goto	l2039
  1853   00144C  0E00               	movlw	0
  1854   00144E  6E07               	movwf	??___ftge^0,c
  1855   001450  0E00               	movlw	0
  1856   001452  6E08               	movwf	(??___ftge+1)^0,c
  1857   001454  0E80               	movlw	128
  1858   001456  6E09               	movwf	(??___ftge+2)^0,c
  1859   001458  5004               	movf	___ftge@ff2^0,w,c
  1860   00145A  5C07               	subwf	??___ftge^0,w,c
  1861   00145C  6E04               	movwf	___ftge@ff2^0,c
  1862   00145E  5005               	movf	(___ftge@ff2+1)^0,w,c
  1863   001460  5808               	subwfb	(??___ftge+1)^0,w,c
  1864   001462  6E05               	movwf	(___ftge@ff2+1)^0,c
  1865   001464  5006               	movf	(___ftge@ff2+2)^0,w,c
  1866   001466  5809               	subwfb	(??___ftge+2)^0,w,c
  1867   001468  6E06               	movwf	(___ftge@ff2+2)^0,c
  1868   00146A                     l2039:
  1869   00146A  0E00               	movlw	0
  1870   00146C  1A01               	xorwf	___ftge@ff1^0,f,c
  1871   00146E  0E00               	movlw	0
  1872   001470  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  1873   001472  0E80               	movlw	128
  1874   001474  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  1875   001476  0E00               	movlw	0
  1876   001478  1A04               	xorwf	___ftge@ff2^0,f,c
  1877   00147A  0E00               	movlw	0
  1878   00147C  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  1879   00147E  0E80               	movlw	128
  1880   001480  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  1881   001482  5004               	movf	___ftge@ff2^0,w,c
  1882   001484  5C01               	subwf	___ftge@ff1^0,w,c
  1883   001486  5005               	movf	(___ftge@ff2+1)^0,w,c
  1884   001488  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  1885   00148A  5006               	movf	(___ftge@ff2+2)^0,w,c
  1886   00148C  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  1887   00148E  B0D8               	btfsc	status,0,c
  1888   001490  D002               	goto	l2045
  1889   001492  90D8               	bcf	status,0,c
  1890   001494  0012               	return	
  1891   001496                     l2045:
  1892   001496  80D8               	bsf	status,0,c
  1893   001498  0012               	return		;funcret
  1894   00149A                     __end_of___ftge:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _MensajeLCD_Var *****************
  1898 ;; Defined at:
  1899 ;;		line 345 in file "LibLCDXC8.h"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  a               1    5[COMRAM] PTR unsigned char 
  1902 ;;		 -> STR_30(5), STR_1(21), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         1       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 4
  1921 ;; This function calls:
  1922 ;;		_EscribeLCD_c
  1923 ;; This function is called by:
  1924 ;;		_imprimir_porcentaje
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text3
  1929   001712                     __ptext3:
  1930                           	callstack 0
  1931   001712                     _MensajeLCD_Var:
  1932                           	callstack 25
  1933                           
  1934                           ;LibLCDXC8.h: 349: while(*a != '\0'){
  1935                           
  1936                           ;incstack = 0
  1937   001712  D009               	goto	l1993
  1938   001714                     l1989:
  1939                           
  1940                           ;LibLCDXC8.h: 350: EscribeLCD_c(*a);
  1941   001714  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1942   001718                     	if	1	;There is more than 1 active tblptr byte
  1943   001718  0E08               	movlw	high __smallconst
  1944   00171A  6EF7               	movwf	tblptrh,c
  1945   00171C                     	endif
  1946   00171C                     	if	0	;tblptru may be non-zero
  1947   00171C                     	endif
  1948   00171C                     	if	0	;tblptru may be non-zero
  1949   00171C                     	endif
  1950   00171C  0008               	tblrd		*
  1951   00171E  50F5               	movf	tablat,w,c
  1952   001720  ECE2  F00B         	call	_EscribeLCD_c
  1953                           
  1954                           ;LibLCDXC8.h: 351: a++;
  1955   001724  2A06               	incf	MensajeLCD_Var@a^0,f,c
  1956   001726                     l1993:
  1957   001726  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1958   00172A                     	if	1	;There is more than 1 active tblptr byte
  1959   00172A  0E08               	movlw	high __smallconst
  1960   00172C  6EF7               	movwf	tblptrh,c
  1961   00172E                     	endif
  1962   00172E                     	if	0	;tblptru may be non-zero
  1963   00172E                     	endif
  1964   00172E                     	if	0	;tblptru may be non-zero
  1965   00172E                     	endif
  1966   00172E  0008               	tblrd		*
  1967   001730  50F5               	movf	tablat,w,c
  1968   001732  0900               	iorlw	0
  1969   001734  B4D8               	btfsc	status,2,c
  1970   001736  0012               	return	
  1971   001738  D7ED               	goto	l1989
  1972   00173A                     __end_of_MensajeLCD_Var:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _EscribeLCD_n8 *****************
  1976 ;; Defined at:
  1977 ;;		line 132 in file "LibLCDXC8.h"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  a               1    wreg     unsigned char 
  1980 ;;  b               1    8[COMRAM] unsigned char 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  a               1   12[COMRAM] unsigned char 
  1983 ;;  unidad          1   11[COMRAM] unsigned char 
  1984 ;;  decena          1   10[COMRAM] unsigned char 
  1985 ;;  centena         1    9[COMRAM] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         1       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:        5 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 3
  2002 ;; This function calls:
  2003 ;;		_EnviaDato
  2004 ;;		_HabilitaLCD
  2005 ;;		_RetardoLCD
  2006 ;;		___lbdiv
  2007 ;;		___lbmod
  2008 ;; This function is called by:
  2009 ;;		_imprimir_porcentaje
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text4
  2014   000F3C                     __ptext4:
  2015                           	callstack 0
  2016   000F3C                     _EscribeLCD_n8:
  2017                           	callstack 26
  2018                           
  2019                           ;incstack = 0
  2020                           ;EscribeLCD_n8@a stored from wreg
  2021   000F3C  6E0D               	movwf	EscribeLCD_n8@a^0,c
  2022                           
  2023                           ;LibLCDXC8.h: 137: unsigned char centena,decena,unidad;;LibLCDXC8.h: 138: LATD2=1;
  2024   000F3E  848C               	bsf	3980,2,c	;volatile
  2025                           
  2026                           ;LibLCDXC8.h: 142: switch(b){
  2027   000F40  D065               	goto	l1959
  2028   000F42                     l1927:
  2029   000F42  0E0A               	movlw	10
  2030   000F44  6E01               	movwf	___lbmod@divisor^0,c
  2031   000F46  500D               	movf	EscribeLCD_n8@a^0,w,c
  2032   000F48  EC74  F00B         	call	___lbmod
  2033   000F4C  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2034                           
  2035                           ;LibLCDXC8.h: 144: EnviaDato(unidad+48);
  2036   000F4E  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2037   000F50  0F30               	addlw	48
  2038   000F52  ECDC  F00A         	call	_EnviaDato
  2039                           
  2040                           ;LibLCDXC8.h: 145: HabilitaLCD();
  2041   000F56  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2042                           
  2043                           ;LibLCDXC8.h: 146: RetardoLCD(4);
  2044   000F5A  0E04               	movlw	4
  2045   000F5C  ECB1  F00A         	call	_RetardoLCD
  2046                           
  2047                           ;LibLCDXC8.h: 147: break;
  2048   000F60  0012               	return	
  2049   000F62                     l1933:
  2050   000F62  0E0A               	movlw	10
  2051   000F64  6E05               	movwf	___lbdiv@divisor^0,c
  2052   000F66  0E64               	movlw	100
  2053   000F68  6E01               	movwf	___lbmod@divisor^0,c
  2054   000F6A  500D               	movf	EscribeLCD_n8@a^0,w,c
  2055   000F6C  EC74  F00B         	call	___lbmod
  2056   000F70  EC1E  F00B         	call	___lbdiv
  2057   000F74  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2058                           
  2059                           ;LibLCDXC8.h: 149: unidad=a%10;
  2060   000F76  0E0A               	movlw	10
  2061   000F78  6E01               	movwf	___lbmod@divisor^0,c
  2062   000F7A  500D               	movf	EscribeLCD_n8@a^0,w,c
  2063   000F7C  EC74  F00B         	call	___lbmod
  2064   000F80  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2065                           
  2066                           ;LibLCDXC8.h: 150: EnviaDato(decena+48);
  2067   000F82  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2068   000F84  0F30               	addlw	48
  2069   000F86  ECDC  F00A         	call	_EnviaDato
  2070                           
  2071                           ;LibLCDXC8.h: 151: HabilitaLCD();
  2072   000F8A  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2073                           
  2074                           ;LibLCDXC8.h: 152: RetardoLCD(4);
  2075   000F8E  0E04               	movlw	4
  2076   000F90  ECB1  F00A         	call	_RetardoLCD
  2077                           
  2078                           ;LibLCDXC8.h: 153: EnviaDato(unidad+48);
  2079   000F94  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2080   000F96  0F30               	addlw	48
  2081   000F98  ECDC  F00A         	call	_EnviaDato
  2082                           
  2083                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2084   000F9C  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2085                           
  2086                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2087   000FA0  0E04               	movlw	4
  2088   000FA2  ECB1  F00A         	call	_RetardoLCD
  2089                           
  2090                           ;LibLCDXC8.h: 156: break;
  2091   000FA6  0012               	return	
  2092   000FA8                     l1943:
  2093   000FA8  0E64               	movlw	100
  2094   000FAA  6E05               	movwf	___lbdiv@divisor^0,c
  2095   000FAC  500D               	movf	EscribeLCD_n8@a^0,w,c
  2096   000FAE  EC1E  F00B         	call	___lbdiv
  2097   000FB2  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  2098                           
  2099                           ;LibLCDXC8.h: 158: decena=(a%100)/10;
  2100   000FB4  0E0A               	movlw	10
  2101   000FB6  6E05               	movwf	___lbdiv@divisor^0,c
  2102   000FB8  0E64               	movlw	100
  2103   000FBA  6E01               	movwf	___lbmod@divisor^0,c
  2104   000FBC  500D               	movf	EscribeLCD_n8@a^0,w,c
  2105   000FBE  EC74  F00B         	call	___lbmod
  2106   000FC2  EC1E  F00B         	call	___lbdiv
  2107   000FC6  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2108                           
  2109                           ;LibLCDXC8.h: 159: unidad=a%10;
  2110   000FC8  0E0A               	movlw	10
  2111   000FCA  6E01               	movwf	___lbmod@divisor^0,c
  2112   000FCC  500D               	movf	EscribeLCD_n8@a^0,w,c
  2113   000FCE  EC74  F00B         	call	___lbmod
  2114   000FD2  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2115                           
  2116                           ;LibLCDXC8.h: 160: EnviaDato(centena+48);
  2117   000FD4  500A               	movf	EscribeLCD_n8@centena^0,w,c
  2118   000FD6  0F30               	addlw	48
  2119   000FD8  ECDC  F00A         	call	_EnviaDato
  2120                           
  2121                           ;LibLCDXC8.h: 161: HabilitaLCD();
  2122   000FDC  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2123                           
  2124                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  2125   000FE0  0E04               	movlw	4
  2126   000FE2  ECB1  F00A         	call	_RetardoLCD
  2127                           
  2128                           ;LibLCDXC8.h: 163: EnviaDato(decena+48);
  2129   000FE6  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2130   000FE8  0F30               	addlw	48
  2131   000FEA  ECDC  F00A         	call	_EnviaDato
  2132                           
  2133                           ;LibLCDXC8.h: 164: HabilitaLCD();
  2134   000FEE  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2135                           
  2136                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  2137   000FF2  0E04               	movlw	4
  2138   000FF4  ECB1  F00A         	call	_RetardoLCD
  2139                           
  2140                           ;LibLCDXC8.h: 166: EnviaDato(unidad+48);
  2141   000FF8  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2142   000FFA  0F30               	addlw	48
  2143   000FFC  ECDC  F00A         	call	_EnviaDato
  2144                           
  2145                           ;LibLCDXC8.h: 167: HabilitaLCD();
  2146   001000  EC02  F00C         	call	_HabilitaLCD	;wreg free
  2147                           
  2148                           ;LibLCDXC8.h: 168: RetardoLCD(4);
  2149   001004  0E04               	movlw	4
  2150   001006  ECB1  F00A         	call	_RetardoLCD
  2151                           
  2152                           ;LibLCDXC8.h: 169: break;
  2153   00100A  0012               	return	
  2154   00100C                     l1959:
  2155   00100C  5009               	movf	EscribeLCD_n8@b^0,w,c
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 3, Range of values is 1 to 3
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           10     6 (average)
  2162                           ;	Chosen strategy is simple_byte
  2163   00100E  0A01               	xorlw	1	; case 1
  2164   001010  B4D8               	btfsc	status,2,c
  2165   001012  D797               	goto	l1927
  2166   001014  0A03               	xorlw	3	; case 2
  2167   001016  B4D8               	btfsc	status,2,c
  2168   001018  D7A4               	goto	l1933
  2169   00101A  0A01               	xorlw	1	; case 3
  2170   00101C  A4D8               	btfss	status,2,c
  2171   00101E  0012               	return	
  2172   001020  D7C3               	goto	l1943
  2173   001022                     __end_of_EscribeLCD_n8:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function ___lbmod *****************
  2177 ;; Defined at:
  2178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  dividend        1    wreg     unsigned char 
  2181 ;;  divisor         1    0[COMRAM] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  dividend        1    1[COMRAM] unsigned char 
  2184 ;;  rem             1    3[COMRAM] unsigned char 
  2185 ;;  counter         1    2[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      unsigned char 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         1       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        4 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_EscribeLCD_n8
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text5
  2210   0016E8                     __ptext5:
  2211                           	callstack 0
  2212   0016E8                     ___lbmod:
  2213                           	callstack 27
  2214                           
  2215                           ;incstack = 0
  2216                           ;___lbmod@dividend stored from wreg
  2217   0016E8  6E02               	movwf	___lbmod@dividend^0,c
  2218   0016EA  0E08               	movlw	8
  2219   0016EC  6E03               	movwf	___lbmod@counter^0,c
  2220   0016EE  0E00               	movlw	0
  2221   0016F0  6E04               	movwf	___lbmod@rem^0,c
  2222   0016F2                     l1903:
  2223   0016F2  90D8               	bcf	status,0,c
  2224   0016F4  3402               	rlcf	___lbmod@dividend^0,w,c
  2225   0016F6  3404               	rlcf	___lbmod@rem^0,w,c
  2226   0016F8  6E04               	movwf	___lbmod@rem^0,c
  2227   0016FA  90D8               	bcf	status,0,c
  2228   0016FC  3602               	rlcf	___lbmod@dividend^0,f,c
  2229   0016FE  5001               	movf	___lbmod@divisor^0,w,c
  2230   001700  5C04               	subwf	___lbmod@rem^0,w,c
  2231   001702  A0D8               	btfss	status,0,c
  2232   001704  D002               	goto	l1911
  2233   001706  5001               	movf	___lbmod@divisor^0,w,c
  2234   001708  5E04               	subwf	___lbmod@rem^0,f,c
  2235   00170A                     l1911:
  2236   00170A  2E03               	decfsz	___lbmod@counter^0,f,c
  2237   00170C  D7F2               	goto	l1903
  2238   00170E  5004               	movf	___lbmod@rem^0,w,c
  2239   001710  0012               	return		;funcret
  2240   001712                     __end_of___lbmod:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function ___lbdiv *****************
  2244 ;; Defined at:
  2245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  dividend        1    wreg     unsigned char 
  2248 ;;  divisor         1    4[COMRAM] unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  dividend        1    5[COMRAM] unsigned char 
  2251 ;;  quotient        1    7[COMRAM] unsigned char 
  2252 ;;  counter         1    6[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2262 ;;      Params:         1       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:        4 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_EscribeLCD_n8
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text6
  2277   00163C                     __ptext6:
  2278                           	callstack 0
  2279   00163C                     ___lbdiv:
  2280                           	callstack 27
  2281                           
  2282                           ;incstack = 0
  2283                           ;___lbdiv@dividend stored from wreg
  2284   00163C  6E06               	movwf	___lbdiv@dividend^0,c
  2285   00163E  0E00               	movlw	0
  2286   001640  6E08               	movwf	___lbdiv@quotient^0,c
  2287   001642  5005               	movf	___lbdiv@divisor^0,w,c
  2288   001644  B4D8               	btfsc	status,2,c
  2289   001646  D015               	goto	l1897
  2290   001648  0E01               	movlw	1
  2291   00164A  6E07               	movwf	___lbdiv@counter^0,c
  2292   00164C  D003               	goto	l1885
  2293   00164E                     l1881:
  2294   00164E  90D8               	bcf	status,0,c
  2295   001650  3605               	rlcf	___lbdiv@divisor^0,f,c
  2296   001652  2A07               	incf	___lbdiv@counter^0,f,c
  2297   001654                     l1885:
  2298   001654  AE05               	btfss	___lbdiv@divisor^0,7,c
  2299   001656  D7FB               	goto	l1881
  2300   001658                     u940:
  2301   001658  90D8               	bcf	status,0,c
  2302   00165A  3608               	rlcf	___lbdiv@quotient^0,f,c
  2303   00165C  5005               	movf	___lbdiv@divisor^0,w,c
  2304   00165E  5C06               	subwf	___lbdiv@dividend^0,w,c
  2305   001660  A0D8               	btfss	status,0,c
  2306   001662  D003               	goto	l1893
  2307   001664  5005               	movf	___lbdiv@divisor^0,w,c
  2308   001666  5E06               	subwf	___lbdiv@dividend^0,f,c
  2309   001668  8008               	bsf	___lbdiv@quotient^0,0,c
  2310   00166A                     l1893:
  2311   00166A  90D8               	bcf	status,0,c
  2312   00166C  3205               	rrcf	___lbdiv@divisor^0,f,c
  2313   00166E  2E07               	decfsz	___lbdiv@counter^0,f,c
  2314   001670  D7F3               	goto	u940
  2315   001672                     l1897:
  2316   001672  5008               	movf	___lbdiv@quotient^0,w,c
  2317   001674  0012               	return		;funcret
  2318   001676                     __end_of___lbdiv:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function ___lwtoft *****************
  2322 ;; Defined at:
  2323 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  c               2    8[COMRAM] unsigned int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  3    8[COMRAM] float 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         3       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 2
  2344 ;; This function calls:
  2345 ;;		___ftpack
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text7
  2352   001788                     __ptext7:
  2353                           	callstack 0
  2354   001788                     ___lwtoft:
  2355                           	callstack 28
  2356                           
  2357                           ;incstack = 0
  2358   001788  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2359   00178C  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2360   001790  6A03               	clrf	(___ftpack@arg+2)^0,c
  2361   001792  0E8E               	movlw	142
  2362   001794  6E04               	movwf	___ftpack@exp^0,c
  2363   001796  0E00               	movlw	0
  2364   001798  6E05               	movwf	___ftpack@sign^0,c
  2365   00179A  ECED  F008         	call	___ftpack	;wreg free
  2366   00179E  C001  F009         	movff	?___ftpack,?___lwtoft
  2367   0017A2  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2368   0017A6  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2369   0017AA  0012               	return		;funcret
  2370   0017AC                     __end_of___lwtoft:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function ___fttol *****************
  2374 ;; Defined at:
  2375 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  f1              3   27[COMRAM] float 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  lval            4   37[COMRAM] unsigned long 
  2380 ;;  exp1            1   41[COMRAM] unsigned char 
  2381 ;;  sign1           1   36[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  4   27[COMRAM] long 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         4       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2394 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:       15 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text8
  2406   001108                     __ptext8:
  2407                           	callstack 0
  2408   001108                     ___fttol:
  2409                           	callstack 29
  2410                           
  2411                           ;incstack = 0
  2412   001108  C01E  F020         	movff	___fttol@f1+2,??___fttol
  2413   00110C  6A21               	clrf	(??___fttol+1)^0,c
  2414   00110E  6A22               	clrf	(??___fttol+2)^0,c
  2415   001110  341D               	rlcf	(___fttol@f1+1)^0,w,c
  2416   001112  3620               	rlcf	??___fttol^0,f,c
  2417   001114  E301               	bnc	u1321
  2418   001116  8021               	bsf	(??___fttol+1)^0,0,c
  2419   001118                     u1321:
  2420   001118  5020               	movf	??___fttol^0,w,c
  2421   00111A  6E2A               	movwf	___fttol@exp1^0,c
  2422   00111C  502A               	movf	___fttol@exp1^0,w,c
  2423   00111E  A4D8               	btfss	status,2,c
  2424   001120  D009               	goto	l2251
  2425   001122                     u1330:
  2426   001122  0E00               	movlw	0
  2427   001124  6E1C               	movwf	?___fttol^0,c
  2428   001126  0E00               	movlw	0
  2429   001128  6E1D               	movwf	(?___fttol+1)^0,c
  2430   00112A  0E00               	movlw	0
  2431   00112C  6E1E               	movwf	(?___fttol+2)^0,c
  2432   00112E  0E00               	movlw	0
  2433   001130  6E1F               	movwf	(?___fttol+3)^0,c
  2434   001132  0012               	return	
  2435   001134                     l2251:
  2436   001134  0E17               	movlw	23
  2437   001136  6E20               	movwf	??___fttol^0,c
  2438   001138  C01C  F021         	movff	___fttol@f1,??___fttol+1
  2439   00113C  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  2440   001140  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  2441   001144  2820               	incf	??___fttol^0,w,c
  2442   001146  6E24               	movwf	(??___fttol+4)^0,c
  2443   001148  D004               	goto	u1340
  2444   00114A                     u1345:
  2445   00114A  90D8               	bcf	status,0,c
  2446   00114C  3223               	rrcf	(??___fttol+3)^0,f,c
  2447   00114E  3222               	rrcf	(??___fttol+2)^0,f,c
  2448   001150  3221               	rrcf	(??___fttol+1)^0,f,c
  2449   001152                     u1340:
  2450   001152  2E24               	decfsz	(??___fttol+4)^0,f,c
  2451   001154  D7FA               	goto	u1345
  2452   001156  5021               	movf	(??___fttol+1)^0,w,c
  2453   001158  6E25               	movwf	___fttol@sign1^0,c
  2454   00115A  8E1D               	bsf	(___fttol@f1+1)^0,7,c
  2455   00115C  0EFF               	movlw	255
  2456   00115E  161C               	andwf	___fttol@f1^0,f,c
  2457   001160  0EFF               	movlw	255
  2458   001162  161D               	andwf	(___fttol@f1+1)^0,f,c
  2459   001164  0E00               	movlw	0
  2460   001166  161E               	andwf	(___fttol@f1+2)^0,f,c
  2461   001168  501C               	movf	___fttol@f1^0,w,c
  2462   00116A  6E26               	movwf	___fttol@lval^0,c
  2463   00116C  501D               	movf	(___fttol@f1+1)^0,w,c
  2464   00116E  6E27               	movwf	(___fttol@lval+1)^0,c
  2465   001170  501E               	movf	(___fttol@f1+2)^0,w,c
  2466   001172  6E28               	movwf	(___fttol@lval+2)^0,c
  2467   001174  6A29               	clrf	(___fttol@lval+3)^0,c
  2468   001176  0E8E               	movlw	142
  2469   001178  5E2A               	subwf	___fttol@exp1^0,f,c
  2470   00117A  AE2A               	btfss	___fttol@exp1^0,7,c
  2471   00117C  D00D               	goto	l2273
  2472   00117E  502A               	movf	___fttol@exp1^0,w,c
  2473   001180  0A80               	xorlw	128
  2474   001182  0F8F               	addlw	143
  2475   001184  A0D8               	btfss	status,0,c
  2476   001186  D7CD               	goto	u1330
  2477   001188                     l2269:
  2478   001188  90D8               	bcf	status,0,c
  2479   00118A  3229               	rrcf	(___fttol@lval+3)^0,f,c
  2480   00118C  3228               	rrcf	(___fttol@lval+2)^0,f,c
  2481   00118E  3227               	rrcf	(___fttol@lval+1)^0,f,c
  2482   001190  3226               	rrcf	___fttol@lval^0,f,c
  2483   001192  3E2A               	incfsz	___fttol@exp1^0,f,c
  2484   001194  D7F9               	goto	l2269
  2485   001196  D00D               	goto	u1380
  2486   001198                     l2273:
  2487   001198  0E17               	movlw	23
  2488   00119A  642A               	cpfsgt	___fttol@exp1^0,c
  2489   00119C  D007               	goto	l2281
  2490   00119E  D7C1               	goto	u1330
  2491   0011A0                     l2279:
  2492   0011A0  90D8               	bcf	status,0,c
  2493   0011A2  3626               	rlcf	___fttol@lval^0,f,c
  2494   0011A4  3627               	rlcf	(___fttol@lval+1)^0,f,c
  2495   0011A6  3628               	rlcf	(___fttol@lval+2)^0,f,c
  2496   0011A8  3629               	rlcf	(___fttol@lval+3)^0,f,c
  2497   0011AA  062A               	decf	___fttol@exp1^0,f,c
  2498   0011AC                     l2281:
  2499   0011AC  502A               	movf	___fttol@exp1^0,w,c
  2500   0011AE  A4D8               	btfss	status,2,c
  2501   0011B0  D7F7               	goto	l2279
  2502   0011B2                     u1380:
  2503   0011B2  5025               	movf	___fttol@sign1^0,w,c
  2504   0011B4  B4D8               	btfsc	status,2,c
  2505   0011B6  D008               	goto	l2287
  2506   0011B8  1E29               	comf	(___fttol@lval+3)^0,f,c
  2507   0011BA  1E28               	comf	(___fttol@lval+2)^0,f,c
  2508   0011BC  1E27               	comf	(___fttol@lval+1)^0,f,c
  2509   0011BE  6C26               	negf	___fttol@lval^0,c
  2510   0011C0  0E00               	movlw	0
  2511   0011C2  2227               	addwfc	(___fttol@lval+1)^0,f,c
  2512   0011C4  2228               	addwfc	(___fttol@lval+2)^0,f,c
  2513   0011C6  2229               	addwfc	(___fttol@lval+3)^0,f,c
  2514   0011C8                     l2287:
  2515   0011C8  C026  F01C         	movff	___fttol@lval,?___fttol
  2516   0011CC  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  2517   0011D0  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  2518   0011D4  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  2519   0011D8  0012               	return		;funcret
  2520   0011DA                     __end_of___fttol:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function ___ftmul *****************
  2524 ;; Defined at:
  2525 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  f1              3   12[COMRAM] float 
  2528 ;;  f2              3   15[COMRAM] float 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2531 ;;  sign            1   26[COMRAM] unsigned char 
  2532 ;;  cntr            1   25[COMRAM] unsigned char 
  2533 ;;  exp             1   21[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  3   12[COMRAM] float 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         6       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2546 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:       15 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 2
  2550 ;; This function calls:
  2551 ;;		___ftpack
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text9
  2558   000E48                     __ptext9:
  2559                           	callstack 0
  2560   000E48                     ___ftmul:
  2561                           	callstack 28
  2562                           
  2563                           ;incstack = 0
  2564   000E48  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2565   000E4C  6A14               	clrf	(??___ftmul+1)^0,c
  2566   000E4E  6A15               	clrf	(??___ftmul+2)^0,c
  2567   000E50  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  2568   000E52  3613               	rlcf	??___ftmul^0,f,c
  2569   000E54  E301               	bnc	u1251
  2570   000E56  8014               	bsf	(??___ftmul+1)^0,0,c
  2571   000E58                     u1251:
  2572   000E58  5013               	movf	??___ftmul^0,w,c
  2573   000E5A  6E16               	movwf	___ftmul@exp^0,c
  2574   000E5C  5016               	movf	___ftmul@exp^0,w,c
  2575   000E5E  A4D8               	btfss	status,2,c
  2576   000E60  D007               	goto	l2191
  2577   000E62  0E00               	movlw	0
  2578   000E64  6E0D               	movwf	?___ftmul^0,c
  2579   000E66  0E00               	movlw	0
  2580   000E68  6E0E               	movwf	(?___ftmul+1)^0,c
  2581   000E6A  0E00               	movlw	0
  2582   000E6C  6E0F               	movwf	(?___ftmul+2)^0,c
  2583   000E6E  0012               	return	
  2584   000E70                     l2191:
  2585   000E70  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2586   000E74  6A14               	clrf	(??___ftmul+1)^0,c
  2587   000E76  6A15               	clrf	(??___ftmul+2)^0,c
  2588   000E78  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  2589   000E7A  3613               	rlcf	??___ftmul^0,f,c
  2590   000E7C  E301               	bnc	u1271
  2591   000E7E  8014               	bsf	(??___ftmul+1)^0,0,c
  2592   000E80                     u1271:
  2593   000E80  5013               	movf	??___ftmul^0,w,c
  2594   000E82  6E1B               	movwf	___ftmul@sign^0,c
  2595   000E84  501B               	movf	___ftmul@sign^0,w,c
  2596   000E86  A4D8               	btfss	status,2,c
  2597   000E88  D007               	goto	l2197
  2598   000E8A  0E00               	movlw	0
  2599   000E8C  6E0D               	movwf	?___ftmul^0,c
  2600   000E8E  0E00               	movlw	0
  2601   000E90  6E0E               	movwf	(?___ftmul+1)^0,c
  2602   000E92  0E00               	movlw	0
  2603   000E94  6E0F               	movwf	(?___ftmul+2)^0,c
  2604   000E96  0012               	return	
  2605   000E98                     l2197:
  2606   000E98  501B               	movf	___ftmul@sign^0,w,c
  2607   000E9A  0F7B               	addlw	123
  2608   000E9C  2616               	addwf	___ftmul@exp^0,f,c
  2609   000E9E  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2610   000EA2  5012               	movf	(___ftmul@f2+2)^0,w,c
  2611   000EA4  1A1B               	xorwf	___ftmul@sign^0,f,c
  2612   000EA6  0E80               	movlw	128
  2613   000EA8  161B               	andwf	___ftmul@sign^0,f,c
  2614   000EAA  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  2615   000EAC  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  2616   000EAE  0EFF               	movlw	255
  2617   000EB0  1610               	andwf	___ftmul@f2^0,f,c
  2618   000EB2  0EFF               	movlw	255
  2619   000EB4  1611               	andwf	(___ftmul@f2+1)^0,f,c
  2620   000EB6  0E00               	movlw	0
  2621   000EB8  1612               	andwf	(___ftmul@f2+2)^0,f,c
  2622   000EBA  0E00               	movlw	0
  2623   000EBC  6E17               	movwf	___ftmul@f3_as_product^0,c
  2624   000EBE  0E00               	movlw	0
  2625   000EC0  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  2626   000EC2  0E00               	movlw	0
  2627   000EC4  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  2628   000EC6  0E07               	movlw	7
  2629   000EC8  6E1A               	movwf	___ftmul@cntr^0,c
  2630   000ECA                     l2211:
  2631   000ECA  A00D               	btfss	___ftmul@f1^0,0,c
  2632   000ECC  D006               	goto	l2215
  2633   000ECE  5010               	movf	___ftmul@f2^0,w,c
  2634   000ED0  2617               	addwf	___ftmul@f3_as_product^0,f,c
  2635   000ED2  5011               	movf	(___ftmul@f2+1)^0,w,c
  2636   000ED4  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2637   000ED6  5012               	movf	(___ftmul@f2+2)^0,w,c
  2638   000ED8  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2639   000EDA                     l2215:
  2640   000EDA  90D8               	bcf	status,0,c
  2641   000EDC  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  2642   000EDE  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  2643   000EE0  320D               	rrcf	___ftmul@f1^0,f,c
  2644   000EE2  90D8               	bcf	status,0,c
  2645   000EE4  3610               	rlcf	___ftmul@f2^0,f,c
  2646   000EE6  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  2647   000EE8  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  2648   000EEA  2E1A               	decfsz	___ftmul@cntr^0,f,c
  2649   000EEC  D7EE               	goto	l2211
  2650   000EEE  0E09               	movlw	9
  2651   000EF0  6E1A               	movwf	___ftmul@cntr^0,c
  2652   000EF2                     l2221:
  2653   000EF2  A00D               	btfss	___ftmul@f1^0,0,c
  2654   000EF4  D006               	goto	l2225
  2655   000EF6  5010               	movf	___ftmul@f2^0,w,c
  2656   000EF8  2617               	addwf	___ftmul@f3_as_product^0,f,c
  2657   000EFA  5011               	movf	(___ftmul@f2+1)^0,w,c
  2658   000EFC  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2659   000EFE  5012               	movf	(___ftmul@f2+2)^0,w,c
  2660   000F00  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2661   000F02                     l2225:
  2662   000F02  90D8               	bcf	status,0,c
  2663   000F04  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  2664   000F06  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  2665   000F08  320D               	rrcf	___ftmul@f1^0,f,c
  2666   000F0A  90D8               	bcf	status,0,c
  2667   000F0C  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  2668   000F0E  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  2669   000F10  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  2670   000F12  2E1A               	decfsz	___ftmul@cntr^0,f,c
  2671   000F14  D7EE               	goto	l2221
  2672   000F16  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2673   000F1A  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2674   000F1E  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2675   000F22  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2676   000F26  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2677   000F2A  ECED  F008         	call	___ftpack	;wreg free
  2678   000F2E  C001  F00D         	movff	?___ftpack,?___ftmul
  2679   000F32  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2680   000F36  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2681   000F3A  0012               	return		;funcret
  2682   000F3C                     __end_of___ftmul:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function ___ftdiv *****************
  2686 ;; Defined at:
  2687 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdiv.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  f1              3   27[COMRAM] float 
  2690 ;;  f2              3   30[COMRAM] float 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  f3              3   37[COMRAM] float 
  2693 ;;  sign            1   41[COMRAM] unsigned char 
  2694 ;;  exp             1   40[COMRAM] unsigned char 
  2695 ;;  cntr            1   36[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  3   27[COMRAM] float 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2705 ;;      Params:         6       0       0       0       0       0       0       0       0
  2706 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2707 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2708 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2709 ;;Total ram usage:       15 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		___ftpack
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text10
  2720   001022                     __ptext10:
  2721                           	callstack 0
  2722   001022                     ___ftdiv:
  2723                           	callstack 28
  2724                           
  2725                           ;incstack = 0
  2726   001022  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  2727   001026  6A23               	clrf	(??___ftdiv+1)^0,c
  2728   001028  6A24               	clrf	(??___ftdiv+2)^0,c
  2729   00102A  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  2730   00102C  3622               	rlcf	??___ftdiv^0,f,c
  2731   00102E  E301               	bnc	u1201
  2732   001030  8023               	bsf	(??___ftdiv+1)^0,0,c
  2733   001032                     u1201:
  2734   001032  5022               	movf	??___ftdiv^0,w,c
  2735   001034  6E29               	movwf	___ftdiv@exp^0,c
  2736   001036  5029               	movf	___ftdiv@exp^0,w,c
  2737   001038  A4D8               	btfss	status,2,c
  2738   00103A  D007               	goto	l2145
  2739   00103C  0E00               	movlw	0
  2740   00103E  6E1C               	movwf	?___ftdiv^0,c
  2741   001040  0E00               	movlw	0
  2742   001042  6E1D               	movwf	(?___ftdiv+1)^0,c
  2743   001044  0E00               	movlw	0
  2744   001046  6E1E               	movwf	(?___ftdiv+2)^0,c
  2745   001048  0012               	return	
  2746   00104A                     l2145:
  2747   00104A  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  2748   00104E  6A23               	clrf	(??___ftdiv+1)^0,c
  2749   001050  6A24               	clrf	(??___ftdiv+2)^0,c
  2750   001052  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  2751   001054  3622               	rlcf	??___ftdiv^0,f,c
  2752   001056  E301               	bnc	u1221
  2753   001058  8023               	bsf	(??___ftdiv+1)^0,0,c
  2754   00105A                     u1221:
  2755   00105A  5022               	movf	??___ftdiv^0,w,c
  2756   00105C  6E2A               	movwf	___ftdiv@sign^0,c
  2757   00105E  502A               	movf	___ftdiv@sign^0,w,c
  2758   001060  A4D8               	btfss	status,2,c
  2759   001062  D007               	goto	l2151
  2760   001064  0E00               	movlw	0
  2761   001066  6E1C               	movwf	?___ftdiv^0,c
  2762   001068  0E00               	movlw	0
  2763   00106A  6E1D               	movwf	(?___ftdiv+1)^0,c
  2764   00106C  0E00               	movlw	0
  2765   00106E  6E1E               	movwf	(?___ftdiv+2)^0,c
  2766   001070  0012               	return	
  2767   001072                     l2151:
  2768   001072  0E00               	movlw	0
  2769   001074  6E26               	movwf	___ftdiv@f3^0,c
  2770   001076  0E00               	movlw	0
  2771   001078  6E27               	movwf	(___ftdiv@f3+1)^0,c
  2772   00107A  0E00               	movlw	0
  2773   00107C  6E28               	movwf	(___ftdiv@f3+2)^0,c
  2774   00107E  502A               	movf	___ftdiv@sign^0,w,c
  2775   001080  0F89               	addlw	137
  2776   001082  5E29               	subwf	___ftdiv@exp^0,f,c
  2777   001084  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2778   001088  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2779   00108A  1A2A               	xorwf	___ftdiv@sign^0,f,c
  2780   00108C  0E80               	movlw	128
  2781   00108E  162A               	andwf	___ftdiv@sign^0,f,c
  2782   001090  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  2783   001092  0EFF               	movlw	255
  2784   001094  161C               	andwf	___ftdiv@f1^0,f,c
  2785   001096  0EFF               	movlw	255
  2786   001098  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  2787   00109A  0E00               	movlw	0
  2788   00109C  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  2789   00109E  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  2790   0010A0  0EFF               	movlw	255
  2791   0010A2  161F               	andwf	___ftdiv@f2^0,f,c
  2792   0010A4  0EFF               	movlw	255
  2793   0010A6  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  2794   0010A8  0E00               	movlw	0
  2795   0010AA  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  2796   0010AC  0E18               	movlw	24
  2797   0010AE  6E25               	movwf	___ftdiv@cntr^0,c
  2798   0010B0                     l2171:
  2799   0010B0  90D8               	bcf	status,0,c
  2800   0010B2  3626               	rlcf	___ftdiv@f3^0,f,c
  2801   0010B4  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  2802   0010B6  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  2803   0010B8  501F               	movf	___ftdiv@f2^0,w,c
  2804   0010BA  5C1C               	subwf	___ftdiv@f1^0,w,c
  2805   0010BC  5020               	movf	(___ftdiv@f2+1)^0,w,c
  2806   0010BE  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  2807   0010C0  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2808   0010C2  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  2809   0010C4  A0D8               	btfss	status,0,c
  2810   0010C6  D007               	goto	l645
  2811   0010C8  501F               	movf	___ftdiv@f2^0,w,c
  2812   0010CA  5E1C               	subwf	___ftdiv@f1^0,f,c
  2813   0010CC  5020               	movf	(___ftdiv@f2+1)^0,w,c
  2814   0010CE  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  2815   0010D0  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2816   0010D2  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  2817   0010D4  8026               	bsf	___ftdiv@f3^0,0,c
  2818   0010D6                     l645:
  2819   0010D6  90D8               	bcf	status,0,c
  2820   0010D8  361C               	rlcf	___ftdiv@f1^0,f,c
  2821   0010DA  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  2822   0010DC  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  2823   0010DE  2E25               	decfsz	___ftdiv@cntr^0,f,c
  2824   0010E0  D7E7               	goto	l2171
  2825   0010E2  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  2826   0010E6  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2827   0010EA  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2828   0010EE  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  2829   0010F2  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  2830   0010F6  ECED  F008         	call	___ftpack	;wreg free
  2831   0010FA  C001  F01C         	movff	?___ftpack,?___ftdiv
  2832   0010FE  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  2833   001102  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  2834   001106  0012               	return		;funcret
  2835   001108                     __end_of___ftdiv:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function ___awtoft *****************
  2839 ;; Defined at:
  2840 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awtoft.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  c               2    8[COMRAM] int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  sign            1   11[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  3    8[COMRAM] float 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         3       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        4 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 2
  2861 ;; This function calls:
  2862 ;;		___ftpack
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text11
  2869   0016B0                     __ptext11:
  2870                           	callstack 0
  2871   0016B0                     ___awtoft:
  2872                           	callstack 28
  2873                           
  2874                           ;incstack = 0
  2875   0016B0  0E00               	movlw	0
  2876   0016B2  6E0C               	movwf	___awtoft@sign^0,c
  2877   0016B4  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  2878   0016B6  D006               	goto	l2241
  2879   0016B8  6C09               	negf	___awtoft@c^0,c
  2880   0016BA  1E0A               	comf	(___awtoft@c+1)^0,f,c
  2881   0016BC  B0D8               	btfsc	status,0,c
  2882   0016BE  2A0A               	incf	(___awtoft@c+1)^0,f,c
  2883   0016C0  0E01               	movlw	1
  2884   0016C2  6E0C               	movwf	___awtoft@sign^0,c
  2885   0016C4                     l2241:
  2886   0016C4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2887   0016C8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2888   0016CC  6A03               	clrf	(___ftpack@arg+2)^0,c
  2889   0016CE  0E8E               	movlw	142
  2890   0016D0  6E04               	movwf	___ftpack@exp^0,c
  2891   0016D2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2892   0016D6  ECED  F008         	call	___ftpack	;wreg free
  2893   0016DA  C001  F009         	movff	?___ftpack,?___awtoft
  2894   0016DE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2895   0016E2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2896   0016E6  0012               	return		;funcret
  2897   0016E8                     __end_of___awtoft:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function ___ftpack *****************
  2901 ;; Defined at:
  2902 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  arg             3    0[COMRAM] unsigned um
  2905 ;;  exp             1    3[COMRAM] unsigned char 
  2906 ;;  sign            1    4[COMRAM] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  3    0[COMRAM] float 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2918 ;;      Params:         5       0       0       0       0       0       0       0       0
  2919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2920 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2921 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2922 ;;Total ram usage:        8 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		___awtoft
  2929 ;;		___ftdiv
  2930 ;;		___ftmul
  2931 ;;		___lwtoft
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text12
  2936   0011DA                     __ptext12:
  2937                           	callstack 0
  2938   0011DA                     ___ftpack:
  2939                           	callstack 28
  2940                           
  2941                           ;incstack = 0
  2942   0011DA  5004               	movf	___ftpack@exp^0,w,c
  2943   0011DC  B4D8               	btfsc	status,2,c
  2944   0011DE  D005               	goto	u1010
  2945   0011E0  5001               	movf	___ftpack@arg^0,w,c
  2946   0011E2  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  2947   0011E4  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  2948   0011E6  A4D8               	btfss	status,2,c
  2949   0011E8  D00C               	goto	l2005
  2950   0011EA                     u1010:
  2951   0011EA  0E00               	movlw	0
  2952   0011EC  6E01               	movwf	?___ftpack^0,c
  2953   0011EE  0E00               	movlw	0
  2954   0011F0  6E02               	movwf	(?___ftpack+1)^0,c
  2955   0011F2  0E00               	movlw	0
  2956   0011F4  6E03               	movwf	(?___ftpack+2)^0,c
  2957   0011F6  0012               	return	
  2958   0011F8                     l2003:
  2959   0011F8  2A04               	incf	___ftpack@exp^0,f,c
  2960   0011FA  90D8               	bcf	status,0,c
  2961   0011FC  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2962   0011FE  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2963   001200  3201               	rrcf	___ftpack@arg^0,f,c
  2964   001202                     l2005:
  2965   001202  0E00               	movlw	0
  2966   001204  1401               	andwf	___ftpack@arg^0,w,c
  2967   001206  6E06               	movwf	??___ftpack^0,c
  2968   001208  0E00               	movlw	0
  2969   00120A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2970   00120C  6E07               	movwf	(??___ftpack+1)^0,c
  2971   00120E  0EFE               	movlw	254
  2972   001210  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2973   001212  6E08               	movwf	(??___ftpack+2)^0,c
  2974   001214  5006               	movf	??___ftpack^0,w,c
  2975   001216  1007               	iorwf	(??___ftpack+1)^0,w,c
  2976   001218  1008               	iorwf	(??___ftpack+2)^0,w,c
  2977   00121A  B4D8               	btfsc	status,2,c
  2978   00121C  D00C               	goto	l2011
  2979   00121E  D7EC               	goto	l2003
  2980   001220                     l2007:
  2981   001220  2A04               	incf	___ftpack@exp^0,f,c
  2982   001222  0E01               	movlw	1
  2983   001224  2601               	addwf	___ftpack@arg^0,f,c
  2984   001226  0E00               	movlw	0
  2985   001228  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2986   00122A  0E00               	movlw	0
  2987   00122C  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2988   00122E  90D8               	bcf	status,0,c
  2989   001230  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2990   001232  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2991   001234  3201               	rrcf	___ftpack@arg^0,f,c
  2992   001236                     l2011:
  2993   001236  0E00               	movlw	0
  2994   001238  1401               	andwf	___ftpack@arg^0,w,c
  2995   00123A  6E06               	movwf	??___ftpack^0,c
  2996   00123C  0E00               	movlw	0
  2997   00123E  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2998   001240  6E07               	movwf	(??___ftpack+1)^0,c
  2999   001242  0EFF               	movlw	255
  3000   001244  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3001   001246  6E08               	movwf	(??___ftpack+2)^0,c
  3002   001248  5006               	movf	??___ftpack^0,w,c
  3003   00124A  1007               	iorwf	(??___ftpack+1)^0,w,c
  3004   00124C  1008               	iorwf	(??___ftpack+2)^0,w,c
  3005   00124E  B4D8               	btfsc	status,2,c
  3006   001250  D006               	goto	l2015
  3007   001252  D7E6               	goto	l2007
  3008   001254                     l2013:
  3009   001254  0604               	decf	___ftpack@exp^0,f,c
  3010   001256  90D8               	bcf	status,0,c
  3011   001258  3601               	rlcf	___ftpack@arg^0,f,c
  3012   00125A  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3013   00125C  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3014   00125E                     l2015:
  3015   00125E  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3016   001260  D003               	goto	u1050
  3017   001262  0E02               	movlw	2
  3018   001264  6004               	cpfslt	___ftpack@exp^0,c
  3019   001266  D7F6               	goto	l2013
  3020   001268                     u1050:
  3021   001268  A004               	btfss	___ftpack@exp^0,0,c
  3022   00126A  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3023   00126C  90D8               	bcf	status,0,c
  3024   00126E  3204               	rrcf	___ftpack@exp^0,f,c
  3025   001270  5004               	movf	___ftpack@exp^0,w,c
  3026   001272  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3027   001274  5005               	movf	___ftpack@sign^0,w,c
  3028   001276  A4D8               	btfss	status,2,c
  3029   001278  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3030   00127A  C001  F001         	movff	___ftpack@arg,?___ftpack
  3031   00127E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3032   001282  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3033   001286  0012               	return		;funcret
  3034   001288                     __end_of___ftpack:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _Mensaje_LCD_Var_Mensaje20x4 *****************
  3038 ;; Defined at:
  3039 ;;		line 308 in file "LibLCDXC8.h"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  a               1   12[COMRAM] PTR unsigned char 
  3042 ;;		 -> STR_26(15), STR_22(3), STR_18(16), STR_14(10), 
  3043 ;;		 -> STR_10(2), STR_6(13), STR_2(3), 
  3044 ;;  b               1   13[COMRAM] PTR unsigned char 
  3045 ;;		 -> STR_27(11), STR_23(17), STR_19(14), STR_15(3), 
  3046 ;;		 -> STR_11(22), STR_7(18), STR_3(18), 
  3047 ;;  c               1   14[COMRAM] PTR unsigned char 
  3048 ;;		 -> STR_28(2), STR_24(2), STR_20(2), STR_16(19), 
  3049 ;;		 -> STR_12(12), STR_8(5), STR_4(5), 
  3050 ;;  d               1   15[COMRAM] PTR unsigned char 
  3051 ;;		 -> STR_29(5), STR_25(18), STR_21(5), STR_17(15), 
  3052 ;;		 -> STR_13(3), STR_9(7), STR_5(7), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         4       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        4 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 5
  3071 ;; This function calls:
  3072 ;;		_BorraLCD
  3073 ;;		_DireccionaLCD
  3074 ;;		_Mensaje_LCD_Var_Centrado
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text13
  3081   0015FE                     __ptext13:
  3082                           	callstack 0
  3083   0015FE                     _Mensaje_LCD_Var_Mensaje20x4:
  3084                           	callstack 25
  3085                           
  3086                           ;LibLCDXC8.h: 309: BorraLCD();
  3087                           
  3088                           ;incstack = 0
  3089   0015FE  ECF8  F00B         	call	_BorraLCD	;wreg free
  3090                           
  3091                           ;LibLCDXC8.h: 310: DireccionaLCD(0x00);
  3092   001602  0E00               	movlw	0
  3093   001604  ECED  F00B         	call	_DireccionaLCD
  3094                           
  3095                           ;LibLCDXC8.h: 311: Mensaje_LCD_Var_Centrado(a);
  3096   001608  C00D  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@a,Mensaje_LCD_Var_Centrado@a
  3097   00160C  EC4D  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3098                           
  3099                           ;LibLCDXC8.h: 312: DireccionaLCD(0xC0);
  3100   001610  0EC0               	movlw	192
  3101   001612  ECED  F00B         	call	_DireccionaLCD
  3102                           
  3103                           ;LibLCDXC8.h: 313: Mensaje_LCD_Var_Centrado(b);
  3104   001616  C00E  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@b,Mensaje_LCD_Var_Centrado@a
  3105   00161A  EC4D  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3106                           
  3107                           ;LibLCDXC8.h: 314: DireccionaLCD(0xC0-44);
  3108   00161E  0E94               	movlw	148
  3109   001620  ECED  F00B         	call	_DireccionaLCD
  3110                           
  3111                           ;LibLCDXC8.h: 315: Mensaje_LCD_Var_Centrado(c);
  3112   001624  C00F  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@c,Mensaje_LCD_Var_Centrado@a
  3113   001628  EC4D  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3114                           
  3115                           ;LibLCDXC8.h: 316: DireccionaLCD(0xC0+20);
  3116   00162C  0ED4               	movlw	212
  3117   00162E  ECED  F00B         	call	_DireccionaLCD
  3118                           
  3119                           ;LibLCDXC8.h: 317: Mensaje_LCD_Var_Centrado(d);
  3120   001632  C010  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@d,Mensaje_LCD_Var_Centrado@a
  3121   001636  EC4D  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3122   00163A  0012               	return		;funcret
  3123   00163C                     __end_of_Mensaje_LCD_Var_Mensaje20x4:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _Mensaje_LCD_Var_Centrado *****************
  3127 ;; Defined at:
  3128 ;;		line 329 in file "LibLCDXC8.h"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  a               1    8[COMRAM] PTR unsigned char 
  3131 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3132 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3133 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3134 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3135 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3136 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3137 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  i               1   11[COMRAM] unsigned char 
  3140 ;;  n               1   10[COMRAM] unsigned char 
  3141 ;;  l               1    9[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3154 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        4 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_EscribeLCD_c
  3160 ;;		___awdiv
  3161 ;;		_strlen
  3162 ;; This function is called by:
  3163 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text14
  3168   00149A                     __ptext14:
  3169                           	callstack 0
  3170   00149A                     _Mensaje_LCD_Var_Centrado:
  3171                           	callstack 25
  3172                           
  3173                           ;LibLCDXC8.h: 330: char l =strlen(a);
  3174                           
  3175                           ;incstack = 0
  3176   00149A  C009  F001         	movff	Mensaje_LCD_Var_Centrado@a,strlen@s
  3177   00149E  EC9D  F00B         	call	_strlen	;wreg free
  3178   0014A2  5001               	movf	?_strlen^0,w,c
  3179   0014A4  6E0A               	movwf	Mensaje_LCD_Var_Centrado@l^0,c
  3180                           
  3181                           ;LibLCDXC8.h: 331: char n=(20-l)/2;
  3182   0014A6  500A               	movf	Mensaje_LCD_Var_Centrado@l^0,w,c
  3183   0014A8  0814               	sublw	20
  3184   0014AA  6E01               	movwf	___awdiv@dividend^0,c
  3185   0014AC  0E00               	movlw	0
  3186   0014AE  A0D8               	btfss	status,0,c
  3187   0014B0  2AE8               	incf	wreg,f,c
  3188   0014B2  0800               	sublw	0
  3189   0014B4  6E02               	movwf	(___awdiv@dividend+1)^0,c
  3190   0014B6  0E00               	movlw	0
  3191   0014B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3192   0014BA  0E02               	movlw	2
  3193   0014BC  6E03               	movwf	___awdiv@divisor^0,c
  3194   0014BE  EC92  F009         	call	___awdiv	;wreg free
  3195   0014C2  5001               	movf	?___awdiv^0,w,c
  3196   0014C4  6E0B               	movwf	Mensaje_LCD_Var_Centrado@n^0,c
  3197                           
  3198                           ;LibLCDXC8.h: 332: char i;;LibLCDXC8.h: 334: for(i=0;i<n;i++){
  3199   0014C6  0E00               	movlw	0
  3200   0014C8  6E0C               	movwf	Mensaje_LCD_Var_Centrado@i^0,c
  3201   0014CA  D004               	goto	l1979
  3202   0014CC                     l1975:
  3203                           
  3204                           ;LibLCDXC8.h: 335: EscribeLCD_c(' ');
  3205   0014CC  0E20               	movlw	32
  3206   0014CE  ECE2  F00B         	call	_EscribeLCD_c
  3207   0014D2  2A0C               	incf	Mensaje_LCD_Var_Centrado@i^0,f,c
  3208   0014D4                     l1979:
  3209   0014D4  500B               	movf	Mensaje_LCD_Var_Centrado@n^0,w,c
  3210   0014D6  5C0C               	subwf	Mensaje_LCD_Var_Centrado@i^0,w,c
  3211   0014D8  B0D8               	btfsc	status,0,c
  3212   0014DA  D00A               	goto	l1985
  3213   0014DC  D7F7               	goto	l1975
  3214   0014DE                     l1981:
  3215                           
  3216                           ;LibLCDXC8.h: 338: EscribeLCD_c(*a);
  3217   0014DE  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  3218   0014E2                     	if	1	;There is more than 1 active tblptr byte
  3219   0014E2  0E08               	movlw	high __smallconst
  3220   0014E4  6EF7               	movwf	tblptrh,c
  3221   0014E6                     	endif
  3222   0014E6                     	if	0	;tblptru may be non-zero
  3223   0014E6                     	endif
  3224   0014E6                     	if	0	;tblptru may be non-zero
  3225   0014E6                     	endif
  3226   0014E6  0008               	tblrd		*
  3227   0014E8  50F5               	movf	tablat,w,c
  3228   0014EA  ECE2  F00B         	call	_EscribeLCD_c
  3229                           
  3230                           ;LibLCDXC8.h: 339: a++;
  3231   0014EE  2A09               	incf	Mensaje_LCD_Var_Centrado@a^0,f,c
  3232   0014F0                     l1985:
  3233   0014F0  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  3234   0014F4                     	if	1	;There is more than 1 active tblptr byte
  3235   0014F4  0E08               	movlw	high __smallconst
  3236   0014F6  6EF7               	movwf	tblptrh,c
  3237   0014F8                     	endif
  3238   0014F8                     	if	0	;tblptru may be non-zero
  3239   0014F8                     	endif
  3240   0014F8                     	if	0	;tblptru may be non-zero
  3241   0014F8                     	endif
  3242   0014F8  0008               	tblrd		*
  3243   0014FA  50F5               	movf	tablat,w,c
  3244   0014FC  0900               	iorlw	0
  3245   0014FE  B4D8               	btfsc	status,2,c
  3246   001500  0012               	return	
  3247   001502  D7ED               	goto	l1981
  3248   001504                     __end_of_Mensaje_LCD_Var_Centrado:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _strlen *****************
  3252 ;; Defined at:
  3253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3256 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3257 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3258 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3259 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3260 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3261 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3262 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  3265 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3266 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3267 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3268 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3269 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3270 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3271 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    0[COMRAM] unsigned int 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         2       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        3 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_Mensaje_LCD_Var_Centrado
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text15
  3296   00173A                     __ptext15:
  3297                           	callstack 0
  3298   00173A                     _strlen:
  3299                           	callstack 27
  3300                           
  3301                           ;incstack = 0
  3302   00173A  C001  F003         	movff	strlen@s,strlen@cp
  3303   00173E  D001               	goto	l1825
  3304   001740                     l1823:
  3305   001740  2A03               	incf	strlen@cp^0,f,c
  3306   001742                     l1825:
  3307   001742  C003  FFF6         	movff	strlen@cp,tblptrl
  3308   001746                     	if	1	;There is more than 1 active tblptr byte
  3309   001746  0E08               	movlw	high __smallconst
  3310   001748  6EF7               	movwf	tblptrh,c
  3311   00174A                     	endif
  3312   00174A                     	if	0	;tblptru may be non-zero
  3313   00174A                     	endif
  3314   00174A                     	if	0	;tblptru may be non-zero
  3315   00174A                     	endif
  3316   00174A  0008               	tblrd		*
  3317   00174C  50F5               	movf	tablat,w,c
  3318   00174E  0900               	iorlw	0
  3319   001750  A4D8               	btfss	status,2,c
  3320   001752  D7F6               	goto	l1823
  3321   001754  5001               	movf	strlen@s^0,w,c
  3322   001756  5C03               	subwf	strlen@cp^0,w,c
  3323   001758  6E01               	movwf	?_strlen^0,c
  3324   00175A  6A02               	clrf	(?_strlen+1)^0,c
  3325   00175C  BE01               	btfsc	?_strlen^0,7,c
  3326   00175E  0602               	decf	(?_strlen+1)^0,f,c
  3327   001760  0012               	return		;funcret
  3328   001762                     __end_of_strlen:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function ___awdiv *****************
  3332 ;; Defined at:
  3333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        2    0[COMRAM] int 
  3336 ;;  divisor         2    2[COMRAM] int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        2    6[COMRAM] int 
  3339 ;;  sign            1    5[COMRAM] unsigned char 
  3340 ;;  counter         1    4[COMRAM] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2    0[COMRAM] int 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         4       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        8 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_Mensaje_LCD_Var_Centrado
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text16
  3365   001324                     __ptext16:
  3366                           	callstack 0
  3367   001324                     ___awdiv:
  3368                           	callstack 27
  3369                           
  3370                           ;incstack = 0
  3371   001324  0E00               	movlw	0
  3372   001326  6E06               	movwf	___awdiv@sign^0,c
  3373   001328  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3374   00132A  D006               	goto	l1839
  3375   00132C  6C03               	negf	___awdiv@divisor^0,c
  3376   00132E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3377   001330  B0D8               	btfsc	status,0,c
  3378   001332  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3379   001334  0E01               	movlw	1
  3380   001336  6E06               	movwf	___awdiv@sign^0,c
  3381   001338                     l1839:
  3382   001338  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  3383   00133A  D006               	goto	l1845
  3384   00133C  6C01               	negf	___awdiv@dividend^0,c
  3385   00133E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3386   001340  B0D8               	btfsc	status,0,c
  3387   001342  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3388   001344  0E01               	movlw	1
  3389   001346  1A06               	xorwf	___awdiv@sign^0,f,c
  3390   001348                     l1845:
  3391   001348  0E00               	movlw	0
  3392   00134A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3393   00134C  0E00               	movlw	0
  3394   00134E  6E07               	movwf	___awdiv@quotient^0,c
  3395   001350  5003               	movf	___awdiv@divisor^0,w,c
  3396   001352  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3397   001354  B4D8               	btfsc	status,2,c
  3398   001356  D01C               	goto	l1867
  3399   001358  0E01               	movlw	1
  3400   00135A  6E05               	movwf	___awdiv@counter^0,c
  3401   00135C  D004               	goto	l1853
  3402   00135E                     l1851:
  3403   00135E  90D8               	bcf	status,0,c
  3404   001360  3603               	rlcf	___awdiv@divisor^0,f,c
  3405   001362  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3406   001364  2A05               	incf	___awdiv@counter^0,f,c
  3407   001366                     l1853:
  3408   001366  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3409   001368  D7FA               	goto	l1851
  3410   00136A                     u900:
  3411   00136A  90D8               	bcf	status,0,c
  3412   00136C  3607               	rlcf	___awdiv@quotient^0,f,c
  3413   00136E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3414   001370  5003               	movf	___awdiv@divisor^0,w,c
  3415   001372  5C01               	subwf	___awdiv@dividend^0,w,c
  3416   001374  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3417   001376  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3418   001378  A0D8               	btfss	status,0,c
  3419   00137A  D005               	goto	l1863
  3420   00137C  5003               	movf	___awdiv@divisor^0,w,c
  3421   00137E  5E01               	subwf	___awdiv@dividend^0,f,c
  3422   001380  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3423   001382  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3424   001384  8007               	bsf	___awdiv@quotient^0,0,c
  3425   001386                     l1863:
  3426   001386  90D8               	bcf	status,0,c
  3427   001388  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3428   00138A  3203               	rrcf	___awdiv@divisor^0,f,c
  3429   00138C  2E05               	decfsz	___awdiv@counter^0,f,c
  3430   00138E  D7ED               	goto	u900
  3431   001390                     l1867:
  3432   001390  5006               	movf	___awdiv@sign^0,w,c
  3433   001392  B4D8               	btfsc	status,2,c
  3434   001394  D004               	goto	l1871
  3435   001396  6C07               	negf	___awdiv@quotient^0,c
  3436   001398  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3437   00139A  B0D8               	btfsc	status,0,c
  3438   00139C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3439   00139E                     l1871:
  3440   00139E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3441   0013A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3442   0013A6  0012               	return		;funcret
  3443   0013A8                     __end_of___awdiv:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _EscribeLCD_c *****************
  3447 ;; Defined at:
  3448 ;;		line 122 in file "LibLCDXC8.h"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  a               1    wreg     unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  a               1    4[COMRAM] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0
  3463 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3465 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3466 ;;Total ram usage:        1 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 3
  3469 ;; This function calls:
  3470 ;;		_EnviaDato
  3471 ;;		_HabilitaLCD
  3472 ;;		_RetardoLCD
  3473 ;; This function is called by:
  3474 ;;		_Mensaje_LCD_Var_Centrado
  3475 ;;		_MensajeLCD_Var
  3476 ;;		_imprimir_porcentaje
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text17
  3481   0017C4                     __ptext17:
  3482                           	callstack 0
  3483   0017C4                     _EscribeLCD_c:
  3484                           	callstack 25
  3485                           
  3486                           ;incstack = 0
  3487                           ;EscribeLCD_c@a stored from wreg
  3488   0017C4  6E05               	movwf	EscribeLCD_c@a^0,c
  3489                           
  3490                           ;LibLCDXC8.h: 126: LATD2=1;
  3491   0017C6  848C               	bsf	3980,2,c	;volatile
  3492                           
  3493                           ;LibLCDXC8.h: 127: EnviaDato(a);
  3494   0017C8  5005               	movf	EscribeLCD_c@a^0,w,c
  3495   0017CA  ECDC  F00A         	call	_EnviaDato
  3496                           
  3497                           ;LibLCDXC8.h: 128: HabilitaLCD();
  3498   0017CE  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3499                           
  3500                           ;LibLCDXC8.h: 129: RetardoLCD(4);
  3501   0017D2  0E04               	movlw	4
  3502   0017D4  ECB1  F00A         	call	_RetardoLCD
  3503   0017D8  0012               	return		;funcret
  3504   0017DA                     __end_of_EscribeLCD_c:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _DireccionaLCD *****************
  3508 ;; Defined at:
  3509 ;;		line 355 in file "LibLCDXC8.h"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  a               1    wreg     unsigned char 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  a               1    4[COMRAM] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0
  3524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3526 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3527 ;;Total ram usage:        1 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 3
  3530 ;; This function calls:
  3531 ;;		_EnviaDato
  3532 ;;		_HabilitaLCD
  3533 ;;		_RetardoLCD
  3534 ;; This function is called by:
  3535 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3536 ;;		_imprimir_porcentaje
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text18
  3541   0017DA                     __ptext18:
  3542                           	callstack 0
  3543   0017DA                     _DireccionaLCD:
  3544                           	callstack 26
  3545                           
  3546                           ;incstack = 0
  3547                           ;DireccionaLCD@a stored from wreg
  3548   0017DA  6E05               	movwf	DireccionaLCD@a^0,c
  3549                           
  3550                           ;LibLCDXC8.h: 358: LATD2=0;
  3551   0017DC  948C               	bcf	3980,2,c	;volatile
  3552                           
  3553                           ;LibLCDXC8.h: 359: EnviaDato(a);
  3554   0017DE  5005               	movf	DireccionaLCD@a^0,w,c
  3555   0017E0  ECDC  F00A         	call	_EnviaDato
  3556                           
  3557                           ;LibLCDXC8.h: 360: HabilitaLCD();
  3558   0017E4  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3559                           
  3560                           ;LibLCDXC8.h: 361: RetardoLCD(4);
  3561   0017E8  0E04               	movlw	4
  3562   0017EA  ECB1  F00A         	call	_RetardoLCD
  3563   0017EE  0012               	return		;funcret
  3564   0017F0                     __end_of_DireccionaLCD:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _InicializaLCD *****************
  3568 ;; Defined at:
  3569 ;;		line 71 in file "LibLCDXC8.h"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 4
  3590 ;; This function calls:
  3591 ;;		_BorraLCD
  3592 ;;		_EnviaDato
  3593 ;;		_HabilitaLCD
  3594 ;;		_RetardoLCD
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text19
  3601   001288                     __ptext19:
  3602                           	callstack 0
  3603   001288                     _InicializaLCD:
  3604                           	callstack 26
  3605                           
  3606                           ;LibLCDXC8.h: 73: LATD2=0;
  3607                           
  3608                           ;incstack = 0
  3609   001288  948C               	bcf	3980,2,c	;volatile
  3610                           
  3611                           ;LibLCDXC8.h: 74: if(interfaz==4)
  3612   00128A  0E04               	movlw	4
  3613   00128C  184F               	xorwf	_interfaz^0,w,c
  3614   00128E  A4D8               	btfss	status,2,c
  3615   001290  D004               	goto	l2059
  3616                           
  3617                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  3618   001292  508C               	movf	140,w,c	;volatile
  3619   001294  0B0F               	andlw	15
  3620   001296  0930               	iorlw	48
  3621   001298  D001               	goto	L3
  3622   00129A                     l2059:
  3623                           
  3624                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  3625   00129A  0E3F               	movlw	63
  3626   00129C                     L3:
  3627   00129C  6E8C               	movwf	140,c	;volatile
  3628                           
  3629                           ;LibLCDXC8.h: 78: HabilitaLCD();
  3630   00129E  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3631                           
  3632                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  3633   0012A2  0E01               	movlw	1
  3634   0012A4  ECB1  F00A         	call	_RetardoLCD
  3635                           
  3636                           ;LibLCDXC8.h: 80: if(interfaz==4)
  3637   0012A8  0E04               	movlw	4
  3638   0012AA  184F               	xorwf	_interfaz^0,w,c
  3639   0012AC  A4D8               	btfss	status,2,c
  3640   0012AE  D004               	goto	l2069
  3641                           
  3642                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  3643   0012B0  508C               	movf	140,w,c	;volatile
  3644   0012B2  0B0F               	andlw	15
  3645   0012B4  0930               	iorlw	48
  3646   0012B6  D001               	goto	L4
  3647   0012B8                     l2069:
  3648                           
  3649                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  3650   0012B8  0E3F               	movlw	63
  3651   0012BA                     L4:
  3652   0012BA  6E8C               	movwf	140,c	;volatile
  3653                           
  3654                           ;LibLCDXC8.h: 84: HabilitaLCD();
  3655   0012BC  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3656                           
  3657                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  3658   0012C0  0E03               	movlw	3
  3659   0012C2  ECB1  F00A         	call	_RetardoLCD
  3660                           
  3661                           ;LibLCDXC8.h: 86: if(interfaz==4)
  3662   0012C6  0E04               	movlw	4
  3663   0012C8  184F               	xorwf	_interfaz^0,w,c
  3664   0012CA  A4D8               	btfss	status,2,c
  3665   0012CC  D004               	goto	l2079
  3666                           
  3667                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  3668   0012CE  508C               	movf	140,w,c	;volatile
  3669   0012D0  0B0F               	andlw	15
  3670   0012D2  0930               	iorlw	48
  3671   0012D4  D001               	goto	L5
  3672   0012D6                     l2079:
  3673                           
  3674                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  3675   0012D6  0E3F               	movlw	63
  3676   0012D8                     L5:
  3677   0012D8  6E8C               	movwf	140,c	;volatile
  3678                           
  3679                           ;LibLCDXC8.h: 90: HabilitaLCD();
  3680   0012DA  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3681                           
  3682                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  3683   0012DE  0E04               	movlw	4
  3684   0012E0  ECB1  F00A         	call	_RetardoLCD
  3685                           
  3686                           ;LibLCDXC8.h: 92: if(interfaz==4){
  3687   0012E4  0E04               	movlw	4
  3688   0012E6  184F               	xorwf	_interfaz^0,w,c
  3689   0012E8  A4D8               	btfss	status,2,c
  3690   0012EA  D011               	goto	l2099
  3691                           
  3692                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  3693   0012EC  508C               	movf	140,w,c	;volatile
  3694   0012EE  0B0F               	andlw	15
  3695   0012F0  0920               	iorlw	32
  3696   0012F2  6E8C               	movwf	140,c	;volatile
  3697                           
  3698                           ;LibLCDXC8.h: 94: HabilitaLCD();
  3699   0012F4  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3700                           
  3701                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  3702   0012F8  0E04               	movlw	4
  3703   0012FA  ECB1  F00A         	call	_RetardoLCD
  3704                           
  3705                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  3706   0012FE  0E2F               	movlw	47
  3707   001300  ECDC  F00A         	call	_EnviaDato
  3708                           
  3709                           ;LibLCDXC8.h: 97: HabilitaLCD();
  3710   001304  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3711                           
  3712                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3713   001308  0E04               	movlw	4
  3714   00130A  ECB1  F00A         	call	_RetardoLCD
  3715   00130E                     l2099:
  3716                           
  3717                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  3718   00130E  ECF8  F00B         	call	_BorraLCD	;wreg free
  3719                           
  3720                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  3721   001312  0E0F               	movlw	15
  3722   001314  ECDC  F00A         	call	_EnviaDato
  3723                           
  3724                           ;LibLCDXC8.h: 102: HabilitaLCD();
  3725   001318  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3726                           
  3727                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  3728   00131C  0E04               	movlw	4
  3729   00131E  ECB1  F00A         	call	_RetardoLCD
  3730   001322  0012               	return		;funcret
  3731   001324                     __end_of_InicializaLCD:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _BorraLCD *****************
  3735 ;; Defined at:
  3736 ;;		line 114 in file "LibLCDXC8.h"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 3
  3757 ;; This function calls:
  3758 ;;		_EnviaDato
  3759 ;;		_HabilitaLCD
  3760 ;;		_RetardoLCD
  3761 ;; This function is called by:
  3762 ;;		_InicializaLCD
  3763 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text20
  3768   0017F0                     __ptext20:
  3769                           	callstack 0
  3770   0017F0                     _BorraLCD:
  3771                           	callstack 26
  3772                           
  3773                           ;LibLCDXC8.h: 116: LATD2=0;
  3774                           
  3775                           ;incstack = 0
  3776   0017F0  948C               	bcf	3980,2,c	;volatile
  3777                           
  3778                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
  3779   0017F2  0E01               	movlw	1
  3780   0017F4  ECDC  F00A         	call	_EnviaDato
  3781                           
  3782                           ;LibLCDXC8.h: 118: HabilitaLCD();
  3783   0017F8  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3784                           
  3785                           ;LibLCDXC8.h: 119: RetardoLCD(2);
  3786   0017FC  0E02               	movlw	2
  3787   0017FE  ECB1  F00A         	call	_RetardoLCD
  3788   001802  0012               	return		;funcret
  3789   001804                     __end_of_BorraLCD:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _EnviaDato *****************
  3793 ;; Defined at:
  3794 ;;		line 59 in file "LibLCDXC8.h"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  a               1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  a               1    3[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3811 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:        2 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 2
  3815 ;; This function calls:
  3816 ;;		_HabilitaLCD
  3817 ;;		_RetardoLCD
  3818 ;; This function is called by:
  3819 ;;		_InicializaLCD
  3820 ;;		_BorraLCD
  3821 ;;		_EscribeLCD_c
  3822 ;;		_EscribeLCD_n8
  3823 ;;		_DireccionaLCD
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text21
  3828   0015B8                     __ptext21:
  3829                           	callstack 0
  3830   0015B8                     _EnviaDato:
  3831                           	callstack 25
  3832                           
  3833                           ;incstack = 0
  3834                           ;EnviaDato@a stored from wreg
  3835   0015B8  6E04               	movwf	EnviaDato@a^0,c
  3836                           
  3837                           ;LibLCDXC8.h: 60: if(interfaz==4){
  3838   0015BA  0E04               	movlw	4
  3839   0015BC  184F               	xorwf	_interfaz^0,w,c
  3840   0015BE  A4D8               	btfss	status,2,c
  3841   0015C0  D017               	goto	l1809
  3842                           
  3843                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3844   0015C2  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3845   0015C6  0EF0               	movlw	240
  3846   0015C8  1603               	andwf	??_EnviaDato^0,f,c
  3847   0015CA  508C               	movf	140,w,c	;volatile
  3848   0015CC  0B0F               	andlw	15
  3849   0015CE  1003               	iorwf	??_EnviaDato^0,w,c
  3850   0015D0  6E8C               	movwf	140,c	;volatile
  3851                           
  3852                           ;LibLCDXC8.h: 62: HabilitaLCD();
  3853   0015D2  EC02  F00C         	call	_HabilitaLCD	;wreg free
  3854                           
  3855                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  3856   0015D6  0E01               	movlw	1
  3857   0015D8  ECB1  F00A         	call	_RetardoLCD
  3858                           
  3859                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  3860   0015DC  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3861   0015E0  3A03               	swapf	??_EnviaDato^0,f,c
  3862   0015E2  0EF0               	movlw	240
  3863   0015E4  1603               	andwf	??_EnviaDato^0,f,c
  3864   0015E6  508C               	movf	140,w,c	;volatile
  3865   0015E8  0B0F               	andlw	15
  3866   0015EA  1003               	iorwf	??_EnviaDato^0,w,c
  3867   0015EC  6E8C               	movwf	140,c	;volatile
  3868                           
  3869                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  3870   0015EE  0012               	return	
  3871   0015F0                     l1809:
  3872   0015F0  0E08               	movlw	8
  3873   0015F2  184F               	xorwf	_interfaz^0,w,c
  3874   0015F4  A4D8               	btfss	status,2,c
  3875   0015F6  0012               	return	
  3876                           
  3877                           ;LibLCDXC8.h: 68: LATD=a;
  3878   0015F8  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  3879   0015FC  0012               	return		;funcret
  3880   0015FE                     __end_of_EnviaDato:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _RetardoLCD *****************
  3884 ;; Defined at:
  3885 ;;		line 364 in file "LibLCDXC8.h"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  a               1    wreg     unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  a               1    1[COMRAM] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0
  3900 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3901 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3902 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3903 ;;Total ram usage:        2 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_EnviaDato
  3910 ;;		_InicializaLCD
  3911 ;;		_BorraLCD
  3912 ;;		_EscribeLCD_c
  3913 ;;		_EscribeLCD_n8
  3914 ;;		_DireccionaLCD
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text22
  3919   001562                     __ptext22:
  3920                           	callstack 0
  3921   001562                     _RetardoLCD:
  3922                           	callstack 26
  3923                           
  3924                           ;incstack = 0
  3925                           ;RetardoLCD@a stored from wreg
  3926   001562  6E02               	movwf	RetardoLCD@a^0,c
  3927                           
  3928                           ;LibLCDXC8.h: 365: switch(a){
  3929   001564  D01B               	goto	l1797
  3930   001566                     l1787:
  3931   001566  0E14               	movlw	20
  3932   001568  6E01               	movwf	??_RetardoLCD^0,c
  3933   00156A  0E7A               	movlw	122
  3934   00156C                     u1667:
  3935   00156C  2EE8               	decfsz	wreg,f,c
  3936   00156E  D7FE               	bra	u1667
  3937   001570  2E01               	decfsz	??_RetardoLCD^0,f,c
  3938   001572  D7FC               	bra	u1667
  3939                           
  3940                           ;LibLCDXC8.h: 368: break;
  3941   001574  0012               	return	
  3942   001576                     l1789:
  3943   001576  0EC8               	movlw	200
  3944   001578                     u1677:
  3945   001578  D000               	nop2	
  3946   00157A  2EE8               	decfsz	wreg,f,c
  3947   00157C  D7FD               	bra	u1677
  3948                           
  3949                           ;LibLCDXC8.h: 370: _delay((unsigned long)((640)*(4000000/4000000.0)));
  3950   00157E  0ED5               	movlw	213
  3951   001580                     u1687:
  3952   001580  2EE8               	decfsz	wreg,f,c
  3953   001582  D7FE               	bra	u1687
  3954   001584  F000               	nop	
  3955                           
  3956                           ;LibLCDXC8.h: 372: break;
  3957   001586  0012               	return	
  3958   001588                     l1791:
  3959   001588  0E21               	movlw	33
  3960   00158A                     u1697:
  3961   00158A  2EE8               	decfsz	wreg,f,c
  3962   00158C  D7FE               	bra	u1697
  3963   00158E  F000               	nop	
  3964                           
  3965                           ;LibLCDXC8.h: 375: break;
  3966   001590  0012               	return	
  3967   001592                     l1793:
  3968   001592  0E0D               	movlw	13
  3969   001594                     u1707:
  3970   001594  2EE8               	decfsz	wreg,f,c
  3971   001596  D7FE               	bra	u1707
  3972   001598  F000               	nop	
  3973                           
  3974                           ;LibLCDXC8.h: 378: break;
  3975   00159A  0012               	return	
  3976   00159C                     l1797:
  3977   00159C  5002               	movf	RetardoLCD@a^0,w,c
  3978                           
  3979                           ; Switch size 1, requested type "simple"
  3980                           ; Number of cases is 4, Range of values is 1 to 4
  3981                           ; switch strategies available:
  3982                           ; Name         Instructions Cycles
  3983                           ; simple_byte           13     7 (average)
  3984                           ;	Chosen strategy is simple_byte
  3985   00159E  0A01               	xorlw	1	; case 1
  3986   0015A0  B4D8               	btfsc	status,2,c
  3987   0015A2  D7E1               	goto	l1787
  3988   0015A4  0A03               	xorlw	3	; case 2
  3989   0015A6  B4D8               	btfsc	status,2,c
  3990   0015A8  D7E6               	goto	l1789
  3991   0015AA  0A01               	xorlw	1	; case 3
  3992   0015AC  B4D8               	btfsc	status,2,c
  3993   0015AE  D7EC               	goto	l1791
  3994   0015B0  0A07               	xorlw	7	; case 4
  3995   0015B2  A4D8               	btfss	status,2,c
  3996   0015B4  0012               	return	
  3997   0015B6  D7ED               	goto	l1793
  3998   0015B8                     __end_of_RetardoLCD:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _HabilitaLCD *****************
  4002 ;; Defined at:
  4003 ;;		line 106 in file "LibLCDXC8.h"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        0 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_EnviaDato
  4028 ;;		_InicializaLCD
  4029 ;;		_BorraLCD
  4030 ;;		_EscribeLCD_c
  4031 ;;		_EscribeLCD_n8
  4032 ;;		_DireccionaLCD
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text23
  4037   001804                     __ptext23:
  4038                           	callstack 0
  4039   001804                     _HabilitaLCD:
  4040                           	callstack 26
  4041                           
  4042                           ;LibLCDXC8.h: 108: LATD3=1;
  4043                           
  4044                           ;incstack = 0
  4045   001804  868C               	bsf	3980,3,c	;volatile
  4046                           
  4047                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4048   001806  0E0D               	movlw	13
  4049   001808                     u1717:
  4050   001808  2EE8               	decfsz	wreg,f,c
  4051   00180A  D7FE               	bra	u1717
  4052   00180C  F000               	nop	
  4053                           
  4054                           ;LibLCDXC8.h: 111: LATD3=0;
  4055   00180E  968C               	bcf	3980,3,c	;volatile
  4056   001810  0012               	return		;funcret
  4057   001812                     __end_of_HabilitaLCD:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _Conversion *****************
  4061 ;; Defined at:
  4062 ;;		line 257 in file "PAI.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  canal           1    wreg     unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  canal           1    3[COMRAM] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    0[COMRAM] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        4 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text24
  4091   001762                     __ptext24:
  4092                           	callstack 0
  4093   001762                     _Conversion:
  4094                           	callstack 29
  4095                           
  4096                           ;incstack = 0
  4097                           ;Conversion@canal stored from wreg
  4098   001762  6E04               	movwf	Conversion@canal^0,c
  4099                           
  4100                           ;PAI.c: 258: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  4101   001764  C004  F003         	movff	Conversion@canal,??_Conversion
  4102   001768  90D8               	bcf	status,0,c
  4103   00176A  3603               	rlcf	??_Conversion^0,f,c
  4104   00176C  90D8               	bcf	status,0,c
  4105   00176E  3603               	rlcf	??_Conversion^0,f,c
  4106   001770  50C2               	movf	194,w,c	;volatile
  4107   001772  0B03               	andlw	3
  4108   001774  1003               	iorwf	??_Conversion^0,w,c
  4109   001776  6EC2               	movwf	194,c	;volatile
  4110                           
  4111                           ;PAI.c: 259: GO=1;
  4112   001778  82C2               	bsf	4034,1,c	;volatile
  4113   00177A                     l288:
  4114   00177A  B2C2               	btfsc	4034,1,c	;volatile
  4115   00177C  D7FE               	goto	l288
  4116                           
  4117                           ;PAI.c: 261: return ADRES;
  4118   00177E  CFC3 F001          	movff	4035,?_Conversion	;volatile
  4119   001782  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  4120   001786  0012               	return		;funcret
  4121   001788                     __end_of_Conversion:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _ConfiguraLCD *****************
  4125 ;; Defined at:
  4126 ;;		line 55 in file "LibLCDXC8.h"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  a               1    wreg     unsigned char 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  a               1    0[COMRAM] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4143 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        1 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 1
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text25
  4155   0017AC                     __ptext25:
  4156                           	callstack 0
  4157   0017AC                     _ConfiguraLCD:
  4158                           	callstack 29
  4159                           
  4160                           ;incstack = 0
  4161                           ;ConfiguraLCD@a stored from wreg
  4162   0017AC  6E01               	movwf	ConfiguraLCD@a^0,c
  4163                           
  4164                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  4165   0017AE  0E04               	movlw	4
  4166   0017B0  1801               	xorwf	ConfiguraLCD@a^0,w,c
  4167   0017B2  B4D8               	btfsc	status,2,c
  4168   0017B4  D004               	goto	u1120
  4169   0017B6  0E08               	movlw	8
  4170   0017B8  1801               	xorwf	ConfiguraLCD@a^0,w,c
  4171   0017BA  A4D8               	btfss	status,2,c
  4172   0017BC  0012               	return	
  4173   0017BE                     u1120:
  4174                           
  4175                           ;LibLCDXC8.h: 57: interfaz=a;
  4176   0017BE  C001  F04F         	movff	ConfiguraLCD@a,_interfaz
  4177   0017C2  0012               	return		;funcret
  4178   0017C4                     __end_of_ConfiguraLCD:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _ISR *****************
  4182 ;; Defined at:
  4183 ;;		line 217 in file "PAI.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4197 ;;      Params:         0       0       0       0       0       0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		Interrupt level 2
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	intcode
  4211   000008                     __pintcode:
  4212                           	callstack 0
  4213   000008                     _ISR:
  4214                           	callstack 25
  4215                           
  4216                           ;incstack = 0
  4217   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4218   00000A  ED3B  F00B         	call	int_func,f	;refresh shadow registers
  4219                           
  4220                           	psect	intcode_body
  4221   001676                     __pintcode_body:
  4222                           	callstack 25
  4223   001676                     int_func:
  4224                           	callstack 25
  4225   001676  0006               	pop		; remove dummy address from shadow register refresh
  4226                           
  4227                           ;PAI.c: 220: if(INT0IF==1){
  4228   001678  A2F2               	btfss	4082,1,c	;volatile
  4229   00167A  D003               	goto	i2l1757
  4230                           
  4231                           ;PAI.c: 222: a=0;
  4232   00167C  0E00               	movlw	0
  4233   00167E  6E50               	movwf	_a^0,c
  4234                           
  4235                           ;PAI.c: 223: INT0IF=0;
  4236   001680  92F2               	bcf	4082,1,c	;volatile
  4237   001682                     i2l1757:
  4238                           
  4239                           ;PAI.c: 224: };PAI.c: 226: if(INT1IF==1){
  4240   001682  A0F0               	btfss	4080,0,c	;volatile
  4241   001684  D003               	goto	i2l1763
  4242                           
  4243                           ;PAI.c: 228: b=1;
  4244   001686  0E01               	movlw	1
  4245   001688  6E48               	movwf	_b^0,c
  4246                           
  4247                           ;PAI.c: 229: INT1IF=0;
  4248   00168A  90F0               	bcf	4080,0,c	;volatile
  4249   00168C                     i2l1763:
  4250                           
  4251                           ;PAI.c: 230: };PAI.c: 233: if(INT2IF==1){
  4252   00168C  A2F0               	btfss	4080,1,c	;volatile
  4253   00168E  D00E               	goto	i2l285
  4254                           
  4255                           ;PAI.c: 235: if(Estados==2){
  4256   001690  0E02               	movlw	2
  4257   001692  184A               	xorwf	_Estados^0,w,c
  4258   001694  A4D8               	btfss	status,2,c
  4259   001696  D003               	goto	i2l1769
  4260                           
  4261                           ;PAI.c: 236: d=1;
  4262   001698  0E01               	movlw	1
  4263   00169A  6E46               	movwf	_d^0,c
  4264                           
  4265                           ;PAI.c: 237: }else if (Estados==3){
  4266   00169C  D006               	goto	i2l1773
  4267   00169E                     i2l1769:
  4268   00169E  0E03               	movlw	3
  4269   0016A0  184A               	xorwf	_Estados^0,w,c
  4270   0016A2  A4D8               	btfss	status,2,c
  4271   0016A4  D002               	goto	i2l1773
  4272                           
  4273                           ;PAI.c: 238: c=1;
  4274   0016A6  0E01               	movlw	1
  4275   0016A8  6E47               	movwf	_c^0,c
  4276   0016AA                     i2l1773:
  4277                           
  4278                           ;PAI.c: 239: };PAI.c: 240: INT2IF=0;
  4279   0016AA  92F0               	bcf	4080,1,c	;volatile
  4280   0016AC                     i2l285:
  4281   0016AC  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4282   0016AE  0011               	retfie		f
  4283   0016B0                     __end_of_ISR:
  4284                           	callstack 0
  4285                           
  4286                           	psect	rparam
  4287   000000                     
  4288                           	psect	temp
  4289   000051                     btemp:
  4290                           	callstack 0
  4291   000051                     	ds	1
  4292   000000                     int$flags	set	btemp
  4293   000000                     wtemp8	set	btemp+1
  4294   000000                     ttemp5	set	btemp+1
  4295   000000                     ttemp6	set	btemp+4
  4296   000000                     ttemp7	set	btemp+8
  4297                           
  4298                           	psect	idloc
  4299                           
  4300                           ;Config register IDLOC0 @ 0x200000
  4301                           ;	unspecified, using default values
  4302   200000                     	org	2097152
  4303   200000  FF                 	db	255
  4304                           
  4305                           ;Config register IDLOC1 @ 0x200001
  4306                           ;	unspecified, using default values
  4307   200001                     	org	2097153
  4308   200001  FF                 	db	255
  4309                           
  4310                           ;Config register IDLOC2 @ 0x200002
  4311                           ;	unspecified, using default values
  4312   200002                     	org	2097154
  4313   200002  FF                 	db	255
  4314                           
  4315                           ;Config register IDLOC3 @ 0x200003
  4316                           ;	unspecified, using default values
  4317   200003                     	org	2097155
  4318   200003  FF                 	db	255
  4319                           
  4320                           ;Config register IDLOC4 @ 0x200004
  4321                           ;	unspecified, using default values
  4322   200004                     	org	2097156
  4323   200004  FF                 	db	255
  4324                           
  4325                           ;Config register IDLOC5 @ 0x200005
  4326                           ;	unspecified, using default values
  4327   200005                     	org	2097157
  4328   200005  FF                 	db	255
  4329                           
  4330                           ;Config register IDLOC6 @ 0x200006
  4331                           ;	unspecified, using default values
  4332   200006                     	org	2097158
  4333   200006  FF                 	db	255
  4334                           
  4335                           ;Config register IDLOC7 @ 0x200007
  4336                           ;	unspecified, using default values
  4337   200007                     	org	2097159
  4338   200007  FF                 	db	255
  4339                           
  4340                           	psect	config
  4341                           
  4342                           ;Config register CONFIG1L @ 0x300000
  4343                           ;	unspecified, using default values
  4344                           ;	PLL Prescaler Selection bits
  4345                           ;	PLLDIV = 0x0, unprogrammed default
  4346                           ;	System Clock Postscaler Selection bits
  4347                           ;	CPUDIV = 0x0, unprogrammed default
  4348                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4349                           ;	USBDIV = 0x0, unprogrammed default
  4350   300000                     	org	3145728
  4351   300000  00                 	db	0
  4352                           
  4353                           ;Config register CONFIG1H @ 0x300001
  4354                           ;	Oscillator Selection bits
  4355                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4356                           ;	Fail-Safe Clock Monitor Enable bit
  4357                           ;	FCMEN = 0x0, unprogrammed default
  4358                           ;	Internal/External Oscillator Switchover bit
  4359                           ;	IESO = 0x0, unprogrammed default
  4360   300001                     	org	3145729
  4361   300001  09                 	db	9
  4362                           
  4363                           ;Config register CONFIG2L @ 0x300002
  4364                           ;	unspecified, using default values
  4365                           ;	Power-up Timer Enable bit
  4366                           ;	PWRT = 0x1, unprogrammed default
  4367                           ;	Brown-out Reset Enable bits
  4368                           ;	BOR = 0x3, unprogrammed default
  4369                           ;	Brown-out Reset Voltage bits
  4370                           ;	BORV = 0x3, unprogrammed default
  4371                           ;	USB Voltage Regulator Enable bit
  4372                           ;	VREGEN = 0x0, unprogrammed default
  4373   300002                     	org	3145730
  4374   300002  1F                 	db	31
  4375                           
  4376                           ;Config register CONFIG2H @ 0x300003
  4377                           ;	Watchdog Timer Enable bit
  4378                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4379                           ;	Watchdog Timer Postscale Select bits
  4380                           ;	WDTPS = 0xF, unprogrammed default
  4381   300003                     	org	3145731
  4382   300003  1E                 	db	30
  4383                           
  4384                           ; Padding undefined space
  4385   300004                     	org	3145732
  4386   300004  FF                 	db	255
  4387                           
  4388                           ;Config register CONFIG3H @ 0x300005
  4389                           ;	unspecified, using default values
  4390                           ;	CCP2 MUX bit
  4391                           ;	CCP2MX = 0x1, unprogrammed default
  4392                           ;	PORTB A/D Enable bit
  4393                           ;	PBADEN = 0x1, unprogrammed default
  4394                           ;	Low-Power Timer 1 Oscillator Enable bit
  4395                           ;	LPT1OSC = 0x0, unprogrammed default
  4396                           ;	MCLR Pin Enable bit
  4397                           ;	MCLRE = 0x1, unprogrammed default
  4398   300005                     	org	3145733
  4399   300005  83                 	db	131
  4400                           
  4401                           ;Config register CONFIG4L @ 0x300006
  4402                           ;	Stack Full/Underflow Reset Enable bit
  4403                           ;	STVREN = 0x1, unprogrammed default
  4404                           ;	Single-Supply ICSP Enable bit
  4405                           ;	LVP = OFF, Single-Supply ICSP disabled
  4406                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4407                           ;	ICPRT = 0x0, unprogrammed default
  4408                           ;	Extended Instruction Set Enable bit
  4409                           ;	XINST = 0x0, unprogrammed default
  4410                           ;	Background Debugger Enable bit
  4411                           ;	DEBUG = 0x1, unprogrammed default
  4412   300006                     	org	3145734
  4413   300006  81                 	db	129
  4414                           
  4415                           ; Padding undefined space
  4416   300007                     	org	3145735
  4417   300007  FF                 	db	255
  4418                           
  4419                           ;Config register CONFIG5L @ 0x300008
  4420                           ;	unspecified, using default values
  4421                           ;	Code Protection bit
  4422                           ;	CP0 = 0x1, unprogrammed default
  4423                           ;	Code Protection bit
  4424                           ;	CP1 = 0x1, unprogrammed default
  4425                           ;	Code Protection bit
  4426                           ;	CP2 = 0x1, unprogrammed default
  4427                           ;	Code Protection bit
  4428                           ;	CP3 = 0x1, unprogrammed default
  4429   300008                     	org	3145736
  4430   300008  0F                 	db	15
  4431                           
  4432                           ;Config register CONFIG5H @ 0x300009
  4433                           ;	unspecified, using default values
  4434                           ;	Boot Block Code Protection bit
  4435                           ;	CPB = 0x1, unprogrammed default
  4436                           ;	Data EEPROM Code Protection bit
  4437                           ;	CPD = 0x1, unprogrammed default
  4438   300009                     	org	3145737
  4439   300009  C0                 	db	192
  4440                           
  4441                           ;Config register CONFIG6L @ 0x30000A
  4442                           ;	unspecified, using default values
  4443                           ;	Write Protection bit
  4444                           ;	WRT0 = 0x1, unprogrammed default
  4445                           ;	Write Protection bit
  4446                           ;	WRT1 = 0x1, unprogrammed default
  4447                           ;	Write Protection bit
  4448                           ;	WRT2 = 0x1, unprogrammed default
  4449                           ;	Write Protection bit
  4450                           ;	WRT3 = 0x1, unprogrammed default
  4451   30000A                     	org	3145738
  4452   30000A  0F                 	db	15
  4453                           
  4454                           ;Config register CONFIG6H @ 0x30000B
  4455                           ;	unspecified, using default values
  4456                           ;	Configuration Register Write Protection bit
  4457                           ;	WRTC = 0x1, unprogrammed default
  4458                           ;	Boot Block Write Protection bit
  4459                           ;	WRTB = 0x1, unprogrammed default
  4460                           ;	Data EEPROM Write Protection bit
  4461                           ;	WRTD = 0x1, unprogrammed default
  4462   30000B                     	org	3145739
  4463   30000B  E0                 	db	224
  4464                           
  4465                           ;Config register CONFIG7L @ 0x30000C
  4466                           ;	unspecified, using default values
  4467                           ;	Table Read Protection bit
  4468                           ;	EBTR0 = 0x1, unprogrammed default
  4469                           ;	Table Read Protection bit
  4470                           ;	EBTR1 = 0x1, unprogrammed default
  4471                           ;	Table Read Protection bit
  4472                           ;	EBTR2 = 0x1, unprogrammed default
  4473                           ;	Table Read Protection bit
  4474                           ;	EBTR3 = 0x1, unprogrammed default
  4475   30000C                     	org	3145740
  4476   30000C  0F                 	db	15
  4477                           
  4478                           ;Config register CONFIG7H @ 0x30000D
  4479                           ;	unspecified, using default values
  4480                           ;	Boot Block Table Read Protection bit
  4481                           ;	EBTRB = 0x1, unprogrammed default
  4482   30000D                     	org	3145741
  4483   30000D  40                 	db	64
  4484                           tosu	equ	0xFFF
  4485                           tosh	equ	0xFFE
  4486                           tosl	equ	0xFFD
  4487                           stkptr	equ	0xFFC
  4488                           pclatu	equ	0xFFB
  4489                           pclath	equ	0xFFA
  4490                           pcl	equ	0xFF9
  4491                           tblptru	equ	0xFF8
  4492                           tblptrh	equ	0xFF7
  4493                           tblptrl	equ	0xFF6
  4494                           tablat	equ	0xFF5
  4495                           prodh	equ	0xFF4
  4496                           prodl	equ	0xFF3
  4497                           indf0	equ	0xFEF
  4498                           postinc0	equ	0xFEE
  4499                           postdec0	equ	0xFED
  4500                           preinc0	equ	0xFEC
  4501                           plusw0	equ	0xFEB
  4502                           fsr0h	equ	0xFEA
  4503                           fsr0l	equ	0xFE9
  4504                           wreg	equ	0xFE8
  4505                           indf1	equ	0xFE7
  4506                           postinc1	equ	0xFE6
  4507                           postdec1	equ	0xFE5
  4508                           preinc1	equ	0xFE4
  4509                           plusw1	equ	0xFE3
  4510                           fsr1h	equ	0xFE2
  4511                           fsr1l	equ	0xFE1
  4512                           bsr	equ	0xFE0
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           preinc2	equ	0xFDC
  4517                           plusw2	equ	0xFDB
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8

Data Sizes:
    Strings     218
    Constant    0
    Data        507
    BSS         28
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 21
		 -> STR_30(CODE[5]), STR_1(CODE[21]), 

    Mensaje_LCD_Var_Centrado@a	PTR unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    Mensaje_LCD_Var_Mensaje20x4@d	PTR unsigned char  size(1) Largest target is 18
		 -> STR_29(CODE[5]), STR_25(CODE[18]), STR_21(CODE[5]), STR_17(CODE[15]), 
		 -> STR_13(CODE[3]), STR_9(CODE[7]), STR_5(CODE[7]), 

    Mensaje_LCD_Var_Mensaje20x4@c	PTR unsigned char  size(1) Largest target is 19
		 -> STR_28(CODE[2]), STR_24(CODE[2]), STR_20(CODE[2]), STR_16(CODE[19]), 
		 -> STR_12(CODE[12]), STR_8(CODE[5]), STR_4(CODE[5]), 

    Mensaje_LCD_Var_Mensaje20x4@b	PTR unsigned char  size(1) Largest target is 22
		 -> STR_27(CODE[11]), STR_23(CODE[17]), STR_19(CODE[14]), STR_15(CODE[3]), 
		 -> STR_11(CODE[22]), STR_7(CODE[18]), STR_3(CODE[18]), 

    Mensaje_LCD_Var_Mensaje20x4@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_26(CODE[15]), STR_22(CODE[3]), STR_18(CODE[16]), STR_14(CODE[10]), 
		 -> STR_10(CODE[2]), STR_6(CODE[13]), STR_2(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _main->___fttol
    _imprimir_porcentaje->_EscribeLCD_n8
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Mensaje_LCD_Var_Mensaje20x4->_Mensaje_LCD_Var_Centrado
    _Mensaje_LCD_Var_Centrado->___awdiv
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   20810
                                             42 COMRAM     4     4      0
                       _ConfiguraLCD
                         _Conversion
                      _InicializaLCD
        _Mensaje_LCD_Var_Mensaje20x4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                _imprimir_porcentaje
 ---------------------------------------------------------------------------------
 (1) _imprimir_porcentaje                                  0     0      0    2705
                      _DireccionaLCD
                       _EscribeLCD_c
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     316
                                              5 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1685
                                              8 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3010
                                              8 COMRAM     3     0      3
                         _Conversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     598
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3864
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3556
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3011
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Mensaje_LCD_Var_Mensaje20x4                          4     0      4    3712
                                             12 COMRAM     4     0      4
                           _BorraLCD
                      _DireccionaLCD
           _Mensaje_LCD_Var_Centrado
 ---------------------------------------------------------------------------------
 (2) _Mensaje_LCD_Var_Centrado                             4     3      1    1254
                                              8 COMRAM     4     3      1
                       _EscribeLCD_c
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _Conversion
   _InicializaLCD
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Mensaje_LCD_Var_Mensaje20x4
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _Mensaje_LCD_Var_Centrado
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       ___awdiv
       _strlen
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
   ___fttol
     ___awtoft (ARG)
     ___ftmul (ARG)
   ___lwtoft
     _Conversion (ARG)
     ___ftpack (ARG)
   _imprimir_porcentaje
     _DireccionaLCD
     _EscribeLCD_c
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _MensajeLCD_Var
       _EscribeLCD_c
     ___ftge

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     1F6      33       24.5%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      50       1       85.1%
BITBIGSFRll         21      0       0      31        0.0%
BITBIGSFRhhll       1C      0       0      21        0.0%
BITBIGSFRhllhll     1B      0       0      26        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlhh         8      0       0      29        0.0%
BITBIGSFRhllhll      7      0       0      27        0.0%
BITBIGSFRhlhh        6      0       0      22        0.0%
BITBIGSFRhllll       6      0       0      28        0.0%
BITBIGSFRhlhl        5      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      30        0.0%
BITBIGSFRhllhlh      1      0       0      25        0.0%
BITBIGSFRhllhh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      32        0.0%
DATA                 0      0     246       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 22 21:22:05 2023

                                  _a 0050                                    _b 0048  
                                  _c 0047                                    _d 0046  
                                 _GO 7E11                         ___awdiv@sign 0006  
                         EnviaDato@a 0004                                   _ts 004B  
                      _InicializaLCD 1288                                  l244 0A30  
                                l254 0AC4                                  l248 0A6A  
                                l295 141E                                  l288 177A  
                                l645 10D6                                  _GIE 7F97  
                                _RB0 7C08                                  _RD0 7C18  
                                _RD1 7C19                                  _PR2 0FCB  
                                _ISR 0008                                  u900 136A  
                                u940 1658                                  _len 004D  
                                wreg 0FE8                                 ?_ISR 0001  
                       ___ftdiv@cntr 0025                         ___ftdiv@sign 002A  
                               l2011 1236                                 l2003 11F8  
                               l2013 1254                                 l2005 1202  
                               l2015 125E                                 l2007 1220  
                               l2211 0ECA                                 l2035 1448  
                               l2221 0EF2                                 l2045 1496  
                               l2133 13E8                                 l2151 1072  
                               l2215 0EDA                                 l2039 146A  
                               l2241 16C4                                 l2145 104A  
                               l2225 0F02                                 l2137 1414  
                               l2059 129A                                 l2171 10B0  
                               l2251 1134                                 l2403 0AF2  
                               l2069 12B8                                 l2079 12D6  
                               l2191 0E70                                 l2281 11AC  
                               l2273 1198                                 l2433 0B82  
                               l2417 0B28                                 l2361 0A58  
                               l2345 09F8                                 l2099 130E  
                               l2443 0BF0                                 l2339 0988  
                               l2197 0E98                                 l2269 1188  
                               l2461 0C30                                 l1823 1740  
                               l2287 11C8                                 l2279 11A0  
                               l1911 170A                                 l1903 16F2  
                               l2455 0C24                                 l2391 0AB4  
                               l1809 15F0                                 l1825 1742  
                               l2457 0C2A                                 l2377 0A96  
                               l2369 0A66                                 l1851 135E  
                               l1853 1366                                 l1845 1348  
                               l1933 0F62                                 l1791 1588  
                               l1871 139E                                 l1863 1386  
                               l1839 1338                                 l1943 0FA8  
                               l1927 0F42                                 l1793 1592  
                               l1881 164E                                 l1787 1566  
                               l1867 1390                                 l1789 1576  
                               l1797 159C                                 l1981 14DE  
                               l1893 166A                                 l1885 1654  
                               l1975 14CC                                 l1959 100C  
                               l1985 14F0                                 l1897 1672  
                               l1993 1726                                 l1979 14D4  
                               l1989 1714                                 STR_1 0817  
                               STR_2 08D8                                 STR_3 083F  
                               STR_4 08D3                                 STR_5 08CC  
                               STR_6 089E                                 STR_7 083F  
                               STR_8 08D3                                 STR_9 08CC  
                               u1010 11EA                                 u1120 17BE  
                               u1201 1032                                 u1050 1268  
                               u1221 105A                                 u1400 0938  
                               u1321 1118                                 u1330 1122  
                               u1410 093A                                 u1251 0E58  
                               u1340 1152                                 u1420 0990  
                               u1430 0992                                 u1271 0E80  
                               _LATD 0F8C                                 u1345 114A  
                               u1450 0A62                                 u1380 11B2  
                               u1490 0ABA                                 u1707 1594  
                               u1627 0950                                 u1717 1808  
                               u1637 097A                                 u1590 0C00  
                               u1647 0A22                                 u1657 0BE2  
                               u1667 156C                                 u1677 1578  
                               u1687 1580                                 u1697 158A  
                               _PEIE 7F96                                 _RCIE 7CED  
                               _RCIF 7CF5                                 _RBPU 7F8F  
                               _TMR2 0FCC                       ??_EscribeLCD_c 0005  
                               _Duty 003B                                 _main 08DC  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               btemp 0051                                 start 000E  
                       ___ftmul@cntr 001A                         ___param_bank 0000  
                       ___ftmul@sign 001B                                ??_ISR 0001  
                       ___fttol@exp1 002A           ??_Mensaje_LCD_Var_Centrado 000A  
                       ___fttol@lval 0026                       ?_InicializaLCD 0001  
                              ?_main 0001                      __end_of___awdiv 13A8  
                    __end_of___lbdiv 1676                                _ADRES 0FC3  
                              STR_10 082A                                STR_11 0801  
                              STR_20 082A                                STR_12 08AB  
                              STR_13 0829                                STR_21 0827  
                              STR_22 0829                                STR_30 0827  
                              STR_14 08C2                                STR_15 0829  
                              STR_23 0851                                STR_24 082A  
                              STR_16 082C                                STR_25 083F  
                              STR_17 0881                                STR_26 0872  
                              STR_18 0862                                STR_27 08B7  
                              STR_19 0890                                STR_28 082A  
                              STR_29 0827                        EscribeLCD_c@a 0005  
                    __end_of___lbmod 1712                      __end_of___ftdiv 1108  
                    __end_of___ftmul 0F3C                      ___awdiv@divisor 0003  
                    __end_of___fttol 11DA                                _T2CON 0FCA  
                              _LATD2 7C62                                _LATD3 7C63  
                              _IRCF0 7E9C                                _IRCF1 7E9D  
                              _IRCF2 7E9E                                i2l285 16AC  
                    ___awdiv@counter 0005                                _TRISB 0F93  
                              _TRISD 0F95                      ??_EscribeLCD_n8 000A  
                              _DutyF 003E                                _DutyI 0041  
                      ___awtoft@sign 000C                        ___ftpack@sign 0005  
                              main@i 002D                                tablat 0FF5  
                         _Conversion 1762                          _HabilitaLCD 1804  
                              ttemp5 0052                                ttemp6 0055  
                              ttemp7 0059                                status 0FD8  
                              wtemp8 0052                      ___lbdiv@divisor 0005  
                    ___lbdiv@counter 0007                     __end_of_BorraLCD 1804  
                    __initialization 1504                         __end_of_main 0C52  
                             ??_main 002B                 __end_of_ConfiguraLCD 17C4  
                      ___fttol@sign1 0025                        __activetblptr 0002  
          Mensaje_LCD_Var_Centrado@a 0009            Mensaje_LCD_Var_Centrado@i 000C  
          Mensaje_LCD_Var_Centrado@l 000A            Mensaje_LCD_Var_Centrado@n 000B  
                             _ADCON0 0FC2                               _ADCON1 0FC1  
                             _ADCON2 0FC0                       DireccionaLCD@a 0005  
                             _CCPR1L 0FBE                               _CCPR2L 0FBB  
                     EscribeLCD_n8@a 000D                       EscribeLCD_n8@b 0009  
                   ___awdiv@dividend 0001                     __end_of___awtoft 16E8  
                   __end_of___ftpack 1288                               _INT0IE 7F94  
                             _INT0IF 7F91                               _INT1IE 7F83  
                             _INT1IF 7F80                               _INT2IE 7F84  
                             _INT2IF 7F81                               i2l1763 168C  
                             i2l1773 16AA                               i2l1757 1682  
                             i2l1769 169E                     __end_of___lwtoft 17AC  
                             _TMR2ON 7E52                               _TRISC1 7CA1  
                             _TRISC2 7CA2                __end_of_DireccionaLCD 17F0  
                         _RetardoLCD 1562                               _DutyF2 0035  
                             _Vals24 060A                 EscribeLCD_n8@centena 000A  
                             ___ftge 1426                            ??___awdiv 0005  
                          ??___lbdiv 0006                            ??___lbmod 0002  
                          ??___ftdiv 0022                            ??___ftmul 0013  
                          ??___fttol 0020                      ??_InicializaLCD 0005  
                             clear_0 154E                     ___awdiv@quotient 0007  
                             isa$std 0001                 __end_of_EscribeLCD_c 17DA  
                             _strlen 173A                ___ftmul@f3_as_product 0017  
                       __pdataBIGRAM 060A                         __pdataCOMRAM 004B  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                   ___lbdiv@dividend 0006                          ?_Conversion 0001  
                    ___lbmod@divisor 0001                           __accesstop 0060  
            __end_of__initialization 1554                      ___lbmod@counter 0003  
                         ___ftge@ff1 0001                           ___ftge@ff2 0004  
                      ___rparam_used 0001                           ___ftdiv@f1 001C  
                         ___ftdiv@f2 001F                           ___ftdiv@f3 0026  
                         ___awtoft@c 0009                           ___ftmul@f1 000D  
                         ___ftmul@f2 0010                           ___fttol@f1 001C  
       ?_Mensaje_LCD_Var_Mensaje20x4 000D                       __pcstackCOMRAM 0001  
                        _EstadosPrev 0049                    __end_of_EnviaDato 15FE  
                   ___lbdiv@quotient 0008                  _imprimir_porcentaje 13A8  
                         ___lwtoft@c 0009                            ?_BorraLCD 0001  
                     _MensajeLCD_Var 1712                      MensajeLCD_Var@a 0006  
               ?_imprimir_porcentaje 0001                           __pnvCOMRAM 0050  
                        ?_RetardoLCD 0001                          RetardoLCD@a 0002  
                        _Val_PWM_LCD 0045                              ?___ftge 0001  
      ??_Mensaje_LCD_Var_Mensaje20x4 0011                              _CCP1CON 0FBD  
                            _CCP2CON 0FBA                            ?___awtoft 0009  
                          ?___ftpack 0001                              ?_strlen 0001  
                          ?___lwtoft 0009               __end_of_MensajeLCD_Var 173A  
                         ??_BorraLCD 0005                ??_imprimir_porcentaje 000E  
                       ?_HabilitaLCD 0001                         _ConfiguraLCD 17AC  
                   _Val_PWM_LCD_prev 0044                              _Estados 004A  
                            _Val_PWM 002F                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv 1324  
                            ___lbdiv 163C                              ___lbmod 16E8  
                            ___ftdiv 1022                              ___ftmul 0E48  
                            ___fttol 1108                         __psmallconst 0800  
                            __pcinit 1504                           ??___awtoft 000C  
                         ??___ftpack 0006                              __ramtop 0800  
                            __ptext0 08DC                              __ptext1 13A8  
                            __ptext2 1426                              __ptext3 1712  
                            __ptext4 0F3C                              __ptext5 16E8  
                            __ptext6 163C                              __ptext7 1788  
                            __ptext8 1108                              __ptext9 0E48  
                         ??___lwtoft 000C                      ?_MensajeLCD_Var 0006  
              __end_of_EscribeLCD_n8 1022            ?_Mensaje_LCD_Var_Centrado 0009  
                     __pintcode_body 1676                 end_of_initialization 1554  
                    Conversion@canal 0004                        __Lmediumconst 0000  
                            int_func 1676                         _EscribeLCD_c 17C4  
                            postdec1 0FE5                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                            strlen@s 0001                     ___lbmod@dividend 0002  
                       ??_Conversion 0003                          ___lbmod@rem 0004  
                        ___ftdiv@exp 0029                            _DeltaDuty 0038  
                        ___ftmul@exp 0016                       __end_of___ftge 149A  
                      __pidataBIGRAM 0C52                        __pidataCOMRAM 1812  
              __end_of_InicializaLCD 1324                   __end_of_Conversion 1788  
                          _EnviaDato 15B8                       __end_of_strlen 1762  
                start_initialization 1504                          __end_of_ISR 16B0  
                          _ValAn_PWM 0032                         ??_RetardoLCD 0001  
                EscribeLCD_n8@decena 000B                             ??___ftge 0007  
                EscribeLCD_n8@unidad 000C                             ??_strlen 0003  
       Mensaje_LCD_Var_Mensaje20x4@a 000D         Mensaje_LCD_Var_Mensaje20x4@b 000E  
       Mensaje_LCD_Var_Mensaje20x4@c 000F         Mensaje_LCD_Var_Mensaje20x4@d 0010  
                         ?_EnviaDato 0001                          __pbssCOMRAM 002F  
                 __end_of_RetardoLCD 15B8                        _DireccionaLCD 17DA  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___lbdiv 0005                             ?___lbmod 0001  
                           ?___ftdiv 001C                             ?___ftmul 000D  
                           ?___fttol 001C     __end_of_Mensaje_LCD_Var_Centrado 1504  
                   ??_MensajeLCD_Var 0007                          __smallconst 0800  
        __end_of_imprimir_porcentaje 1426                       ?_DireccionaLCD 0001  
__end_of_Mensaje_LCD_Var_Mensaje20x4 163C          _Mensaje_LCD_Var_Mensaje20x4 15FE  
                        ??_EnviaDato 0003                             _BorraLCD 17F0  
                          copy_data0 1518                            copy_data1 153C  
                           __Hrparam 0000                             __Lrparam 0000  
                           ___awtoft 16B0                             ___ftpack 11DA  
                           ___lwtoft 1788                        ConfiguraLCD@a 0001  
           _Mensaje_LCD_Var_Centrado 149A                             __ptext10 1022  
                           __ptext11 16B0                             __ptext20 17F0  
                           __ptext12 11DA                             __ptext21 15B8  
                           __ptext13 15FE                             __ptext22 1562  
                           __ptext14 149A                             __ptext23 1804  
                           __ptext15 173A                             __ptext24 1762  
                           __ptext16 1324                             __ptext25 17AC  
                           __ptext17 17C4                             __ptext18 17DA  
                           __ptext19 1288                      ??_DireccionaLCD 0005  
                           _interfaz 004F                             isa$xinst 0000  
                           int$flags 0051                        _EscribeLCD_n8 0F3C  
                           intlevel2 0000                        ??_HabilitaLCD 0001  
                      ?_ConfiguraLCD 0001                             strlen@cp 0003  
                     ?_EscribeLCD_n8 0009                       ??_ConfiguraLCD 0001  
                      ?_EscribeLCD_c 0001                  __end_of_HabilitaLCD 1812  
