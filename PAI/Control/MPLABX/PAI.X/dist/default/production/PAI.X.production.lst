

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu May 18 21:13:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 09/02/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   00180A                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _ts
    88   00180A  0014               	dw	20
    89                           
    90                           ;initializer for _len
    91   00180C  00FB               	dw	251
    92                           
    93                           ;initializer for _interfaz
    94   00180E  08                 	db	8
    95                           
    96                           	psect	idataBIGRAM
    97   000C4A                     __pidataBIGRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _Vals24
   101   000C4A  0000               	dw	0
   102   000C4C  0000               	dw	0
   103   000C4E  0000               	dw	0
   104   000C50  0000               	dw	0
   105   000C52  0000               	dw	0
   106   000C54  0000               	dw	0
   107   000C56  0000               	dw	0
   108   000C58  0000               	dw	0
   109   000C5A  0000               	dw	0
   110   000C5C  0000               	dw	0
   111   000C5E  0000               	dw	0
   112   000C60  0000               	dw	0
   113   000C62  0000               	dw	0
   114   000C64  0000               	dw	0
   115   000C66  0000               	dw	0
   116   000C68  0000               	dw	0
   117   000C6A  0001               	dw	1
   118   000C6C  0001               	dw	1
   119   000C6E  0001               	dw	1
   120   000C70  0001               	dw	1
   121   000C72  0001               	dw	1
   122   000C74  0001               	dw	1
   123   000C76  0001               	dw	1
   124   000C78  0002               	dw	2
   125   000C7A  0002               	dw	2
   126   000C7C  0002               	dw	2
   127   000C7E  0002               	dw	2
   128   000C80  0003               	dw	3
   129   000C82  0003               	dw	3
   130   000C84  0003               	dw	3
   131   000C86  0004               	dw	4
   132   000C88  0004               	dw	4
   133   000C8A  0004               	dw	4
   134   000C8C  0005               	dw	5
   135   000C8E  0005               	dw	5
   136   000C90  0005               	dw	5
   137   000C92  0006               	dw	6
   138   000C94  0006               	dw	6
   139   000C96  0007               	dw	7
   140   000C98  0007               	dw	7
   141   000C9A  0008               	dw	8
   142   000C9C  0008               	dw	8
   143   000C9E  0009               	dw	9
   144   000CA0  000A               	dw	10
   145   000CA2  000A               	dw	10
   146   000CA4  000B               	dw	11
   147   000CA6  000C               	dw	12
   148   000CA8  000C               	dw	12
   149   000CAA  000D               	dw	13
   150   000CAC  000E               	dw	14
   151   000CAE  000E               	dw	14
   152   000CB0  000F               	dw	15
   153   000CB2  0010               	dw	16
   154   000CB4  0011               	dw	17
   155   000CB6  0012               	dw	18
   156   000CB8  0013               	dw	19
   157   000CBA  0013               	dw	19
   158   000CBC  0014               	dw	20
   159   000CBE  0015               	dw	21
   160   000CC0  0016               	dw	22
   161   000CC2  0017               	dw	23
   162   000CC4  0018               	dw	24
   163   000CC6  0019               	dw	25
   164   000CC8  001A               	dw	26
   165   000CCA  001B               	dw	27
   166   000CCC  001C               	dw	28
   167   000CCE  001E               	dw	30
   168   000CD0  001F               	dw	31
   169   000CD2  0020               	dw	32
   170   000CD4  0021               	dw	33
   171   000CD6  0022               	dw	34
   172   000CD8  0023               	dw	35
   173   000CDA  0025               	dw	37
   174   000CDC  0026               	dw	38
   175   000CDE  0027               	dw	39
   176   000CE0  0029               	dw	41
   177   000CE2  002A               	dw	42
   178   000CE4  002B               	dw	43
   179   000CE6  002D               	dw	45
   180   000CE8  002E               	dw	46
   181   000CEA  002F               	dw	47
   182   000CEC  0031               	dw	49
   183   000CEE  0032               	dw	50
   184   000CF0  0034               	dw	52
   185   000CF2  0035               	dw	53
   186   000CF4  0037               	dw	55
   187   000CF6  0038               	dw	56
   188   000CF8  003A               	dw	58
   189   000CFA  003B               	dw	59
   190   000CFC  003D               	dw	61
   191   000CFE  003E               	dw	62
   192   000D00  0040               	dw	64
   193   000D02  0042               	dw	66
   194   000D04  0043               	dw	67
   195   000D06  0045               	dw	69
   196   000D08  0047               	dw	71
   197   000D0A  0048               	dw	72
   198   000D0C  004A               	dw	74
   199   000D0E  004C               	dw	76
   200   000D10  004D               	dw	77
   201   000D12  004F               	dw	79
   202   000D14  0051               	dw	81
   203   000D16  0053               	dw	83
   204   000D18  0054               	dw	84
   205   000D1A  0056               	dw	86
   206   000D1C  0058               	dw	88
   207   000D1E  005A               	dw	90
   208   000D20  005B               	dw	91
   209   000D22  005D               	dw	93
   210   000D24  005F               	dw	95
   211   000D26  0061               	dw	97
   212   000D28  0063               	dw	99
   213   000D2A  0064               	dw	100
   214   000D2C  0066               	dw	102
   215   000D2E  0068               	dw	104
   216   000D30  006A               	dw	106
   217   000D32  006C               	dw	108
   218   000D34  006E               	dw	110
   219   000D36  006F               	dw	111
   220   000D38  0071               	dw	113
   221   000D3A  0073               	dw	115
   222   000D3C  0075               	dw	117
   223   000D3E  0077               	dw	119
   224   000D40  0079               	dw	121
   225   000D42  007B               	dw	123
   226   000D44  007C               	dw	124
   227   000D46  007E               	dw	126
   228   000D48  0080               	dw	128
   229   000D4A  0082               	dw	130
   230   000D4C  0084               	dw	132
   231   000D4E  0086               	dw	134
   232   000D50  0088               	dw	136
   233   000D52  008A               	dw	138
   234   000D54  008B               	dw	139
   235   000D56  008D               	dw	141
   236   000D58  008F               	dw	143
   237   000D5A  0091               	dw	145
   238   000D5C  0093               	dw	147
   239   000D5E  0095               	dw	149
   240   000D60  0096               	dw	150
   241   000D62  0098               	dw	152
   242   000D64  009A               	dw	154
   243   000D66  009C               	dw	156
   244   000D68  009E               	dw	158
   245   000D6A  009F               	dw	159
   246   000D6C  00A1               	dw	161
   247   000D6E  00A3               	dw	163
   248   000D70  00A5               	dw	165
   249   000D72  00A6               	dw	166
   250   000D74  00A8               	dw	168
   251   000D76  00AA               	dw	170
   252   000D78  00AC               	dw	172
   253   000D7A  00AD               	dw	173
   254   000D7C  00AF               	dw	175
   255   000D7E  00B1               	dw	177
   256   000D80  00B2               	dw	178
   257   000D82  00B4               	dw	180
   258   000D84  00B6               	dw	182
   259   000D86  00B7               	dw	183
   260   000D88  00B9               	dw	185
   261   000D8A  00BB               	dw	187
   262   000D8C  00BC               	dw	188
   263   000D8E  00BE               	dw	190
   264   000D90  00BF               	dw	191
   265   000D92  00C1               	dw	193
   266   000D94  00C2               	dw	194
   267   000D96  00C4               	dw	196
   268   000D98  00C5               	dw	197
   269   000D9A  00C7               	dw	199
   270   000D9C  00C8               	dw	200
   271   000D9E  00CA               	dw	202
   272   000DA0  00CB               	dw	203
   273   000DA2  00CC               	dw	204
   274   000DA4  00CE               	dw	206
   275   000DA6  00CF               	dw	207
   276   000DA8  00D0               	dw	208
   277   000DAA  00D2               	dw	210
   278   000DAC  00D3               	dw	211
   279   000DAE  00D4               	dw	212
   280   000DB0  00D6               	dw	214
   281   000DB2  00D7               	dw	215
   282   000DB4  00D8               	dw	216
   283   000DB6  00D9               	dw	217
   284   000DB8  00DA               	dw	218
   285   000DBA  00DB               	dw	219
   286   000DBC  00DD               	dw	221
   287   000DBE  00DE               	dw	222
   288   000DC0  00DF               	dw	223
   289   000DC2  00E0               	dw	224
   290   000DC4  00E1               	dw	225
   291   000DC6  00E2               	dw	226
   292   000DC8  00E3               	dw	227
   293   000DCA  00E4               	dw	228
   294   000DCC  00E5               	dw	229
   295   000DCE  00E6               	dw	230
   296   000DD0  00E6               	dw	230
   297   000DD2  00E7               	dw	231
   298   000DD4  00E8               	dw	232
   299   000DD6  00E9               	dw	233
   300   000DD8  00EA               	dw	234
   301   000DDA  00EB               	dw	235
   302   000DDC  00EB               	dw	235
   303   000DDE  00EC               	dw	236
   304   000DE0  00ED               	dw	237
   305   000DE2  00ED               	dw	237
   306   000DE4  00EE               	dw	238
   307   000DE6  00EF               	dw	239
   308   000DE8  00EF               	dw	239
   309   000DEA  00F0               	dw	240
   310   000DEC  00F1               	dw	241
   311   000DEE  00F1               	dw	241
   312   000DF0  00F2               	dw	242
   313   000DF2  00F2               	dw	242
   314   000DF4  00F3               	dw	243
   315   000DF6  00F3               	dw	243
   316   000DF8  00F4               	dw	244
   317   000DFA  00F4               	dw	244
   318   000DFC  00F4               	dw	244
   319   000DFE  00F5               	dw	245
   320   000E00  00F5               	dw	245
   321   000E02  00F5               	dw	245
   322   000E04  00F6               	dw	246
   323   000E06  00F6               	dw	246
   324   000E08  00F6               	dw	246
   325   000E0A  00F7               	dw	247
   326   000E0C  00F7               	dw	247
   327   000E0E  00F7               	dw	247
   328   000E10  00F7               	dw	247
   329   000E12  00F8               	dw	248
   330   000E14  00F8               	dw	248
   331   000E16  00F8               	dw	248
   332   000E18  00F8               	dw	248
   333   000E1A  00F8               	dw	248
   334   000E1C  00F8               	dw	248
   335   000E1E  00F8               	dw	248
   336   000E20  00F9               	dw	249
   337   000E22  00F9               	dw	249
   338   000E24  00F9               	dw	249
   339   000E26  00F9               	dw	249
   340   000E28  00F9               	dw	249
   341   000E2A  00F9               	dw	249
   342   000E2C  00F9               	dw	249
   343   000E2E  00F9               	dw	249
   344   000E30  00F9               	dw	249
   345   000E32  00F9               	dw	249
   346   000E34  00F9               	dw	249
   347   000E36  00F9               	dw	249
   348   000E38  00F9               	dw	249
   349   000E3A  00F9               	dw	249
   350   000E3C  00F9               	dw	249
   351   000E3E  00F9               	dw	249
   352   000000                     _RBPU	set	32655
   353   000000                     _TRISC1	set	31905
   354                           
   355                           	psect	nvCOMRAM
   356   000050                     __pnvCOMRAM:
   357                           	callstack 0
   358   000050                     _a:
   359                           	callstack 0
   360   000050                     	ds	1
   361   000000                     _GO	set	32273
   362   000000                     _RD1	set	31769
   363   000000                     _PEIE	set	32662
   364   000000                     _GIE	set	32663
   365   000000                     _INT2IE	set	32644
   366   000000                     _INT2IF	set	32641
   367   000000                     _INT1IE	set	32643
   368   000000                     _INT0IE	set	32660
   369   000000                     _TRISC2	set	31906
   370   000000                     _TMR2ON	set	32338
   371   000000                     _IRCF0	set	32412
   372   000000                     _IRCF1	set	32413
   373   000000                     _LATD3	set	31843
   374   000000                     _LATD2	set	31842
   375   000000                     _LATD	set	3980
   376   000000                     _RB0	set	31752
   377   000000                     _TRISB	set	3987
   378   000000                     _TRISD	set	3989
   379   000000                     _ADCON2	set	4032
   380   000000                     _ADCON1	set	4033
   381   000000                     _ADCON0	set	4034
   382   000000                     _IRCF2	set	32414
   383   000000                     _INT1IF	set	32640
   384   000000                     _INT0IF	set	32657
   385   000000                     _ADRES	set	4035
   386   000000                     _T2CON	set	4042
   387   000000                     _PR2	set	4043
   388   000000                     _CCP2CON	set	4026
   389   000000                     _CCP1CON	set	4029
   390   000000                     _RCIE	set	31981
   391   000000                     _CCPR1L	set	4030
   392   000000                     _CCPR2L	set	4027
   393   000000                     _TMR2	set	4044
   394   000000                     _RCIF	set	31989
   395   000000                     _RD0	set	31768
   396                           
   397                           	psect	smallconst
   398   000800                     __psmallconst:
   399                           	callstack 0
   400   000800  00                 	db	0
   401   000801                     STR_11:
   402   000801  52                 	db	82	;'R'
   403   000802  65                 	db	101	;'e'
   404   000803  76                 	db	118	;'v'
   405   000804  69                 	db	105	;'i'
   406   000805  73                 	db	115	;'s'
   407   000806  65                 	db	101	;'e'
   408   000807  20                 	db	32
   409   000808  6C                 	db	108	;'l'
   410   000809  61                 	db	97	;'a'
   411   00080A  20                 	db	32
   412   00080B  63                 	db	99	;'c'
   413   00080C  6F                 	db	111	;'o'
   414   00080D  6E                 	db	110	;'n'
   415   00080E  65                 	db	101	;'e'
   416   00080F  78                 	db	120	;'x'
   417   000810  69                 	db	105	;'i'
   418   000811  6F                 	db	111	;'o'
   419   000812  6E                 	db	110	;'n'
   420   000813  20                 	db	32
   421   000814  61                 	db	97	;'a'
   422   000815  20                 	db	32
   423   000816  00                 	db	0
   424   000817                     STR_1:
   425   000817  20                 	db	32
   426   000818  20                 	db	32
   427   000819  20                 	db	32
   428   00081A  20                 	db	32
   429   00081B  20                 	db	32
   430   00081C  20                 	db	32
   431   00081D  20                 	db	32
   432   00081E  20                 	db	32
   433   00081F  20                 	db	32
   434   000820  20                 	db	32
   435   000821  20                 	db	32
   436   000822  20                 	db	32
   437   000823  20                 	db	32
   438   000824  20                 	db	32
   439   000825  20                 	db	32
   440   000826  20                 	db	32
   441   000827  20                 	db	32
   442   000828  20                 	db	32
   443   000829  20                 	db	32
   444   00082A  20                 	db	32
   445   00082B  00                 	db	0
   446   00082C                     STR_16:
   447   00082C  41                 	db	65	;'A'
   448   00082D  63                 	db	99	;'c'
   449   00082E  74                 	db	116	;'t'
   450   00082F  69                 	db	105	;'i'
   451   000830  76                 	db	118	;'v'
   452   000831  65                 	db	101	;'e'
   453   000832  20                 	db	32
   454   000833  65                 	db	101	;'e'
   455   000834  6C                 	db	108	;'l'
   456   000835  20                 	db	32
   457   000836  70                 	db	112	;'p'
   458   000837  75                 	db	117	;'u'
   459   000838  6C                 	db	108	;'l'
   460   000839  73                 	db	115	;'s'
   461   00083A  61                 	db	97	;'a'
   462   00083B  64                 	db	100	;'d'
   463   00083C  6F                 	db	111	;'o'
   464   00083D  72                 	db	114	;'r'
   465   00083E  00                 	db	0
   466   00083F                     STR_3:
   467   00083F  45                 	db	69	;'E'
   468   000840  73                 	db	115	;'s'
   469   000841  70                 	db	112	;'p'
   470   000842  65                 	db	101	;'e'
   471   000843  72                 	db	114	;'r'
   472   000844  65                 	db	101	;'e'
   473   000845  20                 	db	32
   474   000846  75                 	db	117	;'u'
   475   000847  6E                 	db	110	;'n'
   476   000848  20                 	db	32
   477   000849  6D                 	db	109	;'m'
   478   00084A  6F                 	db	111	;'o'
   479   00084B  6D                 	db	109	;'m'
   480   00084C  65                 	db	101	;'e'
   481   00084D  6E                 	db	110	;'n'
   482   00084E  74                 	db	116	;'t'
   483   00084F  6F                 	db	111	;'o'
   484   000850  00                 	db	0
   485   000851                     STR_23:
   486   000851  50                 	db	80	;'P'
   487   000852  72                 	db	114	;'r'
   488   000853  65                 	db	101	;'e'
   489   000854  6E                 	db	110	;'n'
   490   000855  64                 	db	100	;'d'
   491   000856  69                 	db	105	;'i'
   492   000857  65                 	db	101	;'e'
   493   000858  6E                 	db	110	;'n'
   494   000859  64                 	db	100	;'d'
   495   00085A  6F                 	db	111	;'o'
   496   00085B  20                 	db	32
   497   00085C  4D                 	db	77	;'M'
   498   00085D  6F                 	db	111	;'o'
   499   00085E  74                 	db	116	;'t'
   500   00085F  6F                 	db	111	;'o'
   501   000860  72                 	db	114	;'r'
   502   000861  00                 	db	0
   503   000862                     STR_18:
   504   000862  53                 	db	83	;'S'
   505   000863  65                 	db	101	;'e'
   506   000864  6C                 	db	108	;'l'
   507   000865  65                 	db	101	;'e'
   508   000866  63                 	db	99	;'c'
   509   000867  63                 	db	99	;'c'
   510   000868  69                 	db	105	;'i'
   511   000869  6F                 	db	111	;'o'
   512   00086A  6E                 	db	110	;'n'
   513   00086B  65                 	db	101	;'e'
   514   00086C  20                 	db	32
   515   00086D  75                 	db	117	;'u'
   516   00086E  6E                 	db	110	;'n'
   517   00086F  20                 	db	32
   518   000870  25                 	db	37
   519   000871  00                 	db	0
   520   000872                     STR_26:
   521   000872  4D                 	db	77	;'M'
   522   000873  6F                 	db	111	;'o'
   523   000874  74                 	db	116	;'t'
   524   000875  6F                 	db	111	;'o'
   525   000876  72                 	db	114	;'r'
   526   000877  20                 	db	32
   527   000878  70                 	db	112	;'p'
   528   000879  72                 	db	114	;'r'
   529   00087A  65                 	db	101	;'e'
   530   00087B  6E                 	db	110	;'n'
   531   00087C  64                 	db	100	;'d'
   532   00087D  69                 	db	105	;'i'
   533   00087E  64                 	db	100	;'d'
   534   00087F  6F                 	db	111	;'o'
   535   000880  00                 	db	0
   536   000881                     STR_17:
   537   000881  70                 	db	112	;'p'
   538   000882  61                 	db	97	;'a'
   539   000883  72                 	db	114	;'r'
   540   000884  61                 	db	97	;'a'
   541   000885  20                 	db	32
   542   000886  61                 	db	97	;'a'
   543   000887  6A                 	db	106	;'j'
   544   000888  75                 	db	117	;'u'
   545   000889  73                 	db	115	;'s'
   546   00088A  74                 	db	116	;'t'
   547   00088B  61                 	db	97	;'a'
   548   00088C  72                 	db	114	;'r'
   549   00088D  6C                 	db	108	;'l'
   550   00088E  6F                 	db	111	;'o'
   551   00088F  00                 	db	0
   552   000890                     STR_19:
   553   000890  64                 	db	100	;'d'
   554   000891  65                 	db	101	;'e'
   555   000892  20                 	db	32
   556   000893  6F                 	db	111	;'o'
   557   000894  70                 	db	112	;'p'
   558   000895  65                 	db	101	;'e'
   559   000896  72                 	db	114	;'r'
   560   000897  61                 	db	97	;'a'
   561   000898  63                 	db	99	;'c'
   562   000899  69                 	db	105	;'i'
   563   00089A  6F                 	db	111	;'o'
   564   00089B  6E                 	db	110	;'n'
   565   00089C  3A                 	db	58	;':'
   566   00089D  00                 	db	0
   567   00089E                     STR_6:
   568   00089E  43                 	db	67	;'C'
   569   00089F  6F                 	db	111	;'o'
   570   0008A0  72                 	db	114	;'r'
   571   0008A1  74                 	db	116	;'t'
   572   0008A2  61                 	db	97	;'a'
   573   0008A3  64                 	db	100	;'d'
   574   0008A4  6F                 	db	111	;'o'
   575   0008A5  72                 	db	114	;'r'
   576   0008A6  61                 	db	97	;'a'
   577   0008A7  20                 	db	32
   578   0008A8  55                 	db	85	;'U'
   579   0008A9  4E                 	db	78	;'N'
   580   0008AA  00                 	db	0
   581   0008AB                     STR_12:
   582   0008AB  6C                 	db	108	;'l'
   583   0008AC  6F                 	db	111	;'o'
   584   0008AD  73                 	db	115	;'s'
   585   0008AE  20                 	db	32
   586   0008AF  6D                 	db	109	;'m'
   587   0008B0  6F                 	db	111	;'o'
   588   0008B1  74                 	db	116	;'t'
   589   0008B2  6F                 	db	111	;'o'
   590   0008B3  72                 	db	114	;'r'
   591   0008B4  65                 	db	101	;'e'
   592   0008B5  73                 	db	115	;'s'
   593   0008B6  00                 	db	0
   594   0008B7                     STR_27:
   595   0008B7  4F                 	db	79	;'O'
   596   0008B8  70                 	db	112	;'p'
   597   0008B9  65                 	db	101	;'e'
   598   0008BA  72                 	db	114	;'r'
   599   0008BB  61                 	db	97	;'a'
   600   0008BC  63                 	db	99	;'c'
   601   0008BD  69                 	db	105	;'i'
   602   0008BE  6F                 	db	111	;'o'
   603   0008BF  6E                 	db	110	;'n'
   604   0008C0  3A                 	db	58	;':'
   605   0008C1  00                 	db	0
   606   0008C2                     STR_14:
   607   0008C2  4D                 	db	77	;'M'
   608   0008C3  6F                 	db	111	;'o'
   609   0008C4  74                 	db	116	;'t'
   610   0008C5  6F                 	db	111	;'o'
   611   0008C6  72                 	db	114	;'r'
   612   0008C7  20                 	db	32
   613   0008C8  4F                 	db	79	;'O'
   614   0008C9  46                 	db	70	;'F'
   615   0008CA  46                 	db	70	;'F'
   616   0008CB  00                 	db	0
   617   0008CC                     STR_5:
   618   0008CC  32                 	db	50	;'2'
   619   0008CD  30                 	db	48	;'0'
   620   0008CE  32                 	db	50	;'2'
   621   0008CF  33                 	db	51	;'3'
   622   0008D0  2D                 	db	45
   623   0008D1  31                 	db	49	;'1'
   624   0008D2  00                 	db	0
   625   0008D3                     STR_4:
   626   0008D3  55                 	db	85	;'U'
   627   0008D4  4E                 	db	78	;'N'
   628   0008D5  41                 	db	65	;'A'
   629   0008D6  4C                 	db	76	;'L'
   630   0008D7  00                 	db	0
   631   0008D8                     STR_2:
   632   0008D8  43                 	db	67	;'C'
   633   0008D9  6F                 	db	111	;'o'
   634   0008DA  00                 	db	0
   635   0008DB  00                 	db	0	; dummy byte at the end
   636   000000                     
   637                           ; #config settings
   638                           
   639                           	psect	cinit
   640   0014FC                     __pcinit:
   641                           	callstack 0
   642   0014FC                     start_initialization:
   643                           	callstack 0
   644   0014FC                     __initialization:
   645                           	callstack 0
   646                           
   647                           ; Initialize objects allocated to BIGRAM (502 bytes)
   648                           ; load TBLPTR registers with __pidataBIGRAM
   649   0014FC  0E4A               	movlw	low __pidataBIGRAM
   650   0014FE  6EF6               	movwf	tblptrl,c
   651   001500  0E0C               	movlw	high __pidataBIGRAM
   652   001502  6EF7               	movwf	tblptrh,c
   653   001504  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   654   001506  6EF8               	movwf	tblptru,c
   655   001508  EE06  F00A         	lfsr	0,__pdataBIGRAM
   656   00150C  EE11 F0F6          	lfsr	1,502
   657   001510                     copy_data0:
   658   001510  0009               	tblrd		*+
   659   001512  CFF5 FFEE          	movff	tablat,postinc0
   660   001516  50E5               	movf	postdec1,w,c
   661   001518  50E1               	movf	fsr1l,w,c
   662   00151A  E1FA               	bnz	copy_data0
   663   00151C  50E2               	movf	fsr1h,w,c
   664   00151E  E1F8               	bnz	copy_data0
   665                           
   666                           ; Initialize objects allocated to COMRAM (5 bytes)
   667                           ; load TBLPTR registers with __pidataCOMRAM
   668   001520  0E0A               	movlw	low __pidataCOMRAM
   669   001522  6EF6               	movwf	tblptrl,c
   670   001524  0E18               	movlw	high __pidataCOMRAM
   671   001526  6EF7               	movwf	tblptrh,c
   672   001528  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   673   00152A  6EF8               	movwf	tblptru,c
   674   00152C  EE00  F04B         	lfsr	0,__pdataCOMRAM
   675   001530  EE10 F005          	lfsr	1,5
   676   001534                     copy_data1:
   677   001534  0009               	tblrd		*+
   678   001536  CFF5 FFEE          	movff	tablat,postinc0
   679   00153A  50E5               	movf	postdec1,w,c
   680   00153C  50E1               	movf	fsr1l,w,c
   681   00153E  E1FA               	bnz	copy_data1
   682                           
   683                           ; Clear objects allocated to COMRAM (28 bytes)
   684   001540  EE00  F02F         	lfsr	0,__pbssCOMRAM
   685   001544  0E1C               	movlw	28
   686   001546                     clear_0:
   687   001546  6AEE               	clrf	postinc0,c
   688   001548  06E8               	decf	wreg,f,c
   689   00154A  E1FD               	bnz	clear_0
   690   00154C                     end_of_initialization:
   691                           	callstack 0
   692   00154C                     __end_of__initialization:
   693                           	callstack 0
   694   00154C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   695   00154E  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   696   001550  0E00               	movlw	low (__Lmediumconst shr (0+16))
   697   001552  6EF8               	movwf	tblptru,c
   698   001554  0100               	movlb	0
   699   001556  EF6E  F004         	goto	_main	;jump to C main() function
   700                           
   701                           	psect	bssCOMRAM
   702   00002F                     __pbssCOMRAM:
   703                           	callstack 0
   704   00002F                     _Val_PWM:
   705                           	callstack 0
   706   00002F                     	ds	3
   707   000032                     _ValAn_PWM:
   708                           	callstack 0
   709   000032                     	ds	3
   710   000035                     _DutyF2:
   711                           	callstack 0
   712   000035                     	ds	3
   713   000038                     _DeltaDuty:
   714                           	callstack 0
   715   000038                     	ds	3
   716   00003B                     _Duty:
   717                           	callstack 0
   718   00003B                     	ds	3
   719   00003E                     _DutyF:
   720                           	callstack 0
   721   00003E                     	ds	3
   722   000041                     _DutyI:
   723                           	callstack 0
   724   000041                     	ds	3
   725   000044                     _Val_PWM_LCD_prev:
   726                           	callstack 0
   727   000044                     	ds	1
   728   000045                     _Val_PWM_LCD:
   729                           	callstack 0
   730   000045                     	ds	1
   731   000046                     _d:
   732                           	callstack 0
   733   000046                     	ds	1
   734   000047                     _c:
   735                           	callstack 0
   736   000047                     	ds	1
   737   000048                     _b:
   738                           	callstack 0
   739   000048                     	ds	1
   740   000049                     _EstadosPrev:
   741                           	callstack 0
   742   000049                     	ds	1
   743   00004A                     _Estados:
   744                           	callstack 0
   745   00004A                     	ds	1
   746                           
   747                           	psect	dataCOMRAM
   748   00004B                     __pdataCOMRAM:
   749                           	callstack 0
   750   00004B                     _ts:
   751                           	callstack 0
   752   00004B                     	ds	2
   753   00004D                     _len:
   754                           	callstack 0
   755   00004D                     	ds	2
   756   00004F                     _interfaz:
   757                           	callstack 0
   758   00004F                     	ds	1
   759                           
   760                           	psect	dataBIGRAM
   761   00060A                     __pdataBIGRAM:
   762                           	callstack 0
   763   00060A                     _Vals24:
   764                           	callstack 0
   765   00060A                     	ds	502
   766                           
   767                           	psect	cstackCOMRAM
   768   000001                     __pcstackCOMRAM:
   769                           	callstack 0
   770   000001                     ??_RetardoLCD:
   771   000001                     ?_strlen:
   772                           	callstack 0
   773   000001                     ?_Conversion:
   774                           	callstack 0
   775   000001                     ?___awdiv:
   776                           	callstack 0
   777   000001                     ?___ftpack:
   778                           	callstack 0
   779   000001                     ConfiguraLCD@a:
   780                           	callstack 0
   781   000001                     ___lbmod@divisor:
   782                           	callstack 0
   783   000001                     strlen@s:
   784                           	callstack 0
   785   000001                     ___awdiv@dividend:
   786                           	callstack 0
   787   000001                     ___ftpack@arg:
   788                           	callstack 0
   789   000001                     ___ftge@ff1:
   790                           	callstack 0
   791                           
   792                           ; 3 bytes @ 0x0
   793   000001                     	ds	1
   794   000002                     RetardoLCD@a:
   795                           	callstack 0
   796   000002                     ___lbmod@dividend:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x1
   800   000002                     	ds	1
   801   000003                     ??_Conversion:
   802   000003                     ??_EnviaDato:
   803   000003                     ___lbmod@counter:
   804                           	callstack 0
   805   000003                     strlen@cp:
   806                           	callstack 0
   807   000003                     ___awdiv@divisor:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811   000003                     	ds	1
   812   000004                     EnviaDato@a:
   813                           	callstack 0
   814   000004                     Conversion@canal:
   815                           	callstack 0
   816   000004                     ___ftpack@exp:
   817                           	callstack 0
   818   000004                     ___lbmod@rem:
   819                           	callstack 0
   820   000004                     ___ftge@ff2:
   821                           	callstack 0
   822                           
   823                           ; 3 bytes @ 0x3
   824   000004                     	ds	1
   825   000005                     EscribeLCD_c@a:
   826                           	callstack 0
   827   000005                     DireccionaLCD@a:
   828                           	callstack 0
   829   000005                     ___awdiv@counter:
   830                           	callstack 0
   831   000005                     ___ftpack@sign:
   832                           	callstack 0
   833   000005                     ___lbdiv@divisor:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x4
   837   000005                     	ds	1
   838   000006                     ??___ftpack:
   839   000006                     MensajeLCD_Var@a:
   840                           	callstack 0
   841   000006                     ___awdiv@sign:
   842                           	callstack 0
   843   000006                     ___lbdiv@dividend:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x5
   847   000006                     	ds	1
   848   000007                     ??___ftge:
   849   000007                     ___lbdiv@counter:
   850                           	callstack 0
   851   000007                     ___awdiv@quotient:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x6
   855   000007                     	ds	1
   856   000008                     ___lbdiv@quotient:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x7
   860   000008                     	ds	1
   861   000009                     ?___awtoft:
   862                           	callstack 0
   863   000009                     ?___lwtoft:
   864                           	callstack 0
   865   000009                     EscribeLCD_n8@b:
   866                           	callstack 0
   867   000009                     Mensaje_LCD_Var_Centrado@a:
   868                           	callstack 0
   869   000009                     ___awtoft@c:
   870                           	callstack 0
   871   000009                     ___lwtoft@c:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x8
   875   000009                     	ds	1
   876   00000A                     EscribeLCD_n8@centena:
   877                           	callstack 0
   878   00000A                     Mensaje_LCD_Var_Centrado@l:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x9
   882   00000A                     	ds	1
   883   00000B                     EscribeLCD_n8@decena:
   884                           	callstack 0
   885   00000B                     Mensaje_LCD_Var_Centrado@n:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xA
   889   00000B                     	ds	1
   890   00000C                     EscribeLCD_n8@unidad:
   891                           	callstack 0
   892   00000C                     Mensaje_LCD_Var_Centrado@i:
   893                           	callstack 0
   894   00000C                     ___awtoft@sign:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0xB
   898   00000C                     	ds	1
   899   00000D                     ?___ftmul:
   900                           	callstack 0
   901   00000D                     EscribeLCD_n8@a:
   902                           	callstack 0
   903   00000D                     Mensaje_LCD_Var_Mensaje20x4@a:
   904                           	callstack 0
   905   00000D                     ___ftmul@f1:
   906                           	callstack 0
   907                           
   908                           ; 3 bytes @ 0xC
   909   00000D                     	ds	1
   910   00000E                     Mensaje_LCD_Var_Mensaje20x4@b:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0xD
   914   00000E                     	ds	1
   915   00000F                     Mensaje_LCD_Var_Mensaje20x4@c:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0xE
   919   00000F                     	ds	1
   920   000010                     Mensaje_LCD_Var_Mensaje20x4@d:
   921                           	callstack 0
   922   000010                     ___ftmul@f2:
   923                           	callstack 0
   924                           
   925                           ; 3 bytes @ 0xF
   926   000010                     	ds	1
   927   000011                     
   928                           ; 1 bytes @ 0x10
   929   000011                     	ds	2
   930   000013                     ??___ftmul:
   931                           
   932                           ; 1 bytes @ 0x12
   933   000013                     	ds	3
   934   000016                     ___ftmul@exp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x15
   938   000016                     	ds	1
   939   000017                     ___ftmul@f3_as_product:
   940                           	callstack 0
   941                           
   942                           ; 3 bytes @ 0x16
   943   000017                     	ds	3
   944   00001A                     ___ftmul@cntr:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x19
   948   00001A                     	ds	1
   949   00001B                     ___ftmul@sign:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x1A
   953   00001B                     	ds	1
   954   00001C                     ?___ftdiv:
   955                           	callstack 0
   956   00001C                     ?___fttol:
   957                           	callstack 0
   958   00001C                     ___ftdiv@f1:
   959                           	callstack 0
   960   00001C                     ___fttol@f1:
   961                           	callstack 0
   962                           
   963                           ; 3 bytes @ 0x1B
   964   00001C                     	ds	3
   965   00001F                     ___ftdiv@f2:
   966                           	callstack 0
   967                           
   968                           ; 3 bytes @ 0x1E
   969   00001F                     	ds	1
   970   000020                     ??___fttol:
   971                           
   972                           ; 1 bytes @ 0x1F
   973   000020                     	ds	2
   974   000022                     ??___ftdiv:
   975                           
   976                           ; 1 bytes @ 0x21
   977   000022                     	ds	3
   978   000025                     ___ftdiv@cntr:
   979                           	callstack 0
   980   000025                     ___fttol@sign1:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x24
   984   000025                     	ds	1
   985   000026                     ___ftdiv@f3:
   986                           	callstack 0
   987   000026                     ___fttol@lval:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x25
   991   000026                     	ds	3
   992   000029                     ___ftdiv@exp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x28
   996   000029                     	ds	1
   997   00002A                     ___ftdiv@sign:
   998                           	callstack 0
   999   00002A                     ___fttol@exp1:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x29
  1003   00002A                     	ds	1
  1004   00002B                     ??_main:
  1005                           
  1006                           ; 1 bytes @ 0x2A
  1007   00002B                     	ds	2
  1008   00002D                     main@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2C
  1012   00002D                     	ds	2
  1013                           
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 30 in file "PAI.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  i               2   44[COMRAM] int 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels required when called: 6
  1039 ;; This function calls:
  1040 ;;		_ConfiguraLCD
  1041 ;;		_Conversion
  1042 ;;		_InicializaLCD
  1043 ;;		_Mensaje_LCD_Var_Mensaje20x4
  1044 ;;		___awtoft
  1045 ;;		___ftdiv
  1046 ;;		___ftmul
  1047 ;;		___fttol
  1048 ;;		___lwtoft
  1049 ;;		_imprimir_porcentaje
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text0
  1056   0008DC                     __ptext0:
  1057                           	callstack 0
  1058   0008DC                     _main:
  1059                           	callstack 25
  1060                           
  1061                           ;PAI.c: 31: IRCF2=1;
  1062                           
  1063                           ;incstack = 0
  1064   0008DC  8CD3               	bsf	4051,6,c	;volatile
  1065                           
  1066                           ;PAI.c: 32: IRCF1=1;
  1067   0008DE  8AD3               	bsf	4051,5,c	;volatile
  1068                           
  1069                           ;PAI.c: 33: IRCF0=0;
  1070   0008E0  98D3               	bcf	4051,4,c	;volatile
  1071                           
  1072                           ;PAI.c: 37: ADCON0=0b00000001;
  1073   0008E2  0E01               	movlw	1
  1074   0008E4  6EC2               	movwf	194,c	;volatile
  1075                           
  1076                           ;PAI.c: 38: ADCON1=13;
  1077   0008E6  0E0D               	movlw	13
  1078   0008E8  6EC1               	movwf	193,c	;volatile
  1079                           
  1080                           ;PAI.c: 39: ADCON2=0b10001000;
  1081   0008EA  0E88               	movlw	136
  1082   0008EC  6EC0               	movwf	192,c	;volatile
  1083                           
  1084                           ;PAI.c: 40: TRISD=0;
  1085   0008EE  0E00               	movlw	0
  1086   0008F0  6E95               	movwf	149,c	;volatile
  1087                           
  1088                           ;PAI.c: 41: LATD=0;
  1089   0008F2  0E00               	movlw	0
  1090   0008F4  6E8C               	movwf	140,c	;volatile
  1091                           
  1092                           ;PAI.c: 42: TRISB=0b11111111;
  1093   0008F6  6893               	setf	147,c	;volatile
  1094                           
  1095                           ;PAI.c: 44: CCP1CON=0b00001100;
  1096   0008F8  0E0C               	movlw	12
  1097   0008FA  6EBD               	movwf	189,c	;volatile
  1098                           
  1099                           ;PAI.c: 45: CCP2CON=0b00001100;
  1100   0008FC  0E0C               	movlw	12
  1101   0008FE  6EBA               	movwf	186,c	;volatile
  1102                           
  1103                           ;PAI.c: 48: PR2=249;
  1104   000900  0EF9               	movlw	249
  1105   000902  6ECB               	movwf	203,c	;volatile
  1106                           
  1107                           ;PAI.c: 49: CCPR1L=0;
  1108   000904  0E00               	movlw	0
  1109   000906  6EBE               	movwf	190,c	;volatile
  1110                           
  1111                           ;PAI.c: 50: CCPR2L=0;
  1112   000908  0E00               	movlw	0
  1113   00090A  6EBB               	movwf	187,c	;volatile
  1114                           
  1115                           ;PAI.c: 51: T2CON=0b00000000;
  1116   00090C  0E00               	movlw	0
  1117   00090E  6ECA               	movwf	202,c	;volatile
  1118                           
  1119                           ;PAI.c: 52: TMR2=0;
  1120   000910  0E00               	movlw	0
  1121   000912  6ECC               	movwf	204,c	;volatile
  1122                           
  1123                           ;PAI.c: 53: TMR2ON=1;
  1124   000914  84CA               	bsf	4042,2,c	;volatile
  1125                           
  1126                           ;PAI.c: 55: TRISC1=0;
  1127   000916  9294               	bcf	3988,1,c	;volatile
  1128                           
  1129                           ;PAI.c: 56: TRISC2=0;
  1130   000918  9494               	bcf	3988,2,c	;volatile
  1131                           
  1132                           ;PAI.c: 69: INT0IF=0;
  1133   00091A  92F2               	bcf	4082,1,c	;volatile
  1134                           
  1135                           ;PAI.c: 70: INT0IE=1;
  1136   00091C  88F2               	bsf	4082,4,c	;volatile
  1137                           
  1138                           ;PAI.c: 72: INT1IF=0;
  1139   00091E  90F0               	bcf	4080,0,c	;volatile
  1140                           
  1141                           ;PAI.c: 73: INT1IE=1;
  1142   000920  86F0               	bsf	4080,3,c	;volatile
  1143                           
  1144                           ;PAI.c: 74: INT2IF=0;
  1145   000922  92F0               	bcf	4080,1,c	;volatile
  1146                           
  1147                           ;PAI.c: 75: INT2IE=1;
  1148   000924  88F0               	bsf	4080,4,c	;volatile
  1149                           
  1150                           ;PAI.c: 76: RBPU=1;
  1151   000926  8EF1               	bsf	4081,7,c	;volatile
  1152                           
  1153                           ;PAI.c: 79: RCIE=1;
  1154   000928  8A9D               	bsf	3997,5,c	;volatile
  1155                           
  1156                           ;PAI.c: 80: RCIF=0;
  1157   00092A  9A9E               	bcf	3998,5,c	;volatile
  1158                           
  1159                           ;PAI.c: 81: GIE=1;
  1160   00092C  8EF2               	bsf	4082,7,c	;volatile
  1161                           
  1162                           ;PAI.c: 82: PEIE=1;
  1163   00092E  8CF2               	bsf	4082,6,c	;volatile
  1164                           
  1165                           ;PAI.c: 85: a=!RB0;
  1166   000930  B081               	btfsc	3969,0,c	;volatile
  1167   000932  D002               	goto	u1400
  1168   000934  0E01               	movlw	1
  1169   000936  D001               	goto	u1410
  1170   000938                     u1400:
  1171   000938  0E00               	movlw	0
  1172   00093A                     u1410:
  1173   00093A  6E50               	movwf	_a^0,c
  1174                           
  1175                           ;PAI.c: 87: ConfiguraLCD(4);
  1176   00093C  0E04               	movlw	4
  1177   00093E  ECD2  F00B         	call	_ConfiguraLCD
  1178                           
  1179                           ;PAI.c: 88: InicializaLCD();
  1180   000942  EC40  F009         	call	_InicializaLCD	;wreg free
  1181                           
  1182                           ;PAI.c: 90: _delay((unsigned long)((500)*(4000000/4000.0)));
  1183   000946  0E03               	movlw	3
  1184   000948  6E2C               	movwf	(??_main+1)^0,c
  1185   00094A  0E8A               	movlw	138
  1186   00094C  6E2B               	movwf	??_main^0,c
  1187   00094E  0E56               	movlw	86
  1188   000950                     u1627:
  1189   000950  2EE8               	decfsz	wreg,f,c
  1190   000952  D7FE               	bra	u1627
  1191   000954  2E2B               	decfsz	??_main^0,f,c
  1192   000956  D7FC               	bra	u1627
  1193   000958  2E2C               	decfsz	(??_main+1)^0,f,c
  1194   00095A  D7FA               	bra	u1627
  1195                           
  1196                           ;PAI.c: 92: Mensaje_LCD_Var_Mensaje20x4("Co","Espere un momento","UNAL","2023-1");
  1197   00095C  0ED8               	movlw	low STR_2
  1198   00095E  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1199   000960  0E3F               	movlw	low STR_3
  1200   000962  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1201   000964  0ED3               	movlw	low STR_4
  1202   000966  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1203   000968  0ECC               	movlw	low STR_5
  1204   00096A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1205   00096C  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1206                           
  1207                           ;PAI.c: 93: _delay((unsigned long)((5000)*(4000000/4000.0)));
  1208   000970  0E1A               	movlw	26
  1209   000972  6E2C               	movwf	(??_main+1)^0,c
  1210   000974  0E5E               	movlw	94
  1211   000976  6E2B               	movwf	??_main^0,c
  1212   000978  0E6E               	movlw	110
  1213   00097A                     u1637:
  1214   00097A  2EE8               	decfsz	wreg,f,c
  1215   00097C  D7FE               	bra	u1637
  1216   00097E  2E2B               	decfsz	??_main^0,f,c
  1217   000980  D7FC               	bra	u1637
  1218   000982  2E2C               	decfsz	(??_main+1)^0,f,c
  1219   000984  D7FA               	bra	u1637
  1220   000986  D000               	nop2	
  1221   000988                     l2337:
  1222                           
  1223                           ;PAI.c: 98: a=!RB0;
  1224   000988  B081               	btfsc	3969,0,c	;volatile
  1225   00098A  D002               	goto	u1420
  1226   00098C  0E01               	movlw	1
  1227   00098E  D001               	goto	u1430
  1228   000990                     u1420:
  1229   000990  0E00               	movlw	0
  1230   000992                     u1430:
  1231   000992  6E50               	movwf	_a^0,c
  1232                           
  1233                           ;PAI.c: 99: ValAn_PWM=Conversion(0);
  1234   000994  0E00               	movlw	0
  1235   000996  ECAD  F00B         	call	_Conversion
  1236   00099A  C001  F009         	movff	?_Conversion,___lwtoft@c
  1237   00099E  C002  F00A         	movff	?_Conversion+1,___lwtoft@c+1
  1238   0009A2  ECC0  F00B         	call	___lwtoft	;wreg free
  1239   0009A6  C009  F032         	movff	?___lwtoft,_ValAn_PWM
  1240   0009AA  C00A  F033         	movff	?___lwtoft+1,_ValAn_PWM+1
  1241   0009AE  C00B  F034         	movff	?___lwtoft+2,_ValAn_PWM+2
  1242                           
  1243                           ;PAI.c: 100: Val_PWM=ValAn_PWM*100/1024;
  1244   0009B2  0E00               	movlw	0
  1245   0009B4  6E10               	movwf	___ftmul@f2^0,c
  1246   0009B6  0EC8               	movlw	200
  1247   0009B8  6E11               	movwf	(___ftmul@f2+1)^0,c
  1248   0009BA  0E42               	movlw	66
  1249   0009BC  6E12               	movwf	(___ftmul@f2+2)^0,c
  1250   0009BE  C032  F00D         	movff	_ValAn_PWM,___ftmul@f1
  1251   0009C2  C033  F00E         	movff	_ValAn_PWM+1,___ftmul@f1+1
  1252   0009C6  C034  F00F         	movff	_ValAn_PWM+2,___ftmul@f1+2
  1253   0009CA  EC20  F007         	call	___ftmul	;wreg free
  1254   0009CE  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  1255   0009D2  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  1256   0009D6  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  1257   0009DA  0E00               	movlw	0
  1258   0009DC  6E1F               	movwf	___ftdiv@f2^0,c
  1259   0009DE  0E80               	movlw	128
  1260   0009E0  6E20               	movwf	(___ftdiv@f2+1)^0,c
  1261   0009E2  0E44               	movlw	68
  1262   0009E4  6E21               	movwf	(___ftdiv@f2+2)^0,c
  1263   0009E6  EC0D  F008         	call	___ftdiv	;wreg free
  1264   0009EA  C01C  F02F         	movff	?___ftdiv,_Val_PWM
  1265   0009EE  C01D  F030         	movff	?___ftdiv+1,_Val_PWM+1
  1266   0009F2  C01E  F031         	movff	?___ftdiv+2,_Val_PWM+2
  1267                           
  1268                           ;PAI.c: 102: switch(Estados){
  1269   0009F6  D118               	goto	l2457
  1270   0009F8                     l2343:
  1271                           
  1272                           ;PAI.c: 105: LATD=0;
  1273   0009F8  0E00               	movlw	0
  1274   0009FA  6E8C               	movwf	140,c	;volatile
  1275                           
  1276                           ;PAI.c: 106: Mensaje_LCD_Var_Mensaje20x4("Cortadora UN","Espere un momento","UNAL","2023
      +                          -1");
  1277   0009FC  0E9E               	movlw	low STR_6
  1278   0009FE  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1279   000A00  0E3F               	movlw	low STR_3
  1280   000A02  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1281   000A04  0ED3               	movlw	low STR_4
  1282   000A06  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1283   000A08  0ECC               	movlw	low STR_5
  1284   000A0A  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1285   000A0C  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1286                           
  1287                           ;PAI.c: 107: Estados=1;
  1288   000A10  0E01               	movlw	1
  1289   000A12  6E4A               	movwf	_Estados^0,c
  1290                           
  1291                           ;PAI.c: 108: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1292   000A14  0E0B               	movlw	11
  1293   000A16  6E2C               	movwf	(??_main+1)^0,c
  1294   000A18  0E26               	movlw	38
  1295   000A1A  6E2B               	movwf	??_main^0,c
  1296   000A1C  0E5E               	movlw	94
  1297   000A1E                     u1647:
  1298   000A1E  2EE8               	decfsz	wreg,f,c
  1299   000A20  D7FE               	bra	u1647
  1300   000A22  2E2B               	decfsz	??_main^0,f,c
  1301   000A24  D7FC               	bra	u1647
  1302   000A26  2E2C               	decfsz	(??_main+1)^0,f,c
  1303   000A28  D7FA               	bra	u1647
  1304                           
  1305                           ;PAI.c: 109: break;
  1306   000A2A  D7AE               	goto	l2337
  1307   000A2C                     l244:
  1308                           
  1309                           ;PAI.c: 113: RD0=0;
  1310   000A2C  9083               	bcf	3971,0,c	;volatile
  1311                           
  1312                           ;PAI.c: 114: RD1=0;
  1313   000A2E  9283               	bcf	3971,1,c	;volatile
  1314                           
  1315                           ;PAI.c: 116: CCPR1L=0;
  1316   000A30  0E00               	movlw	0
  1317   000A32  6EBE               	movwf	190,c	;volatile
  1318                           
  1319                           ;PAI.c: 117: c=0;
  1320   000A34  0E00               	movlw	0
  1321   000A36  6E47               	movwf	_c^0,c
  1322                           
  1323                           ;PAI.c: 118: if(Estados!=EstadosPrev){
  1324   000A38  5049               	movf	_EstadosPrev^0,w,c
  1325   000A3A  184A               	xorwf	_Estados^0,w,c
  1326   000A3C  B4D8               	btfsc	status,2,c
  1327   000A3E  D00A               	goto	l2357
  1328                           
  1329                           ;PAI.c: 119: Mensaje_LCD_Var_Mensaje20x4(" ","Revise la conexion a ","los motores","  ")
      +                          ;
  1330   000A40  0E2A               	movlw	low (STR_1+19)
  1331   000A42  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1332   000A44  0E01               	movlw	low STR_11
  1333   000A46  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1334   000A48  0EAB               	movlw	low STR_12
  1335   000A4A  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1336   000A4C  0E29               	movlw	low (STR_1+18)
  1337   000A4E  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1338   000A50  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1339   000A54                     l2357:
  1340                           
  1341                           ;PAI.c: 120: };PAI.c: 121: EstadosPrev=1;
  1342   000A54  0E01               	movlw	1
  1343   000A56  6E49               	movwf	_EstadosPrev^0,c
  1344                           
  1345                           ;PAI.c: 122: if(a==0){Estados=1;break;}
  1346   000A58  5050               	movf	_a^0,w,c
  1347   000A5A  A4D8               	btfss	status,2,c
  1348   000A5C  D002               	goto	l2365
  1349   000A5E                     u1450:
  1350   000A5E  0E01               	movlw	1
  1351   000A60  D0E1               	goto	L2
  1352   000A62                     l2365:
  1353                           
  1354                           ;PAI.c: 123: else{Estados=2;break;}
  1355   000A62  0E02               	movlw	2
  1356   000A64  D0DF               	goto	L2
  1357   000A66                     l248:
  1358                           
  1359                           ;PAI.c: 128: RD0=1;
  1360   000A66  8083               	bsf	3971,0,c	;volatile
  1361                           
  1362                           ;PAI.c: 129: RD1=1;
  1363   000A68  8283               	bsf	3971,1,c	;volatile
  1364                           
  1365                           ;PAI.c: 131: b=1;
  1366   000A6A  0E01               	movlw	1
  1367   000A6C  6E48               	movwf	_b^0,c
  1368                           
  1369                           ;PAI.c: 132: c=0;
  1370   000A6E  0E00               	movlw	0
  1371   000A70  6E47               	movwf	_c^0,c
  1372                           
  1373                           ;PAI.c: 133: CCPR1L=0;
  1374   000A72  0E00               	movlw	0
  1375   000A74  6EBE               	movwf	190,c	;volatile
  1376                           
  1377                           ;PAI.c: 134: if(Estados!=EstadosPrev){
  1378   000A76  5049               	movf	_EstadosPrev^0,w,c
  1379   000A78  184A               	xorwf	_Estados^0,w,c
  1380   000A7A  B4D8               	btfsc	status,2,c
  1381   000A7C  D00A               	goto	l2373
  1382                           
  1383                           ;PAI.c: 135: Mensaje_LCD_Var_Mensaje20x4("Motor OFF","  ","Active el pulsador","para aju
      +                          starlo");
  1384   000A7E  0EC2               	movlw	low STR_14
  1385   000A80  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1386   000A82  0E29               	movlw	low (STR_1+18)
  1387   000A84  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1388   000A86  0E2C               	movlw	low STR_16
  1389   000A88  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1390   000A8A  0E81               	movlw	low STR_17
  1391   000A8C  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1392   000A8E  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1393   000A92                     l2373:
  1394                           
  1395                           ;PAI.c: 136: };PAI.c: 138: EstadosPrev=2;
  1396   000A92  0E02               	movlw	2
  1397   000A94  6E49               	movwf	_EstadosPrev^0,c
  1398                           
  1399                           ;PAI.c: 139: if(a==0){Estados=1;break;}
  1400   000A96  5050               	movf	_a^0,w,c
  1401   000A98  B4D8               	btfsc	status,2,c
  1402   000A9A  D7E1               	goto	u1450
  1403                           
  1404                           ;PAI.c: 140: if(d==1){Estados=3;b=0;Val_PWM_LCD_prev=0;break;}
  1405   000A9C  0446               	decf	_d^0,w,c
  1406   000A9E  A4D8               	btfss	status,2,c
  1407   000AA0  D7E0               	goto	l2365
  1408   000AA2  0E03               	movlw	3
  1409   000AA4  6E4A               	movwf	_Estados^0,c
  1410   000AA6  0E00               	movlw	0
  1411   000AA8  6E48               	movwf	_b^0,c
  1412   000AAA  0E00               	movlw	0
  1413   000AAC  6E44               	movwf	_Val_PWM_LCD_prev^0,c
  1414   000AAE  D76C               	goto	l2337
  1415   000AB0                     l2387:
  1416                           
  1417                           ;PAI.c: 146: d=0;
  1418   000AB0  0E00               	movlw	0
  1419   000AB2  6E46               	movwf	_d^0,c
  1420                           
  1421                           ;PAI.c: 147: CCPR1L=0;
  1422   000AB4  0E00               	movlw	0
  1423   000AB6  6EBE               	movwf	190,c	;volatile
  1424                           
  1425                           ;PAI.c: 148: if(a==0){Estados=1;break;}
  1426   000AB8  5050               	movf	_a^0,w,c
  1427   000ABA  B4D8               	btfsc	status,2,c
  1428   000ABC  D7D0               	goto	u1450
  1429                           
  1430                           ;PAI.c: 150: if(Estados!=EstadosPrev){
  1431   000ABE  5049               	movf	_EstadosPrev^0,w,c
  1432   000AC0  184A               	xorwf	_Estados^0,w,c
  1433   000AC2  B4D8               	btfsc	status,2,c
  1434   000AC4  D00A               	goto	l2395
  1435                           
  1436                           ;PAI.c: 151: Mensaje_LCD_Var_Mensaje20x4("Seleccione un %","de operacion:"," ","    ");
  1437   000AC6  0E62               	movlw	low STR_18
  1438   000AC8  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1439   000ACA  0E90               	movlw	low STR_19
  1440   000ACC  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1441   000ACE  0E2A               	movlw	low (STR_1+19)
  1442   000AD0  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1443   000AD2  0E27               	movlw	low (STR_1+16)
  1444   000AD4  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1445   000AD6  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1446   000ADA                     l2395:
  1447                           
  1448                           ;PAI.c: 152: };PAI.c: 154: Val_PWM_LCD=Val_PWM;
  1449   000ADA  C02F  F01C         	movff	_Val_PWM,___fttol@f1
  1450   000ADE  C030  F01D         	movff	_Val_PWM+1,___fttol@f1+1
  1451   000AE2  C031  F01E         	movff	_Val_PWM+2,___fttol@f1+2
  1452   000AE6  EC80  F008         	call	___fttol	;wreg free
  1453   000AEA  501C               	movf	?___fttol^0,w,c
  1454   000AEC  6E45               	movwf	_Val_PWM_LCD^0,c
  1455                           
  1456                           ;PAI.c: 156: if(Val_PWM_LCD_prev!=Val_PWM_LCD){
  1457   000AEE  5045               	movf	_Val_PWM_LCD^0,w,c
  1458   000AF0  1844               	xorwf	_Val_PWM_LCD_prev^0,w,c
  1459   000AF2  A4D8               	btfss	status,2,c
  1460                           
  1461                           ;PAI.c: 157: imprimir_porcentaje();
  1462   000AF4  ECD0  F009         	call	_imprimir_porcentaje	;wreg free
  1463                           
  1464                           ;PAI.c: 158: };PAI.c: 159: Val_PWM_LCD_prev=Val_PWM_LCD;
  1465   000AF8  C045  F044         	movff	_Val_PWM_LCD,_Val_PWM_LCD_prev
  1466                           
  1467                           ;PAI.c: 162: EstadosPrev=3;
  1468   000AFC  0E03               	movlw	3
  1469   000AFE  6E49               	movwf	_EstadosPrev^0,c
  1470                           
  1471                           ;PAI.c: 163: if(b==1){Estados=2;b=0;break;}
  1472   000B00  0448               	decf	_b^0,w,c
  1473   000B02  A4D8               	btfss	status,2,c
  1474   000B04  D005               	goto	l2409
  1475   000B06                     u1520:
  1476   000B06  0E02               	movlw	2
  1477   000B08  6E4A               	movwf	_Estados^0,c
  1478   000B0A  0E00               	movlw	0
  1479   000B0C  6E48               	movwf	_b^0,c
  1480   000B0E  D73C               	goto	l2337
  1481   000B10                     l2409:
  1482                           
  1483                           ;PAI.c: 164: if(c==1){Estados=4;c=0;break;}
  1484   000B10  0447               	decf	_c^0,w,c
  1485   000B12  A4D8               	btfss	status,2,c
  1486   000B14  D739               	goto	l2337
  1487   000B16  0E04               	movlw	4
  1488   000B18  6E4A               	movwf	_Estados^0,c
  1489   000B1A  0E00               	movlw	0
  1490   000B1C  6E47               	movwf	_c^0,c
  1491   000B1E  D734               	goto	l2337
  1492   000B20                     l2413:
  1493                           
  1494                           ;PAI.c: 170: Duty=Val_PWM/100;
  1495   000B20  C02F  F01C         	movff	_Val_PWM,___ftdiv@f1
  1496   000B24  C030  F01D         	movff	_Val_PWM+1,___ftdiv@f1+1
  1497   000B28  C031  F01E         	movff	_Val_PWM+2,___ftdiv@f1+2
  1498   000B2C  0E00               	movlw	0
  1499   000B2E  6E1F               	movwf	___ftdiv@f2^0,c
  1500   000B30  0EC8               	movlw	200
  1501   000B32  6E20               	movwf	(___ftdiv@f2+1)^0,c
  1502   000B34  0E42               	movlw	66
  1503   000B36  6E21               	movwf	(___ftdiv@f2+2)^0,c
  1504   000B38  EC0D  F008         	call	___ftdiv	;wreg free
  1505   000B3C  C01C  F03B         	movff	?___ftdiv,_Duty
  1506   000B40  C01D  F03C         	movff	?___ftdiv+1,_Duty+1
  1507   000B44  C01E  F03D         	movff	?___ftdiv+2,_Duty+2
  1508                           
  1509                           ;PAI.c: 173: if(Estados!=EstadosPrev){
  1510   000B48  5049               	movf	_EstadosPrev^0,w,c
  1511   000B4A  184A               	xorwf	_Estados^0,w,c
  1512   000B4C  B4D8               	btfsc	status,2,c
  1513   000B4E  D060               	goto	l2443
  1514                           
  1515                           ;PAI.c: 178: Mensaje_LCD_Var_Mensaje20x4("  ","Prendiendo Motor"," ","Espere un momento"
      +                          );
  1516   000B50  0E29               	movlw	low (STR_1+18)
  1517   000B52  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1518   000B54  0E51               	movlw	low STR_23
  1519   000B56  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1520   000B58  0E2A               	movlw	low (STR_1+19)
  1521   000B5A  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1522   000B5C  0E3F               	movlw	low STR_3
  1523   000B5E  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1524   000B60  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1525                           
  1526                           ;PAI.c: 180: int i;;PAI.c: 181: for (i = 0; i < len; i++) {
  1527   000B64  0E00               	movlw	0
  1528   000B66  6E2E               	movwf	(main@i+1)^0,c
  1529   000B68  0E00               	movlw	0
  1530   000B6A  6E2D               	movwf	main@i^0,c
  1531   000B6C  D037               	goto	l2431
  1532   000B6E                     l2421:
  1533                           
  1534                           ;PAI.c: 182: if(b==1||a==0){break;}
  1535   000B6E  0448               	decf	_b^0,w,c
  1536   000B70  B4D8               	btfsc	status,2,c
  1537   000B72  D03C               	goto	u1570
  1538   000B74  5050               	movf	_a^0,w,c
  1539   000B76  B4D8               	btfsc	status,2,c
  1540   000B78  D039               	goto	u1570
  1541                           
  1542                           ;PAI.c: 183: CCPR1L = Vals24[i]*Duty;
  1543   000B7A  C03B  F010         	movff	_Duty,___ftmul@f2
  1544   000B7E  C03C  F011         	movff	_Duty+1,___ftmul@f2+1
  1545   000B82  C03D  F012         	movff	_Duty+2,___ftmul@f2+2
  1546   000B86  90D8               	bcf	status,0,c
  1547   000B88  342D               	rlcf	main@i^0,w,c
  1548   000B8A  6ED9               	movwf	fsr2l,c
  1549   000B8C  342E               	rlcf	(main@i+1)^0,w,c
  1550   000B8E  6EDA               	movwf	fsr2h,c
  1551   000B90  0E0A               	movlw	low _Vals24
  1552   000B92  26D9               	addwf	fsr2l,f,c
  1553   000B94  0E06               	movlw	high _Vals24
  1554   000B96  22DA               	addwfc	fsr2h,f,c
  1555   000B98  CFDE F009          	movff	postinc2,___awtoft@c
  1556   000B9C  CFDD F00A          	movff	postdec2,___awtoft@c+1
  1557   000BA0  EC54  F00B         	call	___awtoft	;wreg free
  1558   000BA4  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1559   000BA8  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1560   000BAC  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1561   000BB0  EC20  F007         	call	___ftmul	;wreg free
  1562   000BB4  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1563   000BB8  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1564   000BBC  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1565   000BC0  EC80  F008         	call	___fttol	;wreg free
  1566   000BC4  501C               	movf	?___fttol^0,w,c
  1567   000BC6  6EBE               	movwf	190,c	;volatile
  1568                           
  1569                           ;PAI.c: 184: _delay((unsigned long)((ts)*(4000000/4000.0)));
  1570   000BC8  0E1A               	movlw	26
  1571   000BCA  6E2B               	movwf	??_main^0,c
  1572   000BCC  0EF8               	movlw	248
  1573   000BCE                     u1657:
  1574   000BCE  2EE8               	decfsz	wreg,f,c
  1575   000BD0  D7FE               	bra	u1657
  1576   000BD2  2E2B               	decfsz	??_main^0,f,c
  1577   000BD4  D7FC               	bra	u1657
  1578   000BD6  D000               	nop2	
  1579   000BD8  4A2D               	infsnz	main@i^0,f,c
  1580   000BDA  2A2E               	incf	(main@i+1)^0,f,c
  1581   000BDC                     l2431:
  1582   000BDC  BE2E               	btfsc	(main@i+1)^0,7,c
  1583   000BDE  D7C7               	goto	l2421
  1584   000BE0  502E               	movf	(main@i+1)^0,w,c
  1585   000BE2  E104               	bnz	u1570
  1586   000BE4  0EFB               	movlw	251
  1587   000BE6  5C2D               	subwf	main@i^0,w,c
  1588   000BE8  A0D8               	btfss	status,0,c
  1589   000BEA  D7C1               	goto	l2421
  1590   000BEC                     u1570:
  1591                           
  1592                           ;PAI.c: 185: };PAI.c: 187: if(a==0){Estados=1;break;}
  1593   000BEC  5050               	movf	_a^0,w,c
  1594   000BEE  B4D8               	btfsc	status,2,c
  1595   000BF0  D736               	goto	u1450
  1596                           
  1597                           ;PAI.c: 188: if(b==1){Estados=2;b=0;break;}
  1598   000BF2  0448               	decf	_b^0,w,c
  1599   000BF4  B4D8               	btfsc	status,2,c
  1600   000BF6  D787               	goto	u1520
  1601                           
  1602                           ;PAI.c: 191: Mensaje_LCD_Var_Mensaje20x4("Motor prendido","Operacion:"," ","    ");
  1603   000BF8  0E72               	movlw	low STR_26
  1604   000BFA  6E0D               	movwf	Mensaje_LCD_Var_Mensaje20x4@a^0,c
  1605   000BFC  0EB7               	movlw	low STR_27
  1606   000BFE  6E0E               	movwf	Mensaje_LCD_Var_Mensaje20x4@b^0,c
  1607   000C00  0E2A               	movlw	low (STR_1+19)
  1608   000C02  6E0F               	movwf	Mensaje_LCD_Var_Mensaje20x4@c^0,c
  1609   000C04  0E27               	movlw	low (STR_1+16)
  1610   000C06  6E10               	movwf	Mensaje_LCD_Var_Mensaje20x4@d^0,c
  1611   000C08  ECFB  F00A         	call	_Mensaje_LCD_Var_Mensaje20x4	;wreg free
  1612                           
  1613                           ;PAI.c: 192: imprimir_porcentaje();
  1614   000C0C  ECD0  F009         	call	_imprimir_porcentaje	;wreg free
  1615   000C10                     l2443:
  1616                           
  1617                           ;PAI.c: 193: };PAI.c: 195: EstadosPrev=4;
  1618   000C10  0E04               	movlw	4
  1619   000C12  6E49               	movwf	_EstadosPrev^0,c
  1620                           
  1621                           ;PAI.c: 197: if(a==0){Estados=1;break;}
  1622   000C14  5050               	movf	_a^0,w,c
  1623   000C16  B4D8               	btfsc	status,2,c
  1624   000C18  D722               	goto	u1450
  1625                           
  1626                           ;PAI.c: 198: if(b==1){Estados=2;b=0;break;}
  1627   000C1A  0448               	decf	_b^0,w,c
  1628   000C1C  B4D8               	btfsc	status,2,c
  1629   000C1E  D773               	goto	u1520
  1630   000C20  D6B3               	goto	l2337
  1631   000C22                     l2453:
  1632                           
  1633                           ;PAI.c: 203: Estados=0;
  1634   000C22  0E00               	movlw	0
  1635   000C24                     L2:
  1636   000C24  6E4A               	movwf	_Estados^0,c
  1637                           
  1638                           ;PAI.c: 204: break;
  1639   000C26  D6B0               	goto	l2337
  1640   000C28                     l2457:
  1641   000C28  504A               	movf	_Estados^0,w,c
  1642                           
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 5, Range of values is 0 to 4
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte           16     9 (average)
  1648                           ;	Chosen strategy is simple_byte
  1649   000C2A  0A00               	xorlw	0	; case 0
  1650   000C2C  B4D8               	btfsc	status,2,c
  1651   000C2E  D6E4               	goto	l2343
  1652   000C30  0A01               	xorlw	1	; case 1
  1653   000C32  B4D8               	btfsc	status,2,c
  1654   000C34  D6FB               	goto	l244
  1655   000C36  0A03               	xorlw	3	; case 2
  1656   000C38  B4D8               	btfsc	status,2,c
  1657   000C3A  D715               	goto	l248
  1658   000C3C  0A01               	xorlw	1	; case 3
  1659   000C3E  B4D8               	btfsc	status,2,c
  1660   000C40  D737               	goto	l2387
  1661   000C42  0A07               	xorlw	7	; case 4
  1662   000C44  B4D8               	btfsc	status,2,c
  1663   000C46  D76C               	goto	l2413
  1664   000C48  D7EC               	goto	l2453
  1665   000C4A                     __end_of_main:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _imprimir_porcentaje *****************
  1669 ;; Defined at:
  1670 ;;		line 260 in file "PAI.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 5
  1691 ;; This function calls:
  1692 ;;		_DireccionaLCD
  1693 ;;		_EscribeLCD_c
  1694 ;;		_EscribeLCD_n8
  1695 ;;		_MensajeLCD_Var
  1696 ;;		___ftge
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text1
  1703   0013A0                     __ptext1:
  1704                           	callstack 0
  1705   0013A0                     _imprimir_porcentaje:
  1706                           	callstack 25
  1707                           
  1708                           ;PAI.c: 265: DireccionaLCD(0xC0+4);
  1709                           
  1710                           ;incstack = 0
  1711   0013A0  0EC4               	movlw	196
  1712   0013A2  ECE9  F00B         	call	_DireccionaLCD
  1713                           
  1714                           ;PAI.c: 266: MensajeLCD_Var("    ");
  1715   0013A6  0E27               	movlw	low (STR_1+16)
  1716   0013A8  6E06               	movwf	MensajeLCD_Var@a^0,c
  1717   0013AA  EC85  F00B         	call	_MensajeLCD_Var	;wreg free
  1718                           
  1719                           ;PAI.c: 267: DireccionaLCD(0xC0+4);
  1720   0013AE  0EC4               	movlw	196
  1721   0013B0  ECE9  F00B         	call	_DireccionaLCD
  1722                           
  1723                           ;PAI.c: 269: if(Val_PWM>99){
  1724   0013B4  0E00               	movlw	0
  1725   0013B6  6E01               	movwf	___ftge@ff1^0,c
  1726   0013B8  0EC6               	movlw	198
  1727   0013BA  6E02               	movwf	(___ftge@ff1+1)^0,c
  1728   0013BC  0E42               	movlw	66
  1729   0013BE  6E03               	movwf	(___ftge@ff1+2)^0,c
  1730   0013C0  C02F  F004         	movff	_Val_PWM,___ftge@ff2
  1731   0013C4  C030  F005         	movff	_Val_PWM+1,___ftge@ff2+1
  1732   0013C8  C031  F006         	movff	_Val_PWM+2,___ftge@ff2+2
  1733   0013CC  EC0F  F00A         	call	___ftge	;wreg free
  1734   0013D0  B0D8               	btfsc	status,0,c
  1735   0013D2  D006               	goto	l2131
  1736                           
  1737                           ;PAI.c: 270: EscribeLCD_n8(100,3);
  1738   0013D4  0E03               	movlw	3
  1739   0013D6  6E09               	movwf	EscribeLCD_n8@b^0,c
  1740   0013D8  0E64               	movlw	100
  1741   0013DA  EC9A  F007         	call	_EscribeLCD_n8
  1742                           
  1743                           ;PAI.c: 271: }else if (Val_PWM<=10){
  1744   0013DE  D01B               	goto	l295
  1745   0013E0                     l2131:
  1746   0013E0  0E00               	movlw	0
  1747   0013E2  6E01               	movwf	___ftge@ff1^0,c
  1748   0013E4  0E20               	movlw	32
  1749   0013E6  6E02               	movwf	(___ftge@ff1+1)^0,c
  1750   0013E8  0E41               	movlw	65
  1751   0013EA  6E03               	movwf	(___ftge@ff1+2)^0,c
  1752   0013EC  C02F  F004         	movff	_Val_PWM,___ftge@ff2
  1753   0013F0  C030  F005         	movff	_Val_PWM+1,___ftge@ff2+1
  1754   0013F4  C031  F006         	movff	_Val_PWM+2,___ftge@ff2+2
  1755   0013F8  EC0F  F00A         	call	___ftge	;wreg free
  1756   0013FC  A0D8               	btfss	status,0,c
  1757   0013FE  D006               	goto	l2135
  1758                           
  1759                           ;PAI.c: 272: EscribeLCD_n8(Val_PWM_LCD,1);
  1760   001400  0E01               	movlw	1
  1761   001402  6E09               	movwf	EscribeLCD_n8@b^0,c
  1762   001404  5045               	movf	_Val_PWM_LCD^0,w,c
  1763   001406  EC9A  F007         	call	_EscribeLCD_n8
  1764                           
  1765                           ;PAI.c: 273: }else{
  1766   00140A  D005               	goto	l295
  1767   00140C                     l2135:
  1768                           
  1769                           ;PAI.c: 274: EscribeLCD_n8(Val_PWM_LCD,2);
  1770   00140C  0E02               	movlw	2
  1771   00140E  6E09               	movwf	EscribeLCD_n8@b^0,c
  1772   001410  5045               	movf	_Val_PWM_LCD^0,w,c
  1773   001412  EC9A  F007         	call	_EscribeLCD_n8
  1774   001416                     l295:
  1775                           
  1776                           ;PAI.c: 275: };PAI.c: 276: EscribeLCD_c('%');
  1777   001416  0E25               	movlw	37
  1778   001418  ECDE  F00B         	call	_EscribeLCD_c
  1779   00141C  0012               	return		;funcret
  1780   00141E                     __end_of_imprimir_porcentaje:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function ___ftge *****************
  1784 ;; Defined at:
  1785 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  ff1             3    0[COMRAM] float 
  1788 ;;  ff2             3    3[COMRAM] float 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;		None               void
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         6       0       0       0       0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1802 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1803 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1804 ;;Total ram usage:        9 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_imprimir_porcentaje
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text2
  1815   00141E                     __ptext2:
  1816                           	callstack 0
  1817   00141E                     ___ftge:
  1818                           	callstack 28
  1819                           
  1820                           ;incstack = 0
  1821   00141E  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  1822   001420  D00F               	goto	l2033
  1823   001422  0E00               	movlw	0
  1824   001424  6E07               	movwf	??___ftge^0,c
  1825   001426  0E00               	movlw	0
  1826   001428  6E08               	movwf	(??___ftge+1)^0,c
  1827   00142A  0E80               	movlw	128
  1828   00142C  6E09               	movwf	(??___ftge+2)^0,c
  1829   00142E  5001               	movf	___ftge@ff1^0,w,c
  1830   001430  5C07               	subwf	??___ftge^0,w,c
  1831   001432  6E01               	movwf	___ftge@ff1^0,c
  1832   001434  5002               	movf	(___ftge@ff1+1)^0,w,c
  1833   001436  5808               	subwfb	(??___ftge+1)^0,w,c
  1834   001438  6E02               	movwf	(___ftge@ff1+1)^0,c
  1835   00143A  5003               	movf	(___ftge@ff1+2)^0,w,c
  1836   00143C  5809               	subwfb	(??___ftge+2)^0,w,c
  1837   00143E  6E03               	movwf	(___ftge@ff1+2)^0,c
  1838   001440                     l2033:
  1839   001440  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  1840   001442  D00F               	goto	l2037
  1841   001444  0E00               	movlw	0
  1842   001446  6E07               	movwf	??___ftge^0,c
  1843   001448  0E00               	movlw	0
  1844   00144A  6E08               	movwf	(??___ftge+1)^0,c
  1845   00144C  0E80               	movlw	128
  1846   00144E  6E09               	movwf	(??___ftge+2)^0,c
  1847   001450  5004               	movf	___ftge@ff2^0,w,c
  1848   001452  5C07               	subwf	??___ftge^0,w,c
  1849   001454  6E04               	movwf	___ftge@ff2^0,c
  1850   001456  5005               	movf	(___ftge@ff2+1)^0,w,c
  1851   001458  5808               	subwfb	(??___ftge+1)^0,w,c
  1852   00145A  6E05               	movwf	(___ftge@ff2+1)^0,c
  1853   00145C  5006               	movf	(___ftge@ff2+2)^0,w,c
  1854   00145E  5809               	subwfb	(??___ftge+2)^0,w,c
  1855   001460  6E06               	movwf	(___ftge@ff2+2)^0,c
  1856   001462                     l2037:
  1857   001462  0E00               	movlw	0
  1858   001464  1A01               	xorwf	___ftge@ff1^0,f,c
  1859   001466  0E00               	movlw	0
  1860   001468  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  1861   00146A  0E80               	movlw	128
  1862   00146C  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  1863   00146E  0E00               	movlw	0
  1864   001470  1A04               	xorwf	___ftge@ff2^0,f,c
  1865   001472  0E00               	movlw	0
  1866   001474  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  1867   001476  0E80               	movlw	128
  1868   001478  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  1869   00147A  5004               	movf	___ftge@ff2^0,w,c
  1870   00147C  5C01               	subwf	___ftge@ff1^0,w,c
  1871   00147E  5005               	movf	(___ftge@ff2+1)^0,w,c
  1872   001480  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  1873   001482  5006               	movf	(___ftge@ff2+2)^0,w,c
  1874   001484  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  1875   001486  B0D8               	btfsc	status,0,c
  1876   001488  D002               	goto	l2043
  1877   00148A  90D8               	bcf	status,0,c
  1878   00148C  0012               	return	
  1879   00148E                     l2043:
  1880   00148E  80D8               	bsf	status,0,c
  1881   001490  0012               	return		;funcret
  1882   001492                     __end_of___ftge:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _MensajeLCD_Var *****************
  1886 ;; Defined at:
  1887 ;;		line 345 in file "LibLCDXC8.h"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  a               1    5[COMRAM] PTR unsigned char 
  1890 ;;		 -> STR_30(5), STR_1(21), 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1902 ;;      Params:         1       0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1905 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        1 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 4
  1909 ;; This function calls:
  1910 ;;		_EscribeLCD_c
  1911 ;; This function is called by:
  1912 ;;		_imprimir_porcentaje
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text3
  1917   00170A                     __ptext3:
  1918                           	callstack 0
  1919   00170A                     _MensajeLCD_Var:
  1920                           	callstack 25
  1921                           
  1922                           ;LibLCDXC8.h: 349: while(*a != '\0'){
  1923                           
  1924                           ;incstack = 0
  1925   00170A  D009               	goto	l1991
  1926   00170C                     l1987:
  1927                           
  1928                           ;LibLCDXC8.h: 350: EscribeLCD_c(*a);
  1929   00170C  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1930   001710                     	if	1	;There is more than 1 active tblptr byte
  1931   001710  0E08               	movlw	high __smallconst
  1932   001712  6EF7               	movwf	tblptrh,c
  1933   001714                     	endif
  1934   001714                     	if	0	;tblptru may be non-zero
  1935   001714                     	endif
  1936   001714                     	if	0	;tblptru may be non-zero
  1937   001714                     	endif
  1938   001714  0008               	tblrd		*
  1939   001716  50F5               	movf	tablat,w,c
  1940   001718  ECDE  F00B         	call	_EscribeLCD_c
  1941                           
  1942                           ;LibLCDXC8.h: 351: a++;
  1943   00171C  2A06               	incf	MensajeLCD_Var@a^0,f,c
  1944   00171E                     l1991:
  1945   00171E  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1946   001722                     	if	1	;There is more than 1 active tblptr byte
  1947   001722  0E08               	movlw	high __smallconst
  1948   001724  6EF7               	movwf	tblptrh,c
  1949   001726                     	endif
  1950   001726                     	if	0	;tblptru may be non-zero
  1951   001726                     	endif
  1952   001726                     	if	0	;tblptru may be non-zero
  1953   001726                     	endif
  1954   001726  0008               	tblrd		*
  1955   001728  50F5               	movf	tablat,w,c
  1956   00172A  0900               	iorlw	0
  1957   00172C  B4D8               	btfsc	status,2,c
  1958   00172E  0012               	return	
  1959   001730  D7ED               	goto	l1987
  1960   001732                     __end_of_MensajeLCD_Var:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _EscribeLCD_n8 *****************
  1964 ;; Defined at:
  1965 ;;		line 132 in file "LibLCDXC8.h"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  a               1    wreg     unsigned char 
  1968 ;;  b               1    8[COMRAM] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  a               1   12[COMRAM] unsigned char 
  1971 ;;  unidad          1   11[COMRAM] unsigned char 
  1972 ;;  decena          1   10[COMRAM] unsigned char 
  1973 ;;  centena         1    9[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         1       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        5 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 3
  1990 ;; This function calls:
  1991 ;;		_EnviaDato
  1992 ;;		_HabilitaLCD
  1993 ;;		_RetardoLCD
  1994 ;;		___lbdiv
  1995 ;;		___lbmod
  1996 ;; This function is called by:
  1997 ;;		_imprimir_porcentaje
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text4
  2002   000F34                     __ptext4:
  2003                           	callstack 0
  2004   000F34                     _EscribeLCD_n8:
  2005                           	callstack 26
  2006                           
  2007                           ;incstack = 0
  2008                           ;EscribeLCD_n8@a stored from wreg
  2009   000F34  6E0D               	movwf	EscribeLCD_n8@a^0,c
  2010                           
  2011                           ;LibLCDXC8.h: 137: unsigned char centena,decena,unidad;;LibLCDXC8.h: 138: LATD2=1;
  2012   000F36  848C               	bsf	3980,2,c	;volatile
  2013                           
  2014                           ;LibLCDXC8.h: 142: switch(b){
  2015   000F38  D065               	goto	l1957
  2016   000F3A                     l1925:
  2017   000F3A  0E0A               	movlw	10
  2018   000F3C  6E01               	movwf	___lbmod@divisor^0,c
  2019   000F3E  500D               	movf	EscribeLCD_n8@a^0,w,c
  2020   000F40  EC70  F00B         	call	___lbmod
  2021   000F44  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2022                           
  2023                           ;LibLCDXC8.h: 144: EnviaDato(unidad+48);
  2024   000F46  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2025   000F48  0F30               	addlw	48
  2026   000F4A  ECD8  F00A         	call	_EnviaDato
  2027                           
  2028                           ;LibLCDXC8.h: 145: HabilitaLCD();
  2029   000F4E  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2030                           
  2031                           ;LibLCDXC8.h: 146: RetardoLCD(4);
  2032   000F52  0E04               	movlw	4
  2033   000F54  ECAD  F00A         	call	_RetardoLCD
  2034                           
  2035                           ;LibLCDXC8.h: 147: break;
  2036   000F58  0012               	return	
  2037   000F5A                     l1931:
  2038   000F5A  0E0A               	movlw	10
  2039   000F5C  6E05               	movwf	___lbdiv@divisor^0,c
  2040   000F5E  0E64               	movlw	100
  2041   000F60  6E01               	movwf	___lbmod@divisor^0,c
  2042   000F62  500D               	movf	EscribeLCD_n8@a^0,w,c
  2043   000F64  EC70  F00B         	call	___lbmod
  2044   000F68  EC1A  F00B         	call	___lbdiv
  2045   000F6C  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2046                           
  2047                           ;LibLCDXC8.h: 149: unidad=a%10;
  2048   000F6E  0E0A               	movlw	10
  2049   000F70  6E01               	movwf	___lbmod@divisor^0,c
  2050   000F72  500D               	movf	EscribeLCD_n8@a^0,w,c
  2051   000F74  EC70  F00B         	call	___lbmod
  2052   000F78  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2053                           
  2054                           ;LibLCDXC8.h: 150: EnviaDato(decena+48);
  2055   000F7A  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2056   000F7C  0F30               	addlw	48
  2057   000F7E  ECD8  F00A         	call	_EnviaDato
  2058                           
  2059                           ;LibLCDXC8.h: 151: HabilitaLCD();
  2060   000F82  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2061                           
  2062                           ;LibLCDXC8.h: 152: RetardoLCD(4);
  2063   000F86  0E04               	movlw	4
  2064   000F88  ECAD  F00A         	call	_RetardoLCD
  2065                           
  2066                           ;LibLCDXC8.h: 153: EnviaDato(unidad+48);
  2067   000F8C  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2068   000F8E  0F30               	addlw	48
  2069   000F90  ECD8  F00A         	call	_EnviaDato
  2070                           
  2071                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2072   000F94  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2073                           
  2074                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2075   000F98  0E04               	movlw	4
  2076   000F9A  ECAD  F00A         	call	_RetardoLCD
  2077                           
  2078                           ;LibLCDXC8.h: 156: break;
  2079   000F9E  0012               	return	
  2080   000FA0                     l1941:
  2081   000FA0  0E64               	movlw	100
  2082   000FA2  6E05               	movwf	___lbdiv@divisor^0,c
  2083   000FA4  500D               	movf	EscribeLCD_n8@a^0,w,c
  2084   000FA6  EC1A  F00B         	call	___lbdiv
  2085   000FAA  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  2086                           
  2087                           ;LibLCDXC8.h: 158: decena=(a%100)/10;
  2088   000FAC  0E0A               	movlw	10
  2089   000FAE  6E05               	movwf	___lbdiv@divisor^0,c
  2090   000FB0  0E64               	movlw	100
  2091   000FB2  6E01               	movwf	___lbmod@divisor^0,c
  2092   000FB4  500D               	movf	EscribeLCD_n8@a^0,w,c
  2093   000FB6  EC70  F00B         	call	___lbmod
  2094   000FBA  EC1A  F00B         	call	___lbdiv
  2095   000FBE  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2096                           
  2097                           ;LibLCDXC8.h: 159: unidad=a%10;
  2098   000FC0  0E0A               	movlw	10
  2099   000FC2  6E01               	movwf	___lbmod@divisor^0,c
  2100   000FC4  500D               	movf	EscribeLCD_n8@a^0,w,c
  2101   000FC6  EC70  F00B         	call	___lbmod
  2102   000FCA  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2103                           
  2104                           ;LibLCDXC8.h: 160: EnviaDato(centena+48);
  2105   000FCC  500A               	movf	EscribeLCD_n8@centena^0,w,c
  2106   000FCE  0F30               	addlw	48
  2107   000FD0  ECD8  F00A         	call	_EnviaDato
  2108                           
  2109                           ;LibLCDXC8.h: 161: HabilitaLCD();
  2110   000FD4  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2111                           
  2112                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  2113   000FD8  0E04               	movlw	4
  2114   000FDA  ECAD  F00A         	call	_RetardoLCD
  2115                           
  2116                           ;LibLCDXC8.h: 163: EnviaDato(decena+48);
  2117   000FDE  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2118   000FE0  0F30               	addlw	48
  2119   000FE2  ECD8  F00A         	call	_EnviaDato
  2120                           
  2121                           ;LibLCDXC8.h: 164: HabilitaLCD();
  2122   000FE6  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2123                           
  2124                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  2125   000FEA  0E04               	movlw	4
  2126   000FEC  ECAD  F00A         	call	_RetardoLCD
  2127                           
  2128                           ;LibLCDXC8.h: 166: EnviaDato(unidad+48);
  2129   000FF0  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2130   000FF2  0F30               	addlw	48
  2131   000FF4  ECD8  F00A         	call	_EnviaDato
  2132                           
  2133                           ;LibLCDXC8.h: 167: HabilitaLCD();
  2134   000FF8  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  2135                           
  2136                           ;LibLCDXC8.h: 168: RetardoLCD(4);
  2137   000FFC  0E04               	movlw	4
  2138   000FFE  ECAD  F00A         	call	_RetardoLCD
  2139                           
  2140                           ;LibLCDXC8.h: 169: break;
  2141   001002  0012               	return	
  2142   001004                     l1957:
  2143   001004  5009               	movf	EscribeLCD_n8@b^0,w,c
  2144                           
  2145                           ; Switch size 1, requested type "simple"
  2146                           ; Number of cases is 3, Range of values is 1 to 3
  2147                           ; switch strategies available:
  2148                           ; Name         Instructions Cycles
  2149                           ; simple_byte           10     6 (average)
  2150                           ;	Chosen strategy is simple_byte
  2151   001006  0A01               	xorlw	1	; case 1
  2152   001008  B4D8               	btfsc	status,2,c
  2153   00100A  D797               	goto	l1925
  2154   00100C  0A03               	xorlw	3	; case 2
  2155   00100E  B4D8               	btfsc	status,2,c
  2156   001010  D7A4               	goto	l1931
  2157   001012  0A01               	xorlw	1	; case 3
  2158   001014  A4D8               	btfss	status,2,c
  2159   001016  0012               	return	
  2160   001018  D7C3               	goto	l1941
  2161   00101A                     __end_of_EscribeLCD_n8:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function ___lbmod *****************
  2165 ;; Defined at:
  2166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  dividend        1    wreg     unsigned char 
  2169 ;;  divisor         1    0[COMRAM] unsigned char 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  dividend        1    1[COMRAM] unsigned char 
  2172 ;;  rem             1    3[COMRAM] unsigned char 
  2173 ;;  counter         1    2[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2183 ;;      Params:         1       0       0       0       0       0       0       0       0
  2184 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2186 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_EscribeLCD_n8
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text5
  2198   0016E0                     __ptext5:
  2199                           	callstack 0
  2200   0016E0                     ___lbmod:
  2201                           	callstack 27
  2202                           
  2203                           ;incstack = 0
  2204                           ;___lbmod@dividend stored from wreg
  2205   0016E0  6E02               	movwf	___lbmod@dividend^0,c
  2206   0016E2  0E08               	movlw	8
  2207   0016E4  6E03               	movwf	___lbmod@counter^0,c
  2208   0016E6  0E00               	movlw	0
  2209   0016E8  6E04               	movwf	___lbmod@rem^0,c
  2210   0016EA                     l1901:
  2211   0016EA  90D8               	bcf	status,0,c
  2212   0016EC  3402               	rlcf	___lbmod@dividend^0,w,c
  2213   0016EE  3404               	rlcf	___lbmod@rem^0,w,c
  2214   0016F0  6E04               	movwf	___lbmod@rem^0,c
  2215   0016F2  90D8               	bcf	status,0,c
  2216   0016F4  3602               	rlcf	___lbmod@dividend^0,f,c
  2217   0016F6  5001               	movf	___lbmod@divisor^0,w,c
  2218   0016F8  5C04               	subwf	___lbmod@rem^0,w,c
  2219   0016FA  A0D8               	btfss	status,0,c
  2220   0016FC  D002               	goto	l1909
  2221   0016FE  5001               	movf	___lbmod@divisor^0,w,c
  2222   001700  5E04               	subwf	___lbmod@rem^0,f,c
  2223   001702                     l1909:
  2224   001702  2E03               	decfsz	___lbmod@counter^0,f,c
  2225   001704  D7F2               	goto	l1901
  2226   001706  5004               	movf	___lbmod@rem^0,w,c
  2227   001708  0012               	return		;funcret
  2228   00170A                     __end_of___lbmod:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function ___lbdiv *****************
  2232 ;; Defined at:
  2233 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  dividend        1    wreg     unsigned char 
  2236 ;;  divisor         1    4[COMRAM] unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  dividend        1    5[COMRAM] unsigned char 
  2239 ;;  quotient        1    7[COMRAM] unsigned char 
  2240 ;;  counter         1    6[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2250 ;;      Params:         1       0       0       0       0       0       0       0       0
  2251 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2253 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2254 ;;Total ram usage:        4 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_EscribeLCD_n8
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text6
  2265   001634                     __ptext6:
  2266                           	callstack 0
  2267   001634                     ___lbdiv:
  2268                           	callstack 27
  2269                           
  2270                           ;incstack = 0
  2271                           ;___lbdiv@dividend stored from wreg
  2272   001634  6E06               	movwf	___lbdiv@dividend^0,c
  2273   001636  0E00               	movlw	0
  2274   001638  6E08               	movwf	___lbdiv@quotient^0,c
  2275   00163A  5005               	movf	___lbdiv@divisor^0,w,c
  2276   00163C  B4D8               	btfsc	status,2,c
  2277   00163E  D015               	goto	l1895
  2278   001640  0E01               	movlw	1
  2279   001642  6E07               	movwf	___lbdiv@counter^0,c
  2280   001644  D003               	goto	l1883
  2281   001646                     l1879:
  2282   001646  90D8               	bcf	status,0,c
  2283   001648  3605               	rlcf	___lbdiv@divisor^0,f,c
  2284   00164A  2A07               	incf	___lbdiv@counter^0,f,c
  2285   00164C                     l1883:
  2286   00164C  AE05               	btfss	___lbdiv@divisor^0,7,c
  2287   00164E  D7FB               	goto	l1879
  2288   001650                     u940:
  2289   001650  90D8               	bcf	status,0,c
  2290   001652  3608               	rlcf	___lbdiv@quotient^0,f,c
  2291   001654  5005               	movf	___lbdiv@divisor^0,w,c
  2292   001656  5C06               	subwf	___lbdiv@dividend^0,w,c
  2293   001658  A0D8               	btfss	status,0,c
  2294   00165A  D003               	goto	l1891
  2295   00165C  5005               	movf	___lbdiv@divisor^0,w,c
  2296   00165E  5E06               	subwf	___lbdiv@dividend^0,f,c
  2297   001660  8008               	bsf	___lbdiv@quotient^0,0,c
  2298   001662                     l1891:
  2299   001662  90D8               	bcf	status,0,c
  2300   001664  3205               	rrcf	___lbdiv@divisor^0,f,c
  2301   001666  2E07               	decfsz	___lbdiv@counter^0,f,c
  2302   001668  D7F3               	goto	u940
  2303   00166A                     l1895:
  2304   00166A  5008               	movf	___lbdiv@quotient^0,w,c
  2305   00166C  0012               	return		;funcret
  2306   00166E                     __end_of___lbdiv:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function ___lwtoft *****************
  2310 ;; Defined at:
  2311 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  c               2    8[COMRAM] unsigned int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  3    8[COMRAM] float 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:         3       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2328 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:        3 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 2
  2332 ;; This function calls:
  2333 ;;		___ftpack
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340   001780                     __ptext7:
  2341                           	callstack 0
  2342   001780                     ___lwtoft:
  2343                           	callstack 28
  2344                           
  2345                           ;incstack = 0
  2346   001780  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2347   001784  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2348   001788  6A03               	clrf	(___ftpack@arg+2)^0,c
  2349   00178A  0E8E               	movlw	142
  2350   00178C  6E04               	movwf	___ftpack@exp^0,c
  2351   00178E  0E00               	movlw	0
  2352   001790  6E05               	movwf	___ftpack@sign^0,c
  2353   001792  ECE9  F008         	call	___ftpack	;wreg free
  2354   001796  C001  F009         	movff	?___ftpack,?___lwtoft
  2355   00179A  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2356   00179E  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2357   0017A2  0012               	return		;funcret
  2358   0017A4                     __end_of___lwtoft:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function ___fttol *****************
  2362 ;; Defined at:
  2363 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  f1              3   27[COMRAM] float 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  lval            4   37[COMRAM] unsigned long 
  2368 ;;  exp1            1   41[COMRAM] unsigned char 
  2369 ;;  sign1           1   36[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  4   27[COMRAM] long 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         4       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2382 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:       15 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text8
  2394   001100                     __ptext8:
  2395                           	callstack 0
  2396   001100                     ___fttol:
  2397                           	callstack 29
  2398                           
  2399                           ;incstack = 0
  2400   001100  C01E  F020         	movff	___fttol@f1+2,??___fttol
  2401   001104  6A21               	clrf	(??___fttol+1)^0,c
  2402   001106  6A22               	clrf	(??___fttol+2)^0,c
  2403   001108  341D               	rlcf	(___fttol@f1+1)^0,w,c
  2404   00110A  3620               	rlcf	??___fttol^0,f,c
  2405   00110C  E301               	bnc	u1321
  2406   00110E  8021               	bsf	(??___fttol+1)^0,0,c
  2407   001110                     u1321:
  2408   001110  5020               	movf	??___fttol^0,w,c
  2409   001112  6E2A               	movwf	___fttol@exp1^0,c
  2410   001114  502A               	movf	___fttol@exp1^0,w,c
  2411   001116  A4D8               	btfss	status,2,c
  2412   001118  D009               	goto	l2249
  2413   00111A                     u1330:
  2414   00111A  0E00               	movlw	0
  2415   00111C  6E1C               	movwf	?___fttol^0,c
  2416   00111E  0E00               	movlw	0
  2417   001120  6E1D               	movwf	(?___fttol+1)^0,c
  2418   001122  0E00               	movlw	0
  2419   001124  6E1E               	movwf	(?___fttol+2)^0,c
  2420   001126  0E00               	movlw	0
  2421   001128  6E1F               	movwf	(?___fttol+3)^0,c
  2422   00112A  0012               	return	
  2423   00112C                     l2249:
  2424   00112C  0E17               	movlw	23
  2425   00112E  6E20               	movwf	??___fttol^0,c
  2426   001130  C01C  F021         	movff	___fttol@f1,??___fttol+1
  2427   001134  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  2428   001138  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  2429   00113C  2820               	incf	??___fttol^0,w,c
  2430   00113E  6E24               	movwf	(??___fttol+4)^0,c
  2431   001140  D004               	goto	u1340
  2432   001142                     u1345:
  2433   001142  90D8               	bcf	status,0,c
  2434   001144  3223               	rrcf	(??___fttol+3)^0,f,c
  2435   001146  3222               	rrcf	(??___fttol+2)^0,f,c
  2436   001148  3221               	rrcf	(??___fttol+1)^0,f,c
  2437   00114A                     u1340:
  2438   00114A  2E24               	decfsz	(??___fttol+4)^0,f,c
  2439   00114C  D7FA               	goto	u1345
  2440   00114E  5021               	movf	(??___fttol+1)^0,w,c
  2441   001150  6E25               	movwf	___fttol@sign1^0,c
  2442   001152  8E1D               	bsf	(___fttol@f1+1)^0,7,c
  2443   001154  0EFF               	movlw	255
  2444   001156  161C               	andwf	___fttol@f1^0,f,c
  2445   001158  0EFF               	movlw	255
  2446   00115A  161D               	andwf	(___fttol@f1+1)^0,f,c
  2447   00115C  0E00               	movlw	0
  2448   00115E  161E               	andwf	(___fttol@f1+2)^0,f,c
  2449   001160  501C               	movf	___fttol@f1^0,w,c
  2450   001162  6E26               	movwf	___fttol@lval^0,c
  2451   001164  501D               	movf	(___fttol@f1+1)^0,w,c
  2452   001166  6E27               	movwf	(___fttol@lval+1)^0,c
  2453   001168  501E               	movf	(___fttol@f1+2)^0,w,c
  2454   00116A  6E28               	movwf	(___fttol@lval+2)^0,c
  2455   00116C  6A29               	clrf	(___fttol@lval+3)^0,c
  2456   00116E  0E8E               	movlw	142
  2457   001170  5E2A               	subwf	___fttol@exp1^0,f,c
  2458   001172  AE2A               	btfss	___fttol@exp1^0,7,c
  2459   001174  D00D               	goto	l2271
  2460   001176  502A               	movf	___fttol@exp1^0,w,c
  2461   001178  0A80               	xorlw	128
  2462   00117A  0F8F               	addlw	143
  2463   00117C  A0D8               	btfss	status,0,c
  2464   00117E  D7CD               	goto	u1330
  2465   001180                     l2267:
  2466   001180  90D8               	bcf	status,0,c
  2467   001182  3229               	rrcf	(___fttol@lval+3)^0,f,c
  2468   001184  3228               	rrcf	(___fttol@lval+2)^0,f,c
  2469   001186  3227               	rrcf	(___fttol@lval+1)^0,f,c
  2470   001188  3226               	rrcf	___fttol@lval^0,f,c
  2471   00118A  3E2A               	incfsz	___fttol@exp1^0,f,c
  2472   00118C  D7F9               	goto	l2267
  2473   00118E  D00D               	goto	u1380
  2474   001190                     l2271:
  2475   001190  0E17               	movlw	23
  2476   001192  642A               	cpfsgt	___fttol@exp1^0,c
  2477   001194  D007               	goto	l2279
  2478   001196  D7C1               	goto	u1330
  2479   001198                     l2277:
  2480   001198  90D8               	bcf	status,0,c
  2481   00119A  3626               	rlcf	___fttol@lval^0,f,c
  2482   00119C  3627               	rlcf	(___fttol@lval+1)^0,f,c
  2483   00119E  3628               	rlcf	(___fttol@lval+2)^0,f,c
  2484   0011A0  3629               	rlcf	(___fttol@lval+3)^0,f,c
  2485   0011A2  062A               	decf	___fttol@exp1^0,f,c
  2486   0011A4                     l2279:
  2487   0011A4  502A               	movf	___fttol@exp1^0,w,c
  2488   0011A6  A4D8               	btfss	status,2,c
  2489   0011A8  D7F7               	goto	l2277
  2490   0011AA                     u1380:
  2491   0011AA  5025               	movf	___fttol@sign1^0,w,c
  2492   0011AC  B4D8               	btfsc	status,2,c
  2493   0011AE  D008               	goto	l2285
  2494   0011B0  1E29               	comf	(___fttol@lval+3)^0,f,c
  2495   0011B2  1E28               	comf	(___fttol@lval+2)^0,f,c
  2496   0011B4  1E27               	comf	(___fttol@lval+1)^0,f,c
  2497   0011B6  6C26               	negf	___fttol@lval^0,c
  2498   0011B8  0E00               	movlw	0
  2499   0011BA  2227               	addwfc	(___fttol@lval+1)^0,f,c
  2500   0011BC  2228               	addwfc	(___fttol@lval+2)^0,f,c
  2501   0011BE  2229               	addwfc	(___fttol@lval+3)^0,f,c
  2502   0011C0                     l2285:
  2503   0011C0  C026  F01C         	movff	___fttol@lval,?___fttol
  2504   0011C4  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  2505   0011C8  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  2506   0011CC  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  2507   0011D0  0012               	return		;funcret
  2508   0011D2                     __end_of___fttol:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function ___ftmul *****************
  2512 ;; Defined at:
  2513 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  f1              3   12[COMRAM] float 
  2516 ;;  f2              3   15[COMRAM] float 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2519 ;;  sign            1   26[COMRAM] unsigned char 
  2520 ;;  cntr            1   25[COMRAM] unsigned char 
  2521 ;;  exp             1   21[COMRAM] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  3   12[COMRAM] float 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2531 ;;      Params:         6       0       0       0       0       0       0       0       0
  2532 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2533 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2534 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2535 ;;Total ram usage:       15 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 2
  2538 ;; This function calls:
  2539 ;;		___ftpack
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text9
  2546   000E40                     __ptext9:
  2547                           	callstack 0
  2548   000E40                     ___ftmul:
  2549                           	callstack 28
  2550                           
  2551                           ;incstack = 0
  2552   000E40  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2553   000E44  6A14               	clrf	(??___ftmul+1)^0,c
  2554   000E46  6A15               	clrf	(??___ftmul+2)^0,c
  2555   000E48  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  2556   000E4A  3613               	rlcf	??___ftmul^0,f,c
  2557   000E4C  E301               	bnc	u1251
  2558   000E4E  8014               	bsf	(??___ftmul+1)^0,0,c
  2559   000E50                     u1251:
  2560   000E50  5013               	movf	??___ftmul^0,w,c
  2561   000E52  6E16               	movwf	___ftmul@exp^0,c
  2562   000E54  5016               	movf	___ftmul@exp^0,w,c
  2563   000E56  A4D8               	btfss	status,2,c
  2564   000E58  D007               	goto	l2189
  2565   000E5A  0E00               	movlw	0
  2566   000E5C  6E0D               	movwf	?___ftmul^0,c
  2567   000E5E  0E00               	movlw	0
  2568   000E60  6E0E               	movwf	(?___ftmul+1)^0,c
  2569   000E62  0E00               	movlw	0
  2570   000E64  6E0F               	movwf	(?___ftmul+2)^0,c
  2571   000E66  0012               	return	
  2572   000E68                     l2189:
  2573   000E68  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2574   000E6C  6A14               	clrf	(??___ftmul+1)^0,c
  2575   000E6E  6A15               	clrf	(??___ftmul+2)^0,c
  2576   000E70  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  2577   000E72  3613               	rlcf	??___ftmul^0,f,c
  2578   000E74  E301               	bnc	u1271
  2579   000E76  8014               	bsf	(??___ftmul+1)^0,0,c
  2580   000E78                     u1271:
  2581   000E78  5013               	movf	??___ftmul^0,w,c
  2582   000E7A  6E1B               	movwf	___ftmul@sign^0,c
  2583   000E7C  501B               	movf	___ftmul@sign^0,w,c
  2584   000E7E  A4D8               	btfss	status,2,c
  2585   000E80  D007               	goto	l2195
  2586   000E82  0E00               	movlw	0
  2587   000E84  6E0D               	movwf	?___ftmul^0,c
  2588   000E86  0E00               	movlw	0
  2589   000E88  6E0E               	movwf	(?___ftmul+1)^0,c
  2590   000E8A  0E00               	movlw	0
  2591   000E8C  6E0F               	movwf	(?___ftmul+2)^0,c
  2592   000E8E  0012               	return	
  2593   000E90                     l2195:
  2594   000E90  501B               	movf	___ftmul@sign^0,w,c
  2595   000E92  0F7B               	addlw	123
  2596   000E94  2616               	addwf	___ftmul@exp^0,f,c
  2597   000E96  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2598   000E9A  5012               	movf	(___ftmul@f2+2)^0,w,c
  2599   000E9C  1A1B               	xorwf	___ftmul@sign^0,f,c
  2600   000E9E  0E80               	movlw	128
  2601   000EA0  161B               	andwf	___ftmul@sign^0,f,c
  2602   000EA2  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  2603   000EA4  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  2604   000EA6  0EFF               	movlw	255
  2605   000EA8  1610               	andwf	___ftmul@f2^0,f,c
  2606   000EAA  0EFF               	movlw	255
  2607   000EAC  1611               	andwf	(___ftmul@f2+1)^0,f,c
  2608   000EAE  0E00               	movlw	0
  2609   000EB0  1612               	andwf	(___ftmul@f2+2)^0,f,c
  2610   000EB2  0E00               	movlw	0
  2611   000EB4  6E17               	movwf	___ftmul@f3_as_product^0,c
  2612   000EB6  0E00               	movlw	0
  2613   000EB8  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  2614   000EBA  0E00               	movlw	0
  2615   000EBC  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  2616   000EBE  0E07               	movlw	7
  2617   000EC0  6E1A               	movwf	___ftmul@cntr^0,c
  2618   000EC2                     l2209:
  2619   000EC2  A00D               	btfss	___ftmul@f1^0,0,c
  2620   000EC4  D006               	goto	l2213
  2621   000EC6  5010               	movf	___ftmul@f2^0,w,c
  2622   000EC8  2617               	addwf	___ftmul@f3_as_product^0,f,c
  2623   000ECA  5011               	movf	(___ftmul@f2+1)^0,w,c
  2624   000ECC  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2625   000ECE  5012               	movf	(___ftmul@f2+2)^0,w,c
  2626   000ED0  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2627   000ED2                     l2213:
  2628   000ED2  90D8               	bcf	status,0,c
  2629   000ED4  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  2630   000ED6  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  2631   000ED8  320D               	rrcf	___ftmul@f1^0,f,c
  2632   000EDA  90D8               	bcf	status,0,c
  2633   000EDC  3610               	rlcf	___ftmul@f2^0,f,c
  2634   000EDE  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  2635   000EE0  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  2636   000EE2  2E1A               	decfsz	___ftmul@cntr^0,f,c
  2637   000EE4  D7EE               	goto	l2209
  2638   000EE6  0E09               	movlw	9
  2639   000EE8  6E1A               	movwf	___ftmul@cntr^0,c
  2640   000EEA                     l2219:
  2641   000EEA  A00D               	btfss	___ftmul@f1^0,0,c
  2642   000EEC  D006               	goto	l2223
  2643   000EEE  5010               	movf	___ftmul@f2^0,w,c
  2644   000EF0  2617               	addwf	___ftmul@f3_as_product^0,f,c
  2645   000EF2  5011               	movf	(___ftmul@f2+1)^0,w,c
  2646   000EF4  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2647   000EF6  5012               	movf	(___ftmul@f2+2)^0,w,c
  2648   000EF8  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2649   000EFA                     l2223:
  2650   000EFA  90D8               	bcf	status,0,c
  2651   000EFC  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  2652   000EFE  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  2653   000F00  320D               	rrcf	___ftmul@f1^0,f,c
  2654   000F02  90D8               	bcf	status,0,c
  2655   000F04  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  2656   000F06  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  2657   000F08  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  2658   000F0A  2E1A               	decfsz	___ftmul@cntr^0,f,c
  2659   000F0C  D7EE               	goto	l2219
  2660   000F0E  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2661   000F12  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2662   000F16  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2663   000F1A  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2664   000F1E  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2665   000F22  ECE9  F008         	call	___ftpack	;wreg free
  2666   000F26  C001  F00D         	movff	?___ftpack,?___ftmul
  2667   000F2A  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2668   000F2E  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2669   000F32  0012               	return		;funcret
  2670   000F34                     __end_of___ftmul:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function ___ftdiv *****************
  2674 ;; Defined at:
  2675 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdiv.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  f1              3   27[COMRAM] float 
  2678 ;;  f2              3   30[COMRAM] float 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  f3              3   37[COMRAM] float 
  2681 ;;  sign            1   41[COMRAM] unsigned char 
  2682 ;;  exp             1   40[COMRAM] unsigned char 
  2683 ;;  cntr            1   36[COMRAM] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  3   27[COMRAM] float 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2693 ;;      Params:         6       0       0       0       0       0       0       0       0
  2694 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2695 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2696 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2697 ;;Total ram usage:       15 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 2
  2700 ;; This function calls:
  2701 ;;		___ftpack
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text10
  2708   00101A                     __ptext10:
  2709                           	callstack 0
  2710   00101A                     ___ftdiv:
  2711                           	callstack 28
  2712                           
  2713                           ;incstack = 0
  2714   00101A  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  2715   00101E  6A23               	clrf	(??___ftdiv+1)^0,c
  2716   001020  6A24               	clrf	(??___ftdiv+2)^0,c
  2717   001022  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  2718   001024  3622               	rlcf	??___ftdiv^0,f,c
  2719   001026  E301               	bnc	u1201
  2720   001028  8023               	bsf	(??___ftdiv+1)^0,0,c
  2721   00102A                     u1201:
  2722   00102A  5022               	movf	??___ftdiv^0,w,c
  2723   00102C  6E29               	movwf	___ftdiv@exp^0,c
  2724   00102E  5029               	movf	___ftdiv@exp^0,w,c
  2725   001030  A4D8               	btfss	status,2,c
  2726   001032  D007               	goto	l2143
  2727   001034  0E00               	movlw	0
  2728   001036  6E1C               	movwf	?___ftdiv^0,c
  2729   001038  0E00               	movlw	0
  2730   00103A  6E1D               	movwf	(?___ftdiv+1)^0,c
  2731   00103C  0E00               	movlw	0
  2732   00103E  6E1E               	movwf	(?___ftdiv+2)^0,c
  2733   001040  0012               	return	
  2734   001042                     l2143:
  2735   001042  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  2736   001046  6A23               	clrf	(??___ftdiv+1)^0,c
  2737   001048  6A24               	clrf	(??___ftdiv+2)^0,c
  2738   00104A  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  2739   00104C  3622               	rlcf	??___ftdiv^0,f,c
  2740   00104E  E301               	bnc	u1221
  2741   001050  8023               	bsf	(??___ftdiv+1)^0,0,c
  2742   001052                     u1221:
  2743   001052  5022               	movf	??___ftdiv^0,w,c
  2744   001054  6E2A               	movwf	___ftdiv@sign^0,c
  2745   001056  502A               	movf	___ftdiv@sign^0,w,c
  2746   001058  A4D8               	btfss	status,2,c
  2747   00105A  D007               	goto	l2149
  2748   00105C  0E00               	movlw	0
  2749   00105E  6E1C               	movwf	?___ftdiv^0,c
  2750   001060  0E00               	movlw	0
  2751   001062  6E1D               	movwf	(?___ftdiv+1)^0,c
  2752   001064  0E00               	movlw	0
  2753   001066  6E1E               	movwf	(?___ftdiv+2)^0,c
  2754   001068  0012               	return	
  2755   00106A                     l2149:
  2756   00106A  0E00               	movlw	0
  2757   00106C  6E26               	movwf	___ftdiv@f3^0,c
  2758   00106E  0E00               	movlw	0
  2759   001070  6E27               	movwf	(___ftdiv@f3+1)^0,c
  2760   001072  0E00               	movlw	0
  2761   001074  6E28               	movwf	(___ftdiv@f3+2)^0,c
  2762   001076  502A               	movf	___ftdiv@sign^0,w,c
  2763   001078  0F89               	addlw	137
  2764   00107A  5E29               	subwf	___ftdiv@exp^0,f,c
  2765   00107C  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2766   001080  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2767   001082  1A2A               	xorwf	___ftdiv@sign^0,f,c
  2768   001084  0E80               	movlw	128
  2769   001086  162A               	andwf	___ftdiv@sign^0,f,c
  2770   001088  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  2771   00108A  0EFF               	movlw	255
  2772   00108C  161C               	andwf	___ftdiv@f1^0,f,c
  2773   00108E  0EFF               	movlw	255
  2774   001090  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  2775   001092  0E00               	movlw	0
  2776   001094  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  2777   001096  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  2778   001098  0EFF               	movlw	255
  2779   00109A  161F               	andwf	___ftdiv@f2^0,f,c
  2780   00109C  0EFF               	movlw	255
  2781   00109E  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  2782   0010A0  0E00               	movlw	0
  2783   0010A2  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  2784   0010A4  0E18               	movlw	24
  2785   0010A6  6E25               	movwf	___ftdiv@cntr^0,c
  2786   0010A8                     l2169:
  2787   0010A8  90D8               	bcf	status,0,c
  2788   0010AA  3626               	rlcf	___ftdiv@f3^0,f,c
  2789   0010AC  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  2790   0010AE  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  2791   0010B0  501F               	movf	___ftdiv@f2^0,w,c
  2792   0010B2  5C1C               	subwf	___ftdiv@f1^0,w,c
  2793   0010B4  5020               	movf	(___ftdiv@f2+1)^0,w,c
  2794   0010B6  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  2795   0010B8  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2796   0010BA  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  2797   0010BC  A0D8               	btfss	status,0,c
  2798   0010BE  D007               	goto	l645
  2799   0010C0  501F               	movf	___ftdiv@f2^0,w,c
  2800   0010C2  5E1C               	subwf	___ftdiv@f1^0,f,c
  2801   0010C4  5020               	movf	(___ftdiv@f2+1)^0,w,c
  2802   0010C6  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  2803   0010C8  5021               	movf	(___ftdiv@f2+2)^0,w,c
  2804   0010CA  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  2805   0010CC  8026               	bsf	___ftdiv@f3^0,0,c
  2806   0010CE                     l645:
  2807   0010CE  90D8               	bcf	status,0,c
  2808   0010D0  361C               	rlcf	___ftdiv@f1^0,f,c
  2809   0010D2  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  2810   0010D4  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  2811   0010D6  2E25               	decfsz	___ftdiv@cntr^0,f,c
  2812   0010D8  D7E7               	goto	l2169
  2813   0010DA  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  2814   0010DE  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2815   0010E2  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2816   0010E6  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  2817   0010EA  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  2818   0010EE  ECE9  F008         	call	___ftpack	;wreg free
  2819   0010F2  C001  F01C         	movff	?___ftpack,?___ftdiv
  2820   0010F6  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  2821   0010FA  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  2822   0010FE  0012               	return		;funcret
  2823   001100                     __end_of___ftdiv:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function ___awtoft *****************
  2827 ;; Defined at:
  2828 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awtoft.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  c               2    8[COMRAM] int 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  sign            1   11[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  3    8[COMRAM] float 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2842 ;;      Params:         3       0       0       0       0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2845 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2846 ;;Total ram usage:        4 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 2
  2849 ;; This function calls:
  2850 ;;		___ftpack
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text11
  2857   0016A8                     __ptext11:
  2858                           	callstack 0
  2859   0016A8                     ___awtoft:
  2860                           	callstack 28
  2861                           
  2862                           ;incstack = 0
  2863   0016A8  0E00               	movlw	0
  2864   0016AA  6E0C               	movwf	___awtoft@sign^0,c
  2865   0016AC  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  2866   0016AE  D006               	goto	l2239
  2867   0016B0  6C09               	negf	___awtoft@c^0,c
  2868   0016B2  1E0A               	comf	(___awtoft@c+1)^0,f,c
  2869   0016B4  B0D8               	btfsc	status,0,c
  2870   0016B6  2A0A               	incf	(___awtoft@c+1)^0,f,c
  2871   0016B8  0E01               	movlw	1
  2872   0016BA  6E0C               	movwf	___awtoft@sign^0,c
  2873   0016BC                     l2239:
  2874   0016BC  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2875   0016C0  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2876   0016C4  6A03               	clrf	(___ftpack@arg+2)^0,c
  2877   0016C6  0E8E               	movlw	142
  2878   0016C8  6E04               	movwf	___ftpack@exp^0,c
  2879   0016CA  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2880   0016CE  ECE9  F008         	call	___ftpack	;wreg free
  2881   0016D2  C001  F009         	movff	?___ftpack,?___awtoft
  2882   0016D6  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2883   0016DA  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2884   0016DE  0012               	return		;funcret
  2885   0016E0                     __end_of___awtoft:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function ___ftpack *****************
  2889 ;; Defined at:
  2890 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  arg             3    0[COMRAM] unsigned um
  2893 ;;  exp             1    3[COMRAM] unsigned char 
  2894 ;;  sign            1    4[COMRAM] unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  3    0[COMRAM] float 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2906 ;;      Params:         5       0       0       0       0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2908 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2909 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2910 ;;Total ram usage:        8 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		___awtoft
  2917 ;;		___ftdiv
  2918 ;;		___ftmul
  2919 ;;		___lwtoft
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text12
  2924   0011D2                     __ptext12:
  2925                           	callstack 0
  2926   0011D2                     ___ftpack:
  2927                           	callstack 28
  2928                           
  2929                           ;incstack = 0
  2930   0011D2  5004               	movf	___ftpack@exp^0,w,c
  2931   0011D4  B4D8               	btfsc	status,2,c
  2932   0011D6  D005               	goto	u1010
  2933   0011D8  5001               	movf	___ftpack@arg^0,w,c
  2934   0011DA  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  2935   0011DC  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  2936   0011DE  A4D8               	btfss	status,2,c
  2937   0011E0  D00C               	goto	l2003
  2938   0011E2                     u1010:
  2939   0011E2  0E00               	movlw	0
  2940   0011E4  6E01               	movwf	?___ftpack^0,c
  2941   0011E6  0E00               	movlw	0
  2942   0011E8  6E02               	movwf	(?___ftpack+1)^0,c
  2943   0011EA  0E00               	movlw	0
  2944   0011EC  6E03               	movwf	(?___ftpack+2)^0,c
  2945   0011EE  0012               	return	
  2946   0011F0                     l2001:
  2947   0011F0  2A04               	incf	___ftpack@exp^0,f,c
  2948   0011F2  90D8               	bcf	status,0,c
  2949   0011F4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2950   0011F6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2951   0011F8  3201               	rrcf	___ftpack@arg^0,f,c
  2952   0011FA                     l2003:
  2953   0011FA  0E00               	movlw	0
  2954   0011FC  1401               	andwf	___ftpack@arg^0,w,c
  2955   0011FE  6E06               	movwf	??___ftpack^0,c
  2956   001200  0E00               	movlw	0
  2957   001202  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2958   001204  6E07               	movwf	(??___ftpack+1)^0,c
  2959   001206  0EFE               	movlw	254
  2960   001208  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2961   00120A  6E08               	movwf	(??___ftpack+2)^0,c
  2962   00120C  5006               	movf	??___ftpack^0,w,c
  2963   00120E  1007               	iorwf	(??___ftpack+1)^0,w,c
  2964   001210  1008               	iorwf	(??___ftpack+2)^0,w,c
  2965   001212  B4D8               	btfsc	status,2,c
  2966   001214  D00C               	goto	l2009
  2967   001216  D7EC               	goto	l2001
  2968   001218                     l2005:
  2969   001218  2A04               	incf	___ftpack@exp^0,f,c
  2970   00121A  0E01               	movlw	1
  2971   00121C  2601               	addwf	___ftpack@arg^0,f,c
  2972   00121E  0E00               	movlw	0
  2973   001220  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2974   001222  0E00               	movlw	0
  2975   001224  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2976   001226  90D8               	bcf	status,0,c
  2977   001228  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2978   00122A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2979   00122C  3201               	rrcf	___ftpack@arg^0,f,c
  2980   00122E                     l2009:
  2981   00122E  0E00               	movlw	0
  2982   001230  1401               	andwf	___ftpack@arg^0,w,c
  2983   001232  6E06               	movwf	??___ftpack^0,c
  2984   001234  0E00               	movlw	0
  2985   001236  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2986   001238  6E07               	movwf	(??___ftpack+1)^0,c
  2987   00123A  0EFF               	movlw	255
  2988   00123C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2989   00123E  6E08               	movwf	(??___ftpack+2)^0,c
  2990   001240  5006               	movf	??___ftpack^0,w,c
  2991   001242  1007               	iorwf	(??___ftpack+1)^0,w,c
  2992   001244  1008               	iorwf	(??___ftpack+2)^0,w,c
  2993   001246  B4D8               	btfsc	status,2,c
  2994   001248  D006               	goto	l2013
  2995   00124A  D7E6               	goto	l2005
  2996   00124C                     l2011:
  2997   00124C  0604               	decf	___ftpack@exp^0,f,c
  2998   00124E  90D8               	bcf	status,0,c
  2999   001250  3601               	rlcf	___ftpack@arg^0,f,c
  3000   001252  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3001   001254  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3002   001256                     l2013:
  3003   001256  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3004   001258  D003               	goto	u1050
  3005   00125A  0E02               	movlw	2
  3006   00125C  6004               	cpfslt	___ftpack@exp^0,c
  3007   00125E  D7F6               	goto	l2011
  3008   001260                     u1050:
  3009   001260  A004               	btfss	___ftpack@exp^0,0,c
  3010   001262  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3011   001264  90D8               	bcf	status,0,c
  3012   001266  3204               	rrcf	___ftpack@exp^0,f,c
  3013   001268  5004               	movf	___ftpack@exp^0,w,c
  3014   00126A  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3015   00126C  5005               	movf	___ftpack@sign^0,w,c
  3016   00126E  A4D8               	btfss	status,2,c
  3017   001270  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3018   001272  C001  F001         	movff	___ftpack@arg,?___ftpack
  3019   001276  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3020   00127A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3021   00127E  0012               	return		;funcret
  3022   001280                     __end_of___ftpack:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _Mensaje_LCD_Var_Mensaje20x4 *****************
  3026 ;; Defined at:
  3027 ;;		line 308 in file "LibLCDXC8.h"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  a               1   12[COMRAM] PTR unsigned char 
  3030 ;;		 -> STR_26(15), STR_22(3), STR_18(16), STR_14(10), 
  3031 ;;		 -> STR_10(2), STR_6(13), STR_2(3), 
  3032 ;;  b               1   13[COMRAM] PTR unsigned char 
  3033 ;;		 -> STR_27(11), STR_23(17), STR_19(14), STR_15(3), 
  3034 ;;		 -> STR_11(22), STR_7(18), STR_3(18), 
  3035 ;;  c               1   14[COMRAM] PTR unsigned char 
  3036 ;;		 -> STR_28(2), STR_24(2), STR_20(2), STR_16(19), 
  3037 ;;		 -> STR_12(12), STR_8(5), STR_4(5), 
  3038 ;;  d               1   15[COMRAM] PTR unsigned char 
  3039 ;;		 -> STR_29(5), STR_25(18), STR_21(5), STR_17(15), 
  3040 ;;		 -> STR_13(3), STR_9(7), STR_5(7), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:         4       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        4 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 5
  3059 ;; This function calls:
  3060 ;;		_BorraLCD
  3061 ;;		_DireccionaLCD
  3062 ;;		_Mensaje_LCD_Var_Centrado
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text13
  3069   0015F6                     __ptext13:
  3070                           	callstack 0
  3071   0015F6                     _Mensaje_LCD_Var_Mensaje20x4:
  3072                           	callstack 25
  3073                           
  3074                           ;LibLCDXC8.h: 309: BorraLCD();
  3075                           
  3076                           ;incstack = 0
  3077   0015F6  ECF4  F00B         	call	_BorraLCD	;wreg free
  3078                           
  3079                           ;LibLCDXC8.h: 310: DireccionaLCD(0x00);
  3080   0015FA  0E00               	movlw	0
  3081   0015FC  ECE9  F00B         	call	_DireccionaLCD
  3082                           
  3083                           ;LibLCDXC8.h: 311: Mensaje_LCD_Var_Centrado(a);
  3084   001600  C00D  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@a,Mensaje_LCD_Var_Centrado@a
  3085   001604  EC49  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3086                           
  3087                           ;LibLCDXC8.h: 312: DireccionaLCD(0xC0);
  3088   001608  0EC0               	movlw	192
  3089   00160A  ECE9  F00B         	call	_DireccionaLCD
  3090                           
  3091                           ;LibLCDXC8.h: 313: Mensaje_LCD_Var_Centrado(b);
  3092   00160E  C00E  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@b,Mensaje_LCD_Var_Centrado@a
  3093   001612  EC49  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3094                           
  3095                           ;LibLCDXC8.h: 314: DireccionaLCD(0xC0-44);
  3096   001616  0E94               	movlw	148
  3097   001618  ECE9  F00B         	call	_DireccionaLCD
  3098                           
  3099                           ;LibLCDXC8.h: 315: Mensaje_LCD_Var_Centrado(c);
  3100   00161C  C00F  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@c,Mensaje_LCD_Var_Centrado@a
  3101   001620  EC49  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3102                           
  3103                           ;LibLCDXC8.h: 316: DireccionaLCD(0xC0+20);
  3104   001624  0ED4               	movlw	212
  3105   001626  ECE9  F00B         	call	_DireccionaLCD
  3106                           
  3107                           ;LibLCDXC8.h: 317: Mensaje_LCD_Var_Centrado(d);
  3108   00162A  C010  F009         	movff	Mensaje_LCD_Var_Mensaje20x4@d,Mensaje_LCD_Var_Centrado@a
  3109   00162E  EC49  F00A         	call	_Mensaje_LCD_Var_Centrado	;wreg free
  3110   001632  0012               	return		;funcret
  3111   001634                     __end_of_Mensaje_LCD_Var_Mensaje20x4:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _Mensaje_LCD_Var_Centrado *****************
  3115 ;; Defined at:
  3116 ;;		line 329 in file "LibLCDXC8.h"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  a               1    8[COMRAM] PTR unsigned char 
  3119 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3120 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3121 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3122 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3123 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3124 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3125 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  i               1   11[COMRAM] unsigned char 
  3128 ;;  n               1   10[COMRAM] unsigned char 
  3129 ;;  l               1    9[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3139 ;;      Params:         1       0       0       0       0       0       0       0       0
  3140 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3142 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3143 ;;Total ram usage:        4 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 4
  3146 ;; This function calls:
  3147 ;;		_EscribeLCD_c
  3148 ;;		___awdiv
  3149 ;;		_strlen
  3150 ;; This function is called by:
  3151 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text14
  3156   001492                     __ptext14:
  3157                           	callstack 0
  3158   001492                     _Mensaje_LCD_Var_Centrado:
  3159                           	callstack 25
  3160                           
  3161                           ;LibLCDXC8.h: 330: char l =strlen(a);
  3162                           
  3163                           ;incstack = 0
  3164   001492  C009  F001         	movff	Mensaje_LCD_Var_Centrado@a,strlen@s
  3165   001496  EC99  F00B         	call	_strlen	;wreg free
  3166   00149A  5001               	movf	?_strlen^0,w,c
  3167   00149C  6E0A               	movwf	Mensaje_LCD_Var_Centrado@l^0,c
  3168                           
  3169                           ;LibLCDXC8.h: 331: char n=(20-l)/2;
  3170   00149E  500A               	movf	Mensaje_LCD_Var_Centrado@l^0,w,c
  3171   0014A0  0814               	sublw	20
  3172   0014A2  6E01               	movwf	___awdiv@dividend^0,c
  3173   0014A4  0E00               	movlw	0
  3174   0014A6  A0D8               	btfss	status,0,c
  3175   0014A8  2AE8               	incf	wreg,f,c
  3176   0014AA  0800               	sublw	0
  3177   0014AC  6E02               	movwf	(___awdiv@dividend+1)^0,c
  3178   0014AE  0E00               	movlw	0
  3179   0014B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3180   0014B2  0E02               	movlw	2
  3181   0014B4  6E03               	movwf	___awdiv@divisor^0,c
  3182   0014B6  EC8E  F009         	call	___awdiv	;wreg free
  3183   0014BA  5001               	movf	?___awdiv^0,w,c
  3184   0014BC  6E0B               	movwf	Mensaje_LCD_Var_Centrado@n^0,c
  3185                           
  3186                           ;LibLCDXC8.h: 332: char i;;LibLCDXC8.h: 334: for(i=0;i<n;i++){
  3187   0014BE  0E00               	movlw	0
  3188   0014C0  6E0C               	movwf	Mensaje_LCD_Var_Centrado@i^0,c
  3189   0014C2  D004               	goto	l1977
  3190   0014C4                     l1973:
  3191                           
  3192                           ;LibLCDXC8.h: 335: EscribeLCD_c(' ');
  3193   0014C4  0E20               	movlw	32
  3194   0014C6  ECDE  F00B         	call	_EscribeLCD_c
  3195   0014CA  2A0C               	incf	Mensaje_LCD_Var_Centrado@i^0,f,c
  3196   0014CC                     l1977:
  3197   0014CC  500B               	movf	Mensaje_LCD_Var_Centrado@n^0,w,c
  3198   0014CE  5C0C               	subwf	Mensaje_LCD_Var_Centrado@i^0,w,c
  3199   0014D0  B0D8               	btfsc	status,0,c
  3200   0014D2  D00A               	goto	l1983
  3201   0014D4  D7F7               	goto	l1973
  3202   0014D6                     l1979:
  3203                           
  3204                           ;LibLCDXC8.h: 338: EscribeLCD_c(*a);
  3205   0014D6  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  3206   0014DA                     	if	1	;There is more than 1 active tblptr byte
  3207   0014DA  0E08               	movlw	high __smallconst
  3208   0014DC  6EF7               	movwf	tblptrh,c
  3209   0014DE                     	endif
  3210   0014DE                     	if	0	;tblptru may be non-zero
  3211   0014DE                     	endif
  3212   0014DE                     	if	0	;tblptru may be non-zero
  3213   0014DE                     	endif
  3214   0014DE  0008               	tblrd		*
  3215   0014E0  50F5               	movf	tablat,w,c
  3216   0014E2  ECDE  F00B         	call	_EscribeLCD_c
  3217                           
  3218                           ;LibLCDXC8.h: 339: a++;
  3219   0014E6  2A09               	incf	Mensaje_LCD_Var_Centrado@a^0,f,c
  3220   0014E8                     l1983:
  3221   0014E8  C009  FFF6         	movff	Mensaje_LCD_Var_Centrado@a,tblptrl
  3222   0014EC                     	if	1	;There is more than 1 active tblptr byte
  3223   0014EC  0E08               	movlw	high __smallconst
  3224   0014EE  6EF7               	movwf	tblptrh,c
  3225   0014F0                     	endif
  3226   0014F0                     	if	0	;tblptru may be non-zero
  3227   0014F0                     	endif
  3228   0014F0                     	if	0	;tblptru may be non-zero
  3229   0014F0                     	endif
  3230   0014F0  0008               	tblrd		*
  3231   0014F2  50F5               	movf	tablat,w,c
  3232   0014F4  0900               	iorlw	0
  3233   0014F6  B4D8               	btfsc	status,2,c
  3234   0014F8  0012               	return	
  3235   0014FA  D7ED               	goto	l1979
  3236   0014FC                     __end_of_Mensaje_LCD_Var_Centrado:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _strlen *****************
  3240 ;; Defined at:
  3241 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3244 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3245 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3246 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3247 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3248 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3249 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3250 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  3253 ;;		 -> STR_29(5), STR_28(2), STR_27(11), STR_26(15), 
  3254 ;;		 -> STR_25(18), STR_24(2), STR_23(17), STR_22(3), 
  3255 ;;		 -> STR_21(5), STR_20(2), STR_19(14), STR_18(16), 
  3256 ;;		 -> STR_17(15), STR_16(19), STR_15(3), STR_14(10), 
  3257 ;;		 -> STR_13(3), STR_12(12), STR_11(22), STR_10(2), 
  3258 ;;		 -> STR_9(7), STR_8(5), STR_7(18), STR_6(13), 
  3259 ;;		 -> STR_5(7), STR_4(5), STR_3(18), STR_2(3), 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    0[COMRAM] unsigned int 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         2       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_Mensaje_LCD_Var_Centrado
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text15
  3284   001732                     __ptext15:
  3285                           	callstack 0
  3286   001732                     _strlen:
  3287                           	callstack 27
  3288                           
  3289                           ;incstack = 0
  3290   001732  C001  F003         	movff	strlen@s,strlen@cp
  3291   001736  D001               	goto	l1823
  3292   001738                     l1821:
  3293   001738  2A03               	incf	strlen@cp^0,f,c
  3294   00173A                     l1823:
  3295   00173A  C003  FFF6         	movff	strlen@cp,tblptrl
  3296   00173E                     	if	1	;There is more than 1 active tblptr byte
  3297   00173E  0E08               	movlw	high __smallconst
  3298   001740  6EF7               	movwf	tblptrh,c
  3299   001742                     	endif
  3300   001742                     	if	0	;tblptru may be non-zero
  3301   001742                     	endif
  3302   001742                     	if	0	;tblptru may be non-zero
  3303   001742                     	endif
  3304   001742  0008               	tblrd		*
  3305   001744  50F5               	movf	tablat,w,c
  3306   001746  0900               	iorlw	0
  3307   001748  A4D8               	btfss	status,2,c
  3308   00174A  D7F6               	goto	l1821
  3309   00174C  5001               	movf	strlen@s^0,w,c
  3310   00174E  5C03               	subwf	strlen@cp^0,w,c
  3311   001750  6E01               	movwf	?_strlen^0,c
  3312   001752  6A02               	clrf	(?_strlen+1)^0,c
  3313   001754  BE01               	btfsc	?_strlen^0,7,c
  3314   001756  0602               	decf	(?_strlen+1)^0,f,c
  3315   001758  0012               	return		;funcret
  3316   00175A                     __end_of_strlen:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function ___awdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  dividend        2    0[COMRAM] int 
  3324 ;;  divisor         2    2[COMRAM] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2    6[COMRAM] int 
  3327 ;;  sign            1    5[COMRAM] unsigned char 
  3328 ;;  counter         1    4[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    0[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3338 ;;      Params:         4       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_Mensaje_LCD_Var_Centrado
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text16
  3353   00131C                     __ptext16:
  3354                           	callstack 0
  3355   00131C                     ___awdiv:
  3356                           	callstack 27
  3357                           
  3358                           ;incstack = 0
  3359   00131C  0E00               	movlw	0
  3360   00131E  6E06               	movwf	___awdiv@sign^0,c
  3361   001320  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3362   001322  D006               	goto	l1837
  3363   001324  6C03               	negf	___awdiv@divisor^0,c
  3364   001326  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3365   001328  B0D8               	btfsc	status,0,c
  3366   00132A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3367   00132C  0E01               	movlw	1
  3368   00132E  6E06               	movwf	___awdiv@sign^0,c
  3369   001330                     l1837:
  3370   001330  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  3371   001332  D006               	goto	l1843
  3372   001334  6C01               	negf	___awdiv@dividend^0,c
  3373   001336  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3374   001338  B0D8               	btfsc	status,0,c
  3375   00133A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3376   00133C  0E01               	movlw	1
  3377   00133E  1A06               	xorwf	___awdiv@sign^0,f,c
  3378   001340                     l1843:
  3379   001340  0E00               	movlw	0
  3380   001342  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3381   001344  0E00               	movlw	0
  3382   001346  6E07               	movwf	___awdiv@quotient^0,c
  3383   001348  5003               	movf	___awdiv@divisor^0,w,c
  3384   00134A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3385   00134C  B4D8               	btfsc	status,2,c
  3386   00134E  D01C               	goto	l1865
  3387   001350  0E01               	movlw	1
  3388   001352  6E05               	movwf	___awdiv@counter^0,c
  3389   001354  D004               	goto	l1851
  3390   001356                     l1849:
  3391   001356  90D8               	bcf	status,0,c
  3392   001358  3603               	rlcf	___awdiv@divisor^0,f,c
  3393   00135A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3394   00135C  2A05               	incf	___awdiv@counter^0,f,c
  3395   00135E                     l1851:
  3396   00135E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3397   001360  D7FA               	goto	l1849
  3398   001362                     u900:
  3399   001362  90D8               	bcf	status,0,c
  3400   001364  3607               	rlcf	___awdiv@quotient^0,f,c
  3401   001366  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3402   001368  5003               	movf	___awdiv@divisor^0,w,c
  3403   00136A  5C01               	subwf	___awdiv@dividend^0,w,c
  3404   00136C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3405   00136E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3406   001370  A0D8               	btfss	status,0,c
  3407   001372  D005               	goto	l1861
  3408   001374  5003               	movf	___awdiv@divisor^0,w,c
  3409   001376  5E01               	subwf	___awdiv@dividend^0,f,c
  3410   001378  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3411   00137A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3412   00137C  8007               	bsf	___awdiv@quotient^0,0,c
  3413   00137E                     l1861:
  3414   00137E  90D8               	bcf	status,0,c
  3415   001380  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3416   001382  3203               	rrcf	___awdiv@divisor^0,f,c
  3417   001384  2E05               	decfsz	___awdiv@counter^0,f,c
  3418   001386  D7ED               	goto	u900
  3419   001388                     l1865:
  3420   001388  5006               	movf	___awdiv@sign^0,w,c
  3421   00138A  B4D8               	btfsc	status,2,c
  3422   00138C  D004               	goto	l1869
  3423   00138E  6C07               	negf	___awdiv@quotient^0,c
  3424   001390  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3425   001392  B0D8               	btfsc	status,0,c
  3426   001394  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3427   001396                     l1869:
  3428   001396  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3429   00139A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3430   00139E  0012               	return		;funcret
  3431   0013A0                     __end_of___awdiv:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _EscribeLCD_c *****************
  3435 ;; Defined at:
  3436 ;;		line 122 in file "LibLCDXC8.h"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  a               1    wreg     unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  a               1    4[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0
  3451 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3453 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3454 ;;Total ram usage:        1 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 3
  3457 ;; This function calls:
  3458 ;;		_EnviaDato
  3459 ;;		_HabilitaLCD
  3460 ;;		_RetardoLCD
  3461 ;; This function is called by:
  3462 ;;		_Mensaje_LCD_Var_Centrado
  3463 ;;		_MensajeLCD_Var
  3464 ;;		_imprimir_porcentaje
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text17
  3469   0017BC                     __ptext17:
  3470                           	callstack 0
  3471   0017BC                     _EscribeLCD_c:
  3472                           	callstack 25
  3473                           
  3474                           ;incstack = 0
  3475                           ;EscribeLCD_c@a stored from wreg
  3476   0017BC  6E05               	movwf	EscribeLCD_c@a^0,c
  3477                           
  3478                           ;LibLCDXC8.h: 126: LATD2=1;
  3479   0017BE  848C               	bsf	3980,2,c	;volatile
  3480                           
  3481                           ;LibLCDXC8.h: 127: EnviaDato(a);
  3482   0017C0  5005               	movf	EscribeLCD_c@a^0,w,c
  3483   0017C2  ECD8  F00A         	call	_EnviaDato
  3484                           
  3485                           ;LibLCDXC8.h: 128: HabilitaLCD();
  3486   0017C6  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3487                           
  3488                           ;LibLCDXC8.h: 129: RetardoLCD(4);
  3489   0017CA  0E04               	movlw	4
  3490   0017CC  ECAD  F00A         	call	_RetardoLCD
  3491   0017D0  0012               	return		;funcret
  3492   0017D2                     __end_of_EscribeLCD_c:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _DireccionaLCD *****************
  3496 ;; Defined at:
  3497 ;;		line 355 in file "LibLCDXC8.h"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  a               1    wreg     unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  a               1    4[COMRAM] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0
  3512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        1 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 3
  3518 ;; This function calls:
  3519 ;;		_EnviaDato
  3520 ;;		_HabilitaLCD
  3521 ;;		_RetardoLCD
  3522 ;; This function is called by:
  3523 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3524 ;;		_imprimir_porcentaje
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text18
  3529   0017D2                     __ptext18:
  3530                           	callstack 0
  3531   0017D2                     _DireccionaLCD:
  3532                           	callstack 26
  3533                           
  3534                           ;incstack = 0
  3535                           ;DireccionaLCD@a stored from wreg
  3536   0017D2  6E05               	movwf	DireccionaLCD@a^0,c
  3537                           
  3538                           ;LibLCDXC8.h: 358: LATD2=0;
  3539   0017D4  948C               	bcf	3980,2,c	;volatile
  3540                           
  3541                           ;LibLCDXC8.h: 359: EnviaDato(a);
  3542   0017D6  5005               	movf	DireccionaLCD@a^0,w,c
  3543   0017D8  ECD8  F00A         	call	_EnviaDato
  3544                           
  3545                           ;LibLCDXC8.h: 360: HabilitaLCD();
  3546   0017DC  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3547                           
  3548                           ;LibLCDXC8.h: 361: RetardoLCD(4);
  3549   0017E0  0E04               	movlw	4
  3550   0017E2  ECAD  F00A         	call	_RetardoLCD
  3551   0017E6  0012               	return		;funcret
  3552   0017E8                     __end_of_DireccionaLCD:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _InicializaLCD *****************
  3556 ;; Defined at:
  3557 ;;		line 71 in file "LibLCDXC8.h"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 4
  3578 ;; This function calls:
  3579 ;;		_BorraLCD
  3580 ;;		_EnviaDato
  3581 ;;		_HabilitaLCD
  3582 ;;		_RetardoLCD
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text19
  3589   001280                     __ptext19:
  3590                           	callstack 0
  3591   001280                     _InicializaLCD:
  3592                           	callstack 26
  3593                           
  3594                           ;LibLCDXC8.h: 73: LATD2=0;
  3595                           
  3596                           ;incstack = 0
  3597   001280  948C               	bcf	3980,2,c	;volatile
  3598                           
  3599                           ;LibLCDXC8.h: 74: if(interfaz==4)
  3600   001282  0E04               	movlw	4
  3601   001284  184F               	xorwf	_interfaz^0,w,c
  3602   001286  A4D8               	btfss	status,2,c
  3603   001288  D004               	goto	l2057
  3604                           
  3605                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  3606   00128A  508C               	movf	140,w,c	;volatile
  3607   00128C  0B0F               	andlw	15
  3608   00128E  0930               	iorlw	48
  3609   001290  D001               	goto	L3
  3610   001292                     l2057:
  3611                           
  3612                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  3613   001292  0E3F               	movlw	63
  3614   001294                     L3:
  3615   001294  6E8C               	movwf	140,c	;volatile
  3616                           
  3617                           ;LibLCDXC8.h: 78: HabilitaLCD();
  3618   001296  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3619                           
  3620                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  3621   00129A  0E01               	movlw	1
  3622   00129C  ECAD  F00A         	call	_RetardoLCD
  3623                           
  3624                           ;LibLCDXC8.h: 80: if(interfaz==4)
  3625   0012A0  0E04               	movlw	4
  3626   0012A2  184F               	xorwf	_interfaz^0,w,c
  3627   0012A4  A4D8               	btfss	status,2,c
  3628   0012A6  D004               	goto	l2067
  3629                           
  3630                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  3631   0012A8  508C               	movf	140,w,c	;volatile
  3632   0012AA  0B0F               	andlw	15
  3633   0012AC  0930               	iorlw	48
  3634   0012AE  D001               	goto	L4
  3635   0012B0                     l2067:
  3636                           
  3637                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  3638   0012B0  0E3F               	movlw	63
  3639   0012B2                     L4:
  3640   0012B2  6E8C               	movwf	140,c	;volatile
  3641                           
  3642                           ;LibLCDXC8.h: 84: HabilitaLCD();
  3643   0012B4  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3644                           
  3645                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  3646   0012B8  0E03               	movlw	3
  3647   0012BA  ECAD  F00A         	call	_RetardoLCD
  3648                           
  3649                           ;LibLCDXC8.h: 86: if(interfaz==4)
  3650   0012BE  0E04               	movlw	4
  3651   0012C0  184F               	xorwf	_interfaz^0,w,c
  3652   0012C2  A4D8               	btfss	status,2,c
  3653   0012C4  D004               	goto	l2077
  3654                           
  3655                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  3656   0012C6  508C               	movf	140,w,c	;volatile
  3657   0012C8  0B0F               	andlw	15
  3658   0012CA  0930               	iorlw	48
  3659   0012CC  D001               	goto	L5
  3660   0012CE                     l2077:
  3661                           
  3662                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  3663   0012CE  0E3F               	movlw	63
  3664   0012D0                     L5:
  3665   0012D0  6E8C               	movwf	140,c	;volatile
  3666                           
  3667                           ;LibLCDXC8.h: 90: HabilitaLCD();
  3668   0012D2  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3669                           
  3670                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  3671   0012D6  0E04               	movlw	4
  3672   0012D8  ECAD  F00A         	call	_RetardoLCD
  3673                           
  3674                           ;LibLCDXC8.h: 92: if(interfaz==4){
  3675   0012DC  0E04               	movlw	4
  3676   0012DE  184F               	xorwf	_interfaz^0,w,c
  3677   0012E0  A4D8               	btfss	status,2,c
  3678   0012E2  D011               	goto	l2097
  3679                           
  3680                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  3681   0012E4  508C               	movf	140,w,c	;volatile
  3682   0012E6  0B0F               	andlw	15
  3683   0012E8  0920               	iorlw	32
  3684   0012EA  6E8C               	movwf	140,c	;volatile
  3685                           
  3686                           ;LibLCDXC8.h: 94: HabilitaLCD();
  3687   0012EC  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3688                           
  3689                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  3690   0012F0  0E04               	movlw	4
  3691   0012F2  ECAD  F00A         	call	_RetardoLCD
  3692                           
  3693                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  3694   0012F6  0E2F               	movlw	47
  3695   0012F8  ECD8  F00A         	call	_EnviaDato
  3696                           
  3697                           ;LibLCDXC8.h: 97: HabilitaLCD();
  3698   0012FC  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3699                           
  3700                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3701   001300  0E04               	movlw	4
  3702   001302  ECAD  F00A         	call	_RetardoLCD
  3703   001306                     l2097:
  3704                           
  3705                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  3706   001306  ECF4  F00B         	call	_BorraLCD	;wreg free
  3707                           
  3708                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  3709   00130A  0E0F               	movlw	15
  3710   00130C  ECD8  F00A         	call	_EnviaDato
  3711                           
  3712                           ;LibLCDXC8.h: 102: HabilitaLCD();
  3713   001310  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3714                           
  3715                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  3716   001314  0E04               	movlw	4
  3717   001316  ECAD  F00A         	call	_RetardoLCD
  3718   00131A  0012               	return		;funcret
  3719   00131C                     __end_of_InicializaLCD:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _BorraLCD *****************
  3723 ;; Defined at:
  3724 ;;		line 114 in file "LibLCDXC8.h"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 3
  3745 ;; This function calls:
  3746 ;;		_EnviaDato
  3747 ;;		_HabilitaLCD
  3748 ;;		_RetardoLCD
  3749 ;; This function is called by:
  3750 ;;		_InicializaLCD
  3751 ;;		_Mensaje_LCD_Var_Mensaje20x4
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text20
  3756   0017E8                     __ptext20:
  3757                           	callstack 0
  3758   0017E8                     _BorraLCD:
  3759                           	callstack 26
  3760                           
  3761                           ;LibLCDXC8.h: 116: LATD2=0;
  3762                           
  3763                           ;incstack = 0
  3764   0017E8  948C               	bcf	3980,2,c	;volatile
  3765                           
  3766                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
  3767   0017EA  0E01               	movlw	1
  3768   0017EC  ECD8  F00A         	call	_EnviaDato
  3769                           
  3770                           ;LibLCDXC8.h: 118: HabilitaLCD();
  3771   0017F0  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3772                           
  3773                           ;LibLCDXC8.h: 119: RetardoLCD(2);
  3774   0017F4  0E02               	movlw	2
  3775   0017F6  ECAD  F00A         	call	_RetardoLCD
  3776   0017FA  0012               	return		;funcret
  3777   0017FC                     __end_of_BorraLCD:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _EnviaDato *****************
  3781 ;; Defined at:
  3782 ;;		line 59 in file "LibLCDXC8.h"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  a               1    wreg     unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  a               1    3[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 2
  3803 ;; This function calls:
  3804 ;;		_HabilitaLCD
  3805 ;;		_RetardoLCD
  3806 ;; This function is called by:
  3807 ;;		_InicializaLCD
  3808 ;;		_BorraLCD
  3809 ;;		_EscribeLCD_c
  3810 ;;		_EscribeLCD_n8
  3811 ;;		_DireccionaLCD
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text21
  3816   0015B0                     __ptext21:
  3817                           	callstack 0
  3818   0015B0                     _EnviaDato:
  3819                           	callstack 25
  3820                           
  3821                           ;incstack = 0
  3822                           ;EnviaDato@a stored from wreg
  3823   0015B0  6E04               	movwf	EnviaDato@a^0,c
  3824                           
  3825                           ;LibLCDXC8.h: 60: if(interfaz==4){
  3826   0015B2  0E04               	movlw	4
  3827   0015B4  184F               	xorwf	_interfaz^0,w,c
  3828   0015B6  A4D8               	btfss	status,2,c
  3829   0015B8  D017               	goto	l1807
  3830                           
  3831                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3832   0015BA  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3833   0015BE  0EF0               	movlw	240
  3834   0015C0  1603               	andwf	??_EnviaDato^0,f,c
  3835   0015C2  508C               	movf	140,w,c	;volatile
  3836   0015C4  0B0F               	andlw	15
  3837   0015C6  1003               	iorwf	??_EnviaDato^0,w,c
  3838   0015C8  6E8C               	movwf	140,c	;volatile
  3839                           
  3840                           ;LibLCDXC8.h: 62: HabilitaLCD();
  3841   0015CA  ECFE  F00B         	call	_HabilitaLCD	;wreg free
  3842                           
  3843                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  3844   0015CE  0E01               	movlw	1
  3845   0015D0  ECAD  F00A         	call	_RetardoLCD
  3846                           
  3847                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  3848   0015D4  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3849   0015D8  3A03               	swapf	??_EnviaDato^0,f,c
  3850   0015DA  0EF0               	movlw	240
  3851   0015DC  1603               	andwf	??_EnviaDato^0,f,c
  3852   0015DE  508C               	movf	140,w,c	;volatile
  3853   0015E0  0B0F               	andlw	15
  3854   0015E2  1003               	iorwf	??_EnviaDato^0,w,c
  3855   0015E4  6E8C               	movwf	140,c	;volatile
  3856                           
  3857                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  3858   0015E6  0012               	return	
  3859   0015E8                     l1807:
  3860   0015E8  0E08               	movlw	8
  3861   0015EA  184F               	xorwf	_interfaz^0,w,c
  3862   0015EC  A4D8               	btfss	status,2,c
  3863   0015EE  0012               	return	
  3864                           
  3865                           ;LibLCDXC8.h: 68: LATD=a;
  3866   0015F0  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  3867   0015F4  0012               	return		;funcret
  3868   0015F6                     __end_of_EnviaDato:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function _RetardoLCD *****************
  3872 ;; Defined at:
  3873 ;;		line 364 in file "LibLCDXC8.h"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  a               1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  a               1    1[COMRAM] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0
  3888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3889 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3890 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3891 ;;Total ram usage:        2 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_EnviaDato
  3898 ;;		_InicializaLCD
  3899 ;;		_BorraLCD
  3900 ;;		_EscribeLCD_c
  3901 ;;		_EscribeLCD_n8
  3902 ;;		_DireccionaLCD
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text22
  3907   00155A                     __ptext22:
  3908                           	callstack 0
  3909   00155A                     _RetardoLCD:
  3910                           	callstack 26
  3911                           
  3912                           ;incstack = 0
  3913                           ;RetardoLCD@a stored from wreg
  3914   00155A  6E02               	movwf	RetardoLCD@a^0,c
  3915                           
  3916                           ;LibLCDXC8.h: 365: switch(a){
  3917   00155C  D01B               	goto	l1795
  3918   00155E                     l1785:
  3919   00155E  0E14               	movlw	20
  3920   001560  6E01               	movwf	??_RetardoLCD^0,c
  3921   001562  0E7A               	movlw	122
  3922   001564                     u1667:
  3923   001564  2EE8               	decfsz	wreg,f,c
  3924   001566  D7FE               	bra	u1667
  3925   001568  2E01               	decfsz	??_RetardoLCD^0,f,c
  3926   00156A  D7FC               	bra	u1667
  3927                           
  3928                           ;LibLCDXC8.h: 368: break;
  3929   00156C  0012               	return	
  3930   00156E                     l1787:
  3931   00156E  0EC8               	movlw	200
  3932   001570                     u1677:
  3933   001570  D000               	nop2	
  3934   001572  2EE8               	decfsz	wreg,f,c
  3935   001574  D7FD               	bra	u1677
  3936                           
  3937                           ;LibLCDXC8.h: 370: _delay((unsigned long)((640)*(4000000/4000000.0)));
  3938   001576  0ED5               	movlw	213
  3939   001578                     u1687:
  3940   001578  2EE8               	decfsz	wreg,f,c
  3941   00157A  D7FE               	bra	u1687
  3942   00157C  F000               	nop	
  3943                           
  3944                           ;LibLCDXC8.h: 372: break;
  3945   00157E  0012               	return	
  3946   001580                     l1789:
  3947   001580  0E21               	movlw	33
  3948   001582                     u1697:
  3949   001582  2EE8               	decfsz	wreg,f,c
  3950   001584  D7FE               	bra	u1697
  3951   001586  F000               	nop	
  3952                           
  3953                           ;LibLCDXC8.h: 375: break;
  3954   001588  0012               	return	
  3955   00158A                     l1791:
  3956   00158A  0E0D               	movlw	13
  3957   00158C                     u1707:
  3958   00158C  2EE8               	decfsz	wreg,f,c
  3959   00158E  D7FE               	bra	u1707
  3960   001590  F000               	nop	
  3961                           
  3962                           ;LibLCDXC8.h: 378: break;
  3963   001592  0012               	return	
  3964   001594                     l1795:
  3965   001594  5002               	movf	RetardoLCD@a^0,w,c
  3966                           
  3967                           ; Switch size 1, requested type "simple"
  3968                           ; Number of cases is 4, Range of values is 1 to 4
  3969                           ; switch strategies available:
  3970                           ; Name         Instructions Cycles
  3971                           ; simple_byte           13     7 (average)
  3972                           ;	Chosen strategy is simple_byte
  3973   001596  0A01               	xorlw	1	; case 1
  3974   001598  B4D8               	btfsc	status,2,c
  3975   00159A  D7E1               	goto	l1785
  3976   00159C  0A03               	xorlw	3	; case 2
  3977   00159E  B4D8               	btfsc	status,2,c
  3978   0015A0  D7E6               	goto	l1787
  3979   0015A2  0A01               	xorlw	1	; case 3
  3980   0015A4  B4D8               	btfsc	status,2,c
  3981   0015A6  D7EC               	goto	l1789
  3982   0015A8  0A07               	xorlw	7	; case 4
  3983   0015AA  A4D8               	btfss	status,2,c
  3984   0015AC  0012               	return	
  3985   0015AE  D7ED               	goto	l1791
  3986   0015B0                     __end_of_RetardoLCD:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _HabilitaLCD *****************
  3990 ;; Defined at:
  3991 ;;		line 106 in file "LibLCDXC8.h"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_EnviaDato
  4016 ;;		_InicializaLCD
  4017 ;;		_BorraLCD
  4018 ;;		_EscribeLCD_c
  4019 ;;		_EscribeLCD_n8
  4020 ;;		_DireccionaLCD
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text23
  4025   0017FC                     __ptext23:
  4026                           	callstack 0
  4027   0017FC                     _HabilitaLCD:
  4028                           	callstack 26
  4029                           
  4030                           ;LibLCDXC8.h: 108: LATD3=1;
  4031                           
  4032                           ;incstack = 0
  4033   0017FC  868C               	bsf	3980,3,c	;volatile
  4034                           
  4035                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4036   0017FE  0E0D               	movlw	13
  4037   001800                     u1717:
  4038   001800  2EE8               	decfsz	wreg,f,c
  4039   001802  D7FE               	bra	u1717
  4040   001804  F000               	nop	
  4041                           
  4042                           ;LibLCDXC8.h: 111: LATD3=0;
  4043   001806  968C               	bcf	3980,3,c	;volatile
  4044   001808  0012               	return		;funcret
  4045   00180A                     __end_of_HabilitaLCD:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _Conversion *****************
  4049 ;; Defined at:
  4050 ;;		line 253 in file "PAI.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  canal           1    wreg     unsigned char 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  canal           1    3[COMRAM] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2    0[COMRAM] unsigned int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4064 ;;      Params:         2       0       0       0       0       0       0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4066 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4067 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4068 ;;Total ram usage:        4 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text24
  4079   00175A                     __ptext24:
  4080                           	callstack 0
  4081   00175A                     _Conversion:
  4082                           	callstack 29
  4083                           
  4084                           ;incstack = 0
  4085                           ;Conversion@canal stored from wreg
  4086   00175A  6E04               	movwf	Conversion@canal^0,c
  4087                           
  4088                           ;PAI.c: 254: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  4089   00175C  C004  F003         	movff	Conversion@canal,??_Conversion
  4090   001760  90D8               	bcf	status,0,c
  4091   001762  3603               	rlcf	??_Conversion^0,f,c
  4092   001764  90D8               	bcf	status,0,c
  4093   001766  3603               	rlcf	??_Conversion^0,f,c
  4094   001768  50C2               	movf	194,w,c	;volatile
  4095   00176A  0B03               	andlw	3
  4096   00176C  1003               	iorwf	??_Conversion^0,w,c
  4097   00176E  6EC2               	movwf	194,c	;volatile
  4098                           
  4099                           ;PAI.c: 255: GO=1;
  4100   001770  82C2               	bsf	4034,1,c	;volatile
  4101   001772                     l288:
  4102   001772  B2C2               	btfsc	4034,1,c	;volatile
  4103   001774  D7FE               	goto	l288
  4104                           
  4105                           ;PAI.c: 257: return ADRES;
  4106   001776  CFC3 F001          	movff	4035,?_Conversion	;volatile
  4107   00177A  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  4108   00177E  0012               	return		;funcret
  4109   001780                     __end_of_Conversion:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _ConfiguraLCD *****************
  4113 ;; Defined at:
  4114 ;;		line 55 in file "LibLCDXC8.h"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  a               1    wreg     unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  a               1    0[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        1 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 1
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text25
  4143   0017A4                     __ptext25:
  4144                           	callstack 0
  4145   0017A4                     _ConfiguraLCD:
  4146                           	callstack 29
  4147                           
  4148                           ;incstack = 0
  4149                           ;ConfiguraLCD@a stored from wreg
  4150   0017A4  6E01               	movwf	ConfiguraLCD@a^0,c
  4151                           
  4152                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  4153   0017A6  0E04               	movlw	4
  4154   0017A8  1801               	xorwf	ConfiguraLCD@a^0,w,c
  4155   0017AA  B4D8               	btfsc	status,2,c
  4156   0017AC  D004               	goto	u1120
  4157   0017AE  0E08               	movlw	8
  4158   0017B0  1801               	xorwf	ConfiguraLCD@a^0,w,c
  4159   0017B2  A4D8               	btfss	status,2,c
  4160   0017B4  0012               	return	
  4161   0017B6                     u1120:
  4162                           
  4163                           ;LibLCDXC8.h: 57: interfaz=a;
  4164   0017B6  C001  F04F         	movff	ConfiguraLCD@a,_interfaz
  4165   0017BA  0012               	return		;funcret
  4166   0017BC                     __end_of_ConfiguraLCD:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _ISR *****************
  4170 ;; Defined at:
  4171 ;;		line 213 in file "PAI.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		Interrupt level 2
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	intcode
  4199   000008                     __pintcode:
  4200                           	callstack 0
  4201   000008                     _ISR:
  4202                           	callstack 25
  4203                           
  4204                           ;incstack = 0
  4205   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4206   00000A  ED37  F00B         	call	int_func,f	;refresh shadow registers
  4207                           
  4208                           	psect	intcode_body
  4209   00166E                     __pintcode_body:
  4210                           	callstack 25
  4211   00166E                     int_func:
  4212                           	callstack 25
  4213   00166E  0006               	pop		; remove dummy address from shadow register refresh
  4214                           
  4215                           ;PAI.c: 216: if(INT0IF==1){
  4216   001670  A2F2               	btfss	4082,1,c	;volatile
  4217   001672  D003               	goto	i2l1755
  4218                           
  4219                           ;PAI.c: 218: a=0;
  4220   001674  0E00               	movlw	0
  4221   001676  6E50               	movwf	_a^0,c
  4222                           
  4223                           ;PAI.c: 219: INT0IF=0;
  4224   001678  92F2               	bcf	4082,1,c	;volatile
  4225   00167A                     i2l1755:
  4226                           
  4227                           ;PAI.c: 220: };PAI.c: 222: if(INT1IF==1){
  4228   00167A  A0F0               	btfss	4080,0,c	;volatile
  4229   00167C  D003               	goto	i2l1761
  4230                           
  4231                           ;PAI.c: 224: b=1;
  4232   00167E  0E01               	movlw	1
  4233   001680  6E48               	movwf	_b^0,c
  4234                           
  4235                           ;PAI.c: 225: INT1IF=0;
  4236   001682  90F0               	bcf	4080,0,c	;volatile
  4237   001684                     i2l1761:
  4238                           
  4239                           ;PAI.c: 226: };PAI.c: 229: if(INT2IF==1){
  4240   001684  A2F0               	btfss	4080,1,c	;volatile
  4241   001686  D00E               	goto	i2l285
  4242                           
  4243                           ;PAI.c: 231: if(Estados==2){
  4244   001688  0E02               	movlw	2
  4245   00168A  184A               	xorwf	_Estados^0,w,c
  4246   00168C  A4D8               	btfss	status,2,c
  4247   00168E  D003               	goto	i2l1767
  4248                           
  4249                           ;PAI.c: 232: d=1;
  4250   001690  0E01               	movlw	1
  4251   001692  6E46               	movwf	_d^0,c
  4252                           
  4253                           ;PAI.c: 233: }else if (Estados==3){
  4254   001694  D006               	goto	i2l1771
  4255   001696                     i2l1767:
  4256   001696  0E03               	movlw	3
  4257   001698  184A               	xorwf	_Estados^0,w,c
  4258   00169A  A4D8               	btfss	status,2,c
  4259   00169C  D002               	goto	i2l1771
  4260                           
  4261                           ;PAI.c: 234: c=1;
  4262   00169E  0E01               	movlw	1
  4263   0016A0  6E47               	movwf	_c^0,c
  4264   0016A2                     i2l1771:
  4265                           
  4266                           ;PAI.c: 235: };PAI.c: 236: INT2IF=0;
  4267   0016A2  92F0               	bcf	4080,1,c	;volatile
  4268   0016A4                     i2l285:
  4269   0016A4  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4270   0016A6  0011               	retfie		f
  4271   0016A8                     __end_of_ISR:
  4272                           	callstack 0
  4273                           
  4274                           	psect	rparam
  4275   000000                     
  4276                           	psect	temp
  4277   000051                     btemp:
  4278                           	callstack 0
  4279   000051                     	ds	1
  4280   000000                     int$flags	set	btemp
  4281   000000                     wtemp8	set	btemp+1
  4282   000000                     ttemp5	set	btemp+1
  4283   000000                     ttemp6	set	btemp+4
  4284   000000                     ttemp7	set	btemp+8
  4285                           
  4286                           	psect	idloc
  4287                           
  4288                           ;Config register IDLOC0 @ 0x200000
  4289                           ;	unspecified, using default values
  4290   200000                     	org	2097152
  4291   200000  FF                 	db	255
  4292                           
  4293                           ;Config register IDLOC1 @ 0x200001
  4294                           ;	unspecified, using default values
  4295   200001                     	org	2097153
  4296   200001  FF                 	db	255
  4297                           
  4298                           ;Config register IDLOC2 @ 0x200002
  4299                           ;	unspecified, using default values
  4300   200002                     	org	2097154
  4301   200002  FF                 	db	255
  4302                           
  4303                           ;Config register IDLOC3 @ 0x200003
  4304                           ;	unspecified, using default values
  4305   200003                     	org	2097155
  4306   200003  FF                 	db	255
  4307                           
  4308                           ;Config register IDLOC4 @ 0x200004
  4309                           ;	unspecified, using default values
  4310   200004                     	org	2097156
  4311   200004  FF                 	db	255
  4312                           
  4313                           ;Config register IDLOC5 @ 0x200005
  4314                           ;	unspecified, using default values
  4315   200005                     	org	2097157
  4316   200005  FF                 	db	255
  4317                           
  4318                           ;Config register IDLOC6 @ 0x200006
  4319                           ;	unspecified, using default values
  4320   200006                     	org	2097158
  4321   200006  FF                 	db	255
  4322                           
  4323                           ;Config register IDLOC7 @ 0x200007
  4324                           ;	unspecified, using default values
  4325   200007                     	org	2097159
  4326   200007  FF                 	db	255
  4327                           
  4328                           	psect	config
  4329                           
  4330                           ;Config register CONFIG1L @ 0x300000
  4331                           ;	unspecified, using default values
  4332                           ;	PLL Prescaler Selection bits
  4333                           ;	PLLDIV = 0x0, unprogrammed default
  4334                           ;	System Clock Postscaler Selection bits
  4335                           ;	CPUDIV = 0x0, unprogrammed default
  4336                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4337                           ;	USBDIV = 0x0, unprogrammed default
  4338   300000                     	org	3145728
  4339   300000  00                 	db	0
  4340                           
  4341                           ;Config register CONFIG1H @ 0x300001
  4342                           ;	Oscillator Selection bits
  4343                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4344                           ;	Fail-Safe Clock Monitor Enable bit
  4345                           ;	FCMEN = 0x0, unprogrammed default
  4346                           ;	Internal/External Oscillator Switchover bit
  4347                           ;	IESO = 0x0, unprogrammed default
  4348   300001                     	org	3145729
  4349   300001  09                 	db	9
  4350                           
  4351                           ;Config register CONFIG2L @ 0x300002
  4352                           ;	unspecified, using default values
  4353                           ;	Power-up Timer Enable bit
  4354                           ;	PWRT = 0x1, unprogrammed default
  4355                           ;	Brown-out Reset Enable bits
  4356                           ;	BOR = 0x3, unprogrammed default
  4357                           ;	Brown-out Reset Voltage bits
  4358                           ;	BORV = 0x3, unprogrammed default
  4359                           ;	USB Voltage Regulator Enable bit
  4360                           ;	VREGEN = 0x0, unprogrammed default
  4361   300002                     	org	3145730
  4362   300002  1F                 	db	31
  4363                           
  4364                           ;Config register CONFIG2H @ 0x300003
  4365                           ;	Watchdog Timer Enable bit
  4366                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4367                           ;	Watchdog Timer Postscale Select bits
  4368                           ;	WDTPS = 0xF, unprogrammed default
  4369   300003                     	org	3145731
  4370   300003  1E                 	db	30
  4371                           
  4372                           ; Padding undefined space
  4373   300004                     	org	3145732
  4374   300004  FF                 	db	255
  4375                           
  4376                           ;Config register CONFIG3H @ 0x300005
  4377                           ;	unspecified, using default values
  4378                           ;	CCP2 MUX bit
  4379                           ;	CCP2MX = 0x1, unprogrammed default
  4380                           ;	PORTB A/D Enable bit
  4381                           ;	PBADEN = 0x1, unprogrammed default
  4382                           ;	Low-Power Timer 1 Oscillator Enable bit
  4383                           ;	LPT1OSC = 0x0, unprogrammed default
  4384                           ;	MCLR Pin Enable bit
  4385                           ;	MCLRE = 0x1, unprogrammed default
  4386   300005                     	org	3145733
  4387   300005  83                 	db	131
  4388                           
  4389                           ;Config register CONFIG4L @ 0x300006
  4390                           ;	Stack Full/Underflow Reset Enable bit
  4391                           ;	STVREN = 0x1, unprogrammed default
  4392                           ;	Single-Supply ICSP Enable bit
  4393                           ;	LVP = OFF, Single-Supply ICSP disabled
  4394                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4395                           ;	ICPRT = 0x0, unprogrammed default
  4396                           ;	Extended Instruction Set Enable bit
  4397                           ;	XINST = 0x0, unprogrammed default
  4398                           ;	Background Debugger Enable bit
  4399                           ;	DEBUG = 0x1, unprogrammed default
  4400   300006                     	org	3145734
  4401   300006  81                 	db	129
  4402                           
  4403                           ; Padding undefined space
  4404   300007                     	org	3145735
  4405   300007  FF                 	db	255
  4406                           
  4407                           ;Config register CONFIG5L @ 0x300008
  4408                           ;	unspecified, using default values
  4409                           ;	Code Protection bit
  4410                           ;	CP0 = 0x1, unprogrammed default
  4411                           ;	Code Protection bit
  4412                           ;	CP1 = 0x1, unprogrammed default
  4413                           ;	Code Protection bit
  4414                           ;	CP2 = 0x1, unprogrammed default
  4415                           ;	Code Protection bit
  4416                           ;	CP3 = 0x1, unprogrammed default
  4417   300008                     	org	3145736
  4418   300008  0F                 	db	15
  4419                           
  4420                           ;Config register CONFIG5H @ 0x300009
  4421                           ;	unspecified, using default values
  4422                           ;	Boot Block Code Protection bit
  4423                           ;	CPB = 0x1, unprogrammed default
  4424                           ;	Data EEPROM Code Protection bit
  4425                           ;	CPD = 0x1, unprogrammed default
  4426   300009                     	org	3145737
  4427   300009  C0                 	db	192
  4428                           
  4429                           ;Config register CONFIG6L @ 0x30000A
  4430                           ;	unspecified, using default values
  4431                           ;	Write Protection bit
  4432                           ;	WRT0 = 0x1, unprogrammed default
  4433                           ;	Write Protection bit
  4434                           ;	WRT1 = 0x1, unprogrammed default
  4435                           ;	Write Protection bit
  4436                           ;	WRT2 = 0x1, unprogrammed default
  4437                           ;	Write Protection bit
  4438                           ;	WRT3 = 0x1, unprogrammed default
  4439   30000A                     	org	3145738
  4440   30000A  0F                 	db	15
  4441                           
  4442                           ;Config register CONFIG6H @ 0x30000B
  4443                           ;	unspecified, using default values
  4444                           ;	Configuration Register Write Protection bit
  4445                           ;	WRTC = 0x1, unprogrammed default
  4446                           ;	Boot Block Write Protection bit
  4447                           ;	WRTB = 0x1, unprogrammed default
  4448                           ;	Data EEPROM Write Protection bit
  4449                           ;	WRTD = 0x1, unprogrammed default
  4450   30000B                     	org	3145739
  4451   30000B  E0                 	db	224
  4452                           
  4453                           ;Config register CONFIG7L @ 0x30000C
  4454                           ;	unspecified, using default values
  4455                           ;	Table Read Protection bit
  4456                           ;	EBTR0 = 0x1, unprogrammed default
  4457                           ;	Table Read Protection bit
  4458                           ;	EBTR1 = 0x1, unprogrammed default
  4459                           ;	Table Read Protection bit
  4460                           ;	EBTR2 = 0x1, unprogrammed default
  4461                           ;	Table Read Protection bit
  4462                           ;	EBTR3 = 0x1, unprogrammed default
  4463   30000C                     	org	3145740
  4464   30000C  0F                 	db	15
  4465                           
  4466                           ;Config register CONFIG7H @ 0x30000D
  4467                           ;	unspecified, using default values
  4468                           ;	Boot Block Table Read Protection bit
  4469                           ;	EBTRB = 0x1, unprogrammed default
  4470   30000D                     	org	3145741
  4471   30000D  40                 	db	64
  4472                           tosu	equ	0xFFF
  4473                           tosh	equ	0xFFE
  4474                           tosl	equ	0xFFD
  4475                           stkptr	equ	0xFFC
  4476                           pclatu	equ	0xFFB
  4477                           pclath	equ	0xFFA
  4478                           pcl	equ	0xFF9
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           indf0	equ	0xFEF
  4486                           postinc0	equ	0xFEE
  4487                           postdec0	equ	0xFED
  4488                           preinc0	equ	0xFEC
  4489                           plusw0	equ	0xFEB
  4490                           fsr0h	equ	0xFEA
  4491                           fsr0l	equ	0xFE9
  4492                           wreg	equ	0xFE8
  4493                           indf1	equ	0xFE7
  4494                           postinc1	equ	0xFE6
  4495                           postdec1	equ	0xFE5
  4496                           preinc1	equ	0xFE4
  4497                           plusw1	equ	0xFE3
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           bsr	equ	0xFE0
  4501                           indf2	equ	0xFDF
  4502                           postinc2	equ	0xFDE
  4503                           postdec2	equ	0xFDD
  4504                           preinc2	equ	0xFDC
  4505                           plusw2	equ	0xFDB
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8

Data Sizes:
    Strings     218
    Constant    0
    Data        507
    BSS         28
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 21
		 -> STR_30(CODE[5]), STR_1(CODE[21]), 

    Mensaje_LCD_Var_Centrado@a	PTR unsigned char  size(1) Largest target is 22
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[11]), STR_26(CODE[15]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[17]), STR_22(CODE[3]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[14]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[19]), STR_15(CODE[3]), STR_14(CODE[10]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[22]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[7]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[3]), 

    Mensaje_LCD_Var_Mensaje20x4@d	PTR unsigned char  size(1) Largest target is 18
		 -> STR_29(CODE[5]), STR_25(CODE[18]), STR_21(CODE[5]), STR_17(CODE[15]), 
		 -> STR_13(CODE[3]), STR_9(CODE[7]), STR_5(CODE[7]), 

    Mensaje_LCD_Var_Mensaje20x4@c	PTR unsigned char  size(1) Largest target is 19
		 -> STR_28(CODE[2]), STR_24(CODE[2]), STR_20(CODE[2]), STR_16(CODE[19]), 
		 -> STR_12(CODE[12]), STR_8(CODE[5]), STR_4(CODE[5]), 

    Mensaje_LCD_Var_Mensaje20x4@b	PTR unsigned char  size(1) Largest target is 22
		 -> STR_27(CODE[11]), STR_23(CODE[17]), STR_19(CODE[14]), STR_15(CODE[3]), 
		 -> STR_11(CODE[22]), STR_7(CODE[18]), STR_3(CODE[18]), 

    Mensaje_LCD_Var_Mensaje20x4@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_26(CODE[15]), STR_22(CODE[3]), STR_18(CODE[16]), STR_14(CODE[10]), 
		 -> STR_10(CODE[2]), STR_6(CODE[13]), STR_2(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _main->___fttol
    _imprimir_porcentaje->_EscribeLCD_n8
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Mensaje_LCD_Var_Mensaje20x4->_Mensaje_LCD_Var_Centrado
    _Mensaje_LCD_Var_Centrado->___awdiv
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   20810
                                             42 COMRAM     4     4      0
                       _ConfiguraLCD
                         _Conversion
                      _InicializaLCD
        _Mensaje_LCD_Var_Mensaje20x4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                _imprimir_porcentaje
 ---------------------------------------------------------------------------------
 (1) _imprimir_porcentaje                                  0     0      0    2705
                      _DireccionaLCD
                       _EscribeLCD_c
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     316
                                              5 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1685
                                              8 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3010
                                              8 COMRAM     3     0      3
                         _Conversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     598
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3864
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3556
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3011
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Mensaje_LCD_Var_Mensaje20x4                          4     0      4    3712
                                             12 COMRAM     4     0      4
                           _BorraLCD
                      _DireccionaLCD
           _Mensaje_LCD_Var_Centrado
 ---------------------------------------------------------------------------------
 (2) _Mensaje_LCD_Var_Centrado                             4     3      1    1254
                                              8 COMRAM     4     3      1
                       _EscribeLCD_c
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _Conversion
   _InicializaLCD
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Mensaje_LCD_Var_Mensaje20x4
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _Mensaje_LCD_Var_Centrado
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       ___awdiv
       _strlen
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
   ___fttol
     ___awtoft (ARG)
     ___ftmul (ARG)
   ___lwtoft
     _Conversion (ARG)
     ___ftpack (ARG)
   _imprimir_porcentaje
     _DireccionaLCD
     _EscribeLCD_c
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _MensajeLCD_Var
       _EscribeLCD_c
     ___ftge

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     1F6      33       24.5%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      50       1       85.1%
BITBIGSFRll         21      0       0      31        0.0%
BITBIGSFRhhll       1C      0       0      21        0.0%
BITBIGSFRhllhll     1B      0       0      26        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlhh         8      0       0      29        0.0%
BITBIGSFRhllhll      7      0       0      27        0.0%
BITBIGSFRhlhh        6      0       0      22        0.0%
BITBIGSFRhllll       6      0       0      28        0.0%
BITBIGSFRhlhl        5      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      30        0.0%
BITBIGSFRhllhlh      1      0       0      25        0.0%
BITBIGSFRhllhh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      32        0.0%
DATA                 0      0     246       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu May 18 21:13:57 2023

                                  _a 0050                                    _b 0048  
                                  _c 0047                                    _d 0046  
                                 _GO 7E11                         ___awdiv@sign 0006  
                         EnviaDato@a 0004                                   _ts 004B  
                      _InicializaLCD 1280                                  l244 0A2C  
                                l248 0A66                                  l295 1416  
                                l288 1772                                  l645 10CE  
                                _GIE 7F97                                  _RB0 7C08  
                                _RD0 7C18                                  _RD1 7C19  
                                _PR2 0FCB                                  _ISR 0008  
                                u900 1362                                  u940 1650  
                                _len 004D                                  wreg 0FE8  
                               ?_ISR 0001                         ___ftdiv@cntr 0025  
                       ___ftdiv@sign 002A                                 l2001 11F0  
                               l2011 124C                                 l2003 11FA  
                               l2013 1256                                 l2005 1218  
                               l2009 122E                                 l2033 1440  
                               l2043 148E                                 l2131 13E0  
                               l2213 0ED2                                 l2037 1462  
                               l2143 1042                                 l2223 0EFA  
                               l2135 140C                                 l2057 1292  
                               l2209 0EC2                                 l2067 12B0  
                               l2219 0EEA                                 l2077 12CE  
                               l2149 106A                                 l2421 0B6E  
                               l2413 0B20                                 l2239 16BC  
                               l2271 1190                                 l2431 0BDC  
                               l2343 09F8                                 l2097 1306  
                               l2169 10A8                                 l2249 112C  
                               l2409 0B10                                 l2337 0988  
                               l2195 0E90                                 l2267 1180  
                               l2443 0C10                                 l1821 1738  
                               l2189 0E68                                 l2285 11C0  
                               l2277 1198                                 l1901 16EA  
                               l2453 0C22                                 l2373 0A92  
                               l2365 0A62                                 l2357 0A54  
                               l1807 15E8                                 l1823 173A  
                               l2279 11A4                                 l2457 0C28  
                               l1851 135E                                 l1843 1340  
                               l1931 0F5A                                 l2395 0ADA  
                               l2387 0AB0                                 l1861 137E  
                               l1837 1330                                 l1909 1702  
                               l1941 0FA0                                 l1925 0F3A  
                               l1791 158A                                 l1785 155E  
                               l1849 1356                                 l1865 1388  
                               l1787 156E                                 l1795 1594  
                               l1891 1662                                 l1883 164C  
                               l1789 1580                                 l1869 1396  
                               l1973 14C4                                 l1957 1004  
                               l1983 14E8                                 l1879 1646  
                               l1895 166A                                 l1991 171E  
                               l1977 14CC                                 l1979 14D6  
                               l1987 170C                                 STR_1 0817  
                               STR_2 08D8                                 STR_3 083F  
                               STR_4 08D3                                 STR_5 08CC  
                               STR_6 089E                                 STR_7 083F  
                               STR_8 08D3                                 STR_9 08CC  
                               u1010 11E2                                 u1120 17B6  
                               u1201 102A                                 u1050 1260  
                               u1221 1052                                 u1400 0938  
                               u1321 1110                                 u1330 111A  
                               u1410 093A                                 u1251 0E50  
                               u1340 114A                                 u1420 0990  
                               u1430 0992                                 u1271 0E78  
                               u1520 0B06                                 _LATD 0F8C  
                               u1345 1142                                 u1450 0A5E  
                               u1380 11AA                                 u1570 0BEC  
                               u1707 158C                                 u1627 0950  
                               u1717 1800                                 u1637 097A  
                               u1647 0A1E                                 u1657 0BCE  
                               u1667 1564                                 u1677 1570  
                               u1687 1578                                 u1697 1582  
                               _PEIE 7F96                                 _RCIE 7CED  
                               _RCIF 7CF5                                 _RBPU 7F8F  
                               _TMR2 0FCC                       ??_EscribeLCD_c 0005  
                               _Duty 003B                                 _main 08DC  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               btemp 0051                                 start 000E  
                       ___ftmul@cntr 001A                         ___param_bank 0000  
                       ___ftmul@sign 001B                                ??_ISR 0001  
                       ___fttol@exp1 002A           ??_Mensaje_LCD_Var_Centrado 000A  
                       ___fttol@lval 0026                       ?_InicializaLCD 0001  
                              ?_main 0001                      __end_of___awdiv 13A0  
                    __end_of___lbdiv 166E                                _ADRES 0FC3  
                              STR_10 082A                                STR_11 0801  
                              STR_20 082A                                STR_12 08AB  
                              STR_13 0829                                STR_21 0827  
                              STR_22 0829                                STR_30 0827  
                              STR_14 08C2                                STR_15 0829  
                              STR_23 0851                                STR_24 082A  
                              STR_16 082C                                STR_25 083F  
                              STR_17 0881                                STR_26 0872  
                              STR_18 0862                                STR_27 08B7  
                              STR_19 0890                                STR_28 082A  
                              STR_29 0827                        EscribeLCD_c@a 0005  
                    __end_of___lbmod 170A                      __end_of___ftdiv 1100  
                    __end_of___ftmul 0F34                      ___awdiv@divisor 0003  
                    __end_of___fttol 11D2                                _T2CON 0FCA  
                              _LATD2 7C62                                _LATD3 7C63  
                              _IRCF0 7E9C                                _IRCF1 7E9D  
                              _IRCF2 7E9E                                i2l285 16A4  
                    ___awdiv@counter 0005                                _TRISB 0F93  
                              _TRISD 0F95                      ??_EscribeLCD_n8 000A  
                              _DutyF 003E                                _DutyI 0041  
                      ___awtoft@sign 000C                        ___ftpack@sign 0005  
                              main@i 002D                                tablat 0FF5  
                         _Conversion 175A                          _HabilitaLCD 17FC  
                              ttemp5 0052                                ttemp6 0055  
                              ttemp7 0059                                status 0FD8  
                              wtemp8 0052                      ___lbdiv@divisor 0005  
                    ___lbdiv@counter 0007                     __end_of_BorraLCD 17FC  
                    __initialization 14FC                         __end_of_main 0C4A  
                             ??_main 002B                 __end_of_ConfiguraLCD 17BC  
                      ___fttol@sign1 0025                        __activetblptr 0002  
          Mensaje_LCD_Var_Centrado@a 0009            Mensaje_LCD_Var_Centrado@i 000C  
          Mensaje_LCD_Var_Centrado@l 000A            Mensaje_LCD_Var_Centrado@n 000B  
                             _ADCON0 0FC2                               _ADCON1 0FC1  
                             _ADCON2 0FC0                       DireccionaLCD@a 0005  
                             _CCPR1L 0FBE                               _CCPR2L 0FBB  
                     EscribeLCD_n8@a 000D                       EscribeLCD_n8@b 0009  
                   ___awdiv@dividend 0001                     __end_of___awtoft 16E0  
                   __end_of___ftpack 1280                               _INT0IE 7F94  
                             _INT0IF 7F91                               _INT1IE 7F83  
                             _INT1IF 7F80                               _INT2IE 7F84  
                             _INT2IF 7F81                               i2l1761 1684  
                             i2l1771 16A2                               i2l1755 167A  
                             i2l1767 1696                     __end_of___lwtoft 17A4  
                             _TMR2ON 7E52                               _TRISC1 7CA1  
                             _TRISC2 7CA2                __end_of_DireccionaLCD 17E8  
                         _RetardoLCD 155A                               _DutyF2 0035  
                             _Vals24 060A                 EscribeLCD_n8@centena 000A  
                             ___ftge 141E                            ??___awdiv 0005  
                          ??___lbdiv 0006                            ??___lbmod 0002  
                          ??___ftdiv 0022                            ??___ftmul 0013  
                          ??___fttol 0020                      ??_InicializaLCD 0005  
                             clear_0 1546                     ___awdiv@quotient 0007  
                             isa$std 0001                 __end_of_EscribeLCD_c 17D2  
                             _strlen 1732                ___ftmul@f3_as_product 0017  
                       __pdataBIGRAM 060A                         __pdataCOMRAM 004B  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                   ___lbdiv@dividend 0006                          ?_Conversion 0001  
                    ___lbmod@divisor 0001                           __accesstop 0060  
            __end_of__initialization 154C                      ___lbmod@counter 0003  
                         ___ftge@ff1 0001                           ___ftge@ff2 0004  
                      ___rparam_used 0001                           ___ftdiv@f1 001C  
                         ___ftdiv@f2 001F                           ___ftdiv@f3 0026  
                         ___awtoft@c 0009                           ___ftmul@f1 000D  
                         ___ftmul@f2 0010                           ___fttol@f1 001C  
       ?_Mensaje_LCD_Var_Mensaje20x4 000D                       __pcstackCOMRAM 0001  
                        _EstadosPrev 0049                    __end_of_EnviaDato 15F6  
                   ___lbdiv@quotient 0008                  _imprimir_porcentaje 13A0  
                         ___lwtoft@c 0009                            ?_BorraLCD 0001  
                     _MensajeLCD_Var 170A                      MensajeLCD_Var@a 0006  
               ?_imprimir_porcentaje 0001                           __pnvCOMRAM 0050  
                        ?_RetardoLCD 0001                          RetardoLCD@a 0002  
                        _Val_PWM_LCD 0045                              ?___ftge 0001  
      ??_Mensaje_LCD_Var_Mensaje20x4 0011                              _CCP1CON 0FBD  
                            _CCP2CON 0FBA                            ?___awtoft 0009  
                          ?___ftpack 0001                              ?_strlen 0001  
                          ?___lwtoft 0009               __end_of_MensajeLCD_Var 1732  
                         ??_BorraLCD 0005                ??_imprimir_porcentaje 000E  
                       ?_HabilitaLCD 0001                         _ConfiguraLCD 17A4  
                   _Val_PWM_LCD_prev 0044                              _Estados 004A  
                            _Val_PWM 002F                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv 131C  
                            ___lbdiv 1634                              ___lbmod 16E0  
                            ___ftdiv 101A                              ___ftmul 0E40  
                            ___fttol 1100                         __psmallconst 0800  
                            __pcinit 14FC                           ??___awtoft 000C  
                         ??___ftpack 0006                              __ramtop 0800  
                            __ptext0 08DC                              __ptext1 13A0  
                            __ptext2 141E                              __ptext3 170A  
                            __ptext4 0F34                              __ptext5 16E0  
                            __ptext6 1634                              __ptext7 1780  
                            __ptext8 1100                              __ptext9 0E40  
                         ??___lwtoft 000C                      ?_MensajeLCD_Var 0006  
              __end_of_EscribeLCD_n8 101A            ?_Mensaje_LCD_Var_Centrado 0009  
                     __pintcode_body 166E                 end_of_initialization 154C  
                    Conversion@canal 0004                        __Lmediumconst 0000  
                            int_func 166E                         _EscribeLCD_c 17BC  
                            postdec1 0FE5                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                            strlen@s 0001                     ___lbmod@dividend 0002  
                       ??_Conversion 0003                          ___lbmod@rem 0004  
                        ___ftdiv@exp 0029                            _DeltaDuty 0038  
                        ___ftmul@exp 0016                       __end_of___ftge 1492  
                      __pidataBIGRAM 0C4A                        __pidataCOMRAM 180A  
              __end_of_InicializaLCD 131C                   __end_of_Conversion 1780  
                          _EnviaDato 15B0                       __end_of_strlen 175A  
                start_initialization 14FC                          __end_of_ISR 16A8  
                          _ValAn_PWM 0032                         ??_RetardoLCD 0001  
                EscribeLCD_n8@decena 000B                             ??___ftge 0007  
                EscribeLCD_n8@unidad 000C                             ??_strlen 0003  
       Mensaje_LCD_Var_Mensaje20x4@a 000D         Mensaje_LCD_Var_Mensaje20x4@b 000E  
       Mensaje_LCD_Var_Mensaje20x4@c 000F         Mensaje_LCD_Var_Mensaje20x4@d 0010  
                         ?_EnviaDato 0001                          __pbssCOMRAM 002F  
                 __end_of_RetardoLCD 15B0                        _DireccionaLCD 17D2  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___lbdiv 0005                             ?___lbmod 0001  
                           ?___ftdiv 001C                             ?___ftmul 000D  
                           ?___fttol 001C     __end_of_Mensaje_LCD_Var_Centrado 14FC  
                   ??_MensajeLCD_Var 0007                          __smallconst 0800  
        __end_of_imprimir_porcentaje 141E                       ?_DireccionaLCD 0001  
__end_of_Mensaje_LCD_Var_Mensaje20x4 1634          _Mensaje_LCD_Var_Mensaje20x4 15F6  
                        ??_EnviaDato 0003                             _BorraLCD 17E8  
                          copy_data0 1510                            copy_data1 1534  
                           __Hrparam 0000                             __Lrparam 0000  
                           ___awtoft 16A8                             ___ftpack 11D2  
                           ___lwtoft 1780                        ConfiguraLCD@a 0001  
           _Mensaje_LCD_Var_Centrado 1492                             __ptext10 101A  
                           __ptext11 16A8                             __ptext20 17E8  
                           __ptext12 11D2                             __ptext21 15B0  
                           __ptext13 15F6                             __ptext22 155A  
                           __ptext14 1492                             __ptext23 17FC  
                           __ptext15 1732                             __ptext24 175A  
                           __ptext16 131C                             __ptext25 17A4  
                           __ptext17 17BC                             __ptext18 17D2  
                           __ptext19 1280                      ??_DireccionaLCD 0005  
                           _interfaz 004F                             isa$xinst 0000  
                           int$flags 0051                        _EscribeLCD_n8 0F34  
                           intlevel2 0000                        ??_HabilitaLCD 0001  
                      ?_ConfiguraLCD 0001                             strlen@cp 0003  
                     ?_EscribeLCD_n8 0009                       ??_ConfiguraLCD 0001  
                      ?_EscribeLCD_c 0001                  __end_of_HabilitaLCD 180A  
