

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 03 23:46:30 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.32
    60                           ; Generated 02/02/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  002A82                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _interfaz
   100  002A82  08                 	db	8
   101                           
   102                           	psect	idataBANK0
   103  002A7A                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _grados
   107  002A7A  08                 	db	8
   108  002A7B  14                 	db	20
   109  002A7C  08                 	db	8
   110  002A7D  00                 	db	0
   111  002A7E  00                 	db	0
   112  002A7F  00                 	db	0
   113  002A80  00                 	db	0
   114  002A81  00                 	db	0
   115  0000                     _ADRES	set	4035
   116  0000                     _TMR1	set	4046
   117  0000                     _TXREG	set	4013
   118  0000                     _T1CON	set	4045
   119  0000                     _TRISD	set	3989
   120  0000                     _LATB	set	3978
   121  0000                     _TRISB	set	3987
   122  0000                     _SPBRG	set	4015
   123  0000                     _BAUDCON	set	4024
   124  0000                     _RCSTA	set	4011
   125  0000                     _TXSTA	set	4012
   126  0000                     _ADCON2	set	4032
   127  0000                     _ADCON1	set	4033
   128  0000                     _ADCON0	set	4034
   129  0000                     _LATD	set	3980
   130  0000                     _TRMT	set	32097
   131  0000                     _GO	set	32273
   132  0000                     _LATD1	set	31841
   133  0000                     _RBIF	set	32656
   134  0000                     _RE0	set	31776
   135  0000                     _RE1	set	31777
   136  0000                     _LATD0	set	31840
   137  0000                     _PEIE	set	32662
   138  0000                     _GIE	set	32663
   139  0000                     _TMR1IE	set	31976
   140  0000                     _TMR1IF	set	31984
   141  0000                     _TRISE1	set	31921
   142  0000                     _TRISE0	set	31920
   143  0000                     _LATD3	set	31843
   144  0000                     _LATD2	set	31842
   145                           
   146                           	psect	smallconst
   147  000800                     __psmallconst:
   148                           	callstack 0
   149  000800  00                 	db	0
   150  000801                     STR_9:
   151  000801  20                 	db	32
   152  000802  67                 	db	103	;'g'
   153  000803  72                 	db	114	;'r'
   154  000804  61                 	db	97	;'a'
   155  000805  64                 	db	100	;'d'
   156  000806  6F                 	db	111	;'o'
   157  000807  73                 	db	115	;'s'
   158  000808  20                 	db	32
   159  000809  46                 	db	70	;'F'
   160  00080A  61                 	db	97	;'a'
   161  00080B  68                 	db	104	;'h'
   162  00080C  72                 	db	114	;'r'
   163  00080D  65                 	db	101	;'e'
   164  00080E  6E                 	db	110	;'n'
   165  00080F  68                 	db	104	;'h'
   166  000810  65                 	db	101	;'e'
   167  000811  69                 	db	105	;'i'
   168  000812  74                 	db	116	;'t'
   169  000813  0A                 	db	10
   170  000814  00                 	db	0
   171  000815                     STR_8:
   172  000815  20                 	db	32
   173  000816  67                 	db	103	;'g'
   174  000817  72                 	db	114	;'r'
   175  000818  61                 	db	97	;'a'
   176  000819  64                 	db	100	;'d'
   177  00081A  6F                 	db	111	;'o'
   178  00081B  73                 	db	115	;'s'
   179  00081C  20                 	db	32
   180  00081D  52                 	db	82	;'R'
   181  00081E  61                 	db	97	;'a'
   182  00081F  6E                 	db	110	;'n'
   183  000820  6B                 	db	107	;'k'
   184  000821  69                 	db	105	;'i'
   185  000822  6E                 	db	110	;'n'
   186  000823  65                 	db	101	;'e'
   187  000824  0A                 	db	10
   188  000825  00                 	db	0
   189  000826                     STR_6:
   190  000826  20                 	db	32
   191  000827  67                 	db	103	;'g'
   192  000828  72                 	db	114	;'r'
   193  000829  61                 	db	97	;'a'
   194  00082A  64                 	db	100	;'d'
   195  00082B  6F                 	db	111	;'o'
   196  00082C  73                 	db	115	;'s'
   197  00082D  20                 	db	32
   198  00082E  43                 	db	67	;'C'
   199  00082F  65                 	db	101	;'e'
   200  000830  6C                 	db	108	;'l'
   201  000831  73                 	db	115	;'s'
   202  000832  69                 	db	105	;'i'
   203  000833  75                 	db	117	;'u'
   204  000834  73                 	db	115	;'s'
   205  000835  0A                 	db	10
   206  000836  00                 	db	0
   207  000837                     STR_7:
   208  000837  20                 	db	32
   209  000838  67                 	db	103	;'g'
   210  000839  72                 	db	114	;'r'
   211  00083A  61                 	db	97	;'a'
   212  00083B  64                 	db	100	;'d'
   213  00083C  6F                 	db	111	;'o'
   214  00083D  73                 	db	115	;'s'
   215  00083E  20                 	db	32
   216  00083F  4B                 	db	75	;'K'
   217  000840  65                 	db	101	;'e'
   218  000841  6C                 	db	108	;'l'
   219  000842  76                 	db	118	;'v'
   220  000843  69                 	db	105	;'i'
   221  000844  6E                 	db	110	;'n'
   222  000845  0A                 	db	10
   223  000846  00                 	db	0
   224  000847                     STR_1:
   225  000847  4D                 	db	77	;'M'
   226  000848  69                 	db	105	;'i'
   227  000849  63                 	db	99	;'c'
   228  00084A  72                 	db	114	;'r'
   229  00084B  6F                 	db	111	;'o'
   230  00084C  73                 	db	115	;'s'
   231  00084D  20                 	db	32
   232  00084E  32                 	db	50	;'2'
   233  00084F  30                 	db	48	;'0'
   234  000850  32                 	db	50	;'2'
   235  000851  31                 	db	49	;'1'
   236  000852  2D                 	db	45
   237  000853  32                 	db	50	;'2'
   238  000854  00                 	db	0
   239  000855                     STR_2:
   240  000855  4C                 	db	76	;'L'
   241  000856  61                 	db	97	;'a'
   242  000857  62                 	db	98	;'b'
   243  000858  20                 	db	32
   244  000859  35                 	db	53	;'5'
   245  00085A  00                 	db	0
   246  00085B                     STR_4:
   247  00085B  54                 	db	84	;'T'
   248  00085C  3D                 	db	61	;'='
   249  00085D  00                 	db	0
   250  00085E                     STR_3:
   251  00085E  20                 	db	32
   252  00085F  56                 	db	86	;'V'
   253  000860  00                 	db	0
   254  000861  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  002714                     __pcinit:
   260                           	callstack 0
   261  002714                     start_initialization:
   262                           	callstack 0
   263  002714                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Initialize objects allocated to BANK0 (8 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268  002714  0E7A               	movlw	low __pidataBANK0
   269  002716  6EF6               	movwf	tblptrl,c
   270  002718  0E2A               	movlw	high __pidataBANK0
   271  00271A  6EF7               	movwf	tblptrh,c
   272  00271C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273  00271E  6EF8               	movwf	tblptru,c
   274  002720  EE00  F060         	lfsr	0,__pdataBANK0
   275  002724  EE10 F008          	lfsr	1,8
   276  002728                     copy_data0:
   277  002728  0009               	tblrd		*+
   278  00272A  CFF5 FFEE          	movff	tablat,postinc0
   279  00272E  50E5               	movf	postdec1,w,c
   280  002730  50E1               	movf	fsr1l,w,c
   281  002732  E1FA               	bnz	copy_data0
   282                           
   283                           ; Initialize objects allocated to COMRAM (1 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285  002734  0E82               	movlw	low __pidataCOMRAM
   286  002736  6EF6               	movwf	tblptrl,c
   287  002738  0E2A               	movlw	high __pidataCOMRAM
   288  00273A  6EF7               	movwf	tblptrh,c
   289  00273C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290  00273E  6EF8               	movwf	tblptru,c
   291  002740  0009               	tblrd		*+	;fetch initializer
   292  002742  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   293                           
   294                           ; Clear objects allocated to BANK0 (5 bytes)
   295  002746  0100               	movlb	0
   296  002748  6B6C               	clrf	(__pbssBANK0+4)& (0+255),b
   297  00274A  6B6B               	clrf	(__pbssBANK0+3)& (0+255),b
   298  00274C  6B6A               	clrf	(__pbssBANK0+2)& (0+255),b
   299  00274E  6B69               	clrf	(__pbssBANK0+1)& (0+255),b
   300  002750  6B68               	clrf	__pbssBANK0& (0+255),b
   301                           
   302                           ; Clear objects allocated to COMRAM (9 bytes)
   303  002752  EE00  F055         	lfsr	0,__pbssCOMRAM
   304  002756  0E09               	movlw	9
   305  002758                     clear_0:
   306  002758  6AEE               	clrf	postinc0,c
   307  00275A  06E8               	decf	wreg,f,c
   308  00275C  E1FD               	bnz	clear_0
   309  00275E                     end_of_initialization:
   310                           	callstack 0
   311  00275E                     __end_of__initialization:
   312                           	callstack 0
   313  00275E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314  002760  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315  002762  0E00               	movlw	low (__Lmediumconst shr (0+16))
   316  002764  6EF8               	movwf	tblptru,c
   317  002766  0100               	movlb	0
   318  002768  EF95  F00B         	goto	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMRAM
   321  000055                     __pbssCOMRAM:
   322                           	callstack 0
   323  000055                     _VoltAn1:
   324                           	callstack 0
   325  000055                     	ds	3
   326  000058                     _Van0:
   327                           	callstack 0
   328  000058                     	ds	3
   329  00005B                     _TempAn0:
   330                           	callstack 0
   331  00005B                     	ds	2
   332  00005D                     _LecturaDS:
   333                           	callstack 0
   334  00005D                     	ds	1
   335                           
   336                           	psect	dataCOMRAM
   337  00005E                     __pdataCOMRAM:
   338                           	callstack 0
   339  00005E                     _interfaz:
   340                           	callstack 0
   341  00005E                     	ds	1
   342                           
   343                           	psect	bssBANK0
   344  000068                     __pbssBANK0:
   345                           	callstack 0
   346  000068                     _Van1:
   347                           	callstack 0
   348  000068                     	ds	3
   349  00006B                     _TempCelsius:
   350                           	callstack 0
   351  00006B                     	ds	2
   352                           
   353                           	psect	dataBANK0
   354  000060                     __pdataBANK0:
   355                           	callstack 0
   356  000060                     _grados:
   357                           	callstack 0
   358  000060                     	ds	8
   359                           
   360                           	psect	cstackCOMRAM
   361  000001                     __pcstackCOMRAM:
   362                           	callstack 0
   363  000001                     ??_RetardoLCD:
   364  000001                     ?_Conversion:
   365                           	callstack 0
   366  000001                     ?___wmul:
   367                           	callstack 0
   368  000001                     ?___awmod:
   369                           	callstack 0
   370  000001                     ?___lwmod:
   371                           	callstack 0
   372  000001                     ?___ftpack:
   373                           	callstack 0
   374  000001                     ?___llmod:
   375                           	callstack 0
   376  000001                     ConfiguraLCD@a:
   377                           	callstack 0
   378  000001                     Transmitir@BufferT:
   379                           	callstack 0
   380  000001                     ___lbmod@divisor:
   381                           	callstack 0
   382  000001                     ___wmul@multiplier:
   383                           	callstack 0
   384  000001                     ___awmod@dividend:
   385                           	callstack 0
   386  000001                     ___lwmod@dividend:
   387                           	callstack 0
   388  000001                     ___ftpack@arg:
   389                           	callstack 0
   390  000001                     ___ftge@ff1:
   391                           	callstack 0
   392  000001                     ___llmod@dividend:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x0
   396  000001                     	ds	1
   397  000002                     RetardoLCD@a:
   398                           	callstack 0
   399  000002                     TransmitirMensaje@a:
   400                           	callstack 0
   401  000002                     ___lbmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x1
   405  000002                     	ds	1
   406  000003                     ??_Conversion:
   407  000003                     ??_EnviaDato:
   408  000003                     ___lbmod@counter:
   409                           	callstack 0
   410  000003                     ___wmul@multiplicand:
   411                           	callstack 0
   412  000003                     ___awmod@divisor:
   413                           	callstack 0
   414  000003                     ___lwmod@divisor:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  000003                     	ds	1
   419  000004                     EnviaDato@a:
   420                           	callstack 0
   421  000004                     Conversion@canal:
   422                           	callstack 0
   423  000004                     ___ftpack@exp:
   424                           	callstack 0
   425  000004                     ___lbmod@rem:
   426                           	callstack 0
   427  000004                     ___ftge@ff2:
   428                           	callstack 0
   429                           
   430                           ; 3 bytes @ 0x3
   431  000004                     	ds	1
   432  000005                     EscribeLCD_c@a:
   433                           	callstack 0
   434  000005                     DireccionaLCD@a:
   435                           	callstack 0
   436  000005                     ___awmod@counter:
   437                           	callstack 0
   438  000005                     ___ftpack@sign:
   439                           	callstack 0
   440  000005                     ___lbdiv@divisor:
   441                           	callstack 0
   442  000005                     ___lwmod@counter:
   443                           	callstack 0
   444  000005                     ___wmul@product:
   445                           	callstack 0
   446  000005                     ___llmod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     ??___ftpack:
   452  000006                     ?___lwdiv:
   453                           	callstack 0
   454  000006                     MensajeLCD_Var@a:
   455                           	callstack 0
   456  000006                     GuardarASCII@arreglo:
   457                           	callstack 0
   458  000006                     ___awmod@sign:
   459                           	callstack 0
   460  000006                     ___lbdiv@dividend:
   461                           	callstack 0
   462  000006                     ___lwdiv@dividend:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466  000006                     	ds	1
   467  000007                     ??___ftge:
   468  000007                     GuardarASCII@cgram:
   469                           	callstack 0
   470  000007                     ___lbdiv@counter:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x6
   474  000007                     	ds	1
   475  000008                     GuardarASCII@i:
   476                           	callstack 0
   477  000008                     ___lbdiv@quotient:
   478                           	callstack 0
   479  000008                     ___lwdiv@divisor:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x7
   483  000008                     	ds	1
   484  000009                     ?___ftmul:
   485                           	callstack 0
   486  000009                     ?___lwtoft:
   487                           	callstack 0
   488  000009                     EscribeLCD_n8@b:
   489                           	callstack 0
   490  000009                     ___llmod@counter:
   491                           	callstack 0
   492  000009                     ___lwtoft@c:
   493                           	callstack 0
   494  000009                     ___ftmul@f1:
   495                           	callstack 0
   496                           
   497                           ; 3 bytes @ 0x8
   498  000009                     	ds	1
   499  00000A                     ?___lldiv:
   500                           	callstack 0
   501  00000A                     EscribeLCD_n8@centena:
   502                           	callstack 0
   503  00000A                     ___lwdiv@quotient:
   504                           	callstack 0
   505  00000A                     ___lldiv@dividend:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x9
   509  00000A                     	ds	1
   510  00000B                     EscribeLCD_n8@decena:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xA
   514  00000B                     	ds	1
   515  00000C                     EscribeLCD_n8@unidad:
   516                           	callstack 0
   517  00000C                     ___lwdiv@counter:
   518                           	callstack 0
   519  00000C                     ColorRGB@Temp:
   520                           	callstack 0
   521  00000C                     ___ftmul@f2:
   522                           	callstack 0
   523                           
   524                           ; 3 bytes @ 0xB
   525  00000C                     	ds	1
   526  00000D                     EscribeLCD_n8@a:
   527                           	callstack 0
   528  00000D                     TransmitirNumero@a:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xC
   532  00000D                     	ds	1
   533  00000E                     ___lldiv@divisor:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0xD
   537  00000E                     	ds	1
   538  00000F                     ??___ftmul:
   539  00000F                     TransmitirNumero@centena:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xE
   543  00000F                     	ds	2
   544  000011                     TransmitirNumero@b:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x10
   548  000011                     	ds	1
   549  000012                     ___ftmul@exp:
   550                           	callstack 0
   551  000012                     TransmitirNumero@var:
   552                           	callstack 0
   553  000012                     ___lldiv@quotient:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x11
   557  000012                     	ds	1
   558  000013                     ___ftmul@f3_as_product:
   559                           	callstack 0
   560                           
   561                           ; 3 bytes @ 0x12
   562  000013                     	ds	1
   563  000014                     TransmitirNumero@decena:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x13
   567  000014                     	ds	1
   568  000015                     TransmitirNumero@unidad:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x14
   572  000015                     	ds	1
   573  000016                     ___lldiv@counter:
   574                           	callstack 0
   575  000016                     ___ftmul@cntr:
   576                           	callstack 0
   577  000016                     TransmitirGeneral@b:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x15
   581  000016                     	ds	1
   582  000017                     ___ftmul@sign:
   583                           	callstack 0
   584  000017                     EscribeLCD_n32@a:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x16
   588  000017                     	ds	1
   589  000018                     ?___ftdiv:
   590                           	callstack 0
   591  000018                     TransmitirGeneral@caso:
   592                           	callstack 0
   593  000018                     ___ftdiv@f1:
   594                           	callstack 0
   595                           
   596                           ; 3 bytes @ 0x17
   597  000018                     	ds	1
   598  000019                     
   599                           ; 1 bytes @ 0x18
   600  000019                     	ds	2
   601  00001B                     EscribeLCD_n32@b:
   602                           	callstack 0
   603  00001B                     ___ftdiv@f2:
   604                           	callstack 0
   605                           
   606                           ; 3 bytes @ 0x1A
   607  00001B                     	ds	1
   608  00001C                     EscribeLCD_n32@cienmillon:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x1B
   612  00001C                     	ds	2
   613  00001E                     ??___ftdiv:
   614                           
   615                           ; 1 bytes @ 0x1D
   616  00001E                     	ds	2
   617  000020                     EscribeLCD_n32@diezmillon:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x1F
   621  000020                     	ds	1
   622  000021                     ___ftdiv@cntr:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x20
   626  000021                     	ds	1
   627  000022                     ___ftdiv@f3:
   628                           	callstack 0
   629                           
   630                           ; 3 bytes @ 0x21
   631  000022                     	ds	2
   632  000024                     EscribeLCD_n32@millon:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x23
   636  000024                     	ds	1
   637  000025                     ___ftdiv@exp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x24
   641  000025                     	ds	1
   642  000026                     ___ftdiv@sign:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x25
   646  000026                     	ds	1
   647  000027                     ?___ftadd:
   648                           	callstack 0
   649  000027                     ___ftadd@f1:
   650                           	callstack 0
   651                           
   652                           ; 3 bytes @ 0x26
   653  000027                     	ds	1
   654  000028                     EscribeLCD_n32@cienmil:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x27
   658  000028                     	ds	2
   659  00002A                     ___ftadd@f2:
   660                           	callstack 0
   661                           
   662                           ; 3 bytes @ 0x29
   663  00002A                     	ds	2
   664  00002C                     EscribeLCD_n32@diezmil:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x2B
   668  00002C                     	ds	1
   669  00002D                     ??___ftadd:
   670                           
   671                           ; 1 bytes @ 0x2C
   672  00002D                     	ds	3
   673  000030                     ___ftadd@sign:
   674                           	callstack 0
   675  000030                     EscribeLCD_n32@millar:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x2F
   679  000030                     	ds	1
   680  000031                     ___ftadd@exp2:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x30
   684  000031                     	ds	1
   685  000032                     ___ftadd@exp1:
   686                           	callstack 0
   687  000032                     EscribeLCD_n32@centena:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x31
   691  000032                     	ds	1
   692  000033                     ?_calcularTemperatura:
   693                           	callstack 0
   694  000033                     calcularTemperatura@Van0:
   695                           	callstack 0
   696                           
   697                           ; 3 bytes @ 0x32
   698  000033                     	ds	1
   699  000034                     EscribeLCD_n32@decena:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x33
   703  000034                     	ds	1
   704  000035                     EscribeLCD_n32@unidad:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x34
   708  000035                     	ds	1
   709  000036                     calcularTemperatura@caso:
   710                           	callstack 0
   711  000036                     imprimirTemperatura@T:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x35
   715  000036                     	ds	1
   716  000037                     calcularTemperatura@temperatura:
   717                           	callstack 0
   718                           
   719                           ; 3 bytes @ 0x36
   720  000037                     	ds	3
   721  00003A                     imprimirTemperatura@caso:
   722                           	callstack 0
   723  00003A                     calcularTemperatura@temperaturaC:
   724                           	callstack 0
   725                           
   726                           ; 3 bytes @ 0x39
   727  00003A                     	ds	1
   728  00003B                     
   729                           ; 1 bytes @ 0x3A
   730  00003B                     	ds	2
   731  00003D                     ?___fttol:
   732                           	callstack 0
   733  00003D                     ___fttol@f1:
   734                           	callstack 0
   735                           
   736                           ; 3 bytes @ 0x3C
   737  00003D                     	ds	4
   738  000041                     ??___fttol:
   739                           
   740                           ; 1 bytes @ 0x40
   741  000041                     	ds	5
   742  000046                     ___fttol@sign1:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x45
   746  000046                     	ds	1
   747  000047                     ___fttol@lval:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x46
   751  000047                     	ds	4
   752  00004B                     ___fttol@exp1:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x4A
   756  00004B                     	ds	1
   757  00004C                     EscribeLCD_2Decimales@a:
   758                           	callstack 0
   759                           
   760                           ; 3 bytes @ 0x4B
   761  00004C                     	ds	3
   762  00004F                     EscribeLCD_2Decimales@num:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x4E
   766  00004F                     	ds	2
   767  000051                     EscribeLCD_2Decimales@decimalesP:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x50
   771  000051                     	ds	1
   772  000052                     EscribeLCD_2Decimales@unidad:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x51
   776  000052                     	ds	1
   777  000053                     ??_main:
   778                           
   779                           ; 1 bytes @ 0x52
   780  000053                     	ds	2
   781                           
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 35 in file "Lab5.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   801 ;;      Params:         0       0       0       0       0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0
   803 ;;      Temps:          2       0       0       0       0       0       0       0       0
   804 ;;      Totals:         2       0       0       0       0       0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels required when called: 6
   807 ;; This function calls:
   808 ;;		_BorraLCD
   809 ;;		_ColorRGB
   810 ;;		_ConfiguraLCD
   811 ;;		_Conversion
   812 ;;		_DireccionaLCD
   813 ;;		_EscribeLCD_2Decimales
   814 ;;		_GuardarASCII
   815 ;;		_InicializaLCD
   816 ;;		_MensajeLCD_Var
   817 ;;		_TransmitirGeneral
   818 ;;		___ftadd
   819 ;;		___ftdiv
   820 ;;		___ftge
   821 ;;		___ftmul
   822 ;;		___fttol
   823 ;;		___lwtoft
   824 ;;		_calcularTemperatura
   825 ;;		_imprimirTemperatura
   826 ;; This function is called by:
   827 ;;		Startup code after reset
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text0
   832  00172A                     __ptext0:
   833                           	callstack 0
   834  00172A                     _main:
   835                           	callstack 25
   836                           
   837                           ;Lab5.c: 37: ADCON0=0b00000001;
   838                           
   839                           ;incstack = 0
   840  00172A  0E01               	movlw	1
   841  00172C  6EC2               	movwf	194,c	;volatile
   842                           
   843                           ;Lab5.c: 38: ADCON1=13;
   844  00172E  0E0D               	movlw	13
   845  001730  6EC1               	movwf	193,c	;volatile
   846                           
   847                           ;Lab5.c: 39: ADCON2=0b10001000;
   848  001732  0E88               	movlw	136
   849  001734  6EC0               	movwf	192,c	;volatile
   850                           
   851                           ;Lab5.c: 41: TXSTA=0b00100100;
   852  001736  0E24               	movlw	36
   853  001738  6EAC               	movwf	172,c	;volatile
   854                           
   855                           ;Lab5.c: 42: RCSTA=0b10000000;
   856  00173A  0E80               	movlw	128
   857  00173C  6EAB               	movwf	171,c	;volatile
   858                           
   859                           ;Lab5.c: 43: BAUDCON=0b00001000;
   860  00173E  0E08               	movlw	8
   861  001740  6EB8               	movwf	184,c	;volatile
   862                           
   863                           ;Lab5.c: 44: SPBRG=25;
   864  001742  0E19               	movlw	25
   865  001744  6EAF               	movwf	175,c	;volatile
   866                           
   867                           ;Lab5.c: 47: TRISB=0;
   868  001746  0E00               	movlw	0
   869  001748  6E93               	movwf	147,c	;volatile
   870                           
   871                           ;Lab5.c: 48: LATB=0;
   872  00174A  0E00               	movlw	0
   873  00174C  6E8A               	movwf	138,c	;volatile
   874                           
   875                           ;Lab5.c: 50: TRISD=0;
   876  00174E  0E00               	movlw	0
   877  001750  6E95               	movwf	149,c	;volatile
   878                           
   879                           ;Lab5.c: 51: LATD=0;
   880  001752  0E00               	movlw	0
   881  001754  6E8C               	movwf	140,c	;volatile
   882                           
   883                           ;Lab5.c: 53: TRISE0=1;
   884  001756  8096               	bsf	3990,0,c	;volatile
   885                           
   886                           ;Lab5.c: 54: TRISE1=1;
   887  001758  8296               	bsf	3990,1,c	;volatile
   888                           
   889                           ;Lab5.c: 56: T1CON=0b10100001;
   890  00175A  0EA1               	movlw	161
   891  00175C  6ECD               	movwf	205,c	;volatile
   892                           
   893                           ;Lab5.c: 57: TMR1=3036;
   894  00175E  0E0B               	movlw	11
   895  001760  6ECF               	movwf	207,c	;volatile
   896  001762  0EDC               	movlw	220
   897  001764  6ECE               	movwf	206,c	;volatile
   898                           
   899                           ;Lab5.c: 58: TMR1IF=0;
   900  001766  909E               	bcf	3998,0,c	;volatile
   901                           
   902                           ;Lab5.c: 59: TMR1IE=1;
   903  001768  809D               	bsf	3997,0,c	;volatile
   904                           
   905                           ;Lab5.c: 60: GIE=1;
   906  00176A  8EF2               	bsf	4082,7,c	;volatile
   907                           
   908                           ;Lab5.c: 61: PEIE=1;
   909  00176C  8CF2               	bsf	4082,6,c	;volatile
   910                           
   911                           ;Lab5.c: 64: _delay((unsigned long)((500)*(1000000/4000.0)));
   912  00176E  0EA3               	movlw	163
   913  001770  6E53               	movwf	??_main^0,c
   914  001772  0E55               	movlw	85
   915  001774                     u2007:
   916  001774  2EE8               	decfsz	wreg,f,c
   917  001776  D7FE               	bra	u2007
   918  001778  2E53               	decfsz	??_main^0,f,c
   919  00177A  D7FC               	bra	u2007
   920  00177C  F000               	nop	
   921                           
   922                           ;Lab5.c: 65: ConfiguraLCD(4);
   923  00177E  0E04               	movlw	4
   924  001780  EC04  F015         	call	_ConfiguraLCD
   925                           
   926                           ;Lab5.c: 66: InicializaLCD();
   927  001784  ECEB  F011         	call	_InicializaLCD	;wreg free
   928                           
   929                           ;Lab5.c: 67: GuardarASCII(64,grados);
   930  001788  0E60               	movlw	low _grados
   931  00178A  6E06               	movwf	GuardarASCII@arreglo^0,c
   932  00178C  0E40               	movlw	64
   933  00178E  EC6B  F014         	call	_GuardarASCII
   934                           
   935                           ;Lab5.c: 68: MensajeLCD_Var("Micros 2021-2");
   936  001792  0E47               	movlw	low STR_1
   937  001794  6E06               	movwf	MensajeLCD_Var@a^0,c
   938  001796  EC95  F014         	call	_MensajeLCD_Var	;wreg free
   939                           
   940                           ;Lab5.c: 69: DireccionaLCD(0xC0);
   941  00179A  0EC0               	movlw	192
   942  00179C  EC10  F015         	call	_DireccionaLCD
   943                           
   944                           ;Lab5.c: 70: MensajeLCD_Var("Lab 5");
   945  0017A0  0E55               	movlw	low STR_2
   946  0017A2  6E06               	movwf	MensajeLCD_Var@a^0,c
   947  0017A4  EC95  F014         	call	_MensajeLCD_Var	;wreg free
   948                           
   949                           ;Lab5.c: 71: _delay((unsigned long)((2000)*(1000000/4000.0)));
   950  0017A8  0E03               	movlw	3
   951  0017AA  6E54               	movwf	(??_main+1)^0,c
   952  0017AC  0E8A               	movlw	138
   953  0017AE  6E53               	movwf	??_main^0,c
   954  0017B0  0E56               	movlw	86
   955  0017B2                     u2017:
   956  0017B2  2EE8               	decfsz	wreg,f,c
   957  0017B4  D7FE               	bra	u2017
   958  0017B6  2E53               	decfsz	??_main^0,f,c
   959  0017B8  D7FC               	bra	u2017
   960  0017BA  2E54               	decfsz	(??_main+1)^0,f,c
   961  0017BC  D7FA               	bra	u2017
   962                           
   963                           ;Lab5.c: 72: BorraLCD();
   964  0017BE  EC26  F015         	call	_BorraLCD	;wreg free
   965  0017C2                     l2727:
   966                           
   967                           ;Lab5.c: 74: Van0=Conversion(0);
   968  0017C2  0E00               	movlw	0
   969  0017C4  ECD0  F014         	call	_Conversion
   970  0017C8  C001  F009         	movff	?_Conversion,___lwtoft@c
   971  0017CC  C002  F00A         	movff	?_Conversion+1,___lwtoft@c+1
   972  0017D0  ECE3  F014         	call	___lwtoft	;wreg free
   973  0017D4  C009  F058         	movff	?___lwtoft,_Van0
   974  0017D8  C00A  F059         	movff	?___lwtoft+1,_Van0+1
   975  0017DC  C00B  F05A         	movff	?___lwtoft+2,_Van0+2
   976                           
   977                           ;Lab5.c: 75: Van1=Conversion(1);
   978  0017E0  0E01               	movlw	1
   979  0017E2  ECD0  F014         	call	_Conversion
   980  0017E6  C001  F009         	movff	?_Conversion,___lwtoft@c
   981  0017EA  C002  F00A         	movff	?_Conversion+1,___lwtoft@c+1
   982  0017EE  ECE3  F014         	call	___lwtoft	;wreg free
   983  0017F2  C009  F068         	movff	?___lwtoft,_Van1
   984  0017F6  C00A  F069         	movff	?___lwtoft+1,_Van1+1
   985  0017FA  C00B  F06A         	movff	?___lwtoft+2,_Van1+2
   986                           
   987                           ;Lab5.c: 76: VoltAn1=Van1*5/1024;
   988  0017FE  0E00               	movlw	0
   989  001800  6E0C               	movwf	___ftmul@f2^0,c
   990  001802  0EA0               	movlw	160
   991  001804  6E0D               	movwf	(___ftmul@f2+1)^0,c
   992  001806  0E40               	movlw	64
   993  001808  6E0E               	movwf	(___ftmul@f2+2)^0,c
   994  00180A  C068  F009         	movff	_Van1,___ftmul@f1
   995  00180E  C069  F00A         	movff	_Van1+1,___ftmul@f1+1
   996  001812  C06A  F00B         	movff	_Van1+2,___ftmul@f1+2
   997  001816  EC67  F00F         	call	___ftmul	;wreg free
   998  00181A  C009  F018         	movff	?___ftmul,___ftdiv@f1
   999  00181E  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
  1000  001822  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
  1001  001826  0E00               	movlw	0
  1002  001828  6E1B               	movwf	___ftdiv@f2^0,c
  1003  00182A  0E80               	movlw	128
  1004  00182C  6E1C               	movwf	(___ftdiv@f2+1)^0,c
  1005  00182E  0E44               	movlw	68
  1006  001830  6E1D               	movwf	(___ftdiv@f2+2)^0,c
  1007  001832  ECE1  F00F         	call	___ftdiv	;wreg free
  1008  001836  C018  F055         	movff	?___ftdiv,_VoltAn1
  1009  00183A  C019  F056         	movff	?___ftdiv+1,_VoltAn1+1
  1010  00183E  C01A  F057         	movff	?___ftdiv+2,_VoltAn1+2
  1011                           
  1012                           ;Lab5.c: 77: if(VoltAn1>=2.5){
  1013  001842  C055  F001         	movff	_VoltAn1,___ftge@ff1
  1014  001846  C056  F002         	movff	_VoltAn1+1,___ftge@ff1+1
  1015  00184A  C057  F003         	movff	_VoltAn1+2,___ftge@ff1+2
  1016  00184E  0E00               	movlw	0
  1017  001850  6E04               	movwf	___ftge@ff2^0,c
  1018  001852  0E20               	movlw	32
  1019  001854  6E05               	movwf	(___ftge@ff2+1)^0,c
  1020  001856  0E40               	movlw	64
  1021  001858  6E06               	movwf	(___ftge@ff2+2)^0,c
  1022  00185A  ECB8  F012         	call	___ftge	;wreg free
  1023  00185E  A0D8               	btfss	status,0,c
  1024  001860  D002               	goto	l189
  1025                           
  1026                           ;Lab5.c: 78: LATD0=1;
  1027  001862  808C               	bsf	3980,0,c	;volatile
  1028                           
  1029                           ;Lab5.c: 79: }else{
  1030  001864  D001               	goto	l2737
  1031  001866                     l189:
  1032                           
  1033                           ;Lab5.c: 80: LATD0=0;
  1034  001866  908C               	bcf	3980,0,c	;volatile
  1035  001868                     l2737:
  1036                           
  1037                           ;Lab5.c: 81: };Lab5.c: 83: TempCelsius=20+25*Van0/512;
  1038  001868  0E00               	movlw	0
  1039  00186A  6E2A               	movwf	___ftadd@f2^0,c
  1040  00186C  0EA0               	movlw	160
  1041  00186E  6E2B               	movwf	(___ftadd@f2+1)^0,c
  1042  001870  0E41               	movlw	65
  1043  001872  6E2C               	movwf	(___ftadd@f2+2)^0,c
  1044  001874  0E00               	movlw	0
  1045  001876  6E1B               	movwf	___ftdiv@f2^0,c
  1046  001878  0E00               	movlw	0
  1047  00187A  6E1C               	movwf	(___ftdiv@f2+1)^0,c
  1048  00187C  0E44               	movlw	68
  1049  00187E  6E1D               	movwf	(___ftdiv@f2+2)^0,c
  1050  001880  0E00               	movlw	0
  1051  001882  6E0C               	movwf	___ftmul@f2^0,c
  1052  001884  0EC8               	movlw	200
  1053  001886  6E0D               	movwf	(___ftmul@f2+1)^0,c
  1054  001888  0E41               	movlw	65
  1055  00188A  6E0E               	movwf	(___ftmul@f2+2)^0,c
  1056  00188C  C058  F009         	movff	_Van0,___ftmul@f1
  1057  001890  C059  F00A         	movff	_Van0+1,___ftmul@f1+1
  1058  001894  C05A  F00B         	movff	_Van0+2,___ftmul@f1+2
  1059  001898  EC67  F00F         	call	___ftmul	;wreg free
  1060  00189C  C009  F018         	movff	?___ftmul,___ftdiv@f1
  1061  0018A0  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
  1062  0018A4  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
  1063  0018A8  ECE1  F00F         	call	___ftdiv	;wreg free
  1064  0018AC  C018  F027         	movff	?___ftdiv,___ftadd@f1
  1065  0018B0  C019  F028         	movff	?___ftdiv+1,___ftadd@f1+1
  1066  0018B4  C01A  F029         	movff	?___ftdiv+2,___ftadd@f1+2
  1067  0018B8  ECC5  F00C         	call	___ftadd	;wreg free
  1068  0018BC  C027  F03D         	movff	?___ftadd,___fttol@f1
  1069  0018C0  C028  F03E         	movff	?___ftadd+1,___fttol@f1+1
  1070  0018C4  C029  F03F         	movff	?___ftadd+2,___fttol@f1+2
  1071  0018C8  ECC7  F010         	call	___fttol	;wreg free
  1072  0018CC  C03D  F06B         	movff	?___fttol,_TempCelsius
  1073  0018D0  C03E  F06C         	movff	?___fttol+1,_TempCelsius+1
  1074                           
  1075                           ;Lab5.c: 84: LecturaDS=RE1+(RE0<<1);
  1076  0018D4  0E00               	movlw	0
  1077  0018D6  B084               	btfsc	3972,0,c	;volatile
  1078  0018D8  0E01               	movlw	1
  1079  0018DA  0D02               	mullw	2
  1080  0018DC  50F3               	movf	243,w,c
  1081  0018DE  B284               	btfsc	3972,1,c	;volatile
  1082  0018E0  0F01               	addlw	1
  1083  0018E2  6E5D               	movwf	_LecturaDS^0,c
  1084                           
  1085                           ;Lab5.c: 85: TempAn0=calcularTemperatura(Van0,LecturaDS);
  1086  0018E4  C05D  F036         	movff	_LecturaDS,calcularTemperatura@caso
  1087  0018E8  C058  F033         	movff	_Van0,calcularTemperatura@Van0
  1088  0018EC  C059  F034         	movff	_Van0+1,calcularTemperatura@Van0+1
  1089  0018F0  C05A  F035         	movff	_Van0+2,calcularTemperatura@Van0+2
  1090  0018F4  EC44  F00E         	call	_calcularTemperatura	;wreg free
  1091  0018F8  C033  F03D         	movff	?_calcularTemperatura,___fttol@f1
  1092  0018FC  C034  F03E         	movff	?_calcularTemperatura+1,___fttol@f1+1
  1093  001900  C035  F03F         	movff	?_calcularTemperatura+2,___fttol@f1+2
  1094  001904  ECC7  F010         	call	___fttol	;wreg free
  1095  001908  C03D  F05B         	movff	?___fttol,_TempAn0
  1096  00190C  C03E  F05C         	movff	?___fttol+1,_TempAn0+1
  1097                           
  1098                           ;Lab5.c: 86: TransmitirGeneral(TempAn0,LecturaDS);
  1099  001910  C05B  F016         	movff	_TempAn0,TransmitirGeneral@b
  1100  001914  C05C  F017         	movff	_TempAn0+1,TransmitirGeneral@b+1
  1101  001918  C05D  F018         	movff	_LecturaDS,TransmitirGeneral@caso
  1102  00191C  EC5D  F013         	call	_TransmitirGeneral	;wreg free
  1103                           
  1104                           ;Lab5.c: 88: ColorRGB(TempCelsius);
  1105  001920  C06B  F009         	movff	_TempCelsius,___lwtoft@c
  1106  001924  C06C  F00A         	movff	_TempCelsius+1,___lwtoft@c+1
  1107  001928  ECE3  F014         	call	___lwtoft	;wreg free
  1108  00192C  C009  F00C         	movff	?___lwtoft,ColorRGB@Temp
  1109  001930  C00A  F00D         	movff	?___lwtoft+1,ColorRGB@Temp+1
  1110  001934  C00B  F00E         	movff	?___lwtoft+2,ColorRGB@Temp+2
  1111  001938  ECDF  F00E         	call	_ColorRGB	;wreg free
  1112                           
  1113                           ;Lab5.c: 90: BorraLCD();
  1114  00193C  EC26  F015         	call	_BorraLCD	;wreg free
  1115                           
  1116                           ;Lab5.c: 91: imprimirTemperatura(TempAn0,LecturaDS);
  1117  001940  C05B  F036         	movff	_TempAn0,imprimirTemperatura@T
  1118  001944  C05C  F037         	movff	_TempAn0+1,imprimirTemperatura@T+1
  1119  001948  6A38               	clrf	(imprimirTemperatura@T+2)^0,c
  1120  00194A  6A39               	clrf	(imprimirTemperatura@T+3)^0,c
  1121  00194C  C05D  F03A         	movff	_LecturaDS,imprimirTemperatura@caso
  1122  001950  EC30  F011         	call	_imprimirTemperatura	;wreg free
  1123                           
  1124                           ;Lab5.c: 92: DireccionaLCD(0xC0);
  1125  001954  0EC0               	movlw	192
  1126  001956  EC10  F015         	call	_DireccionaLCD
  1127                           
  1128                           ;Lab5.c: 93: EscribeLCD_2Decimales(VoltAn1);
  1129  00195A  C055  F04C         	movff	_VoltAn1,EscribeLCD_2Decimales@a
  1130  00195E  C056  F04D         	movff	_VoltAn1+1,EscribeLCD_2Decimales@a+1
  1131  001962  C057  F04E         	movff	_VoltAn1+2,EscribeLCD_2Decimales@a+2
  1132  001966  EC7A  F012         	call	_EscribeLCD_2Decimales	;wreg free
  1133                           
  1134                           ;Lab5.c: 94: MensajeLCD_Var(" V");
  1135  00196A  0E5E               	movlw	low STR_3
  1136  00196C  6E06               	movwf	MensajeLCD_Var@a^0,c
  1137  00196E  EC95  F014         	call	_MensajeLCD_Var	;wreg free
  1138                           
  1139                           ;Lab5.c: 95: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1140  001972  0E02               	movlw	2
  1141  001974  6E54               	movwf	(??_main+1)^0,c
  1142  001976  0E45               	movlw	69
  1143  001978  6E53               	movwf	??_main^0,c
  1144  00197A  0EAA               	movlw	170
  1145  00197C                     u2027:
  1146  00197C  2EE8               	decfsz	wreg,f,c
  1147  00197E  D7FE               	bra	u2027
  1148  001980  2E53               	decfsz	??_main^0,f,c
  1149  001982  D7FC               	bra	u2027
  1150  001984  2E54               	decfsz	(??_main+1)^0,f,c
  1151  001986  D7FA               	bra	u2027
  1152  001988  D71C               	goto	l2727
  1153  00198A                     __end_of_main:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _imprimirTemperatura *****************
  1157 ;; Defined at:
  1158 ;;		line 135 in file "Lab5.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  T               4   53[COMRAM] long 
  1161 ;;  caso            1   57[COMRAM] unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         5       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        5 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 5
  1180 ;; This function calls:
  1181 ;;		_EscribeLCD_c
  1182 ;;		_EscribeLCD_n32
  1183 ;;		_EscribeLCD_n8
  1184 ;;		_MensajeLCD_Var
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text1
  1191  002260                     __ptext1:
  1192                           	callstack 0
  1193  002260                     _imprimirTemperatura:
  1194                           	callstack 25
  1195                           
  1196                           ;Lab5.c: 136: MensajeLCD_Var("T=");
  1197                           
  1198                           ;incstack = 0
  1199  002260  0E5B               	movlw	low STR_4
  1200  002262  6E06               	movwf	MensajeLCD_Var@a^0,c
  1201  002264  EC95  F014         	call	_MensajeLCD_Var	;wreg free
  1202                           
  1203                           ;Lab5.c: 137: if(T<10){
  1204  002268  BE39               	btfsc	(imprimirTemperatura@T+3)^0,7,c
  1205  00226A  D008               	goto	u1950
  1206  00226C  5039               	movf	(imprimirTemperatura@T+3)^0,w,c
  1207  00226E  1038               	iorwf	(imprimirTemperatura@T+2)^0,w,c
  1208  002270  1037               	iorwf	(imprimirTemperatura@T+1)^0,w,c
  1209  002272  E10A               	bnz	l2593
  1210  002274  0E0A               	movlw	10
  1211  002276  5C36               	subwf	imprimirTemperatura@T^0,w,c
  1212  002278  B0D8               	btfsc	status,0,c
  1213  00227A  D006               	goto	l2593
  1214  00227C                     u1950:
  1215                           
  1216                           ;Lab5.c: 138: EscribeLCD_n8(T,1);
  1217  00227C  0E01               	movlw	1
  1218  00227E  6E09               	movwf	EscribeLCD_n8@b^0,c
  1219  002280  5036               	movf	imprimirTemperatura@T^0,w,c
  1220  002282  EC54  F010         	call	_EscribeLCD_n8
  1221                           
  1222                           ;Lab5.c: 139: }else if(T<100){
  1223  002286  D042               	goto	l2609
  1224  002288                     l2593:
  1225  002288  BE39               	btfsc	(imprimirTemperatura@T+3)^0,7,c
  1226  00228A  D008               	goto	u1960
  1227  00228C  5039               	movf	(imprimirTemperatura@T+3)^0,w,c
  1228  00228E  1038               	iorwf	(imprimirTemperatura@T+2)^0,w,c
  1229  002290  1037               	iorwf	(imprimirTemperatura@T+1)^0,w,c
  1230  002292  E10A               	bnz	l2597
  1231  002294  0E64               	movlw	100
  1232  002296  5C36               	subwf	imprimirTemperatura@T^0,w,c
  1233  002298  B0D8               	btfsc	status,0,c
  1234  00229A  D006               	goto	l2597
  1235  00229C                     u1960:
  1236                           
  1237                           ;Lab5.c: 140: EscribeLCD_n8(T,2);
  1238  00229C  0E02               	movlw	2
  1239  00229E  6E09               	movwf	EscribeLCD_n8@b^0,c
  1240  0022A0  5036               	movf	imprimirTemperatura@T^0,w,c
  1241  0022A2  EC54  F010         	call	_EscribeLCD_n8
  1242                           
  1243                           ;Lab5.c: 141: }else {
  1244  0022A6  D032               	goto	l2609
  1245  0022A8                     l2597:
  1246                           
  1247                           ;Lab5.c: 142: EscribeLCD_n32(T,3);
  1248  0022A8  C036  F017         	movff	imprimirTemperatura@T,EscribeLCD_n32@a
  1249  0022AC  C037  F018         	movff	imprimirTemperatura@T+1,EscribeLCD_n32@a+1
  1250  0022B0  C038  F019         	movff	imprimirTemperatura@T+2,EscribeLCD_n32@a+2
  1251  0022B4  C039  F01A         	movff	imprimirTemperatura@T+3,EscribeLCD_n32@a+3
  1252  0022B8  0E03               	movlw	3
  1253  0022BA  6E1B               	movwf	EscribeLCD_n32@b^0,c
  1254  0022BC  EC31  F004         	call	_EscribeLCD_n32	;wreg free
  1255  0022C0  D025               	goto	l2609
  1256  0022C2                     l2599:
  1257                           
  1258                           ;Lab5.c: 146: EscribeLCD_c(' ');
  1259  0022C2  0E20               	movlw	32
  1260  0022C4  EC1B  F015         	call	_EscribeLCD_c
  1261                           
  1262                           ;Lab5.c: 147: EscribeLCD_c(0);
  1263  0022C8  0E00               	movlw	0
  1264  0022CA  EC1B  F015         	call	_EscribeLCD_c
  1265                           
  1266                           ;Lab5.c: 148: EscribeLCD_c('C');
  1267  0022CE  0E43               	movlw	67
  1268  0022D0  EC1B  F015         	call	_EscribeLCD_c
  1269                           
  1270                           ;Lab5.c: 149: break;
  1271  0022D4  0012               	return	
  1272  0022D6                     l2601:
  1273                           
  1274                           ;Lab5.c: 151: EscribeLCD_c(' ');
  1275  0022D6  0E20               	movlw	32
  1276  0022D8  EC1B  F015         	call	_EscribeLCD_c
  1277                           
  1278                           ;Lab5.c: 152: EscribeLCD_c('K');
  1279  0022DC  0E4B               	movlw	75
  1280  0022DE  EC1B  F015         	call	_EscribeLCD_c
  1281                           
  1282                           ;Lab5.c: 153: break;
  1283  0022E2  0012               	return	
  1284  0022E4                     l2603:
  1285                           
  1286                           ;Lab5.c: 155: EscribeLCD_c(' ');
  1287  0022E4  0E20               	movlw	32
  1288  0022E6  EC1B  F015         	call	_EscribeLCD_c
  1289                           
  1290                           ;Lab5.c: 156: EscribeLCD_c(0);
  1291  0022EA  0E00               	movlw	0
  1292  0022EC  EC1B  F015         	call	_EscribeLCD_c
  1293                           
  1294                           ;Lab5.c: 157: EscribeLCD_c('R');
  1295  0022F0  0E52               	movlw	82
  1296  0022F2  EC1B  F015         	call	_EscribeLCD_c
  1297                           
  1298                           ;Lab5.c: 158: break;
  1299  0022F6  0012               	return	
  1300  0022F8                     l2605:
  1301                           
  1302                           ;Lab5.c: 160: EscribeLCD_c(' ');
  1303  0022F8  0E20               	movlw	32
  1304  0022FA  EC1B  F015         	call	_EscribeLCD_c
  1305                           
  1306                           ;Lab5.c: 161: EscribeLCD_c(0);
  1307  0022FE  0E00               	movlw	0
  1308  002300  EC1B  F015         	call	_EscribeLCD_c
  1309                           
  1310                           ;Lab5.c: 162: EscribeLCD_c('F');
  1311  002304  0E46               	movlw	70
  1312  002306  EC1B  F015         	call	_EscribeLCD_c
  1313                           
  1314                           ;Lab5.c: 163: break;
  1315  00230A  0012               	return	
  1316  00230C                     l2609:
  1317  00230C  503A               	movf	imprimirTemperatura@caso^0,w,c
  1318                           
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 4, Range of values is 0 to 3
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte           13     7 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325  00230E  0A00               	xorlw	0	; case 0
  1326  002310  B4D8               	btfsc	status,2,c
  1327  002312  D7D7               	goto	l2599
  1328  002314  0A01               	xorlw	1	; case 1
  1329  002316  B4D8               	btfsc	status,2,c
  1330  002318  D7DE               	goto	l2601
  1331  00231A  0A03               	xorlw	3	; case 2
  1332  00231C  B4D8               	btfsc	status,2,c
  1333  00231E  D7E2               	goto	l2603
  1334  002320  0A01               	xorlw	1	; case 3
  1335  002322  A4D8               	btfss	status,2,c
  1336  002324  0012               	return	
  1337  002326  D7E8               	goto	l2605
  1338  002328                     __end_of_imprimirTemperatura:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _MensajeLCD_Var *****************
  1342 ;; Defined at:
  1343 ;;		line 292 in file "LibLCDXC8.h"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  a               1    5[COMRAM] PTR unsigned char 
  1346 ;;		 -> STR_4(3), STR_3(3), STR_2(6), STR_1(14), 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         1       0       0       0       0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 4
  1365 ;; This function calls:
  1366 ;;		_EscribeLCD_c
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;;		_imprimirTemperatura
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text2
  1374  00292A                     __ptext2:
  1375                           	callstack 0
  1376  00292A                     _MensajeLCD_Var:
  1377                           	callstack 25
  1378                           
  1379                           ;LibLCDXC8.h: 296: while(*a != '\0'){
  1380                           
  1381                           ;incstack = 0
  1382  00292A  D009               	goto	l2149
  1383  00292C                     l2145:
  1384                           
  1385                           ;LibLCDXC8.h: 297: EscribeLCD_c(*a);
  1386  00292C  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1387  002930                     	if	1	;There is more than 1 active tblptr byte
  1388  002930  0E08               	movlw	high __smallconst
  1389  002932  6EF7               	movwf	tblptrh,c
  1390  002934                     	endif
  1391  002934                     	if	0	;tblptru may be non-zero
  1392  002934                     	endif
  1393  002934                     	if	0	;tblptru may be non-zero
  1394  002934                     	endif
  1395  002934  0008               	tblrd		*
  1396  002936  50F5               	movf	tablat,w,c
  1397  002938  EC1B  F015         	call	_EscribeLCD_c
  1398                           
  1399                           ;LibLCDXC8.h: 298: a++;
  1400  00293C  2A06               	incf	MensajeLCD_Var@a^0,f,c
  1401  00293E                     l2149:
  1402  00293E  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1403  002942                     	if	1	;There is more than 1 active tblptr byte
  1404  002942  0E08               	movlw	high __smallconst
  1405  002944  6EF7               	movwf	tblptrh,c
  1406  002946                     	endif
  1407  002946                     	if	0	;tblptru may be non-zero
  1408  002946                     	endif
  1409  002946                     	if	0	;tblptru may be non-zero
  1410  002946                     	endif
  1411  002946  0008               	tblrd		*
  1412  002948  50F5               	movf	tablat,w,c
  1413  00294A  0900               	iorlw	0
  1414  00294C  B4D8               	btfsc	status,2,c
  1415  00294E  0012               	return	
  1416  002950  D7ED               	goto	l2145
  1417  002952                     __end_of_MensajeLCD_Var:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _EscribeLCD_n32 *****************
  1421 ;; Defined at:
  1422 ;;		line 167 in file "LibLCDXC8.h"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  a               4   22[COMRAM] unsigned long 
  1425 ;;  b               1   26[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  diezmil         4   43[COMRAM] unsigned long 
  1428 ;;  cienmil         4   39[COMRAM] unsigned long 
  1429 ;;  millon          4   35[COMRAM] unsigned long 
  1430 ;;  diezmillon      4   31[COMRAM] unsigned long 
  1431 ;;  cienmillon      4   27[COMRAM] unsigned long 
  1432 ;;  centena         2   49[COMRAM] unsigned int 
  1433 ;;  millar          2   47[COMRAM] unsigned int 
  1434 ;;  unidad          1   52[COMRAM] unsigned char 
  1435 ;;  decena          1   51[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1445 ;;      Params:         5       0       0       0       0       0       0       0       0
  1446 ;;      Locals:        26       0       0       0       0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1448 ;;      Totals:        31       0       0       0       0       0       0       0       0
  1449 ;;Total ram usage:       31 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 4
  1452 ;; This function calls:
  1453 ;;		_EscribeLCD_c
  1454 ;;		___lldiv
  1455 ;;		___llmod
  1456 ;; This function is called by:
  1457 ;;		_imprimirTemperatura
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  000862                     __ptext3:
  1463                           	callstack 0
  1464  000862                     _EscribeLCD_n32:
  1465                           	callstack 25
  1466                           
  1467                           ;LibLCDXC8.h: 172: unsigned char decena,unidad;;LibLCDXC8.h: 173: unsigned int centena,m
      +                          illar;;LibLCDXC8.h: 174: unsigned long diezmil,cienmil,millon,diezmillon,cienmillon;;Lib
      +                          LCDXC8.h: 175: LATD2=1;
  1468                           
  1469                           ;incstack = 0
  1470  000862  848C               	bsf	3980,2,c	;volatile
  1471                           
  1472                           ;LibLCDXC8.h: 177: switch(b){
  1473  000864  EF71  F00B         	goto	l2141
  1474  000868                     l2121:
  1475  000868  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1476  00086C  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1477  000870  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1478  000874  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1479  000878  0E0A               	movlw	10
  1480  00087A  6E05               	movwf	___llmod@divisor^0,c
  1481  00087C  0E00               	movlw	0
  1482  00087E  6E06               	movwf	(___llmod@divisor+1)^0,c
  1483  000880  0E00               	movlw	0
  1484  000882  6E07               	movwf	(___llmod@divisor+2)^0,c
  1485  000884  0E00               	movlw	0
  1486  000886  6E08               	movwf	(___llmod@divisor+3)^0,c
  1487  000888  EC2A  F013         	call	___llmod	;wreg free
  1488  00088C  5001               	movf	?___llmod^0,w,c
  1489  00088E  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  1490                           
  1491                           ;LibLCDXC8.h: 179: EscribeLCD_c(unidad+48);
  1492  000890  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  1493  000892  0F30               	addlw	48
  1494  000894  EC1B  F015         	call	_EscribeLCD_c
  1495                           
  1496                           ;LibLCDXC8.h: 180: break;
  1497  000898  0012               	return	
  1498  00089A                     l2123:
  1499  00089A  0E64               	movlw	100
  1500  00089C  6E05               	movwf	___llmod@divisor^0,c
  1501  00089E  0E00               	movlw	0
  1502  0008A0  6E06               	movwf	(___llmod@divisor+1)^0,c
  1503  0008A2  0E00               	movlw	0
  1504  0008A4  6E07               	movwf	(___llmod@divisor+2)^0,c
  1505  0008A6  0E00               	movlw	0
  1506  0008A8  6E08               	movwf	(___llmod@divisor+3)^0,c
  1507  0008AA  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1508  0008AE  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1509  0008B2  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1510  0008B6  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1511  0008BA  EC2A  F013         	call	___llmod	;wreg free
  1512  0008BE  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1513  0008C2  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1514  0008C6  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1515  0008CA  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1516  0008CE  0E0A               	movlw	10
  1517  0008D0  6E0E               	movwf	___lldiv@divisor^0,c
  1518  0008D2  0E00               	movlw	0
  1519  0008D4  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1520  0008D6  0E00               	movlw	0
  1521  0008D8  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1522  0008DA  0E00               	movlw	0
  1523  0008DC  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1524  0008DE  EC39  F012         	call	___lldiv	;wreg free
  1525  0008E2  500A               	movf	?___lldiv^0,w,c
  1526  0008E4  6E34               	movwf	EscribeLCD_n32@decena^0,c
  1527                           
  1528                           ;LibLCDXC8.h: 182: unidad=a%10;
  1529  0008E6  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1530  0008EA  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1531  0008EE  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1532  0008F2  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1533  0008F6  0E0A               	movlw	10
  1534  0008F8  6E05               	movwf	___llmod@divisor^0,c
  1535  0008FA  0E00               	movlw	0
  1536  0008FC  6E06               	movwf	(___llmod@divisor+1)^0,c
  1537  0008FE  0E00               	movlw	0
  1538  000900  6E07               	movwf	(___llmod@divisor+2)^0,c
  1539  000902  0E00               	movlw	0
  1540  000904  6E08               	movwf	(___llmod@divisor+3)^0,c
  1541  000906  EC2A  F013         	call	___llmod	;wreg free
  1542  00090A  5001               	movf	?___llmod^0,w,c
  1543  00090C  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  1544                           
  1545                           ;LibLCDXC8.h: 183: EscribeLCD_c(decena+48);
  1546  00090E  5034               	movf	EscribeLCD_n32@decena^0,w,c
  1547  000910  0F30               	addlw	48
  1548  000912  EC1B  F015         	call	_EscribeLCD_c
  1549                           
  1550                           ;LibLCDXC8.h: 184: EscribeLCD_c(unidad+48);
  1551  000916  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  1552  000918  0F30               	addlw	48
  1553  00091A  EC1B  F015         	call	_EscribeLCD_c
  1554                           
  1555                           ;LibLCDXC8.h: 185: break;
  1556  00091E  0012               	return	
  1557  000920                     l2125:
  1558  000920  0EE8               	movlw	232
  1559  000922  6E05               	movwf	___llmod@divisor^0,c
  1560  000924  0E03               	movlw	3
  1561  000926  6E06               	movwf	(___llmod@divisor+1)^0,c
  1562  000928  0E00               	movlw	0
  1563  00092A  6E07               	movwf	(___llmod@divisor+2)^0,c
  1564  00092C  0E00               	movlw	0
  1565  00092E  6E08               	movwf	(___llmod@divisor+3)^0,c
  1566  000930  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1567  000934  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1568  000938  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1569  00093C  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1570  000940  EC2A  F013         	call	___llmod	;wreg free
  1571  000944  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1572  000948  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1573  00094C  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1574  000950  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1575  000954  0E64               	movlw	100
  1576  000956  6E0E               	movwf	___lldiv@divisor^0,c
  1577  000958  0E00               	movlw	0
  1578  00095A  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1579  00095C  0E00               	movlw	0
  1580  00095E  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1581  000960  0E00               	movlw	0
  1582  000962  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1583  000964  EC39  F012         	call	___lldiv	;wreg free
  1584  000968  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  1585  00096C  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  1586                           
  1587                           ;LibLCDXC8.h: 187: decena=(a%100)/10;
  1588  000970  0E64               	movlw	100
  1589  000972  6E05               	movwf	___llmod@divisor^0,c
  1590  000974  0E00               	movlw	0
  1591  000976  6E06               	movwf	(___llmod@divisor+1)^0,c
  1592  000978  0E00               	movlw	0
  1593  00097A  6E07               	movwf	(___llmod@divisor+2)^0,c
  1594  00097C  0E00               	movlw	0
  1595  00097E  6E08               	movwf	(___llmod@divisor+3)^0,c
  1596  000980  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1597  000984  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1598  000988  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1599  00098C  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1600  000990  EC2A  F013         	call	___llmod	;wreg free
  1601  000994  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1602  000998  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1603  00099C  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1604  0009A0  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1605  0009A4  0E0A               	movlw	10
  1606  0009A6  6E0E               	movwf	___lldiv@divisor^0,c
  1607  0009A8  0E00               	movlw	0
  1608  0009AA  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1609  0009AC  0E00               	movlw	0
  1610  0009AE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1611  0009B0  0E00               	movlw	0
  1612  0009B2  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1613  0009B4  EC39  F012         	call	___lldiv	;wreg free
  1614  0009B8  500A               	movf	?___lldiv^0,w,c
  1615  0009BA  6E34               	movwf	EscribeLCD_n32@decena^0,c
  1616                           
  1617                           ;LibLCDXC8.h: 188: unidad=a%10;
  1618  0009BC  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1619  0009C0  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1620  0009C4  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1621  0009C8  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1622  0009CC  0E0A               	movlw	10
  1623  0009CE  6E05               	movwf	___llmod@divisor^0,c
  1624  0009D0  0E00               	movlw	0
  1625  0009D2  6E06               	movwf	(___llmod@divisor+1)^0,c
  1626  0009D4  0E00               	movlw	0
  1627  0009D6  6E07               	movwf	(___llmod@divisor+2)^0,c
  1628  0009D8  0E00               	movlw	0
  1629  0009DA  6E08               	movwf	(___llmod@divisor+3)^0,c
  1630  0009DC  EC2A  F013         	call	___llmod	;wreg free
  1631  0009E0  5001               	movf	?___llmod^0,w,c
  1632  0009E2  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  1633                           
  1634                           ;LibLCDXC8.h: 189: EscribeLCD_c(centena+48);
  1635  0009E4  5032               	movf	EscribeLCD_n32@centena^0,w,c
  1636  0009E6  0F30               	addlw	48
  1637  0009E8  EC1B  F015         	call	_EscribeLCD_c
  1638                           
  1639                           ;LibLCDXC8.h: 190: EscribeLCD_c(decena+48);
  1640  0009EC  5034               	movf	EscribeLCD_n32@decena^0,w,c
  1641  0009EE  0F30               	addlw	48
  1642  0009F0  EC1B  F015         	call	_EscribeLCD_c
  1643                           
  1644                           ;LibLCDXC8.h: 191: EscribeLCD_c(unidad+48);
  1645  0009F4  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  1646  0009F6  0F30               	addlw	48
  1647  0009F8  EC1B  F015         	call	_EscribeLCD_c
  1648                           
  1649                           ;LibLCDXC8.h: 192: break;
  1650  0009FC  0012               	return	
  1651  0009FE                     l2127:
  1652  0009FE  0E10               	movlw	16
  1653  000A00  6E05               	movwf	___llmod@divisor^0,c
  1654  000A02  0E27               	movlw	39
  1655  000A04  6E06               	movwf	(___llmod@divisor+1)^0,c
  1656  000A06  0E00               	movlw	0
  1657  000A08  6E07               	movwf	(___llmod@divisor+2)^0,c
  1658  000A0A  0E00               	movlw	0
  1659  000A0C  6E08               	movwf	(___llmod@divisor+3)^0,c
  1660  000A0E  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1661  000A12  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1662  000A16  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1663  000A1A  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1664  000A1E  EC2A  F013         	call	___llmod	;wreg free
  1665  000A22  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1666  000A26  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1667  000A2A  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1668  000A2E  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1669  000A32  0EE8               	movlw	232
  1670  000A34  6E0E               	movwf	___lldiv@divisor^0,c
  1671  000A36  0E03               	movlw	3
  1672  000A38  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1673  000A3A  0E00               	movlw	0
  1674  000A3C  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1675  000A3E  0E00               	movlw	0
  1676  000A40  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1677  000A42  EC39  F012         	call	___lldiv	;wreg free
  1678  000A46  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  1679  000A4A  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  1680                           
  1681                           ;LibLCDXC8.h: 194: centena=(a%1000)/100;
  1682  000A4E  0EE8               	movlw	232
  1683  000A50  6E05               	movwf	___llmod@divisor^0,c
  1684  000A52  0E03               	movlw	3
  1685  000A54  6E06               	movwf	(___llmod@divisor+1)^0,c
  1686  000A56  0E00               	movlw	0
  1687  000A58  6E07               	movwf	(___llmod@divisor+2)^0,c
  1688  000A5A  0E00               	movlw	0
  1689  000A5C  6E08               	movwf	(___llmod@divisor+3)^0,c
  1690  000A5E  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1691  000A62  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1692  000A66  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1693  000A6A  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1694  000A6E  EC2A  F013         	call	___llmod	;wreg free
  1695  000A72  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1696  000A76  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1697  000A7A  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1698  000A7E  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1699  000A82  0E64               	movlw	100
  1700  000A84  6E0E               	movwf	___lldiv@divisor^0,c
  1701  000A86  0E00               	movlw	0
  1702  000A88  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1703  000A8A  0E00               	movlw	0
  1704  000A8C  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1705  000A8E  0E00               	movlw	0
  1706  000A90  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1707  000A92  EC39  F012         	call	___lldiv	;wreg free
  1708  000A96  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  1709  000A9A  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  1710                           
  1711                           ;LibLCDXC8.h: 195: decena=(a%100)/10;
  1712  000A9E  0E64               	movlw	100
  1713  000AA0  6E05               	movwf	___llmod@divisor^0,c
  1714  000AA2  0E00               	movlw	0
  1715  000AA4  6E06               	movwf	(___llmod@divisor+1)^0,c
  1716  000AA6  0E00               	movlw	0
  1717  000AA8  6E07               	movwf	(___llmod@divisor+2)^0,c
  1718  000AAA  0E00               	movlw	0
  1719  000AAC  6E08               	movwf	(___llmod@divisor+3)^0,c
  1720  000AAE  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1721  000AB2  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1722  000AB6  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1723  000ABA  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1724  000ABE  EC2A  F013         	call	___llmod	;wreg free
  1725  000AC2  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1726  000AC6  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1727  000ACA  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1728  000ACE  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1729  000AD2  0E0A               	movlw	10
  1730  000AD4  6E0E               	movwf	___lldiv@divisor^0,c
  1731  000AD6  0E00               	movlw	0
  1732  000AD8  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1733  000ADA  0E00               	movlw	0
  1734  000ADC  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1735  000ADE  0E00               	movlw	0
  1736  000AE0  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1737  000AE2  EC39  F012         	call	___lldiv	;wreg free
  1738  000AE6  500A               	movf	?___lldiv^0,w,c
  1739  000AE8  6E34               	movwf	EscribeLCD_n32@decena^0,c
  1740                           
  1741                           ;LibLCDXC8.h: 196: unidad=a%10;
  1742  000AEA  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1743  000AEE  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1744  000AF2  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1745  000AF6  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1746  000AFA  0E0A               	movlw	10
  1747  000AFC  6E05               	movwf	___llmod@divisor^0,c
  1748  000AFE  0E00               	movlw	0
  1749  000B00  6E06               	movwf	(___llmod@divisor+1)^0,c
  1750  000B02  0E00               	movlw	0
  1751  000B04  6E07               	movwf	(___llmod@divisor+2)^0,c
  1752  000B06  0E00               	movlw	0
  1753  000B08  6E08               	movwf	(___llmod@divisor+3)^0,c
  1754  000B0A  EC2A  F013         	call	___llmod	;wreg free
  1755  000B0E  5001               	movf	?___llmod^0,w,c
  1756  000B10  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  1757                           
  1758                           ;LibLCDXC8.h: 197: EscribeLCD_c(millar+48);
  1759  000B12  5030               	movf	EscribeLCD_n32@millar^0,w,c
  1760  000B14  0F30               	addlw	48
  1761  000B16  EC1B  F015         	call	_EscribeLCD_c
  1762                           
  1763                           ;LibLCDXC8.h: 198: EscribeLCD_c(centena+48);
  1764  000B1A  5032               	movf	EscribeLCD_n32@centena^0,w,c
  1765  000B1C  0F30               	addlw	48
  1766  000B1E  EC1B  F015         	call	_EscribeLCD_c
  1767                           
  1768                           ;LibLCDXC8.h: 199: EscribeLCD_c(decena+48);
  1769  000B22  5034               	movf	EscribeLCD_n32@decena^0,w,c
  1770  000B24  0F30               	addlw	48
  1771  000B26  EC1B  F015         	call	_EscribeLCD_c
  1772                           
  1773                           ;LibLCDXC8.h: 200: EscribeLCD_c(unidad+48);
  1774  000B2A  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  1775  000B2C  0F30               	addlw	48
  1776  000B2E  EC1B  F015         	call	_EscribeLCD_c
  1777                           
  1778                           ;LibLCDXC8.h: 201: break;
  1779  000B32  0012               	return	
  1780  000B34                     l2129:
  1781  000B34  0EA0               	movlw	160
  1782  000B36  6E05               	movwf	___llmod@divisor^0,c
  1783  000B38  0E86               	movlw	134
  1784  000B3A  6E06               	movwf	(___llmod@divisor+1)^0,c
  1785  000B3C  0E01               	movlw	1
  1786  000B3E  6E07               	movwf	(___llmod@divisor+2)^0,c
  1787  000B40  0E00               	movlw	0
  1788  000B42  6E08               	movwf	(___llmod@divisor+3)^0,c
  1789  000B44  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1790  000B48  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1791  000B4C  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1792  000B50  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1793  000B54  EC2A  F013         	call	___llmod	;wreg free
  1794  000B58  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1795  000B5C  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1796  000B60  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1797  000B64  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1798  000B68  0E10               	movlw	16
  1799  000B6A  6E0E               	movwf	___lldiv@divisor^0,c
  1800  000B6C  0E27               	movlw	39
  1801  000B6E  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1802  000B70  0E00               	movlw	0
  1803  000B72  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1804  000B74  0E00               	movlw	0
  1805  000B76  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1806  000B78  EC39  F012         	call	___lldiv	;wreg free
  1807  000B7C  C00A  F02C         	movff	?___lldiv,EscribeLCD_n32@diezmil
  1808  000B80  C00B  F02D         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  1809  000B84  C00C  F02E         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  1810  000B88  C00D  F02F         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  1811                           
  1812                           ;LibLCDXC8.h: 203: millar=(a%10000)/1000;
  1813  000B8C  0E10               	movlw	16
  1814  000B8E  6E05               	movwf	___llmod@divisor^0,c
  1815  000B90  0E27               	movlw	39
  1816  000B92  6E06               	movwf	(___llmod@divisor+1)^0,c
  1817  000B94  0E00               	movlw	0
  1818  000B96  6E07               	movwf	(___llmod@divisor+2)^0,c
  1819  000B98  0E00               	movlw	0
  1820  000B9A  6E08               	movwf	(___llmod@divisor+3)^0,c
  1821  000B9C  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1822  000BA0  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1823  000BA4  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1824  000BA8  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1825  000BAC  EC2A  F013         	call	___llmod	;wreg free
  1826  000BB0  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1827  000BB4  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1828  000BB8  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1829  000BBC  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1830  000BC0  0EE8               	movlw	232
  1831  000BC2  6E0E               	movwf	___lldiv@divisor^0,c
  1832  000BC4  0E03               	movlw	3
  1833  000BC6  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1834  000BC8  0E00               	movlw	0
  1835  000BCA  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1836  000BCC  0E00               	movlw	0
  1837  000BCE  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1838  000BD0  EC39  F012         	call	___lldiv	;wreg free
  1839  000BD4  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  1840  000BD8  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  1841                           
  1842                           ;LibLCDXC8.h: 204: centena=(a%1000)/100;
  1843  000BDC  0EE8               	movlw	232
  1844  000BDE  6E05               	movwf	___llmod@divisor^0,c
  1845  000BE0  0E03               	movlw	3
  1846  000BE2  6E06               	movwf	(___llmod@divisor+1)^0,c
  1847  000BE4  0E00               	movlw	0
  1848  000BE6  6E07               	movwf	(___llmod@divisor+2)^0,c
  1849  000BE8  0E00               	movlw	0
  1850  000BEA  6E08               	movwf	(___llmod@divisor+3)^0,c
  1851  000BEC  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1852  000BF0  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1853  000BF4  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1854  000BF8  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1855  000BFC  EC2A  F013         	call	___llmod	;wreg free
  1856  000C00  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1857  000C04  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1858  000C08  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1859  000C0C  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1860  000C10  0E64               	movlw	100
  1861  000C12  6E0E               	movwf	___lldiv@divisor^0,c
  1862  000C14  0E00               	movlw	0
  1863  000C16  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1864  000C18  0E00               	movlw	0
  1865  000C1A  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1866  000C1C  0E00               	movlw	0
  1867  000C1E  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1868  000C20  EC39  F012         	call	___lldiv	;wreg free
  1869  000C24  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  1870  000C28  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  1871                           
  1872                           ;LibLCDXC8.h: 205: decena=(a%100)/10;
  1873  000C2C  0E64               	movlw	100
  1874  000C2E  6E05               	movwf	___llmod@divisor^0,c
  1875  000C30  0E00               	movlw	0
  1876  000C32  6E06               	movwf	(___llmod@divisor+1)^0,c
  1877  000C34  0E00               	movlw	0
  1878  000C36  6E07               	movwf	(___llmod@divisor+2)^0,c
  1879  000C38  0E00               	movlw	0
  1880  000C3A  6E08               	movwf	(___llmod@divisor+3)^0,c
  1881  000C3C  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1882  000C40  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1883  000C44  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1884  000C48  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1885  000C4C  EC2A  F013         	call	___llmod	;wreg free
  1886  000C50  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1887  000C54  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1888  000C58  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1889  000C5C  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1890  000C60  0E0A               	movlw	10
  1891  000C62  6E0E               	movwf	___lldiv@divisor^0,c
  1892  000C64  0E00               	movlw	0
  1893  000C66  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1894  000C68  0E00               	movlw	0
  1895  000C6A  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1896  000C6C  0E00               	movlw	0
  1897  000C6E  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1898  000C70  EC39  F012         	call	___lldiv	;wreg free
  1899  000C74  500A               	movf	?___lldiv^0,w,c
  1900  000C76  6E34               	movwf	EscribeLCD_n32@decena^0,c
  1901                           
  1902                           ;LibLCDXC8.h: 206: unidad=a%10;
  1903  000C78  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1904  000C7C  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1905  000C80  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1906  000C84  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1907  000C88  0E0A               	movlw	10
  1908  000C8A  6E05               	movwf	___llmod@divisor^0,c
  1909  000C8C  0E00               	movlw	0
  1910  000C8E  6E06               	movwf	(___llmod@divisor+1)^0,c
  1911  000C90  0E00               	movlw	0
  1912  000C92  6E07               	movwf	(___llmod@divisor+2)^0,c
  1913  000C94  0E00               	movlw	0
  1914  000C96  6E08               	movwf	(___llmod@divisor+3)^0,c
  1915  000C98  EC2A  F013         	call	___llmod	;wreg free
  1916  000C9C  5001               	movf	?___llmod^0,w,c
  1917  000C9E  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  1918                           
  1919                           ;LibLCDXC8.h: 207: EscribeLCD_c(diezmil+48);
  1920  000CA0  502C               	movf	EscribeLCD_n32@diezmil^0,w,c
  1921  000CA2  0F30               	addlw	48
  1922  000CA4  EC1B  F015         	call	_EscribeLCD_c
  1923                           
  1924                           ;LibLCDXC8.h: 208: EscribeLCD_c(millar+48);
  1925  000CA8  5030               	movf	EscribeLCD_n32@millar^0,w,c
  1926  000CAA  0F30               	addlw	48
  1927  000CAC  EC1B  F015         	call	_EscribeLCD_c
  1928                           
  1929                           ;LibLCDXC8.h: 209: EscribeLCD_c(centena+48);
  1930  000CB0  5032               	movf	EscribeLCD_n32@centena^0,w,c
  1931  000CB2  0F30               	addlw	48
  1932  000CB4  EC1B  F015         	call	_EscribeLCD_c
  1933                           
  1934                           ;LibLCDXC8.h: 210: EscribeLCD_c(decena+48);
  1935  000CB8  5034               	movf	EscribeLCD_n32@decena^0,w,c
  1936  000CBA  0F30               	addlw	48
  1937  000CBC  EC1B  F015         	call	_EscribeLCD_c
  1938                           
  1939                           ;LibLCDXC8.h: 211: EscribeLCD_c(unidad+48);
  1940  000CC0  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  1941  000CC2  0F30               	addlw	48
  1942  000CC4  EC1B  F015         	call	_EscribeLCD_c
  1943                           
  1944                           ;LibLCDXC8.h: 212: break;
  1945  000CC8  0012               	return	
  1946  000CCA                     l2131:
  1947  000CCA  0E40               	movlw	64
  1948  000CCC  6E05               	movwf	___llmod@divisor^0,c
  1949  000CCE  0E42               	movlw	66
  1950  000CD0  6E06               	movwf	(___llmod@divisor+1)^0,c
  1951  000CD2  0E0F               	movlw	15
  1952  000CD4  6E07               	movwf	(___llmod@divisor+2)^0,c
  1953  000CD6  0E00               	movlw	0
  1954  000CD8  6E08               	movwf	(___llmod@divisor+3)^0,c
  1955  000CDA  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1956  000CDE  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1957  000CE2  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1958  000CE6  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1959  000CEA  EC2A  F013         	call	___llmod	;wreg free
  1960  000CEE  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1961  000CF2  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1962  000CF6  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1963  000CFA  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1964  000CFE  0EA0               	movlw	160
  1965  000D00  6E0E               	movwf	___lldiv@divisor^0,c
  1966  000D02  0E86               	movlw	134
  1967  000D04  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1968  000D06  0E01               	movlw	1
  1969  000D08  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1970  000D0A  0E00               	movlw	0
  1971  000D0C  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1972  000D0E  EC39  F012         	call	___lldiv	;wreg free
  1973  000D12  C00A  F028         	movff	?___lldiv,EscribeLCD_n32@cienmil
  1974  000D16  C00B  F029         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  1975  000D1A  C00C  F02A         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  1976  000D1E  C00D  F02B         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  1977                           
  1978                           ;LibLCDXC8.h: 215: diezmil=(a%100000)/10000;
  1979  000D22  0EA0               	movlw	160
  1980  000D24  6E05               	movwf	___llmod@divisor^0,c
  1981  000D26  0E86               	movlw	134
  1982  000D28  6E06               	movwf	(___llmod@divisor+1)^0,c
  1983  000D2A  0E01               	movlw	1
  1984  000D2C  6E07               	movwf	(___llmod@divisor+2)^0,c
  1985  000D2E  0E00               	movlw	0
  1986  000D30  6E08               	movwf	(___llmod@divisor+3)^0,c
  1987  000D32  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  1988  000D36  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  1989  000D3A  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  1990  000D3E  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  1991  000D42  EC2A  F013         	call	___llmod	;wreg free
  1992  000D46  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1993  000D4A  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1994  000D4E  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1995  000D52  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1996  000D56  0E10               	movlw	16
  1997  000D58  6E0E               	movwf	___lldiv@divisor^0,c
  1998  000D5A  0E27               	movlw	39
  1999  000D5C  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2000  000D5E  0E00               	movlw	0
  2001  000D60  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2002  000D62  0E00               	movlw	0
  2003  000D64  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2004  000D66  EC39  F012         	call	___lldiv	;wreg free
  2005  000D6A  C00A  F02C         	movff	?___lldiv,EscribeLCD_n32@diezmil
  2006  000D6E  C00B  F02D         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  2007  000D72  C00C  F02E         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  2008  000D76  C00D  F02F         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  2009                           
  2010                           ;LibLCDXC8.h: 216: millar=(a%10000)/1000;
  2011  000D7A  0E10               	movlw	16
  2012  000D7C  6E05               	movwf	___llmod@divisor^0,c
  2013  000D7E  0E27               	movlw	39
  2014  000D80  6E06               	movwf	(___llmod@divisor+1)^0,c
  2015  000D82  0E00               	movlw	0
  2016  000D84  6E07               	movwf	(___llmod@divisor+2)^0,c
  2017  000D86  0E00               	movlw	0
  2018  000D88  6E08               	movwf	(___llmod@divisor+3)^0,c
  2019  000D8A  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2020  000D8E  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2021  000D92  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2022  000D96  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2023  000D9A  EC2A  F013         	call	___llmod	;wreg free
  2024  000D9E  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2025  000DA2  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2026  000DA6  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2027  000DAA  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2028  000DAE  0EE8               	movlw	232
  2029  000DB0  6E0E               	movwf	___lldiv@divisor^0,c
  2030  000DB2  0E03               	movlw	3
  2031  000DB4  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2032  000DB6  0E00               	movlw	0
  2033  000DB8  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2034  000DBA  0E00               	movlw	0
  2035  000DBC  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2036  000DBE  EC39  F012         	call	___lldiv	;wreg free
  2037  000DC2  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  2038  000DC6  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2039                           
  2040                           ;LibLCDXC8.h: 217: centena=(a%1000)/100;
  2041  000DCA  0EE8               	movlw	232
  2042  000DCC  6E05               	movwf	___llmod@divisor^0,c
  2043  000DCE  0E03               	movlw	3
  2044  000DD0  6E06               	movwf	(___llmod@divisor+1)^0,c
  2045  000DD2  0E00               	movlw	0
  2046  000DD4  6E07               	movwf	(___llmod@divisor+2)^0,c
  2047  000DD6  0E00               	movlw	0
  2048  000DD8  6E08               	movwf	(___llmod@divisor+3)^0,c
  2049  000DDA  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2050  000DDE  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2051  000DE2  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2052  000DE6  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2053  000DEA  EC2A  F013         	call	___llmod	;wreg free
  2054  000DEE  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2055  000DF2  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2056  000DF6  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2057  000DFA  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2058  000DFE  0E64               	movlw	100
  2059  000E00  6E0E               	movwf	___lldiv@divisor^0,c
  2060  000E02  0E00               	movlw	0
  2061  000E04  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2062  000E06  0E00               	movlw	0
  2063  000E08  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2064  000E0A  0E00               	movlw	0
  2065  000E0C  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2066  000E0E  EC39  F012         	call	___lldiv	;wreg free
  2067  000E12  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  2068  000E16  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2069                           
  2070                           ;LibLCDXC8.h: 218: decena=(a%100)/10;
  2071  000E1A  0E64               	movlw	100
  2072  000E1C  6E05               	movwf	___llmod@divisor^0,c
  2073  000E1E  0E00               	movlw	0
  2074  000E20  6E06               	movwf	(___llmod@divisor+1)^0,c
  2075  000E22  0E00               	movlw	0
  2076  000E24  6E07               	movwf	(___llmod@divisor+2)^0,c
  2077  000E26  0E00               	movlw	0
  2078  000E28  6E08               	movwf	(___llmod@divisor+3)^0,c
  2079  000E2A  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2080  000E2E  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2081  000E32  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2082  000E36  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2083  000E3A  EC2A  F013         	call	___llmod	;wreg free
  2084  000E3E  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2085  000E42  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2086  000E46  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2087  000E4A  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2088  000E4E  0E0A               	movlw	10
  2089  000E50  6E0E               	movwf	___lldiv@divisor^0,c
  2090  000E52  0E00               	movlw	0
  2091  000E54  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2092  000E56  0E00               	movlw	0
  2093  000E58  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2094  000E5A  0E00               	movlw	0
  2095  000E5C  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2096  000E5E  EC39  F012         	call	___lldiv	;wreg free
  2097  000E62  500A               	movf	?___lldiv^0,w,c
  2098  000E64  6E34               	movwf	EscribeLCD_n32@decena^0,c
  2099                           
  2100                           ;LibLCDXC8.h: 219: unidad=a%10;
  2101  000E66  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2102  000E6A  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2103  000E6E  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2104  000E72  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2105  000E76  0E0A               	movlw	10
  2106  000E78  6E05               	movwf	___llmod@divisor^0,c
  2107  000E7A  0E00               	movlw	0
  2108  000E7C  6E06               	movwf	(___llmod@divisor+1)^0,c
  2109  000E7E  0E00               	movlw	0
  2110  000E80  6E07               	movwf	(___llmod@divisor+2)^0,c
  2111  000E82  0E00               	movlw	0
  2112  000E84  6E08               	movwf	(___llmod@divisor+3)^0,c
  2113  000E86  EC2A  F013         	call	___llmod	;wreg free
  2114  000E8A  5001               	movf	?___llmod^0,w,c
  2115  000E8C  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  2116                           
  2117                           ;LibLCDXC8.h: 220: EscribeLCD_c(cienmil+48);
  2118  000E8E  5028               	movf	EscribeLCD_n32@cienmil^0,w,c
  2119  000E90  0F30               	addlw	48
  2120  000E92  EC1B  F015         	call	_EscribeLCD_c
  2121                           
  2122                           ;LibLCDXC8.h: 221: EscribeLCD_c(diezmil+48);
  2123  000E96  502C               	movf	EscribeLCD_n32@diezmil^0,w,c
  2124  000E98  0F30               	addlw	48
  2125  000E9A  EC1B  F015         	call	_EscribeLCD_c
  2126                           
  2127                           ;LibLCDXC8.h: 222: EscribeLCD_c(millar+48);
  2128  000E9E  5030               	movf	EscribeLCD_n32@millar^0,w,c
  2129  000EA0  0F30               	addlw	48
  2130  000EA2  EC1B  F015         	call	_EscribeLCD_c
  2131                           
  2132                           ;LibLCDXC8.h: 223: EscribeLCD_c(centena+48);
  2133  000EA6  5032               	movf	EscribeLCD_n32@centena^0,w,c
  2134  000EA8  0F30               	addlw	48
  2135  000EAA  EC1B  F015         	call	_EscribeLCD_c
  2136                           
  2137                           ;LibLCDXC8.h: 224: EscribeLCD_c(decena+48);
  2138  000EAE  5034               	movf	EscribeLCD_n32@decena^0,w,c
  2139  000EB0  0F30               	addlw	48
  2140  000EB2  EC1B  F015         	call	_EscribeLCD_c
  2141                           
  2142                           ;LibLCDXC8.h: 225: EscribeLCD_c(unidad+48);
  2143  000EB6  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  2144  000EB8  0F30               	addlw	48
  2145  000EBA  EC1B  F015         	call	_EscribeLCD_c
  2146                           
  2147                           ;LibLCDXC8.h: 226: break;
  2148  000EBE  0012               	return	
  2149  000EC0                     l2133:
  2150  000EC0  0E80               	movlw	128
  2151  000EC2  6E05               	movwf	___llmod@divisor^0,c
  2152  000EC4  0E96               	movlw	150
  2153  000EC6  6E06               	movwf	(___llmod@divisor+1)^0,c
  2154  000EC8  0E98               	movlw	152
  2155  000ECA  6E07               	movwf	(___llmod@divisor+2)^0,c
  2156  000ECC  0E00               	movlw	0
  2157  000ECE  6E08               	movwf	(___llmod@divisor+3)^0,c
  2158  000ED0  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2159  000ED4  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2160  000ED8  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2161  000EDC  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2162  000EE0  EC2A  F013         	call	___llmod	;wreg free
  2163  000EE4  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2164  000EE8  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2165  000EEC  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2166  000EF0  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2167  000EF4  0E40               	movlw	64
  2168  000EF6  6E0E               	movwf	___lldiv@divisor^0,c
  2169  000EF8  0E42               	movlw	66
  2170  000EFA  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2171  000EFC  0E0F               	movlw	15
  2172  000EFE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2173  000F00  0E00               	movlw	0
  2174  000F02  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2175  000F04  EC39  F012         	call	___lldiv	;wreg free
  2176  000F08  C00A  F024         	movff	?___lldiv,EscribeLCD_n32@millon
  2177  000F0C  C00B  F025         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  2178  000F10  C00C  F026         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  2179  000F14  C00D  F027         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  2180                           
  2181                           ;LibLCDXC8.h: 229: cienmil=(a%1000000)/100000;
  2182  000F18  0E40               	movlw	64
  2183  000F1A  6E05               	movwf	___llmod@divisor^0,c
  2184  000F1C  0E42               	movlw	66
  2185  000F1E  6E06               	movwf	(___llmod@divisor+1)^0,c
  2186  000F20  0E0F               	movlw	15
  2187  000F22  6E07               	movwf	(___llmod@divisor+2)^0,c
  2188  000F24  0E00               	movlw	0
  2189  000F26  6E08               	movwf	(___llmod@divisor+3)^0,c
  2190  000F28  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2191  000F2C  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2192  000F30  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2193  000F34  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2194  000F38  EC2A  F013         	call	___llmod	;wreg free
  2195  000F3C  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2196  000F40  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2197  000F44  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2198  000F48  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2199  000F4C  0EA0               	movlw	160
  2200  000F4E  6E0E               	movwf	___lldiv@divisor^0,c
  2201  000F50  0E86               	movlw	134
  2202  000F52  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2203  000F54  0E01               	movlw	1
  2204  000F56  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2205  000F58  0E00               	movlw	0
  2206  000F5A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2207  000F5C  EC39  F012         	call	___lldiv	;wreg free
  2208  000F60  C00A  F028         	movff	?___lldiv,EscribeLCD_n32@cienmil
  2209  000F64  C00B  F029         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  2210  000F68  C00C  F02A         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  2211  000F6C  C00D  F02B         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  2212                           
  2213                           ;LibLCDXC8.h: 230: diezmil=(a%100000)/10000;
  2214  000F70  0EA0               	movlw	160
  2215  000F72  6E05               	movwf	___llmod@divisor^0,c
  2216  000F74  0E86               	movlw	134
  2217  000F76  6E06               	movwf	(___llmod@divisor+1)^0,c
  2218  000F78  0E01               	movlw	1
  2219  000F7A  6E07               	movwf	(___llmod@divisor+2)^0,c
  2220  000F7C  0E00               	movlw	0
  2221  000F7E  6E08               	movwf	(___llmod@divisor+3)^0,c
  2222  000F80  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2223  000F84  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2224  000F88  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2225  000F8C  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2226  000F90  EC2A  F013         	call	___llmod	;wreg free
  2227  000F94  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2228  000F98  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2229  000F9C  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2230  000FA0  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2231  000FA4  0E10               	movlw	16
  2232  000FA6  6E0E               	movwf	___lldiv@divisor^0,c
  2233  000FA8  0E27               	movlw	39
  2234  000FAA  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2235  000FAC  0E00               	movlw	0
  2236  000FAE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2237  000FB0  0E00               	movlw	0
  2238  000FB2  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2239  000FB4  EC39  F012         	call	___lldiv	;wreg free
  2240  000FB8  C00A  F02C         	movff	?___lldiv,EscribeLCD_n32@diezmil
  2241  000FBC  C00B  F02D         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  2242  000FC0  C00C  F02E         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  2243  000FC4  C00D  F02F         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  2244                           
  2245                           ;LibLCDXC8.h: 231: millar=(a%10000)/1000;
  2246  000FC8  0E10               	movlw	16
  2247  000FCA  6E05               	movwf	___llmod@divisor^0,c
  2248  000FCC  0E27               	movlw	39
  2249  000FCE  6E06               	movwf	(___llmod@divisor+1)^0,c
  2250  000FD0  0E00               	movlw	0
  2251  000FD2  6E07               	movwf	(___llmod@divisor+2)^0,c
  2252  000FD4  0E00               	movlw	0
  2253  000FD6  6E08               	movwf	(___llmod@divisor+3)^0,c
  2254  000FD8  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2255  000FDC  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2256  000FE0  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2257  000FE4  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2258  000FE8  EC2A  F013         	call	___llmod	;wreg free
  2259  000FEC  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2260  000FF0  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2261  000FF4  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2262  000FF8  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2263  000FFC  0EE8               	movlw	232
  2264  000FFE  6E0E               	movwf	___lldiv@divisor^0,c
  2265  001000  0E03               	movlw	3
  2266  001002  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2267  001004  0E00               	movlw	0
  2268  001006  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2269  001008  0E00               	movlw	0
  2270  00100A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2271  00100C  EC39  F012         	call	___lldiv	;wreg free
  2272  001010  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  2273  001014  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2274                           
  2275                           ;LibLCDXC8.h: 232: centena=(a%1000)/100;
  2276  001018  0EE8               	movlw	232
  2277  00101A  6E05               	movwf	___llmod@divisor^0,c
  2278  00101C  0E03               	movlw	3
  2279  00101E  6E06               	movwf	(___llmod@divisor+1)^0,c
  2280  001020  0E00               	movlw	0
  2281  001022  6E07               	movwf	(___llmod@divisor+2)^0,c
  2282  001024  0E00               	movlw	0
  2283  001026  6E08               	movwf	(___llmod@divisor+3)^0,c
  2284  001028  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2285  00102C  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2286  001030  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2287  001034  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2288  001038  EC2A  F013         	call	___llmod	;wreg free
  2289  00103C  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2290  001040  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2291  001044  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2292  001048  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2293  00104C  0E64               	movlw	100
  2294  00104E  6E0E               	movwf	___lldiv@divisor^0,c
  2295  001050  0E00               	movlw	0
  2296  001052  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2297  001054  0E00               	movlw	0
  2298  001056  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2299  001058  0E00               	movlw	0
  2300  00105A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2301  00105C  EC39  F012         	call	___lldiv	;wreg free
  2302  001060  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  2303  001064  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2304                           
  2305                           ;LibLCDXC8.h: 233: decena=(a%100)/10;
  2306  001068  0E64               	movlw	100
  2307  00106A  6E05               	movwf	___llmod@divisor^0,c
  2308  00106C  0E00               	movlw	0
  2309  00106E  6E06               	movwf	(___llmod@divisor+1)^0,c
  2310  001070  0E00               	movlw	0
  2311  001072  6E07               	movwf	(___llmod@divisor+2)^0,c
  2312  001074  0E00               	movlw	0
  2313  001076  6E08               	movwf	(___llmod@divisor+3)^0,c
  2314  001078  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2315  00107C  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2316  001080  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2317  001084  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2318  001088  EC2A  F013         	call	___llmod	;wreg free
  2319  00108C  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2320  001090  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2321  001094  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2322  001098  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2323  00109C  0E0A               	movlw	10
  2324  00109E  6E0E               	movwf	___lldiv@divisor^0,c
  2325  0010A0  0E00               	movlw	0
  2326  0010A2  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2327  0010A4  0E00               	movlw	0
  2328  0010A6  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2329  0010A8  0E00               	movlw	0
  2330  0010AA  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2331  0010AC  EC39  F012         	call	___lldiv	;wreg free
  2332  0010B0  500A               	movf	?___lldiv^0,w,c
  2333  0010B2  6E34               	movwf	EscribeLCD_n32@decena^0,c
  2334                           
  2335                           ;LibLCDXC8.h: 234: unidad=a%10;
  2336  0010B4  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2337  0010B8  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2338  0010BC  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2339  0010C0  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2340  0010C4  0E0A               	movlw	10
  2341  0010C6  6E05               	movwf	___llmod@divisor^0,c
  2342  0010C8  0E00               	movlw	0
  2343  0010CA  6E06               	movwf	(___llmod@divisor+1)^0,c
  2344  0010CC  0E00               	movlw	0
  2345  0010CE  6E07               	movwf	(___llmod@divisor+2)^0,c
  2346  0010D0  0E00               	movlw	0
  2347  0010D2  6E08               	movwf	(___llmod@divisor+3)^0,c
  2348  0010D4  EC2A  F013         	call	___llmod	;wreg free
  2349  0010D8  5001               	movf	?___llmod^0,w,c
  2350  0010DA  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  2351                           
  2352                           ;LibLCDXC8.h: 235: EscribeLCD_c(millon+48);
  2353  0010DC  5024               	movf	EscribeLCD_n32@millon^0,w,c
  2354  0010DE  0F30               	addlw	48
  2355  0010E0  EC1B  F015         	call	_EscribeLCD_c
  2356                           
  2357                           ;LibLCDXC8.h: 236: EscribeLCD_c(cienmil+48);
  2358  0010E4  5028               	movf	EscribeLCD_n32@cienmil^0,w,c
  2359  0010E6  0F30               	addlw	48
  2360  0010E8  EC1B  F015         	call	_EscribeLCD_c
  2361                           
  2362                           ;LibLCDXC8.h: 237: EscribeLCD_c(diezmil+48);
  2363  0010EC  502C               	movf	EscribeLCD_n32@diezmil^0,w,c
  2364  0010EE  0F30               	addlw	48
  2365  0010F0  EC1B  F015         	call	_EscribeLCD_c
  2366                           
  2367                           ;LibLCDXC8.h: 238: EscribeLCD_c(millar+48);
  2368  0010F4  5030               	movf	EscribeLCD_n32@millar^0,w,c
  2369  0010F6  0F30               	addlw	48
  2370  0010F8  EC1B  F015         	call	_EscribeLCD_c
  2371                           
  2372                           ;LibLCDXC8.h: 239: EscribeLCD_c(centena+48);
  2373  0010FC  5032               	movf	EscribeLCD_n32@centena^0,w,c
  2374  0010FE  0F30               	addlw	48
  2375  001100  EC1B  F015         	call	_EscribeLCD_c
  2376                           
  2377                           ;LibLCDXC8.h: 240: EscribeLCD_c(decena+48);
  2378  001104  5034               	movf	EscribeLCD_n32@decena^0,w,c
  2379  001106  0F30               	addlw	48
  2380  001108  EC1B  F015         	call	_EscribeLCD_c
  2381                           
  2382                           ;LibLCDXC8.h: 241: EscribeLCD_c(unidad+48);
  2383  00110C  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  2384  00110E  0F30               	addlw	48
  2385  001110  EC1B  F015         	call	_EscribeLCD_c
  2386                           
  2387                           ;LibLCDXC8.h: 242: break;
  2388  001114  0012               	return	
  2389  001116                     l2135:
  2390  001116  0E00               	movlw	0
  2391  001118  6E05               	movwf	___llmod@divisor^0,c
  2392  00111A  0EE1               	movlw	225
  2393  00111C  6E06               	movwf	(___llmod@divisor+1)^0,c
  2394  00111E  0EF5               	movlw	245
  2395  001120  6E07               	movwf	(___llmod@divisor+2)^0,c
  2396  001122  0E05               	movlw	5
  2397  001124  6E08               	movwf	(___llmod@divisor+3)^0,c
  2398  001126  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2399  00112A  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2400  00112E  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2401  001132  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2402  001136  EC2A  F013         	call	___llmod	;wreg free
  2403  00113A  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2404  00113E  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2405  001142  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2406  001146  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2407  00114A  0E80               	movlw	128
  2408  00114C  6E0E               	movwf	___lldiv@divisor^0,c
  2409  00114E  0E96               	movlw	150
  2410  001150  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2411  001152  0E98               	movlw	152
  2412  001154  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2413  001156  0E00               	movlw	0
  2414  001158  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2415  00115A  EC39  F012         	call	___lldiv	;wreg free
  2416  00115E  C00A  F020         	movff	?___lldiv,EscribeLCD_n32@diezmillon
  2417  001162  C00B  F021         	movff	?___lldiv+1,EscribeLCD_n32@diezmillon+1
  2418  001166  C00C  F022         	movff	?___lldiv+2,EscribeLCD_n32@diezmillon+2
  2419  00116A  C00D  F023         	movff	?___lldiv+3,EscribeLCD_n32@diezmillon+3
  2420                           
  2421                           ;LibLCDXC8.h: 246: millon=(a%10000000)/1000000;
  2422  00116E  0E80               	movlw	128
  2423  001170  6E05               	movwf	___llmod@divisor^0,c
  2424  001172  0E96               	movlw	150
  2425  001174  6E06               	movwf	(___llmod@divisor+1)^0,c
  2426  001176  0E98               	movlw	152
  2427  001178  6E07               	movwf	(___llmod@divisor+2)^0,c
  2428  00117A  0E00               	movlw	0
  2429  00117C  6E08               	movwf	(___llmod@divisor+3)^0,c
  2430  00117E  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2431  001182  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2432  001186  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2433  00118A  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2434  00118E  EC2A  F013         	call	___llmod	;wreg free
  2435  001192  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2436  001196  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2437  00119A  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2438  00119E  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2439  0011A2  0E40               	movlw	64
  2440  0011A4  6E0E               	movwf	___lldiv@divisor^0,c
  2441  0011A6  0E42               	movlw	66
  2442  0011A8  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2443  0011AA  0E0F               	movlw	15
  2444  0011AC  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2445  0011AE  0E00               	movlw	0
  2446  0011B0  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2447  0011B2  EC39  F012         	call	___lldiv	;wreg free
  2448  0011B6  C00A  F024         	movff	?___lldiv,EscribeLCD_n32@millon
  2449  0011BA  C00B  F025         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  2450  0011BE  C00C  F026         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  2451  0011C2  C00D  F027         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  2452                           
  2453                           ;LibLCDXC8.h: 247: cienmil=(a%1000000)/100000;
  2454  0011C6  0E40               	movlw	64
  2455  0011C8  6E05               	movwf	___llmod@divisor^0,c
  2456  0011CA  0E42               	movlw	66
  2457  0011CC  6E06               	movwf	(___llmod@divisor+1)^0,c
  2458  0011CE  0E0F               	movlw	15
  2459  0011D0  6E07               	movwf	(___llmod@divisor+2)^0,c
  2460  0011D2  0E00               	movlw	0
  2461  0011D4  6E08               	movwf	(___llmod@divisor+3)^0,c
  2462  0011D6  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2463  0011DA  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2464  0011DE  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2465  0011E2  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2466  0011E6  EC2A  F013         	call	___llmod	;wreg free
  2467  0011EA  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2468  0011EE  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2469  0011F2  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2470  0011F6  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2471  0011FA  0EA0               	movlw	160
  2472  0011FC  6E0E               	movwf	___lldiv@divisor^0,c
  2473  0011FE  0E86               	movlw	134
  2474  001200  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2475  001202  0E01               	movlw	1
  2476  001204  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2477  001206  0E00               	movlw	0
  2478  001208  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2479  00120A  EC39  F012         	call	___lldiv	;wreg free
  2480  00120E  C00A  F028         	movff	?___lldiv,EscribeLCD_n32@cienmil
  2481  001212  C00B  F029         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  2482  001216  C00C  F02A         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  2483  00121A  C00D  F02B         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  2484                           
  2485                           ;LibLCDXC8.h: 248: diezmil=(a%100000)/10000;
  2486  00121E  0EA0               	movlw	160
  2487  001220  6E05               	movwf	___llmod@divisor^0,c
  2488  001222  0E86               	movlw	134
  2489  001224  6E06               	movwf	(___llmod@divisor+1)^0,c
  2490  001226  0E01               	movlw	1
  2491  001228  6E07               	movwf	(___llmod@divisor+2)^0,c
  2492  00122A  0E00               	movlw	0
  2493  00122C  6E08               	movwf	(___llmod@divisor+3)^0,c
  2494  00122E  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2495  001232  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2496  001236  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2497  00123A  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2498  00123E  EC2A  F013         	call	___llmod	;wreg free
  2499  001242  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2500  001246  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2501  00124A  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2502  00124E  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2503  001252  0E10               	movlw	16
  2504  001254  6E0E               	movwf	___lldiv@divisor^0,c
  2505  001256  0E27               	movlw	39
  2506  001258  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2507  00125A  0E00               	movlw	0
  2508  00125C  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2509  00125E  0E00               	movlw	0
  2510  001260  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2511  001262  EC39  F012         	call	___lldiv	;wreg free
  2512  001266  C00A  F02C         	movff	?___lldiv,EscribeLCD_n32@diezmil
  2513  00126A  C00B  F02D         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  2514  00126E  C00C  F02E         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  2515  001272  C00D  F02F         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  2516                           
  2517                           ;LibLCDXC8.h: 249: millar=(a%10000)/1000;
  2518  001276  0E10               	movlw	16
  2519  001278  6E05               	movwf	___llmod@divisor^0,c
  2520  00127A  0E27               	movlw	39
  2521  00127C  6E06               	movwf	(___llmod@divisor+1)^0,c
  2522  00127E  0E00               	movlw	0
  2523  001280  6E07               	movwf	(___llmod@divisor+2)^0,c
  2524  001282  0E00               	movlw	0
  2525  001284  6E08               	movwf	(___llmod@divisor+3)^0,c
  2526  001286  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2527  00128A  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2528  00128E  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2529  001292  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2530  001296  EC2A  F013         	call	___llmod	;wreg free
  2531  00129A  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2532  00129E  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2533  0012A2  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2534  0012A6  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2535  0012AA  0EE8               	movlw	232
  2536  0012AC  6E0E               	movwf	___lldiv@divisor^0,c
  2537  0012AE  0E03               	movlw	3
  2538  0012B0  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2539  0012B2  0E00               	movlw	0
  2540  0012B4  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2541  0012B6  0E00               	movlw	0
  2542  0012B8  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2543  0012BA  EC39  F012         	call	___lldiv	;wreg free
  2544  0012BE  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  2545  0012C2  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2546                           
  2547                           ;LibLCDXC8.h: 250: centena=(a%1000)/100;
  2548  0012C6  0EE8               	movlw	232
  2549  0012C8  6E05               	movwf	___llmod@divisor^0,c
  2550  0012CA  0E03               	movlw	3
  2551  0012CC  6E06               	movwf	(___llmod@divisor+1)^0,c
  2552  0012CE  0E00               	movlw	0
  2553  0012D0  6E07               	movwf	(___llmod@divisor+2)^0,c
  2554  0012D2  0E00               	movlw	0
  2555  0012D4  6E08               	movwf	(___llmod@divisor+3)^0,c
  2556  0012D6  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2557  0012DA  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2558  0012DE  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2559  0012E2  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2560  0012E6  EC2A  F013         	call	___llmod	;wreg free
  2561  0012EA  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2562  0012EE  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2563  0012F2  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2564  0012F6  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2565  0012FA  0E64               	movlw	100
  2566  0012FC  6E0E               	movwf	___lldiv@divisor^0,c
  2567  0012FE  0E00               	movlw	0
  2568  001300  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2569  001302  0E00               	movlw	0
  2570  001304  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2571  001306  0E00               	movlw	0
  2572  001308  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2573  00130A  EC39  F012         	call	___lldiv	;wreg free
  2574  00130E  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  2575  001312  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2576                           
  2577                           ;LibLCDXC8.h: 251: decena=(a%100)/10;
  2578  001316  0E64               	movlw	100
  2579  001318  6E05               	movwf	___llmod@divisor^0,c
  2580  00131A  0E00               	movlw	0
  2581  00131C  6E06               	movwf	(___llmod@divisor+1)^0,c
  2582  00131E  0E00               	movlw	0
  2583  001320  6E07               	movwf	(___llmod@divisor+2)^0,c
  2584  001322  0E00               	movlw	0
  2585  001324  6E08               	movwf	(___llmod@divisor+3)^0,c
  2586  001326  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2587  00132A  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2588  00132E  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2589  001332  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2590  001336  EC2A  F013         	call	___llmod	;wreg free
  2591  00133A  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2592  00133E  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2593  001342  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2594  001346  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2595  00134A  0E0A               	movlw	10
  2596  00134C  6E0E               	movwf	___lldiv@divisor^0,c
  2597  00134E  0E00               	movlw	0
  2598  001350  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2599  001352  0E00               	movlw	0
  2600  001354  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2601  001356  0E00               	movlw	0
  2602  001358  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2603  00135A  EC39  F012         	call	___lldiv	;wreg free
  2604  00135E  500A               	movf	?___lldiv^0,w,c
  2605  001360  6E34               	movwf	EscribeLCD_n32@decena^0,c
  2606                           
  2607                           ;LibLCDXC8.h: 252: unidad=a%10;
  2608  001362  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2609  001366  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2610  00136A  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2611  00136E  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2612  001372  0E0A               	movlw	10
  2613  001374  6E05               	movwf	___llmod@divisor^0,c
  2614  001376  0E00               	movlw	0
  2615  001378  6E06               	movwf	(___llmod@divisor+1)^0,c
  2616  00137A  0E00               	movlw	0
  2617  00137C  6E07               	movwf	(___llmod@divisor+2)^0,c
  2618  00137E  0E00               	movlw	0
  2619  001380  6E08               	movwf	(___llmod@divisor+3)^0,c
  2620  001382  EC2A  F013         	call	___llmod	;wreg free
  2621  001386  5001               	movf	?___llmod^0,w,c
  2622  001388  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  2623                           
  2624                           ;LibLCDXC8.h: 253: EscribeLCD_c(diezmillon+48);
  2625  00138A  5020               	movf	EscribeLCD_n32@diezmillon^0,w,c
  2626  00138C  0F30               	addlw	48
  2627  00138E  EC1B  F015         	call	_EscribeLCD_c
  2628                           
  2629                           ;LibLCDXC8.h: 254: EscribeLCD_c(millon+48);
  2630  001392  5024               	movf	EscribeLCD_n32@millon^0,w,c
  2631  001394  0F30               	addlw	48
  2632  001396  EC1B  F015         	call	_EscribeLCD_c
  2633                           
  2634                           ;LibLCDXC8.h: 255: EscribeLCD_c(cienmil+48);
  2635  00139A  5028               	movf	EscribeLCD_n32@cienmil^0,w,c
  2636  00139C  0F30               	addlw	48
  2637  00139E  EC1B  F015         	call	_EscribeLCD_c
  2638                           
  2639                           ;LibLCDXC8.h: 256: EscribeLCD_c(diezmil+48);
  2640  0013A2  502C               	movf	EscribeLCD_n32@diezmil^0,w,c
  2641  0013A4  0F30               	addlw	48
  2642  0013A6  EC1B  F015         	call	_EscribeLCD_c
  2643                           
  2644                           ;LibLCDXC8.h: 257: EscribeLCD_c(millar+48);
  2645  0013AA  5030               	movf	EscribeLCD_n32@millar^0,w,c
  2646  0013AC  0F30               	addlw	48
  2647  0013AE  EC1B  F015         	call	_EscribeLCD_c
  2648                           
  2649                           ;LibLCDXC8.h: 258: EscribeLCD_c(centena+48);
  2650  0013B2  5032               	movf	EscribeLCD_n32@centena^0,w,c
  2651  0013B4  0F30               	addlw	48
  2652  0013B6  EC1B  F015         	call	_EscribeLCD_c
  2653                           
  2654                           ;LibLCDXC8.h: 259: EscribeLCD_c(decena+48);
  2655  0013BA  5034               	movf	EscribeLCD_n32@decena^0,w,c
  2656  0013BC  0F30               	addlw	48
  2657  0013BE  EC1B  F015         	call	_EscribeLCD_c
  2658                           
  2659                           ;LibLCDXC8.h: 260: EscribeLCD_c(unidad+48);
  2660  0013C2  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  2661  0013C4  0F30               	addlw	48
  2662  0013C6  EC1B  F015         	call	_EscribeLCD_c
  2663                           
  2664                           ;LibLCDXC8.h: 261: break;
  2665  0013CA  0012               	return	
  2666  0013CC                     l2137:
  2667  0013CC  0E00               	movlw	0
  2668  0013CE  6E05               	movwf	___llmod@divisor^0,c
  2669  0013D0  0ECA               	movlw	202
  2670  0013D2  6E06               	movwf	(___llmod@divisor+1)^0,c
  2671  0013D4  0E9A               	movlw	154
  2672  0013D6  6E07               	movwf	(___llmod@divisor+2)^0,c
  2673  0013D8  0E3B               	movlw	59
  2674  0013DA  6E08               	movwf	(___llmod@divisor+3)^0,c
  2675  0013DC  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2676  0013E0  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2677  0013E4  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2678  0013E8  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2679  0013EC  EC2A  F013         	call	___llmod	;wreg free
  2680  0013F0  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2681  0013F4  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2682  0013F8  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2683  0013FC  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2684  001400  0E00               	movlw	0
  2685  001402  6E0E               	movwf	___lldiv@divisor^0,c
  2686  001404  0EE1               	movlw	225
  2687  001406  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2688  001408  0EF5               	movlw	245
  2689  00140A  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2690  00140C  0E05               	movlw	5
  2691  00140E  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2692  001410  EC39  F012         	call	___lldiv	;wreg free
  2693  001414  C00A  F01C         	movff	?___lldiv,EscribeLCD_n32@cienmillon
  2694  001418  C00B  F01D         	movff	?___lldiv+1,EscribeLCD_n32@cienmillon+1
  2695  00141C  C00C  F01E         	movff	?___lldiv+2,EscribeLCD_n32@cienmillon+2
  2696  001420  C00D  F01F         	movff	?___lldiv+3,EscribeLCD_n32@cienmillon+3
  2697                           
  2698                           ;LibLCDXC8.h: 264: diezmillon=(a%100000000)/10000000;
  2699  001424  0E00               	movlw	0
  2700  001426  6E05               	movwf	___llmod@divisor^0,c
  2701  001428  0EE1               	movlw	225
  2702  00142A  6E06               	movwf	(___llmod@divisor+1)^0,c
  2703  00142C  0EF5               	movlw	245
  2704  00142E  6E07               	movwf	(___llmod@divisor+2)^0,c
  2705  001430  0E05               	movlw	5
  2706  001432  6E08               	movwf	(___llmod@divisor+3)^0,c
  2707  001434  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2708  001438  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2709  00143C  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2710  001440  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2711  001444  EC2A  F013         	call	___llmod	;wreg free
  2712  001448  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2713  00144C  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2714  001450  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2715  001454  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2716  001458  0E80               	movlw	128
  2717  00145A  6E0E               	movwf	___lldiv@divisor^0,c
  2718  00145C  0E96               	movlw	150
  2719  00145E  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2720  001460  0E98               	movlw	152
  2721  001462  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2722  001464  0E00               	movlw	0
  2723  001466  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2724  001468  EC39  F012         	call	___lldiv	;wreg free
  2725  00146C  C00A  F020         	movff	?___lldiv,EscribeLCD_n32@diezmillon
  2726  001470  C00B  F021         	movff	?___lldiv+1,EscribeLCD_n32@diezmillon+1
  2727  001474  C00C  F022         	movff	?___lldiv+2,EscribeLCD_n32@diezmillon+2
  2728  001478  C00D  F023         	movff	?___lldiv+3,EscribeLCD_n32@diezmillon+3
  2729                           
  2730                           ;LibLCDXC8.h: 265: millon=(a%10000000)/1000000;
  2731  00147C  0E80               	movlw	128
  2732  00147E  6E05               	movwf	___llmod@divisor^0,c
  2733  001480  0E96               	movlw	150
  2734  001482  6E06               	movwf	(___llmod@divisor+1)^0,c
  2735  001484  0E98               	movlw	152
  2736  001486  6E07               	movwf	(___llmod@divisor+2)^0,c
  2737  001488  0E00               	movlw	0
  2738  00148A  6E08               	movwf	(___llmod@divisor+3)^0,c
  2739  00148C  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2740  001490  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2741  001494  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2742  001498  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2743  00149C  EC2A  F013         	call	___llmod	;wreg free
  2744  0014A0  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2745  0014A4  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2746  0014A8  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2747  0014AC  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2748  0014B0  0E40               	movlw	64
  2749  0014B2  6E0E               	movwf	___lldiv@divisor^0,c
  2750  0014B4  0E42               	movlw	66
  2751  0014B6  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2752  0014B8  0E0F               	movlw	15
  2753  0014BA  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2754  0014BC  0E00               	movlw	0
  2755  0014BE  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2756  0014C0  EC39  F012         	call	___lldiv	;wreg free
  2757  0014C4  C00A  F024         	movff	?___lldiv,EscribeLCD_n32@millon
  2758  0014C8  C00B  F025         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  2759  0014CC  C00C  F026         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  2760  0014D0  C00D  F027         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  2761                           
  2762                           ;LibLCDXC8.h: 266: cienmil=(a%1000000)/100000;
  2763  0014D4  0E40               	movlw	64
  2764  0014D6  6E05               	movwf	___llmod@divisor^0,c
  2765  0014D8  0E42               	movlw	66
  2766  0014DA  6E06               	movwf	(___llmod@divisor+1)^0,c
  2767  0014DC  0E0F               	movlw	15
  2768  0014DE  6E07               	movwf	(___llmod@divisor+2)^0,c
  2769  0014E0  0E00               	movlw	0
  2770  0014E2  6E08               	movwf	(___llmod@divisor+3)^0,c
  2771  0014E4  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2772  0014E8  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2773  0014EC  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2774  0014F0  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2775  0014F4  EC2A  F013         	call	___llmod	;wreg free
  2776  0014F8  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2777  0014FC  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2778  001500  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2779  001504  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2780  001508  0EA0               	movlw	160
  2781  00150A  6E0E               	movwf	___lldiv@divisor^0,c
  2782  00150C  0E86               	movlw	134
  2783  00150E  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2784  001510  0E01               	movlw	1
  2785  001512  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2786  001514  0E00               	movlw	0
  2787  001516  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2788  001518  EC39  F012         	call	___lldiv	;wreg free
  2789  00151C  C00A  F028         	movff	?___lldiv,EscribeLCD_n32@cienmil
  2790  001520  C00B  F029         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  2791  001524  C00C  F02A         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  2792  001528  C00D  F02B         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  2793                           
  2794                           ;LibLCDXC8.h: 267: diezmil=(a%100000)/10000;
  2795  00152C  0EA0               	movlw	160
  2796  00152E  6E05               	movwf	___llmod@divisor^0,c
  2797  001530  0E86               	movlw	134
  2798  001532  6E06               	movwf	(___llmod@divisor+1)^0,c
  2799  001534  0E01               	movlw	1
  2800  001536  6E07               	movwf	(___llmod@divisor+2)^0,c
  2801  001538  0E00               	movlw	0
  2802  00153A  6E08               	movwf	(___llmod@divisor+3)^0,c
  2803  00153C  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2804  001540  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2805  001544  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2806  001548  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2807  00154C  EC2A  F013         	call	___llmod	;wreg free
  2808  001550  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2809  001554  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2810  001558  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2811  00155C  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2812  001560  0E10               	movlw	16
  2813  001562  6E0E               	movwf	___lldiv@divisor^0,c
  2814  001564  0E27               	movlw	39
  2815  001566  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2816  001568  0E00               	movlw	0
  2817  00156A  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2818  00156C  0E00               	movlw	0
  2819  00156E  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2820  001570  EC39  F012         	call	___lldiv	;wreg free
  2821  001574  C00A  F02C         	movff	?___lldiv,EscribeLCD_n32@diezmil
  2822  001578  C00B  F02D         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  2823  00157C  C00C  F02E         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  2824  001580  C00D  F02F         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  2825                           
  2826                           ;LibLCDXC8.h: 268: millar=(a%10000)/1000;
  2827  001584  0E10               	movlw	16
  2828  001586  6E05               	movwf	___llmod@divisor^0,c
  2829  001588  0E27               	movlw	39
  2830  00158A  6E06               	movwf	(___llmod@divisor+1)^0,c
  2831  00158C  0E00               	movlw	0
  2832  00158E  6E07               	movwf	(___llmod@divisor+2)^0,c
  2833  001590  0E00               	movlw	0
  2834  001592  6E08               	movwf	(___llmod@divisor+3)^0,c
  2835  001594  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2836  001598  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2837  00159C  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2838  0015A0  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2839  0015A4  EC2A  F013         	call	___llmod	;wreg free
  2840  0015A8  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2841  0015AC  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2842  0015B0  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2843  0015B4  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2844  0015B8  0EE8               	movlw	232
  2845  0015BA  6E0E               	movwf	___lldiv@divisor^0,c
  2846  0015BC  0E03               	movlw	3
  2847  0015BE  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2848  0015C0  0E00               	movlw	0
  2849  0015C2  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2850  0015C4  0E00               	movlw	0
  2851  0015C6  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2852  0015C8  EC39  F012         	call	___lldiv	;wreg free
  2853  0015CC  C00A  F030         	movff	?___lldiv,EscribeLCD_n32@millar
  2854  0015D0  C00B  F031         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2855                           
  2856                           ;LibLCDXC8.h: 269: centena=(a%1000)/100;
  2857  0015D4  0EE8               	movlw	232
  2858  0015D6  6E05               	movwf	___llmod@divisor^0,c
  2859  0015D8  0E03               	movlw	3
  2860  0015DA  6E06               	movwf	(___llmod@divisor+1)^0,c
  2861  0015DC  0E00               	movlw	0
  2862  0015DE  6E07               	movwf	(___llmod@divisor+2)^0,c
  2863  0015E0  0E00               	movlw	0
  2864  0015E2  6E08               	movwf	(___llmod@divisor+3)^0,c
  2865  0015E4  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2866  0015E8  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2867  0015EC  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2868  0015F0  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2869  0015F4  EC2A  F013         	call	___llmod	;wreg free
  2870  0015F8  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2871  0015FC  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2872  001600  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2873  001604  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2874  001608  0E64               	movlw	100
  2875  00160A  6E0E               	movwf	___lldiv@divisor^0,c
  2876  00160C  0E00               	movlw	0
  2877  00160E  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2878  001610  0E00               	movlw	0
  2879  001612  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2880  001614  0E00               	movlw	0
  2881  001616  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2882  001618  EC39  F012         	call	___lldiv	;wreg free
  2883  00161C  C00A  F032         	movff	?___lldiv,EscribeLCD_n32@centena
  2884  001620  C00B  F033         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2885                           
  2886                           ;LibLCDXC8.h: 270: decena=(a%100)/10;
  2887  001624  0E64               	movlw	100
  2888  001626  6E05               	movwf	___llmod@divisor^0,c
  2889  001628  0E00               	movlw	0
  2890  00162A  6E06               	movwf	(___llmod@divisor+1)^0,c
  2891  00162C  0E00               	movlw	0
  2892  00162E  6E07               	movwf	(___llmod@divisor+2)^0,c
  2893  001630  0E00               	movlw	0
  2894  001632  6E08               	movwf	(___llmod@divisor+3)^0,c
  2895  001634  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2896  001638  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2897  00163C  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2898  001640  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2899  001644  EC2A  F013         	call	___llmod	;wreg free
  2900  001648  C001  F00A         	movff	?___llmod,___lldiv@dividend
  2901  00164C  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  2902  001650  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  2903  001654  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  2904  001658  0E0A               	movlw	10
  2905  00165A  6E0E               	movwf	___lldiv@divisor^0,c
  2906  00165C  0E00               	movlw	0
  2907  00165E  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  2908  001660  0E00               	movlw	0
  2909  001662  6E10               	movwf	(___lldiv@divisor+2)^0,c
  2910  001664  0E00               	movlw	0
  2911  001666  6E11               	movwf	(___lldiv@divisor+3)^0,c
  2912  001668  EC39  F012         	call	___lldiv	;wreg free
  2913  00166C  500A               	movf	?___lldiv^0,w,c
  2914  00166E  6E34               	movwf	EscribeLCD_n32@decena^0,c
  2915                           
  2916                           ;LibLCDXC8.h: 271: unidad=a%10;
  2917  001670  C017  F001         	movff	EscribeLCD_n32@a,___llmod@dividend
  2918  001674  C018  F002         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2919  001678  C019  F003         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2920  00167C  C01A  F004         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2921  001680  0E0A               	movlw	10
  2922  001682  6E05               	movwf	___llmod@divisor^0,c
  2923  001684  0E00               	movlw	0
  2924  001686  6E06               	movwf	(___llmod@divisor+1)^0,c
  2925  001688  0E00               	movlw	0
  2926  00168A  6E07               	movwf	(___llmod@divisor+2)^0,c
  2927  00168C  0E00               	movlw	0
  2928  00168E  6E08               	movwf	(___llmod@divisor+3)^0,c
  2929  001690  EC2A  F013         	call	___llmod	;wreg free
  2930  001694  5001               	movf	?___llmod^0,w,c
  2931  001696  6E35               	movwf	EscribeLCD_n32@unidad^0,c
  2932                           
  2933                           ;LibLCDXC8.h: 272: EscribeLCD_c(cienmillon+48);
  2934  001698  501C               	movf	EscribeLCD_n32@cienmillon^0,w,c
  2935  00169A  0F30               	addlw	48
  2936  00169C  EC1B  F015         	call	_EscribeLCD_c
  2937                           
  2938                           ;LibLCDXC8.h: 273: EscribeLCD_c(diezmillon+48);
  2939  0016A0  5020               	movf	EscribeLCD_n32@diezmillon^0,w,c
  2940  0016A2  0F30               	addlw	48
  2941  0016A4  EC1B  F015         	call	_EscribeLCD_c
  2942                           
  2943                           ;LibLCDXC8.h: 274: EscribeLCD_c(millon+48);
  2944  0016A8  5024               	movf	EscribeLCD_n32@millon^0,w,c
  2945  0016AA  0F30               	addlw	48
  2946  0016AC  EC1B  F015         	call	_EscribeLCD_c
  2947                           
  2948                           ;LibLCDXC8.h: 275: EscribeLCD_c(cienmil+48);
  2949  0016B0  5028               	movf	EscribeLCD_n32@cienmil^0,w,c
  2950  0016B2  0F30               	addlw	48
  2951  0016B4  EC1B  F015         	call	_EscribeLCD_c
  2952                           
  2953                           ;LibLCDXC8.h: 276: EscribeLCD_c(diezmil+48);
  2954  0016B8  502C               	movf	EscribeLCD_n32@diezmil^0,w,c
  2955  0016BA  0F30               	addlw	48
  2956  0016BC  EC1B  F015         	call	_EscribeLCD_c
  2957                           
  2958                           ;LibLCDXC8.h: 277: EscribeLCD_c(millar+48);
  2959  0016C0  5030               	movf	EscribeLCD_n32@millar^0,w,c
  2960  0016C2  0F30               	addlw	48
  2961  0016C4  EC1B  F015         	call	_EscribeLCD_c
  2962                           
  2963                           ;LibLCDXC8.h: 278: EscribeLCD_c(centena+48);
  2964  0016C8  5032               	movf	EscribeLCD_n32@centena^0,w,c
  2965  0016CA  0F30               	addlw	48
  2966  0016CC  EC1B  F015         	call	_EscribeLCD_c
  2967                           
  2968                           ;LibLCDXC8.h: 279: EscribeLCD_c(decena+48);
  2969  0016D0  5034               	movf	EscribeLCD_n32@decena^0,w,c
  2970  0016D2  0F30               	addlw	48
  2971  0016D4  EC1B  F015         	call	_EscribeLCD_c
  2972                           
  2973                           ;LibLCDXC8.h: 280: EscribeLCD_c(unidad+48);
  2974  0016D8  5035               	movf	EscribeLCD_n32@unidad^0,w,c
  2975  0016DA  0F30               	addlw	48
  2976  0016DC  EC1B  F015         	call	_EscribeLCD_c
  2977                           
  2978                           ;LibLCDXC8.h: 281: break;
  2979  0016E0  0012               	return	
  2980  0016E2                     l2141:
  2981  0016E2  501B               	movf	EscribeLCD_n32@b^0,w,c
  2982                           
  2983                           ; Switch size 1, requested type "simple"
  2984                           ; Number of cases is 9, Range of values is 1 to 9
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte           28    15 (average)
  2988                           ;	Chosen strategy is simple_byte
  2989  0016E4  0A01               	xorlw	1	; case 1
  2990  0016E6  B4D8               	btfsc	status,2,c
  2991  0016E8  EF34  F004         	goto	l2121
  2992  0016EC  0A03               	xorlw	3	; case 2
  2993  0016EE  B4D8               	btfsc	status,2,c
  2994  0016F0  EF4D  F004         	goto	l2123
  2995  0016F4  0A01               	xorlw	1	; case 3
  2996  0016F6  B4D8               	btfsc	status,2,c
  2997  0016F8  EF90  F004         	goto	l2125
  2998  0016FC  0A07               	xorlw	7	; case 4
  2999  0016FE  B4D8               	btfsc	status,2,c
  3000  001700  EFFF  F004         	goto	l2127
  3001  001704  0A01               	xorlw	1	; case 5
  3002  001706  B4D8               	btfsc	status,2,c
  3003  001708  EF9A  F005         	goto	l2129
  3004  00170C  0A03               	xorlw	3	; case 6
  3005  00170E  B4D8               	btfsc	status,2,c
  3006  001710  EF65  F006         	goto	l2131
  3007  001714  0A01               	xorlw	1	; case 7
  3008  001716  B4D8               	btfsc	status,2,c
  3009  001718  EF60  F007         	goto	l2133
  3010  00171C  0A0F               	xorlw	15	; case 8
  3011  00171E  B4D8               	btfsc	status,2,c
  3012  001720  D4FA               	goto	l2135
  3013  001722  0A01               	xorlw	1	; case 9
  3014  001724  A4D8               	btfss	status,2,c
  3015  001726  0012               	return	
  3016  001728  D651               	goto	l2137
  3017  00172A                     __end_of_EscribeLCD_n32:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function ___llmod *****************
  3021 ;; Defined at:
  3022 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  dividend        4    0[COMRAM] unsigned long 
  3025 ;;  divisor         4    4[COMRAM] unsigned long 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  counter         1    8[COMRAM] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  4    0[COMRAM] unsigned long 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         8       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3040 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        9 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_EscribeLCD_n32
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text4
  3052  002654                     __ptext4:
  3053                           	callstack 0
  3054  002654                     ___llmod:
  3055                           	callstack 27
  3056                           
  3057                           ;incstack = 0
  3058  002654  5005               	movf	___llmod@divisor^0,w,c
  3059  002656  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3060  002658  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3061  00265A  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3062  00265C  B4D8               	btfsc	status,2,c
  3063  00265E  D024               	goto	l698
  3064  002660  0E01               	movlw	1
  3065  002662  6E09               	movwf	___llmod@counter^0,c
  3066  002664  D006               	goto	l2027
  3067  002666                     l2025:
  3068  002666  90D8               	bcf	status,0,c
  3069  002668  3605               	rlcf	___llmod@divisor^0,f,c
  3070  00266A  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3071  00266C  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3072  00266E  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3073  002670  2A09               	incf	___llmod@counter^0,f,c
  3074  002672                     l2027:
  3075  002672  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3076  002674  D7F8               	goto	l2025
  3077  002676                     u1200:
  3078  002676  5005               	movf	___llmod@divisor^0,w,c
  3079  002678  5C01               	subwf	___llmod@dividend^0,w,c
  3080  00267A  5006               	movf	(___llmod@divisor+1)^0,w,c
  3081  00267C  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3082  00267E  5007               	movf	(___llmod@divisor+2)^0,w,c
  3083  002680  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3084  002682  5008               	movf	(___llmod@divisor+3)^0,w,c
  3085  002684  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3086  002686  A0D8               	btfss	status,0,c
  3087  002688  D008               	goto	l2033
  3088  00268A  5005               	movf	___llmod@divisor^0,w,c
  3089  00268C  5E01               	subwf	___llmod@dividend^0,f,c
  3090  00268E  5006               	movf	(___llmod@divisor+1)^0,w,c
  3091  002690  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3092  002692  5007               	movf	(___llmod@divisor+2)^0,w,c
  3093  002694  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3094  002696  5008               	movf	(___llmod@divisor+3)^0,w,c
  3095  002698  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3096  00269A                     l2033:
  3097  00269A  90D8               	bcf	status,0,c
  3098  00269C  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3099  00269E  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3100  0026A0  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3101  0026A2  3205               	rrcf	___llmod@divisor^0,f,c
  3102  0026A4  2E09               	decfsz	___llmod@counter^0,f,c
  3103  0026A6  D7E7               	goto	u1200
  3104  0026A8                     l698:
  3105  0026A8  C001  F001         	movff	___llmod@dividend,?___llmod
  3106  0026AC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3107  0026B0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3108  0026B4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3109  0026B8  0012               	return		;funcret
  3110  0026BA                     __end_of___llmod:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function ___lldiv *****************
  3114 ;; Defined at:
  3115 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  dividend        4    9[COMRAM] unsigned long 
  3118 ;;  divisor         4   13[COMRAM] unsigned long 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  quotient        4   17[COMRAM] unsigned long 
  3121 ;;  counter         1   21[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  4    9[COMRAM] unsigned long 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         8       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:       13 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_EscribeLCD_n32
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text5
  3146  002472                     __ptext5:
  3147                           	callstack 0
  3148  002472                     ___lldiv:
  3149                           	callstack 27
  3150                           
  3151                           ;incstack = 0
  3152  002472  0E00               	movlw	0
  3153  002474  6E12               	movwf	___lldiv@quotient^0,c
  3154  002476  0E00               	movlw	0
  3155  002478  6E13               	movwf	(___lldiv@quotient+1)^0,c
  3156  00247A  0E00               	movlw	0
  3157  00247C  6E14               	movwf	(___lldiv@quotient+2)^0,c
  3158  00247E  0E00               	movlw	0
  3159  002480  6E15               	movwf	(___lldiv@quotient+3)^0,c
  3160  002482  500E               	movf	___lldiv@divisor^0,w,c
  3161  002484  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
  3162  002486  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
  3163  002488  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
  3164  00248A  B4D8               	btfsc	status,2,c
  3165  00248C  D02A               	goto	l317
  3166  00248E  0E01               	movlw	1
  3167  002490  6E16               	movwf	___lldiv@counter^0,c
  3168  002492  D006               	goto	l1929
  3169  002494                     l1927:
  3170  002494  90D8               	bcf	status,0,c
  3171  002496  360E               	rlcf	___lldiv@divisor^0,f,c
  3172  002498  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
  3173  00249A  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
  3174  00249C  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
  3175  00249E  2A16               	incf	___lldiv@counter^0,f,c
  3176  0024A0                     l1929:
  3177  0024A0  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
  3178  0024A2  D7F8               	goto	l1927
  3179  0024A4                     u1050:
  3180  0024A4  90D8               	bcf	status,0,c
  3181  0024A6  3612               	rlcf	___lldiv@quotient^0,f,c
  3182  0024A8  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
  3183  0024AA  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
  3184  0024AC  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
  3185  0024AE  500E               	movf	___lldiv@divisor^0,w,c
  3186  0024B0  5C0A               	subwf	___lldiv@dividend^0,w,c
  3187  0024B2  500F               	movf	(___lldiv@divisor+1)^0,w,c
  3188  0024B4  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
  3189  0024B6  5010               	movf	(___lldiv@divisor+2)^0,w,c
  3190  0024B8  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
  3191  0024BA  5011               	movf	(___lldiv@divisor+3)^0,w,c
  3192  0024BC  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
  3193  0024BE  A0D8               	btfss	status,0,c
  3194  0024C0  D009               	goto	l1939
  3195  0024C2  500E               	movf	___lldiv@divisor^0,w,c
  3196  0024C4  5E0A               	subwf	___lldiv@dividend^0,f,c
  3197  0024C6  500F               	movf	(___lldiv@divisor+1)^0,w,c
  3198  0024C8  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
  3199  0024CA  5010               	movf	(___lldiv@divisor+2)^0,w,c
  3200  0024CC  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
  3201  0024CE  5011               	movf	(___lldiv@divisor+3)^0,w,c
  3202  0024D0  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
  3203  0024D2  8012               	bsf	___lldiv@quotient^0,0,c
  3204  0024D4                     l1939:
  3205  0024D4  90D8               	bcf	status,0,c
  3206  0024D6  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
  3207  0024D8  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
  3208  0024DA  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
  3209  0024DC  320E               	rrcf	___lldiv@divisor^0,f,c
  3210  0024DE  2E16               	decfsz	___lldiv@counter^0,f,c
  3211  0024E0  D7E1               	goto	u1050
  3212  0024E2                     l317:
  3213  0024E2  C012  F00A         	movff	___lldiv@quotient,?___lldiv
  3214  0024E6  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
  3215  0024EA  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
  3216  0024EE  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
  3217  0024F2  0012               	return		;funcret
  3218  0024F4                     __end_of___lldiv:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _calcularTemperatura *****************
  3222 ;; Defined at:
  3223 ;;		line 113 in file "Lab5.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  Van0            3   50[COMRAM] unsigned long 
  3226 ;;  caso            1   53[COMRAM] unsigned char 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  temperaturaC    3   57[COMRAM] unsigned char 
  3229 ;;  temperatura     3   54[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  3   50[COMRAM] unsigned char 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3239 ;;      Params:         4       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3242 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:       10 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 3
  3246 ;; This function calls:
  3247 ;;		___ftadd
  3248 ;;		___ftdiv
  3249 ;;		___ftmul
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text6
  3256  001C88                     __ptext6:
  3257                           	callstack 0
  3258  001C88                     _calcularTemperatura:
  3259                           	callstack 27
  3260                           
  3261                           ;Lab5.c: 114: double temperatura;;Lab5.c: 115: double temperaturaC=20+15*Van0/512;
  3262                           
  3263                           ;incstack = 0
  3264  001C88  0E00               	movlw	0
  3265  001C8A  6E1B               	movwf	___ftdiv@f2^0,c
  3266  001C8C  0E00               	movlw	0
  3267  001C8E  6E1C               	movwf	(___ftdiv@f2+1)^0,c
  3268  001C90  0E44               	movlw	68
  3269  001C92  6E1D               	movwf	(___ftdiv@f2+2)^0,c
  3270  001C94  0E00               	movlw	0
  3271  001C96  6E0C               	movwf	___ftmul@f2^0,c
  3272  001C98  0E70               	movlw	112
  3273  001C9A  6E0D               	movwf	(___ftmul@f2+1)^0,c
  3274  001C9C  0E41               	movlw	65
  3275  001C9E  6E0E               	movwf	(___ftmul@f2+2)^0,c
  3276  001CA0  C033  F009         	movff	calcularTemperatura@Van0,___ftmul@f1
  3277  001CA4  C034  F00A         	movff	calcularTemperatura@Van0+1,___ftmul@f1+1
  3278  001CA8  C035  F00B         	movff	calcularTemperatura@Van0+2,___ftmul@f1+2
  3279  001CAC  EC67  F00F         	call	___ftmul	;wreg free
  3280  001CB0  C009  F018         	movff	?___ftmul,___ftdiv@f1
  3281  001CB4  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
  3282  001CB8  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
  3283  001CBC  ECE1  F00F         	call	___ftdiv	;wreg free
  3284  001CC0  C018  F027         	movff	?___ftdiv,___ftadd@f1
  3285  001CC4  C019  F028         	movff	?___ftdiv+1,___ftadd@f1+1
  3286  001CC8  C01A  F029         	movff	?___ftdiv+2,___ftadd@f1+2
  3287  001CCC  0E00               	movlw	0
  3288  001CCE  6E2A               	movwf	___ftadd@f2^0,c
  3289  001CD0  0EA0               	movlw	160
  3290  001CD2  6E2B               	movwf	(___ftadd@f2+1)^0,c
  3291  001CD4  0E41               	movlw	65
  3292  001CD6  6E2C               	movwf	(___ftadd@f2+2)^0,c
  3293  001CD8  ECC5  F00C         	call	___ftadd	;wreg free
  3294  001CDC  C027  F03A         	movff	?___ftadd,calcularTemperatura@temperaturaC
  3295  001CE0  C028  F03B         	movff	?___ftadd+1,calcularTemperatura@temperaturaC+1
  3296  001CE4  C029  F03C         	movff	?___ftadd+2,calcularTemperatura@temperaturaC+2
  3297                           
  3298                           ;Lab5.c: 117: switch(caso){
  3299  001CE8  D056               	goto	l2539
  3300  001CEA                     l204:
  3301                           
  3302                           ;Lab5.c: 119: temperatura=temperaturaC;
  3303  001CEA  C03A  F037         	movff	calcularTemperatura@temperaturaC,calcularTemperatura@temperatura
  3304  001CEE  C03B  F038         	movff	calcularTemperatura@temperaturaC+1,calcularTemperatura@temperatura+1
  3305  001CF2  C03C  F039         	movff	calcularTemperatura@temperaturaC+2,calcularTemperatura@temperatura+2
  3306                           
  3307                           ;Lab5.c: 120: break;
  3308  001CF6  D05C               	goto	l205
  3309  001CF8                     l2531:
  3310                           
  3311                           ;Lab5.c: 122: temperatura=temperaturaC+273.15;
  3312  001CF8  C03A  F027         	movff	calcularTemperatura@temperaturaC,___ftadd@f1
  3313  001CFC  C03B  F028         	movff	calcularTemperatura@temperaturaC+1,___ftadd@f1+1
  3314  001D00  C03C  F029         	movff	calcularTemperatura@temperaturaC+2,___ftadd@f1+2
  3315  001D04  0E93               	movlw	147
  3316  001D06  6E2A               	movwf	___ftadd@f2^0,c
  3317  001D08  0E88               	movlw	136
  3318  001D0A  6E2B               	movwf	(___ftadd@f2+1)^0,c
  3319  001D0C  0E43               	movlw	67
  3320  001D0E  6E2C               	movwf	(___ftadd@f2+2)^0,c
  3321  001D10  ECC5  F00C         	call	___ftadd	;wreg free
  3322  001D14  D039               	goto	L2
  3323  001D16                     l2533:
  3324                           
  3325                           ;Lab5.c: 125: temperatura=temperaturaC*(9/5)+491.67;
  3326  001D16  0E00               	movlw	0
  3327  001D18  6E0C               	movwf	___ftmul@f2^0,c
  3328  001D1A  0E80               	movlw	128
  3329  001D1C  6E0D               	movwf	(___ftmul@f2+1)^0,c
  3330  001D1E  0E3F               	movlw	63
  3331  001D20  6E0E               	movwf	(___ftmul@f2+2)^0,c
  3332  001D22  C03A  F009         	movff	calcularTemperatura@temperaturaC,___ftmul@f1
  3333  001D26  C03B  F00A         	movff	calcularTemperatura@temperaturaC+1,___ftmul@f1+1
  3334  001D2A  C03C  F00B         	movff	calcularTemperatura@temperaturaC+2,___ftmul@f1+2
  3335  001D2E  EC67  F00F         	call	___ftmul	;wreg free
  3336  001D32  C009  F027         	movff	?___ftmul,___ftadd@f1
  3337  001D36  C00A  F028         	movff	?___ftmul+1,___ftadd@f1+1
  3338  001D3A  C00B  F029         	movff	?___ftmul+2,___ftadd@f1+2
  3339  001D3E  0ED6               	movlw	214
  3340  001D40  6E2A               	movwf	___ftadd@f2^0,c
  3341  001D42  0EF5               	movlw	245
  3342  001D44  6E2B               	movwf	(___ftadd@f2+1)^0,c
  3343  001D46  0E43               	movlw	67
  3344  001D48  6E2C               	movwf	(___ftadd@f2+2)^0,c
  3345  001D4A  ECC5  F00C         	call	___ftadd	;wreg free
  3346  001D4E  D01C               	goto	L2
  3347  001D50                     l2535:
  3348                           
  3349                           ;Lab5.c: 128: temperatura=temperaturaC*(9/5)+32;
  3350  001D50  0E00               	movlw	0
  3351  001D52  6E0C               	movwf	___ftmul@f2^0,c
  3352  001D54  0E80               	movlw	128
  3353  001D56  6E0D               	movwf	(___ftmul@f2+1)^0,c
  3354  001D58  0E3F               	movlw	63
  3355  001D5A  6E0E               	movwf	(___ftmul@f2+2)^0,c
  3356  001D5C  C03A  F009         	movff	calcularTemperatura@temperaturaC,___ftmul@f1
  3357  001D60  C03B  F00A         	movff	calcularTemperatura@temperaturaC+1,___ftmul@f1+1
  3358  001D64  C03C  F00B         	movff	calcularTemperatura@temperaturaC+2,___ftmul@f1+2
  3359  001D68  EC67  F00F         	call	___ftmul	;wreg free
  3360  001D6C  C009  F027         	movff	?___ftmul,___ftadd@f1
  3361  001D70  C00A  F028         	movff	?___ftmul+1,___ftadd@f1+1
  3362  001D74  C00B  F029         	movff	?___ftmul+2,___ftadd@f1+2
  3363  001D78  0E00               	movlw	0
  3364  001D7A  6E2A               	movwf	___ftadd@f2^0,c
  3365  001D7C  0E00               	movlw	0
  3366  001D7E  6E2B               	movwf	(___ftadd@f2+1)^0,c
  3367  001D80  0E42               	movlw	66
  3368  001D82  6E2C               	movwf	(___ftadd@f2+2)^0,c
  3369  001D84  ECC5  F00C         	call	___ftadd	;wreg free
  3370  001D88                     L2:
  3371  001D88  C027  F037         	movff	?___ftadd,calcularTemperatura@temperatura
  3372  001D8C  C028  F038         	movff	?___ftadd+1,calcularTemperatura@temperatura+1
  3373  001D90  C029  F039         	movff	?___ftadd+2,calcularTemperatura@temperatura+2
  3374                           
  3375                           ;Lab5.c: 129: break;
  3376  001D94  D00D               	goto	l205
  3377  001D96                     l2539:
  3378  001D96  5036               	movf	calcularTemperatura@caso^0,w,c
  3379                           
  3380                           ; Switch size 1, requested type "simple"
  3381                           ; Number of cases is 4, Range of values is 0 to 3
  3382                           ; switch strategies available:
  3383                           ; Name         Instructions Cycles
  3384                           ; simple_byte           13     7 (average)
  3385                           ;	Chosen strategy is simple_byte
  3386  001D98  0A00               	xorlw	0	; case 0
  3387  001D9A  B4D8               	btfsc	status,2,c
  3388  001D9C  D7A6               	goto	l204
  3389  001D9E  0A01               	xorlw	1	; case 1
  3390  001DA0  B4D8               	btfsc	status,2,c
  3391  001DA2  D7AA               	goto	l2531
  3392  001DA4  0A03               	xorlw	3	; case 2
  3393  001DA6  B4D8               	btfsc	status,2,c
  3394  001DA8  D7B6               	goto	l2533
  3395  001DAA  0A01               	xorlw	1	; case 3
  3396  001DAC  B4D8               	btfsc	status,2,c
  3397  001DAE  D7D0               	goto	l2535
  3398  001DB0                     l205:
  3399                           
  3400                           ;Lab5.c: 132: return temperatura;
  3401  001DB0  C037  F033         	movff	calcularTemperatura@temperatura,?_calcularTemperatura
  3402  001DB4  C038  F034         	movff	calcularTemperatura@temperatura+1,?_calcularTemperatura+1
  3403  001DB8  C039  F035         	movff	calcularTemperatura@temperatura+2,?_calcularTemperatura+2
  3404  001DBC  0012               	return		;funcret
  3405  001DBE                     __end_of_calcularTemperatura:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function ___ftdiv *****************
  3409 ;; Defined at:
  3410 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdiv.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  f1              3   23[COMRAM] float 
  3413 ;;  f2              3   26[COMRAM] float 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  f3              3   33[COMRAM] float 
  3416 ;;  sign            1   37[COMRAM] unsigned char 
  3417 ;;  exp             1   36[COMRAM] unsigned char 
  3418 ;;  cntr            1   32[COMRAM] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  3   23[COMRAM] float 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         6       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3431 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:       15 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 2
  3435 ;; This function calls:
  3436 ;;		___ftpack
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;;		_calcularTemperatura
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text7
  3444  001FC2                     __ptext7:
  3445                           	callstack 0
  3446  001FC2                     ___ftdiv:
  3447                           	callstack 27
  3448                           
  3449                           ;incstack = 0
  3450  001FC2  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
  3451  001FC6  6A1F               	clrf	(??___ftdiv+1)^0,c
  3452  001FC8  6A20               	clrf	(??___ftdiv+2)^0,c
  3453  001FCA  3419               	rlcf	(___ftdiv@f1+1)^0,w,c
  3454  001FCC  361E               	rlcf	??___ftdiv^0,f,c
  3455  001FCE  E301               	bnc	u1521
  3456  001FD0  801F               	bsf	(??___ftdiv+1)^0,0,c
  3457  001FD2                     u1521:
  3458  001FD2  501E               	movf	??___ftdiv^0,w,c
  3459  001FD4  6E25               	movwf	___ftdiv@exp^0,c
  3460  001FD6  5025               	movf	___ftdiv@exp^0,w,c
  3461  001FD8  A4D8               	btfss	status,2,c
  3462  001FDA  D007               	goto	l2261
  3463  001FDC  0E00               	movlw	0
  3464  001FDE  6E18               	movwf	?___ftdiv^0,c
  3465  001FE0  0E00               	movlw	0
  3466  001FE2  6E19               	movwf	(?___ftdiv+1)^0,c
  3467  001FE4  0E00               	movlw	0
  3468  001FE6  6E1A               	movwf	(?___ftdiv+2)^0,c
  3469  001FE8  0012               	return	
  3470  001FEA                     l2261:
  3471  001FEA  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
  3472  001FEE  6A1F               	clrf	(??___ftdiv+1)^0,c
  3473  001FF0  6A20               	clrf	(??___ftdiv+2)^0,c
  3474  001FF2  341C               	rlcf	(___ftdiv@f2+1)^0,w,c
  3475  001FF4  361E               	rlcf	??___ftdiv^0,f,c
  3476  001FF6  E301               	bnc	u1541
  3477  001FF8  801F               	bsf	(??___ftdiv+1)^0,0,c
  3478  001FFA                     u1541:
  3479  001FFA  501E               	movf	??___ftdiv^0,w,c
  3480  001FFC  6E26               	movwf	___ftdiv@sign^0,c
  3481  001FFE  5026               	movf	___ftdiv@sign^0,w,c
  3482  002000  A4D8               	btfss	status,2,c
  3483  002002  D007               	goto	l2267
  3484  002004  0E00               	movlw	0
  3485  002006  6E18               	movwf	?___ftdiv^0,c
  3486  002008  0E00               	movlw	0
  3487  00200A  6E19               	movwf	(?___ftdiv+1)^0,c
  3488  00200C  0E00               	movlw	0
  3489  00200E  6E1A               	movwf	(?___ftdiv+2)^0,c
  3490  002010  0012               	return	
  3491  002012                     l2267:
  3492  002012  0E00               	movlw	0
  3493  002014  6E22               	movwf	___ftdiv@f3^0,c
  3494  002016  0E00               	movlw	0
  3495  002018  6E23               	movwf	(___ftdiv@f3+1)^0,c
  3496  00201A  0E00               	movlw	0
  3497  00201C  6E24               	movwf	(___ftdiv@f3+2)^0,c
  3498  00201E  5026               	movf	___ftdiv@sign^0,w,c
  3499  002020  0F89               	addlw	137
  3500  002022  5E25               	subwf	___ftdiv@exp^0,f,c
  3501  002024  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
  3502  002028  501D               	movf	(___ftdiv@f2+2)^0,w,c
  3503  00202A  1A26               	xorwf	___ftdiv@sign^0,f,c
  3504  00202C  0E80               	movlw	128
  3505  00202E  1626               	andwf	___ftdiv@sign^0,f,c
  3506  002030  8E19               	bsf	(___ftdiv@f1+1)^0,7,c
  3507  002032  0EFF               	movlw	255
  3508  002034  1618               	andwf	___ftdiv@f1^0,f,c
  3509  002036  0EFF               	movlw	255
  3510  002038  1619               	andwf	(___ftdiv@f1+1)^0,f,c
  3511  00203A  0E00               	movlw	0
  3512  00203C  161A               	andwf	(___ftdiv@f1+2)^0,f,c
  3513  00203E  8E1C               	bsf	(___ftdiv@f2+1)^0,7,c
  3514  002040  0EFF               	movlw	255
  3515  002042  161B               	andwf	___ftdiv@f2^0,f,c
  3516  002044  0EFF               	movlw	255
  3517  002046  161C               	andwf	(___ftdiv@f2+1)^0,f,c
  3518  002048  0E00               	movlw	0
  3519  00204A  161D               	andwf	(___ftdiv@f2+2)^0,f,c
  3520  00204C  0E18               	movlw	24
  3521  00204E  6E21               	movwf	___ftdiv@cntr^0,c
  3522  002050                     l2287:
  3523  002050  90D8               	bcf	status,0,c
  3524  002052  3622               	rlcf	___ftdiv@f3^0,f,c
  3525  002054  3623               	rlcf	(___ftdiv@f3+1)^0,f,c
  3526  002056  3624               	rlcf	(___ftdiv@f3+2)^0,f,c
  3527  002058  501B               	movf	___ftdiv@f2^0,w,c
  3528  00205A  5C18               	subwf	___ftdiv@f1^0,w,c
  3529  00205C  501C               	movf	(___ftdiv@f2+1)^0,w,c
  3530  00205E  5819               	subwfb	(___ftdiv@f1+1)^0,w,c
  3531  002060  501D               	movf	(___ftdiv@f2+2)^0,w,c
  3532  002062  581A               	subwfb	(___ftdiv@f1+2)^0,w,c
  3533  002064  A0D8               	btfss	status,0,c
  3534  002066  D007               	goto	l631
  3535  002068  501B               	movf	___ftdiv@f2^0,w,c
  3536  00206A  5E18               	subwf	___ftdiv@f1^0,f,c
  3537  00206C  501C               	movf	(___ftdiv@f2+1)^0,w,c
  3538  00206E  5A19               	subwfb	(___ftdiv@f1+1)^0,f,c
  3539  002070  501D               	movf	(___ftdiv@f2+2)^0,w,c
  3540  002072  5A1A               	subwfb	(___ftdiv@f1+2)^0,f,c
  3541  002074  8022               	bsf	___ftdiv@f3^0,0,c
  3542  002076                     l631:
  3543  002076  90D8               	bcf	status,0,c
  3544  002078  3618               	rlcf	___ftdiv@f1^0,f,c
  3545  00207A  3619               	rlcf	(___ftdiv@f1+1)^0,f,c
  3546  00207C  361A               	rlcf	(___ftdiv@f1+2)^0,f,c
  3547  00207E  2E21               	decfsz	___ftdiv@cntr^0,f,c
  3548  002080  D7E7               	goto	l2287
  3549  002082  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
  3550  002086  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3551  00208A  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3552  00208E  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
  3553  002092  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
  3554  002096  EC94  F011         	call	___ftpack	;wreg free
  3555  00209A  C001  F018         	movff	?___ftpack,?___ftdiv
  3556  00209E  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
  3557  0020A2  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  3558  0020A6  0012               	return		;funcret
  3559  0020A8                     __end_of___ftdiv:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function ___ftadd *****************
  3563 ;; Defined at:
  3564 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftadd.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  f1              3   38[COMRAM] float 
  3567 ;;  f2              3   41[COMRAM] float 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  exp1            1   49[COMRAM] unsigned char 
  3570 ;;  exp2            1   48[COMRAM] unsigned char 
  3571 ;;  sign            1   47[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  3   38[COMRAM] float 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3581 ;;      Params:         6       0       0       0       0       0       0       0       0
  3582 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3583 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3584 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3585 ;;Total ram usage:       12 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 2
  3588 ;; This function calls:
  3589 ;;		___ftpack
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;;		_calcularTemperatura
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text8
  3597  00198A                     __ptext8:
  3598                           	callstack 0
  3599  00198A                     ___ftadd:
  3600                           	callstack 27
  3601                           
  3602                           ;incstack = 0
  3603  00198A  C029  F02D         	movff	___ftadd@f1+2,??___ftadd
  3604  00198E  6A2E               	clrf	(??___ftadd+1)^0,c
  3605  001990  6A2F               	clrf	(??___ftadd+2)^0,c
  3606  001992  3428               	rlcf	(___ftadd@f1+1)^0,w,c
  3607  001994  362D               	rlcf	??___ftadd^0,f,c
  3608  001996  E301               	bnc	u1311
  3609  001998  802E               	bsf	(??___ftadd+1)^0,0,c
  3610  00199A                     u1311:
  3611  00199A  502D               	movf	??___ftadd^0,w,c
  3612  00199C  6E32               	movwf	___ftadd@exp1^0,c
  3613  00199E  C02C  F02D         	movff	___ftadd@f2+2,??___ftadd
  3614  0019A2  6A2E               	clrf	(??___ftadd+1)^0,c
  3615  0019A4  6A2F               	clrf	(??___ftadd+2)^0,c
  3616  0019A6  342B               	rlcf	(___ftadd@f2+1)^0,w,c
  3617  0019A8  362D               	rlcf	??___ftadd^0,f,c
  3618  0019AA  E301               	bnc	u1321
  3619  0019AC  802E               	bsf	(??___ftadd+1)^0,0,c
  3620  0019AE                     u1321:
  3621  0019AE  502D               	movf	??___ftadd^0,w,c
  3622  0019B0  6E31               	movwf	___ftadd@exp2^0,c
  3623  0019B2  5032               	movf	___ftadd@exp1^0,w,c
  3624  0019B4  B4D8               	btfsc	status,2,c
  3625  0019B6  D00A               	goto	u1350
  3626  0019B8  5031               	movf	___ftadd@exp2^0,w,c
  3627  0019BA  5C32               	subwf	___ftadd@exp1^0,w,c
  3628  0019BC  B0D8               	btfsc	status,0,c
  3629  0019BE  D00D               	goto	l2193
  3630  0019C0  5032               	movf	___ftadd@exp1^0,w,c
  3631  0019C2  5C31               	subwf	___ftadd@exp2^0,w,c
  3632  0019C4  6E2D               	movwf	??___ftadd^0,c
  3633  0019C6  0E18               	movlw	24
  3634  0019C8  642D               	cpfsgt	??___ftadd^0,c
  3635  0019CA  D007               	goto	l2193
  3636  0019CC                     u1350:
  3637  0019CC  C02A  F027         	movff	___ftadd@f2,?___ftadd
  3638  0019D0  C02B  F028         	movff	___ftadd@f2+1,?___ftadd+1
  3639  0019D4  C02C  F029         	movff	___ftadd@f2+2,?___ftadd+2
  3640  0019D8  0012               	return	
  3641  0019DA                     l2193:
  3642  0019DA  5031               	movf	___ftadd@exp2^0,w,c
  3643  0019DC  B4D8               	btfsc	status,2,c
  3644  0019DE  D00A               	goto	u1380
  3645  0019E0  5032               	movf	___ftadd@exp1^0,w,c
  3646  0019E2  5C31               	subwf	___ftadd@exp2^0,w,c
  3647  0019E4  B0D8               	btfsc	status,0,c
  3648  0019E6  D00D               	goto	l2199
  3649  0019E8  5031               	movf	___ftadd@exp2^0,w,c
  3650  0019EA  5C32               	subwf	___ftadd@exp1^0,w,c
  3651  0019EC  6E2D               	movwf	??___ftadd^0,c
  3652  0019EE  0E18               	movlw	24
  3653  0019F0  642D               	cpfsgt	??___ftadd^0,c
  3654  0019F2  D007               	goto	l2199
  3655  0019F4                     u1380:
  3656  0019F4  C027  F027         	movff	___ftadd@f1,?___ftadd
  3657  0019F8  C028  F028         	movff	___ftadd@f1+1,?___ftadd+1
  3658  0019FC  C029  F029         	movff	___ftadd@f1+2,?___ftadd+2
  3659  001A00  0012               	return	
  3660  001A02                     l2199:
  3661  001A02  0E06               	movlw	6
  3662  001A04  6E30               	movwf	___ftadd@sign^0,c
  3663  001A06  BE29               	btfsc	(___ftadd@f1+2)^0,7,c
  3664  001A08  8E30               	bsf	___ftadd@sign^0,7,c
  3665  001A0A  BE2C               	btfsc	(___ftadd@f2+2)^0,7,c
  3666  001A0C  8C30               	bsf	___ftadd@sign^0,6,c
  3667  001A0E  8E28               	bsf	(___ftadd@f1+1)^0,7,c
  3668  001A10  0EFF               	movlw	255
  3669  001A12  1627               	andwf	___ftadd@f1^0,f,c
  3670  001A14  0EFF               	movlw	255
  3671  001A16  1628               	andwf	(___ftadd@f1+1)^0,f,c
  3672  001A18  0E00               	movlw	0
  3673  001A1A  1629               	andwf	(___ftadd@f1+2)^0,f,c
  3674  001A1C  8E2B               	bsf	(___ftadd@f2+1)^0,7,c
  3675  001A1E  0EFF               	movlw	255
  3676  001A20  162A               	andwf	___ftadd@f2^0,f,c
  3677  001A22  0EFF               	movlw	255
  3678  001A24  162B               	andwf	(___ftadd@f2+1)^0,f,c
  3679  001A26  0E00               	movlw	0
  3680  001A28  162C               	andwf	(___ftadd@f2+2)^0,f,c
  3681  001A2A  5031               	movf	___ftadd@exp2^0,w,c
  3682  001A2C  5C32               	subwf	___ftadd@exp1^0,w,c
  3683  001A2E  B0D8               	btfsc	status,0,c
  3684  001A30  D01B               	goto	l2225
  3685  001A32                     u1410:
  3686  001A32  90D8               	bcf	status,0,c
  3687  001A34  362A               	rlcf	___ftadd@f2^0,f,c
  3688  001A36  362B               	rlcf	(___ftadd@f2+1)^0,f,c
  3689  001A38  362C               	rlcf	(___ftadd@f2+2)^0,f,c
  3690  001A3A  0631               	decf	___ftadd@exp2^0,f,c
  3691  001A3C  5032               	movf	___ftadd@exp1^0,w,c
  3692  001A3E  1831               	xorwf	___ftadd@exp2^0,w,c
  3693  001A40  B4D8               	btfsc	status,2,c
  3694  001A42  D00D               	goto	l2223
  3695  001A44  0630               	decf	___ftadd@sign^0,f,c
  3696  001A46  C030  F02D         	movff	___ftadd@sign,??___ftadd
  3697  001A4A  0E07               	movlw	7
  3698  001A4C  162D               	andwf	??___ftadd^0,f,c
  3699  001A4E  B4D8               	btfsc	status,2,c
  3700  001A50  D006               	goto	l2223
  3701  001A52  D7EF               	goto	u1410
  3702  001A54                     l2221:
  3703  001A54  90D8               	bcf	status,0,c
  3704  001A56  3229               	rrcf	(___ftadd@f1+2)^0,f,c
  3705  001A58  3228               	rrcf	(___ftadd@f1+1)^0,f,c
  3706  001A5A  3227               	rrcf	___ftadd@f1^0,f,c
  3707  001A5C  2A32               	incf	___ftadd@exp1^0,f,c
  3708  001A5E                     l2223:
  3709  001A5E  5031               	movf	___ftadd@exp2^0,w,c
  3710  001A60  1832               	xorwf	___ftadd@exp1^0,w,c
  3711  001A62  B4D8               	btfsc	status,2,c
  3712  001A64  D01F               	goto	u1480
  3713  001A66  D7F6               	goto	l2221
  3714  001A68                     l2225:
  3715  001A68  5032               	movf	___ftadd@exp1^0,w,c
  3716  001A6A  5C31               	subwf	___ftadd@exp2^0,w,c
  3717  001A6C  B0D8               	btfsc	status,0,c
  3718  001A6E  D01A               	goto	u1480
  3719  001A70                     u1450:
  3720  001A70  90D8               	bcf	status,0,c
  3721  001A72  3627               	rlcf	___ftadd@f1^0,f,c
  3722  001A74  3628               	rlcf	(___ftadd@f1+1)^0,f,c
  3723  001A76  3629               	rlcf	(___ftadd@f1+2)^0,f,c
  3724  001A78  0632               	decf	___ftadd@exp1^0,f,c
  3725  001A7A  5032               	movf	___ftadd@exp1^0,w,c
  3726  001A7C  1831               	xorwf	___ftadd@exp2^0,w,c
  3727  001A7E  B4D8               	btfsc	status,2,c
  3728  001A80  D00D               	goto	l2235
  3729  001A82  0630               	decf	___ftadd@sign^0,f,c
  3730  001A84  C030  F02D         	movff	___ftadd@sign,??___ftadd
  3731  001A88  0E07               	movlw	7
  3732  001A8A  162D               	andwf	??___ftadd^0,f,c
  3733  001A8C  B4D8               	btfsc	status,2,c
  3734  001A8E  D006               	goto	l2235
  3735  001A90  D7EF               	goto	u1450
  3736  001A92                     l2233:
  3737  001A92  90D8               	bcf	status,0,c
  3738  001A94  322C               	rrcf	(___ftadd@f2+2)^0,f,c
  3739  001A96  322B               	rrcf	(___ftadd@f2+1)^0,f,c
  3740  001A98  322A               	rrcf	___ftadd@f2^0,f,c
  3741  001A9A  2A31               	incf	___ftadd@exp2^0,f,c
  3742  001A9C                     l2235:
  3743  001A9C  5031               	movf	___ftadd@exp2^0,w,c
  3744  001A9E  1832               	xorwf	___ftadd@exp1^0,w,c
  3745  001AA0  A4D8               	btfss	status,2,c
  3746  001AA2  D7F7               	goto	l2233
  3747  001AA4                     u1480:
  3748  001AA4  AE30               	btfss	___ftadd@sign^0,7,c
  3749  001AA6  D00C               	goto	l620
  3750  001AA8  0EFF               	movlw	255
  3751  001AAA  1A27               	xorwf	___ftadd@f1^0,f,c
  3752  001AAC  0EFF               	movlw	255
  3753  001AAE  1A28               	xorwf	(___ftadd@f1+1)^0,f,c
  3754  001AB0  0EFF               	movlw	255
  3755  001AB2  1A29               	xorwf	(___ftadd@f1+2)^0,f,c
  3756  001AB4  0E01               	movlw	1
  3757  001AB6  2627               	addwf	___ftadd@f1^0,f,c
  3758  001AB8  0E00               	movlw	0
  3759  001ABA  2228               	addwfc	(___ftadd@f1+1)^0,f,c
  3760  001ABC  0E00               	movlw	0
  3761  001ABE  2229               	addwfc	(___ftadd@f1+2)^0,f,c
  3762  001AC0                     l620:
  3763  001AC0  AC30               	btfss	___ftadd@sign^0,6,c
  3764  001AC2  D00C               	goto	l2241
  3765  001AC4  0EFF               	movlw	255
  3766  001AC6  1A2A               	xorwf	___ftadd@f2^0,f,c
  3767  001AC8  0EFF               	movlw	255
  3768  001ACA  1A2B               	xorwf	(___ftadd@f2+1)^0,f,c
  3769  001ACC  0EFF               	movlw	255
  3770  001ACE  1A2C               	xorwf	(___ftadd@f2+2)^0,f,c
  3771  001AD0  0E01               	movlw	1
  3772  001AD2  262A               	addwf	___ftadd@f2^0,f,c
  3773  001AD4  0E00               	movlw	0
  3774  001AD6  222B               	addwfc	(___ftadd@f2+1)^0,f,c
  3775  001AD8  0E00               	movlw	0
  3776  001ADA  222C               	addwfc	(___ftadd@f2+2)^0,f,c
  3777  001ADC                     l2241:
  3778  001ADC  0E00               	movlw	0
  3779  001ADE  6E30               	movwf	___ftadd@sign^0,c
  3780  001AE0  5027               	movf	___ftadd@f1^0,w,c
  3781  001AE2  262A               	addwf	___ftadd@f2^0,f,c
  3782  001AE4  5028               	movf	(___ftadd@f1+1)^0,w,c
  3783  001AE6  222B               	addwfc	(___ftadd@f2+1)^0,f,c
  3784  001AE8  5029               	movf	(___ftadd@f1+2)^0,w,c
  3785  001AEA  222C               	addwfc	(___ftadd@f2+2)^0,f,c
  3786  001AEC  AE2C               	btfss	(___ftadd@f2+2)^0,7,c
  3787  001AEE  D00E               	goto	l2251
  3788  001AF0  0EFF               	movlw	255
  3789  001AF2  1A2A               	xorwf	___ftadd@f2^0,f,c
  3790  001AF4  0EFF               	movlw	255
  3791  001AF6  1A2B               	xorwf	(___ftadd@f2+1)^0,f,c
  3792  001AF8  0EFF               	movlw	255
  3793  001AFA  1A2C               	xorwf	(___ftadd@f2+2)^0,f,c
  3794  001AFC  0E01               	movlw	1
  3795  001AFE  262A               	addwf	___ftadd@f2^0,f,c
  3796  001B00  0E00               	movlw	0
  3797  001B02  222B               	addwfc	(___ftadd@f2+1)^0,f,c
  3798  001B04  0E00               	movlw	0
  3799  001B06  222C               	addwfc	(___ftadd@f2+2)^0,f,c
  3800  001B08  0E01               	movlw	1
  3801  001B0A  6E30               	movwf	___ftadd@sign^0,c
  3802  001B0C                     l2251:
  3803  001B0C  C02A  F001         	movff	___ftadd@f2,___ftpack@arg
  3804  001B10  C02B  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3805  001B14  C02C  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3806  001B18  C032  F004         	movff	___ftadd@exp1,___ftpack@exp
  3807  001B1C  C030  F005         	movff	___ftadd@sign,___ftpack@sign
  3808  001B20  EC94  F011         	call	___ftpack	;wreg free
  3809  001B24  C001  F027         	movff	?___ftpack,?___ftadd
  3810  001B28  C002  F028         	movff	?___ftpack+1,?___ftadd+1
  3811  001B2C  C003  F029         	movff	?___ftpack+2,?___ftadd+2
  3812  001B30  0012               	return		;funcret
  3813  001B32                     __end_of___ftadd:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function ___lwtoft *****************
  3817 ;; Defined at:
  3818 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwtoft.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  c               2    8[COMRAM] unsigned int 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  3    8[COMRAM] float 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3832 ;;      Params:         3       0       0       0       0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3835 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3836 ;;Total ram usage:        3 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 2
  3839 ;; This function calls:
  3840 ;;		___ftpack
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text9
  3847  0029C6                     __ptext9:
  3848                           	callstack 0
  3849  0029C6                     ___lwtoft:
  3850                           	callstack 28
  3851                           
  3852                           ;incstack = 0
  3853  0029C6  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3854  0029CA  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3855  0029CE  6A03               	clrf	(___ftpack@arg+2)^0,c
  3856  0029D0  0E8E               	movlw	142
  3857  0029D2  6E04               	movwf	___ftpack@exp^0,c
  3858  0029D4  0E00               	movlw	0
  3859  0029D6  6E05               	movwf	___ftpack@sign^0,c
  3860  0029D8  EC94  F011         	call	___ftpack	;wreg free
  3861  0029DC  C001  F009         	movff	?___ftpack,?___lwtoft
  3862  0029E0  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3863  0029E4  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3864  0029E8  0012               	return		;funcret
  3865  0029EA                     __end_of___lwtoft:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _TransmitirGeneral *****************
  3869 ;; Defined at:
  3870 ;;		line 244 in file "Lab5.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  b               2   21[COMRAM] unsigned int 
  3873 ;;  caso            1   23[COMRAM] unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         3       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3888 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        3 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 3
  3892 ;; This function calls:
  3893 ;;		_TransmitirMensaje
  3894 ;;		_TransmitirNumero
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text10
  3901  0026BA                     __ptext10:
  3902                           	callstack 0
  3903  0026BA                     _TransmitirGeneral:
  3904                           	callstack 27
  3905                           
  3906                           ;Lab5.c: 246: TransmitirMensaje("T=");
  3907                           
  3908                           ;incstack = 0
  3909  0026BA  0E5B               	movlw	low STR_4
  3910  0026BC  6E02               	movwf	TransmitirMensaje@a^0,c
  3911  0026BE  ECA9  F014         	call	_TransmitirMensaje	;wreg free
  3912                           
  3913                           ;Lab5.c: 247: TransmitirNumero(b);
  3914  0026C2  C016  F00D         	movff	TransmitirGeneral@b,TransmitirNumero@a
  3915  0026C6  C017  F00E         	movff	TransmitirGeneral@b+1,TransmitirNumero@a+1
  3916  0026CA  EC99  F00D         	call	_TransmitirNumero	;wreg free
  3917                           
  3918                           ;Lab5.c: 249: switch(caso){
  3919  0026CE  D014               	goto	l2555
  3920  0026D0                     l2545:
  3921                           
  3922                           ;Lab5.c: 251: TransmitirMensaje(" grados Celsius\n");
  3923  0026D0  0E26               	movlw	low STR_6
  3924  0026D2  6E02               	movwf	TransmitirMensaje@a^0,c
  3925  0026D4  ECA9  F014         	call	_TransmitirMensaje	;wreg free
  3926                           
  3927                           ;Lab5.c: 252: break;
  3928  0026D8  0012               	return	
  3929  0026DA                     l2547:
  3930                           
  3931                           ;Lab5.c: 254: TransmitirMensaje(" grados Kelvin\n");
  3932  0026DA  0E37               	movlw	low STR_7
  3933  0026DC  6E02               	movwf	TransmitirMensaje@a^0,c
  3934  0026DE  ECA9  F014         	call	_TransmitirMensaje	;wreg free
  3935                           
  3936                           ;Lab5.c: 255: break;
  3937  0026E2  0012               	return	
  3938  0026E4                     l2549:
  3939                           
  3940                           ;Lab5.c: 257: TransmitirMensaje(" grados Rankine\n");
  3941  0026E4  0E15               	movlw	low STR_8
  3942  0026E6  6E02               	movwf	TransmitirMensaje@a^0,c
  3943  0026E8  ECA9  F014         	call	_TransmitirMensaje	;wreg free
  3944                           
  3945                           ;Lab5.c: 258: break;
  3946  0026EC  0012               	return	
  3947  0026EE                     l2551:
  3948                           
  3949                           ;Lab5.c: 260: TransmitirMensaje(" grados Fahrenheit\n");
  3950  0026EE  0E01               	movlw	low STR_9
  3951  0026F0  6E02               	movwf	TransmitirMensaje@a^0,c
  3952  0026F2  ECA9  F014         	call	_TransmitirMensaje	;wreg free
  3953                           
  3954                           ;Lab5.c: 261: break;
  3955  0026F6  0012               	return	
  3956  0026F8                     l2555:
  3957  0026F8  5018               	movf	TransmitirGeneral@caso^0,w,c
  3958                           
  3959                           ; Switch size 1, requested type "simple"
  3960                           ; Number of cases is 4, Range of values is 0 to 3
  3961                           ; switch strategies available:
  3962                           ; Name         Instructions Cycles
  3963                           ; simple_byte           13     7 (average)
  3964                           ;	Chosen strategy is simple_byte
  3965  0026FA  0A00               	xorlw	0	; case 0
  3966  0026FC  B4D8               	btfsc	status,2,c
  3967  0026FE  D7E8               	goto	l2545
  3968  002700  0A01               	xorlw	1	; case 1
  3969  002702  B4D8               	btfsc	status,2,c
  3970  002704  D7EA               	goto	l2547
  3971  002706  0A03               	xorlw	3	; case 2
  3972  002708  B4D8               	btfsc	status,2,c
  3973  00270A  D7EC               	goto	l2549
  3974  00270C  0A01               	xorlw	1	; case 3
  3975  00270E  A4D8               	btfss	status,2,c
  3976  002710  0012               	return	
  3977  002712  D7ED               	goto	l2551
  3978  002714                     __end_of_TransmitirGeneral:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _TransmitirNumero *****************
  3982 ;; Defined at:
  3983 ;;		line 212 in file "Lab5.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  a               2   12[COMRAM] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  var             2   17[COMRAM] int 
  3988 ;;  centena         2   14[COMRAM] unsigned int 
  3989 ;;  unidad          1   20[COMRAM] unsigned char 
  3990 ;;  decena          1   19[COMRAM] unsigned char 
  3991 ;;  b               1   16[COMRAM] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         2       0       0       0       0       0       0       0       0
  4002 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        9 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 2
  4008 ;; This function calls:
  4009 ;;		_Transmitir
  4010 ;;		___lwdiv
  4011 ;;		___lwmod
  4012 ;;		___wmul
  4013 ;; This function is called by:
  4014 ;;		_TransmitirGeneral
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text11
  4019  001B32                     __ptext11:
  4020                           	callstack 0
  4021  001B32                     _TransmitirNumero:
  4022                           	callstack 27
  4023                           
  4024                           ;Lab5.c: 214: unsigned char decena,unidad;;Lab5.c: 215: unsigned int centena;;Lab5.c: 21
      +                          6: int var=1;
  4025                           
  4026                           ;incstack = 0
  4027  001B32  0E00               	movlw	0
  4028  001B34  6E13               	movwf	(TransmitirNumero@var+1)^0,c
  4029  001B36  0E01               	movlw	1
  4030  001B38  6E12               	movwf	TransmitirNumero@var^0,c
  4031                           
  4032                           ;Lab5.c: 217: char b=0;
  4033  001B3A  0E00               	movlw	0
  4034  001B3C  6E11               	movwf	TransmitirNumero@b^0,c
  4035                           
  4036                           ;Lab5.c: 218: while(a>=var){
  4037  001B3E  D00F               	goto	l2173
  4038  001B40                     l2169:
  4039                           
  4040                           ;Lab5.c: 219: var*=10;
  4041  001B40  C012  F001         	movff	TransmitirNumero@var,___wmul@multiplier
  4042  001B44  C013  F002         	movff	TransmitirNumero@var+1,___wmul@multiplier+1
  4043  001B48  0E00               	movlw	0
  4044  001B4A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4045  001B4C  0E0A               	movlw	10
  4046  001B4E  6E03               	movwf	___wmul@multiplicand^0,c
  4047  001B50  ECBD  F014         	call	___wmul	;wreg free
  4048  001B54  C001  F012         	movff	?___wmul,TransmitirNumero@var
  4049  001B58  C002  F013         	movff	?___wmul+1,TransmitirNumero@var+1
  4050                           
  4051                           ;Lab5.c: 220: b+=1;
  4052  001B5C  2A11               	incf	TransmitirNumero@b^0,f,c
  4053  001B5E                     l2173:
  4054  001B5E  5012               	movf	TransmitirNumero@var^0,w,c
  4055  001B60  5C0D               	subwf	TransmitirNumero@a^0,w,c
  4056  001B62  5013               	movf	(TransmitirNumero@var+1)^0,w,c
  4057  001B64  580E               	subwfb	(TransmitirNumero@a+1)^0,w,c
  4058  001B66  A0D8               	btfss	status,0,c
  4059  001B68  D084               	goto	l2183
  4060  001B6A  D7EA               	goto	l2169
  4061  001B6C                     l2175:
  4062  001B6C  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4063  001B70  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4064  001B74  0E00               	movlw	0
  4065  001B76  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4066  001B78  0E0A               	movlw	10
  4067  001B7A  6E03               	movwf	___lwmod@divisor^0,c
  4068  001B7C  EC2D  F014         	call	___lwmod	;wreg free
  4069  001B80  5001               	movf	?___lwmod^0,w,c
  4070  001B82  6E15               	movwf	TransmitirNumero@unidad^0,c
  4071                           
  4072                           ;Lab5.c: 225: Transmitir(unidad+48);
  4073  001B84  5015               	movf	TransmitirNumero@unidad^0,w,c
  4074  001B86  0F30               	addlw	48
  4075  001B88  EC37  F015         	call	_Transmitir
  4076                           
  4077                           ;Lab5.c: 226: break;
  4078  001B8C  0012               	return	
  4079  001B8E                     l2177:
  4080  001B8E  0E00               	movlw	0
  4081  001B90  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4082  001B92  0E64               	movlw	100
  4083  001B94  6E03               	movwf	___lwmod@divisor^0,c
  4084  001B96  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4085  001B9A  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4086  001B9E  EC2D  F014         	call	___lwmod	;wreg free
  4087  001BA2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4088  001BA6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4089  001BAA  0E00               	movlw	0
  4090  001BAC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4091  001BAE  0E0A               	movlw	10
  4092  001BB0  6E08               	movwf	___lwdiv@divisor^0,c
  4093  001BB2  ECE1  F013         	call	___lwdiv	;wreg free
  4094  001BB6  5006               	movf	?___lwdiv^0,w,c
  4095  001BB8  6E14               	movwf	TransmitirNumero@decena^0,c
  4096                           
  4097                           ;Lab5.c: 228: unidad=a%10;
  4098  001BBA  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4099  001BBE  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4100  001BC2  0E00               	movlw	0
  4101  001BC4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4102  001BC6  0E0A               	movlw	10
  4103  001BC8  6E03               	movwf	___lwmod@divisor^0,c
  4104  001BCA  EC2D  F014         	call	___lwmod	;wreg free
  4105  001BCE  5001               	movf	?___lwmod^0,w,c
  4106  001BD0  6E15               	movwf	TransmitirNumero@unidad^0,c
  4107                           
  4108                           ;Lab5.c: 229: Transmitir(decena+48);
  4109  001BD2  5014               	movf	TransmitirNumero@decena^0,w,c
  4110  001BD4  0F30               	addlw	48
  4111  001BD6  EC37  F015         	call	_Transmitir
  4112                           
  4113                           ;Lab5.c: 230: Transmitir(unidad+48);
  4114  001BDA  5015               	movf	TransmitirNumero@unidad^0,w,c
  4115  001BDC  0F30               	addlw	48
  4116  001BDE  EC37  F015         	call	_Transmitir
  4117                           
  4118                           ;Lab5.c: 231: break;
  4119  001BE2  0012               	return	
  4120  001BE4                     l2179:
  4121  001BE4  0E03               	movlw	3
  4122  001BE6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4123  001BE8  0EE8               	movlw	232
  4124  001BEA  6E03               	movwf	___lwmod@divisor^0,c
  4125  001BEC  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4126  001BF0  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4127  001BF4  EC2D  F014         	call	___lwmod	;wreg free
  4128  001BF8  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4129  001BFC  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4130  001C00  0E00               	movlw	0
  4131  001C02  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4132  001C04  0E64               	movlw	100
  4133  001C06  6E08               	movwf	___lwdiv@divisor^0,c
  4134  001C08  ECE1  F013         	call	___lwdiv	;wreg free
  4135  001C0C  C006  F00F         	movff	?___lwdiv,TransmitirNumero@centena
  4136  001C10  C007  F010         	movff	?___lwdiv+1,TransmitirNumero@centena+1
  4137                           
  4138                           ;Lab5.c: 233: decena=(a%100)/10;
  4139  001C14  0E00               	movlw	0
  4140  001C16  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4141  001C18  0E64               	movlw	100
  4142  001C1A  6E03               	movwf	___lwmod@divisor^0,c
  4143  001C1C  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4144  001C20  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4145  001C24  EC2D  F014         	call	___lwmod	;wreg free
  4146  001C28  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4147  001C2C  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4148  001C30  0E00               	movlw	0
  4149  001C32  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4150  001C34  0E0A               	movlw	10
  4151  001C36  6E08               	movwf	___lwdiv@divisor^0,c
  4152  001C38  ECE1  F013         	call	___lwdiv	;wreg free
  4153  001C3C  5006               	movf	?___lwdiv^0,w,c
  4154  001C3E  6E14               	movwf	TransmitirNumero@decena^0,c
  4155                           
  4156                           ;Lab5.c: 234: unidad=a%10;
  4157  001C40  C00D  F001         	movff	TransmitirNumero@a,___lwmod@dividend
  4158  001C44  C00E  F002         	movff	TransmitirNumero@a+1,___lwmod@dividend+1
  4159  001C48  0E00               	movlw	0
  4160  001C4A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4161  001C4C  0E0A               	movlw	10
  4162  001C4E  6E03               	movwf	___lwmod@divisor^0,c
  4163  001C50  EC2D  F014         	call	___lwmod	;wreg free
  4164  001C54  5001               	movf	?___lwmod^0,w,c
  4165  001C56  6E15               	movwf	TransmitirNumero@unidad^0,c
  4166                           
  4167                           ;Lab5.c: 235: Transmitir(centena+48);
  4168  001C58  500F               	movf	TransmitirNumero@centena^0,w,c
  4169  001C5A  0F30               	addlw	48
  4170  001C5C  EC37  F015         	call	_Transmitir
  4171                           
  4172                           ;Lab5.c: 236: Transmitir(decena+48);
  4173  001C60  5014               	movf	TransmitirNumero@decena^0,w,c
  4174  001C62  0F30               	addlw	48
  4175  001C64  EC37  F015         	call	_Transmitir
  4176                           
  4177                           ;Lab5.c: 237: Transmitir(unidad+48);
  4178  001C68  5015               	movf	TransmitirNumero@unidad^0,w,c
  4179  001C6A  0F30               	addlw	48
  4180  001C6C  EC37  F015         	call	_Transmitir
  4181                           
  4182                           ;Lab5.c: 238: break;
  4183  001C70  0012               	return	
  4184  001C72                     l2183:
  4185  001C72  5011               	movf	TransmitirNumero@b^0,w,c
  4186                           
  4187                           ; Switch size 1, requested type "simple"
  4188                           ; Number of cases is 3, Range of values is 1 to 3
  4189                           ; switch strategies available:
  4190                           ; Name         Instructions Cycles
  4191                           ; simple_byte           10     6 (average)
  4192                           ;	Chosen strategy is simple_byte
  4193  001C74  0A01               	xorlw	1	; case 1
  4194  001C76  B4D8               	btfsc	status,2,c
  4195  001C78  D779               	goto	l2175
  4196  001C7A  0A03               	xorlw	3	; case 2
  4197  001C7C  B4D8               	btfsc	status,2,c
  4198  001C7E  D787               	goto	l2177
  4199  001C80  0A01               	xorlw	1	; case 3
  4200  001C82  A4D8               	btfss	status,2,c
  4201  001C84  0012               	return	
  4202  001C86  D7AE               	goto	l2179
  4203  001C88                     __end_of_TransmitirNumero:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function ___wmul *****************
  4207 ;; Defined at:
  4208 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  multiplier      2    0[COMRAM] unsigned int 
  4211 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  product         2    4[COMRAM] unsigned int 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    0[COMRAM] unsigned int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, prodl, prodh
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         4       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4226 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_TransmitirNumero
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text12
  4238  00297A                     __ptext12:
  4239                           	callstack 0
  4240  00297A                     ___wmul:
  4241                           	callstack 27
  4242                           
  4243                           ;incstack = 0
  4244  00297A  5001               	movf	___wmul@multiplier^0,w,c
  4245  00297C  0203               	mulwf	___wmul@multiplicand^0,c
  4246  00297E  CFF3 F005          	movff	prodl,___wmul@product
  4247  002982  CFF4 F006          	movff	prodh,___wmul@product+1
  4248  002986  5001               	movf	___wmul@multiplier^0,w,c
  4249  002988  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4250  00298A  50F3               	movf	243,w,c
  4251  00298C  2606               	addwf	(___wmul@product+1)^0,f,c
  4252  00298E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4253  002990  0203               	mulwf	___wmul@multiplicand^0,c
  4254  002992  50F3               	movf	243,w,c
  4255  002994  2606               	addwf	(___wmul@product+1)^0,f,c
  4256  002996  C005  F001         	movff	___wmul@product,?___wmul
  4257  00299A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4258  00299E  0012               	return		;funcret
  4259  0029A0                     __end_of___wmul:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function ___lwmod *****************
  4263 ;; Defined at:
  4264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  dividend        2    0[COMRAM] unsigned int 
  4267 ;;  divisor         2    2[COMRAM] unsigned int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  counter         1    4[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    0[COMRAM] unsigned int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         4       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        5 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_TransmitirNumero
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text13
  4294  00285A                     __ptext13:
  4295                           	callstack 0
  4296  00285A                     ___lwmod:
  4297                           	callstack 27
  4298                           
  4299                           ;incstack = 0
  4300  00285A  5003               	movf	___lwmod@divisor^0,w,c
  4301  00285C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4302  00285E  B4D8               	btfsc	status,2,c
  4303  002860  D018               	goto	l779
  4304  002862  0E01               	movlw	1
  4305  002864  6E05               	movwf	___lwmod@counter^0,c
  4306  002866  D004               	goto	l2065
  4307  002868                     l2063:
  4308  002868  90D8               	bcf	status,0,c
  4309  00286A  3603               	rlcf	___lwmod@divisor^0,f,c
  4310  00286C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4311  00286E  2A05               	incf	___lwmod@counter^0,f,c
  4312  002870                     l2065:
  4313  002870  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4314  002872  D7FA               	goto	l2063
  4315  002874                     u1260:
  4316  002874  5003               	movf	___lwmod@divisor^0,w,c
  4317  002876  5C01               	subwf	___lwmod@dividend^0,w,c
  4318  002878  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4319  00287A  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4320  00287C  A0D8               	btfss	status,0,c
  4321  00287E  D004               	goto	l2071
  4322  002880  5003               	movf	___lwmod@divisor^0,w,c
  4323  002882  5E01               	subwf	___lwmod@dividend^0,f,c
  4324  002884  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4325  002886  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4326  002888                     l2071:
  4327  002888  90D8               	bcf	status,0,c
  4328  00288A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4329  00288C  3203               	rrcf	___lwmod@divisor^0,f,c
  4330  00288E  2E05               	decfsz	___lwmod@counter^0,f,c
  4331  002890  D7F1               	goto	u1260
  4332  002892                     l779:
  4333  002892  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4334  002896  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4335  00289A  0012               	return		;funcret
  4336  00289C                     __end_of___lwmod:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function ___lwdiv *****************
  4340 ;; Defined at:
  4341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  dividend        2    5[COMRAM] unsigned int 
  4344 ;;  divisor         2    7[COMRAM] unsigned int 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  quotient        2    9[COMRAM] unsigned int 
  4347 ;;  counter         1   11[COMRAM] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    5[COMRAM] unsigned int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         4       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        7 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_TransmitirNumero
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text14
  4372  0027C2                     __ptext14:
  4373                           	callstack 0
  4374  0027C2                     ___lwdiv:
  4375                           	callstack 27
  4376                           
  4377                           ;incstack = 0
  4378  0027C2  0E00               	movlw	0
  4379  0027C4  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  4380  0027C6  0E00               	movlw	0
  4381  0027C8  6E0A               	movwf	___lwdiv@quotient^0,c
  4382  0027CA  5008               	movf	___lwdiv@divisor^0,w,c
  4383  0027CC  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4384  0027CE  B4D8               	btfsc	status,2,c
  4385  0027D0  D01C               	goto	l769
  4386  0027D2  0E01               	movlw	1
  4387  0027D4  6E0C               	movwf	___lwdiv@counter^0,c
  4388  0027D6  D004               	goto	l2045
  4389  0027D8                     l2043:
  4390  0027D8  90D8               	bcf	status,0,c
  4391  0027DA  3608               	rlcf	___lwdiv@divisor^0,f,c
  4392  0027DC  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4393  0027DE  2A0C               	incf	___lwdiv@counter^0,f,c
  4394  0027E0                     l2045:
  4395  0027E0  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4396  0027E2  D7FA               	goto	l2043
  4397  0027E4                     u1230:
  4398  0027E4  90D8               	bcf	status,0,c
  4399  0027E6  360A               	rlcf	___lwdiv@quotient^0,f,c
  4400  0027E8  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4401  0027EA  5008               	movf	___lwdiv@divisor^0,w,c
  4402  0027EC  5C06               	subwf	___lwdiv@dividend^0,w,c
  4403  0027EE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4404  0027F0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4405  0027F2  A0D8               	btfss	status,0,c
  4406  0027F4  D005               	goto	l2055
  4407  0027F6  5008               	movf	___lwdiv@divisor^0,w,c
  4408  0027F8  5E06               	subwf	___lwdiv@dividend^0,f,c
  4409  0027FA  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4410  0027FC  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4411  0027FE  800A               	bsf	___lwdiv@quotient^0,0,c
  4412  002800                     l2055:
  4413  002800  90D8               	bcf	status,0,c
  4414  002802  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4415  002804  3208               	rrcf	___lwdiv@divisor^0,f,c
  4416  002806  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4417  002808  D7ED               	goto	u1230
  4418  00280A                     l769:
  4419  00280A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4420  00280E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4421  002812  0012               	return		;funcret
  4422  002814                     __end_of___lwdiv:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _TransmitirMensaje *****************
  4426 ;; Defined at:
  4427 ;;		line 205 in file "Lab5.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  a               1    1[COMRAM] PTR unsigned char 
  4430 ;;		 -> STR_9(20), STR_8(17), STR_7(16), STR_6(17), 
  4431 ;;		 -> STR_5(3), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4443 ;;      Params:         1       0       0       0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4446 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4447 ;;Total ram usage:        1 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 2
  4450 ;; This function calls:
  4451 ;;		_Transmitir
  4452 ;; This function is called by:
  4453 ;;		_TransmitirGeneral
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text15
  4458  002952                     __ptext15:
  4459                           	callstack 0
  4460  002952                     _TransmitirMensaje:
  4461                           	callstack 27
  4462                           
  4463                           ;Lab5.c: 206: while(*a != '\0'){
  4464                           
  4465                           ;incstack = 0
  4466  002952  D009               	goto	l2165
  4467  002954                     l2161:
  4468                           
  4469                           ;Lab5.c: 207: Transmitir(*a);
  4470  002954  C002  FFF6         	movff	TransmitirMensaje@a,tblptrl
  4471  002958                     	if	1	;There is more than 1 active tblptr byte
  4472  002958  0E08               	movlw	high __smallconst
  4473  00295A  6EF7               	movwf	tblptrh,c
  4474  00295C                     	endif
  4475  00295C                     	if	0	;tblptru may be non-zero
  4476  00295C                     	endif
  4477  00295C                     	if	0	;tblptru may be non-zero
  4478  00295C                     	endif
  4479  00295C  0008               	tblrd		*
  4480  00295E  50F5               	movf	tablat,w,c
  4481  002960  EC37  F015         	call	_Transmitir
  4482                           
  4483                           ;Lab5.c: 208: a++;
  4484  002964  2A02               	incf	TransmitirMensaje@a^0,f,c
  4485  002966                     l2165:
  4486  002966  C002  FFF6         	movff	TransmitirMensaje@a,tblptrl
  4487  00296A                     	if	1	;There is more than 1 active tblptr byte
  4488  00296A  0E08               	movlw	high __smallconst
  4489  00296C  6EF7               	movwf	tblptrh,c
  4490  00296E                     	endif
  4491  00296E                     	if	0	;tblptru may be non-zero
  4492  00296E                     	endif
  4493  00296E                     	if	0	;tblptru may be non-zero
  4494  00296E                     	endif
  4495  00296E  0008               	tblrd		*
  4496  002970  50F5               	movf	tablat,w,c
  4497  002972  0900               	iorlw	0
  4498  002974  B4D8               	btfsc	status,2,c
  4499  002976  0012               	return	
  4500  002978  D7ED               	goto	l2161
  4501  00297A                     __end_of_TransmitirMensaje:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _Transmitir *****************
  4505 ;; Defined at:
  4506 ;;		line 200 in file "Lab5.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  BufferT         1    wreg     unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  BufferT         1    0[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4523 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        1 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_TransmitirMensaje
  4531 ;;		_TransmitirNumero
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text16
  4536  002A6E                     __ptext16:
  4537                           	callstack 0
  4538  002A6E                     _Transmitir:
  4539                           	callstack 27
  4540                           
  4541                           ;incstack = 0
  4542                           ;Transmitir@BufferT stored from wreg
  4543  002A6E  6E01               	movwf	Transmitir@BufferT^0,c
  4544  002A70                     
  4545                           ;Lab5.c: 201: while(TRMT==0);
  4546  002A70  A2AC               	btfss	4012,1,c	;volatile
  4547  002A72  D7FE               	goto	l1911
  4548                           
  4549                           ;Lab5.c: 202: TXREG=BufferT;
  4550  002A74  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  4551  002A78  0012               	return		;funcret
  4552  002A7A                     __end_of_Transmitir:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _InicializaLCD *****************
  4556 ;; Defined at:
  4557 ;;		line 67 in file "LibLCDXC8.h"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 4
  4578 ;; This function calls:
  4579 ;;		_BorraLCD
  4580 ;;		_EnviaDato
  4581 ;;		_HabilitaLCD
  4582 ;;		_RetardoLCD
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text17
  4589  0023D6                     __ptext17:
  4590                           	callstack 0
  4591  0023D6                     _InicializaLCD:
  4592                           	callstack 26
  4593                           
  4594                           ;LibLCDXC8.h: 69: LATD2=0;
  4595                           
  4596                           ;incstack = 0
  4597  0023D6  948C               	bcf	3980,2,c	;volatile
  4598                           
  4599                           ;LibLCDXC8.h: 70: if(interfaz==4)
  4600  0023D8  0E04               	movlw	4
  4601  0023DA  185E               	xorwf	_interfaz^0,w,c
  4602  0023DC  A4D8               	btfss	status,2,c
  4603  0023DE  D004               	goto	l2459
  4604                           
  4605                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
  4606  0023E0  508C               	movf	140,w,c	;volatile
  4607  0023E2  0B0F               	andlw	15
  4608  0023E4  0930               	iorlw	48
  4609  0023E6  D001               	goto	L3
  4610  0023E8                     l2459:
  4611                           
  4612                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
  4613  0023E8  0E3F               	movlw	63
  4614  0023EA                     L3:
  4615  0023EA  6E8C               	movwf	140,c	;volatile
  4616                           
  4617                           ;LibLCDXC8.h: 74: HabilitaLCD();
  4618  0023EC  EC30  F015         	call	_HabilitaLCD	;wreg free
  4619                           
  4620                           ;LibLCDXC8.h: 75: RetardoLCD(1);
  4621  0023F0  0E01               	movlw	1
  4622  0023F2  ECB6  F013         	call	_RetardoLCD
  4623                           
  4624                           ;LibLCDXC8.h: 76: if(interfaz==4)
  4625  0023F6  0E04               	movlw	4
  4626  0023F8  185E               	xorwf	_interfaz^0,w,c
  4627  0023FA  A4D8               	btfss	status,2,c
  4628  0023FC  D004               	goto	l2469
  4629                           
  4630                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
  4631  0023FE  508C               	movf	140,w,c	;volatile
  4632  002400  0B0F               	andlw	15
  4633  002402  0930               	iorlw	48
  4634  002404  D001               	goto	L4
  4635  002406                     l2469:
  4636                           
  4637                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  4638  002406  0E3F               	movlw	63
  4639  002408                     L4:
  4640  002408  6E8C               	movwf	140,c	;volatile
  4641                           
  4642                           ;LibLCDXC8.h: 80: HabilitaLCD();
  4643  00240A  EC30  F015         	call	_HabilitaLCD	;wreg free
  4644                           
  4645                           ;LibLCDXC8.h: 81: RetardoLCD(3);
  4646  00240E  0E03               	movlw	3
  4647  002410  ECB6  F013         	call	_RetardoLCD
  4648                           
  4649                           ;LibLCDXC8.h: 82: if(interfaz==4)
  4650  002414  0E04               	movlw	4
  4651  002416  185E               	xorwf	_interfaz^0,w,c
  4652  002418  A4D8               	btfss	status,2,c
  4653  00241A  D004               	goto	l2479
  4654                           
  4655                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x30;
  4656  00241C  508C               	movf	140,w,c	;volatile
  4657  00241E  0B0F               	andlw	15
  4658  002420  0930               	iorlw	48
  4659  002422  D001               	goto	L5
  4660  002424                     l2479:
  4661                           
  4662                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
  4663  002424  0E3F               	movlw	63
  4664  002426                     L5:
  4665  002426  6E8C               	movwf	140,c	;volatile
  4666                           
  4667                           ;LibLCDXC8.h: 86: HabilitaLCD();
  4668  002428  EC30  F015         	call	_HabilitaLCD	;wreg free
  4669                           
  4670                           ;LibLCDXC8.h: 87: RetardoLCD(4);
  4671  00242C  0E04               	movlw	4
  4672  00242E  ECB6  F013         	call	_RetardoLCD
  4673                           
  4674                           ;LibLCDXC8.h: 88: if(interfaz==4){
  4675  002432  0E04               	movlw	4
  4676  002434  185E               	xorwf	_interfaz^0,w,c
  4677  002436  A4D8               	btfss	status,2,c
  4678  002438  D011               	goto	l2499
  4679                           
  4680                           ;LibLCDXC8.h: 89: LATD=(LATD & 0b00001111) | 0x20;
  4681  00243A  508C               	movf	140,w,c	;volatile
  4682  00243C  0B0F               	andlw	15
  4683  00243E  0920               	iorlw	32
  4684  002440  6E8C               	movwf	140,c	;volatile
  4685                           
  4686                           ;LibLCDXC8.h: 90: HabilitaLCD();
  4687  002442  EC30  F015         	call	_HabilitaLCD	;wreg free
  4688                           
  4689                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  4690  002446  0E04               	movlw	4
  4691  002448  ECB6  F013         	call	_RetardoLCD
  4692                           
  4693                           ;LibLCDXC8.h: 92: EnviaDato(0x2F);
  4694  00244C  0E2F               	movlw	47
  4695  00244E  EC0A  F014         	call	_EnviaDato
  4696                           
  4697                           ;LibLCDXC8.h: 93: HabilitaLCD();
  4698  002452  EC30  F015         	call	_HabilitaLCD	;wreg free
  4699                           
  4700                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  4701  002456  0E04               	movlw	4
  4702  002458  ECB6  F013         	call	_RetardoLCD
  4703  00245C                     l2499:
  4704                           
  4705                           ;LibLCDXC8.h: 95: };LibLCDXC8.h: 96: BorraLCD();
  4706  00245C  EC26  F015         	call	_BorraLCD	;wreg free
  4707                           
  4708                           ;LibLCDXC8.h: 97: EnviaDato(0xF);
  4709  002460  0E0F               	movlw	15
  4710  002462  EC0A  F014         	call	_EnviaDato
  4711                           
  4712                           ;LibLCDXC8.h: 98: HabilitaLCD();
  4713  002466  EC30  F015         	call	_HabilitaLCD	;wreg free
  4714                           
  4715                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  4716  00246A  0E04               	movlw	4
  4717  00246C  ECB6  F013         	call	_RetardoLCD
  4718  002470  0012               	return		;funcret
  4719  002472                     __end_of_InicializaLCD:
  4720                           	callstack 0
  4721                           
  4722 ;; *************** function _BorraLCD *****************
  4723 ;; Defined at:
  4724 ;;		line 110 in file "LibLCDXC8.h"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 3
  4745 ;; This function calls:
  4746 ;;		_EnviaDato
  4747 ;;		_HabilitaLCD
  4748 ;;		_RetardoLCD
  4749 ;; This function is called by:
  4750 ;;		_InicializaLCD
  4751 ;;		_main
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text18
  4756  002A4C                     __ptext18:
  4757                           	callstack 0
  4758  002A4C                     _BorraLCD:
  4759                           	callstack 26
  4760                           
  4761                           ;LibLCDXC8.h: 112: LATD2=0;
  4762                           
  4763                           ;incstack = 0
  4764  002A4C  948C               	bcf	3980,2,c	;volatile
  4765                           
  4766                           ;LibLCDXC8.h: 113: EnviaDato(0x01);
  4767  002A4E  0E01               	movlw	1
  4768  002A50  EC0A  F014         	call	_EnviaDato
  4769                           
  4770                           ;LibLCDXC8.h: 114: HabilitaLCD();
  4771  002A54  EC30  F015         	call	_HabilitaLCD	;wreg free
  4772                           
  4773                           ;LibLCDXC8.h: 115: RetardoLCD(2);
  4774  002A58  0E02               	movlw	2
  4775  002A5A  ECB6  F013         	call	_RetardoLCD
  4776  002A5E  0012               	return		;funcret
  4777  002A60                     __end_of_BorraLCD:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _GuardarASCII *****************
  4781 ;; Defined at:
  4782 ;;		line 344 in file "LibLCDXC8.h"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  cgram           1    wreg     unsigned char 
  4785 ;;  arreglo         1    5[COMRAM] PTR unsigned char 
  4786 ;;		 -> grados(8), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  cgram           1    6[COMRAM] unsigned char 
  4789 ;;  i               1    7[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:         1       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:        3 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 4
  4806 ;; This function calls:
  4807 ;;		_DireccionaLCD
  4808 ;;		_EscribeLCD_c
  4809 ;; This function is called by:
  4810 ;;		_main
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text19
  4815  0028D6                     __ptext19:
  4816                           	callstack 0
  4817  0028D6                     _GuardarASCII:
  4818                           	callstack 26
  4819                           
  4820                           ;incstack = 0
  4821                           ;GuardarASCII@cgram stored from wreg
  4822  0028D6  6E07               	movwf	GuardarASCII@cgram^0,c
  4823                           
  4824                           ;LibLCDXC8.h: 345: unsigned char i;;LibLCDXC8.h: 346: DireccionaLCD(cgram);
  4825  0028D8  5007               	movf	GuardarASCII@cgram^0,w,c
  4826  0028DA  EC10  F015         	call	_DireccionaLCD
  4827                           
  4828                           ;LibLCDXC8.h: 347: for(i=0;i<8;i++){
  4829  0028DE  0E00               	movlw	0
  4830  0028E0  6E08               	movwf	GuardarASCII@i^0,c
  4831  0028E2                     l2687:
  4832                           
  4833                           ;LibLCDXC8.h: 348: EscribeLCD_c(arreglo[i]);
  4834  0028E2  5006               	movf	GuardarASCII@arreglo^0,w,c
  4835  0028E4  2408               	addwf	GuardarASCII@i^0,w,c
  4836  0028E6  6ED9               	movwf	fsr2l,c
  4837  0028E8  6ADA               	clrf	fsr2h,c
  4838  0028EA  50DF               	movf	indf2,w,c
  4839  0028EC  EC1B  F015         	call	_EscribeLCD_c
  4840  0028F0  2A08               	incf	GuardarASCII@i^0,f,c
  4841  0028F2  0E07               	movlw	7
  4842  0028F4  6408               	cpfsgt	GuardarASCII@i^0,c
  4843  0028F6  D7F5               	goto	l2687
  4844                           
  4845                           ;LibLCDXC8.h: 349: };LibLCDXC8.h: 350: DireccionaLCD(128);
  4846  0028F8  0E80               	movlw	128
  4847  0028FA  EC10  F015         	call	_DireccionaLCD
  4848  0028FE  0012               	return		;funcret
  4849  002900                     __end_of_GuardarASCII:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _DireccionaLCD *****************
  4853 ;; Defined at:
  4854 ;;		line 302 in file "LibLCDXC8.h"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  a               1    wreg     unsigned char 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  a               1    4[COMRAM] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        1 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 3
  4875 ;; This function calls:
  4876 ;;		_EnviaDato
  4877 ;;		_HabilitaLCD
  4878 ;;		_RetardoLCD
  4879 ;; This function is called by:
  4880 ;;		_GuardarASCII
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text20
  4886  002A20                     __ptext20:
  4887                           	callstack 0
  4888  002A20                     _DireccionaLCD:
  4889                           	callstack 26
  4890                           
  4891                           ;incstack = 0
  4892                           ;DireccionaLCD@a stored from wreg
  4893  002A20  6E05               	movwf	DireccionaLCD@a^0,c
  4894                           
  4895                           ;LibLCDXC8.h: 305: LATD2=0;
  4896  002A22  948C               	bcf	3980,2,c	;volatile
  4897                           
  4898                           ;LibLCDXC8.h: 306: EnviaDato(a);
  4899  002A24  5005               	movf	DireccionaLCD@a^0,w,c
  4900  002A26  EC0A  F014         	call	_EnviaDato
  4901                           
  4902                           ;LibLCDXC8.h: 307: HabilitaLCD();
  4903  002A2A  EC30  F015         	call	_HabilitaLCD	;wreg free
  4904                           
  4905                           ;LibLCDXC8.h: 308: RetardoLCD(4);
  4906  002A2E  0E04               	movlw	4
  4907  002A30  ECB6  F013         	call	_RetardoLCD
  4908  002A34  0012               	return		;funcret
  4909  002A36                     __end_of_DireccionaLCD:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _EscribeLCD_2Decimales *****************
  4913 ;; Defined at:
  4914 ;;		line 332 in file "LibLCDXC8.h"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  a               3   75[COMRAM] void 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  num             2   78[COMRAM] int 
  4919 ;;  unidad          1   81[COMRAM] unsigned char 
  4920 ;;  decimalesP      1   80[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4930 ;;      Params:         3       0       0       0       0       0       0       0       0
  4931 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4933 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4934 ;;Total ram usage:        7 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 4
  4937 ;; This function calls:
  4938 ;;		_EscribeLCD_c
  4939 ;;		_EscribeLCD_n8
  4940 ;;		___awmod
  4941 ;;		___ftmul
  4942 ;;		___fttol
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text21
  4949  0024F4                     __ptext21:
  4950                           	callstack 0
  4951  0024F4                     _EscribeLCD_2Decimales:
  4952                           	callstack 26
  4953                           
  4954                           ;LibLCDXC8.h: 333: int num;;LibLCDXC8.h: 334: char decimalesP;;LibLCDXC8.h: 335: char un
      +                          idad;;LibLCDXC8.h: 336: unidad=a;
  4955                           
  4956                           ;incstack = 0
  4957  0024F4  C04C  F03D         	movff	EscribeLCD_2Decimales@a,___fttol@f1
  4958  0024F8  C04D  F03E         	movff	EscribeLCD_2Decimales@a+1,___fttol@f1+1
  4959  0024FC  C04E  F03F         	movff	EscribeLCD_2Decimales@a+2,___fttol@f1+2
  4960  002500  ECC7  F010         	call	___fttol	;wreg free
  4961  002504  503D               	movf	?___fttol^0,w,c
  4962  002506  6E52               	movwf	EscribeLCD_2Decimales@unidad^0,c
  4963                           
  4964                           ;LibLCDXC8.h: 337: num=(a*100);
  4965  002508  0E00               	movlw	0
  4966  00250A  6E0C               	movwf	___ftmul@f2^0,c
  4967  00250C  0EC8               	movlw	200
  4968  00250E  6E0D               	movwf	(___ftmul@f2+1)^0,c
  4969  002510  0E42               	movlw	66
  4970  002512  6E0E               	movwf	(___ftmul@f2+2)^0,c
  4971  002514  C04C  F009         	movff	EscribeLCD_2Decimales@a,___ftmul@f1
  4972  002518  C04D  F00A         	movff	EscribeLCD_2Decimales@a+1,___ftmul@f1+1
  4973  00251C  C04E  F00B         	movff	EscribeLCD_2Decimales@a+2,___ftmul@f1+2
  4974  002520  EC67  F00F         	call	___ftmul	;wreg free
  4975  002524  C009  F03D         	movff	?___ftmul,___fttol@f1
  4976  002528  C00A  F03E         	movff	?___ftmul+1,___fttol@f1+1
  4977  00252C  C00B  F03F         	movff	?___ftmul+2,___fttol@f1+2
  4978  002530  ECC7  F010         	call	___fttol	;wreg free
  4979  002534  C03D  F04F         	movff	?___fttol,EscribeLCD_2Decimales@num
  4980  002538  C03E  F050         	movff	?___fttol+1,EscribeLCD_2Decimales@num+1
  4981                           
  4982                           ;LibLCDXC8.h: 338: decimalesP=num%100;
  4983  00253C  C04F  F001         	movff	EscribeLCD_2Decimales@num,___awmod@dividend
  4984  002540  C050  F002         	movff	EscribeLCD_2Decimales@num+1,___awmod@dividend+1
  4985  002544  0E00               	movlw	0
  4986  002546  6E04               	movwf	(___awmod@divisor+1)^0,c
  4987  002548  0E64               	movlw	100
  4988  00254A  6E03               	movwf	___awmod@divisor^0,c
  4989  00254C  ECF2  F012         	call	___awmod	;wreg free
  4990  002550  5001               	movf	?___awmod^0,w,c
  4991  002552  6E51               	movwf	EscribeLCD_2Decimales@decimalesP^0,c
  4992                           
  4993                           ;LibLCDXC8.h: 339: EscribeLCD_n8(unidad,1);
  4994  002554  0E01               	movlw	1
  4995  002556  6E09               	movwf	EscribeLCD_n8@b^0,c
  4996  002558  5052               	movf	EscribeLCD_2Decimales@unidad^0,w,c
  4997  00255A  EC54  F010         	call	_EscribeLCD_n8
  4998                           
  4999                           ;LibLCDXC8.h: 340: EscribeLCD_c('.');
  5000  00255E  0E2E               	movlw	46
  5001  002560  EC1B  F015         	call	_EscribeLCD_c
  5002                           
  5003                           ;LibLCDXC8.h: 341: EscribeLCD_n8(decimalesP,2);
  5004  002564  0E02               	movlw	2
  5005  002566  6E09               	movwf	EscribeLCD_n8@b^0,c
  5006  002568  5051               	movf	EscribeLCD_2Decimales@decimalesP^0,w,c
  5007  00256A  EC54  F010         	call	_EscribeLCD_n8
  5008  00256E  0012               	return		;funcret
  5009  002570                     __end_of_EscribeLCD_2Decimales:
  5010                           	callstack 0
  5011                           
  5012 ;; *************** function ___fttol *****************
  5013 ;; Defined at:
  5014 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fttol.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  f1              3   60[COMRAM] float 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  lval            4   70[COMRAM] unsigned long 
  5019 ;;  exp1            1   74[COMRAM] unsigned char 
  5020 ;;  sign1           1   69[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  4   60[COMRAM] long 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5030 ;;      Params:         4       0       0       0       0       0       0       0       0
  5031 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5032 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5033 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5034 ;;Total ram usage:       15 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_EscribeLCD_2Decimales
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text22
  5046  00218E                     __ptext22:
  5047                           	callstack 0
  5048  00218E                     ___fttol:
  5049                           	callstack 29
  5050                           
  5051                           ;incstack = 0
  5052  00218E  C03F  F041         	movff	___fttol@f1+2,??___fttol
  5053  002192  6A42               	clrf	(??___fttol+1)^0,c
  5054  002194  6A43               	clrf	(??___fttol+2)^0,c
  5055  002196  343E               	rlcf	(___fttol@f1+1)^0,w,c
  5056  002198  3641               	rlcf	??___fttol^0,f,c
  5057  00219A  E301               	bnc	u1721
  5058  00219C  8042               	bsf	(??___fttol+1)^0,0,c
  5059  00219E                     u1721:
  5060  00219E  5041               	movf	??___fttol^0,w,c
  5061  0021A0  6E4B               	movwf	___fttol@exp1^0,c
  5062  0021A2  504B               	movf	___fttol@exp1^0,w,c
  5063  0021A4  A4D8               	btfss	status,2,c
  5064  0021A6  D009               	goto	l2409
  5065  0021A8                     u1730:
  5066  0021A8  0E00               	movlw	0
  5067  0021AA  6E3D               	movwf	?___fttol^0,c
  5068  0021AC  0E00               	movlw	0
  5069  0021AE  6E3E               	movwf	(?___fttol+1)^0,c
  5070  0021B0  0E00               	movlw	0
  5071  0021B2  6E3F               	movwf	(?___fttol+2)^0,c
  5072  0021B4  0E00               	movlw	0
  5073  0021B6  6E40               	movwf	(?___fttol+3)^0,c
  5074  0021B8  0012               	return	
  5075  0021BA                     l2409:
  5076  0021BA  0E17               	movlw	23
  5077  0021BC  6E41               	movwf	??___fttol^0,c
  5078  0021BE  C03D  F042         	movff	___fttol@f1,??___fttol+1
  5079  0021C2  C03E  F043         	movff	___fttol@f1+1,??___fttol+2
  5080  0021C6  C03F  F044         	movff	___fttol@f1+2,??___fttol+3
  5081  0021CA  2841               	incf	??___fttol^0,w,c
  5082  0021CC  6E45               	movwf	(??___fttol+4)^0,c
  5083  0021CE  D004               	goto	u1740
  5084  0021D0                     u1745:
  5085  0021D0  90D8               	bcf	status,0,c
  5086  0021D2  3244               	rrcf	(??___fttol+3)^0,f,c
  5087  0021D4  3243               	rrcf	(??___fttol+2)^0,f,c
  5088  0021D6  3242               	rrcf	(??___fttol+1)^0,f,c
  5089  0021D8                     u1740:
  5090  0021D8  2E45               	decfsz	(??___fttol+4)^0,f,c
  5091  0021DA  D7FA               	goto	u1745
  5092  0021DC  5042               	movf	(??___fttol+1)^0,w,c
  5093  0021DE  6E46               	movwf	___fttol@sign1^0,c
  5094  0021E0  8E3E               	bsf	(___fttol@f1+1)^0,7,c
  5095  0021E2  0EFF               	movlw	255
  5096  0021E4  163D               	andwf	___fttol@f1^0,f,c
  5097  0021E6  0EFF               	movlw	255
  5098  0021E8  163E               	andwf	(___fttol@f1+1)^0,f,c
  5099  0021EA  0E00               	movlw	0
  5100  0021EC  163F               	andwf	(___fttol@f1+2)^0,f,c
  5101  0021EE  503D               	movf	___fttol@f1^0,w,c
  5102  0021F0  6E47               	movwf	___fttol@lval^0,c
  5103  0021F2  503E               	movf	(___fttol@f1+1)^0,w,c
  5104  0021F4  6E48               	movwf	(___fttol@lval+1)^0,c
  5105  0021F6  503F               	movf	(___fttol@f1+2)^0,w,c
  5106  0021F8  6E49               	movwf	(___fttol@lval+2)^0,c
  5107  0021FA  6A4A               	clrf	(___fttol@lval+3)^0,c
  5108  0021FC  0E8E               	movlw	142
  5109  0021FE  5E4B               	subwf	___fttol@exp1^0,f,c
  5110  002200  AE4B               	btfss	___fttol@exp1^0,7,c
  5111  002202  D00D               	goto	l2431
  5112  002204  504B               	movf	___fttol@exp1^0,w,c
  5113  002206  0A80               	xorlw	128
  5114  002208  0F8F               	addlw	143
  5115  00220A  A0D8               	btfss	status,0,c
  5116  00220C  D7CD               	goto	u1730
  5117  00220E                     l2427:
  5118  00220E  90D8               	bcf	status,0,c
  5119  002210  324A               	rrcf	(___fttol@lval+3)^0,f,c
  5120  002212  3249               	rrcf	(___fttol@lval+2)^0,f,c
  5121  002214  3248               	rrcf	(___fttol@lval+1)^0,f,c
  5122  002216  3247               	rrcf	___fttol@lval^0,f,c
  5123  002218  3E4B               	incfsz	___fttol@exp1^0,f,c
  5124  00221A  D7F9               	goto	l2427
  5125  00221C  D00D               	goto	u1780
  5126  00221E                     l2431:
  5127  00221E  0E17               	movlw	23
  5128  002220  644B               	cpfsgt	___fttol@exp1^0,c
  5129  002222  D007               	goto	l2439
  5130  002224  D7C1               	goto	u1730
  5131  002226                     l2437:
  5132  002226  90D8               	bcf	status,0,c
  5133  002228  3647               	rlcf	___fttol@lval^0,f,c
  5134  00222A  3648               	rlcf	(___fttol@lval+1)^0,f,c
  5135  00222C  3649               	rlcf	(___fttol@lval+2)^0,f,c
  5136  00222E  364A               	rlcf	(___fttol@lval+3)^0,f,c
  5137  002230  064B               	decf	___fttol@exp1^0,f,c
  5138  002232                     l2439:
  5139  002232  504B               	movf	___fttol@exp1^0,w,c
  5140  002234  A4D8               	btfss	status,2,c
  5141  002236  D7F7               	goto	l2437
  5142  002238                     u1780:
  5143  002238  5046               	movf	___fttol@sign1^0,w,c
  5144  00223A  B4D8               	btfsc	status,2,c
  5145  00223C  D008               	goto	l2445
  5146  00223E  1E4A               	comf	(___fttol@lval+3)^0,f,c
  5147  002240  1E49               	comf	(___fttol@lval+2)^0,f,c
  5148  002242  1E48               	comf	(___fttol@lval+1)^0,f,c
  5149  002244  6C47               	negf	___fttol@lval^0,c
  5150  002246  0E00               	movlw	0
  5151  002248  2248               	addwfc	(___fttol@lval+1)^0,f,c
  5152  00224A  2249               	addwfc	(___fttol@lval+2)^0,f,c
  5153  00224C  224A               	addwfc	(___fttol@lval+3)^0,f,c
  5154  00224E                     l2445:
  5155  00224E  C047  F03D         	movff	___fttol@lval,?___fttol
  5156  002252  C048  F03E         	movff	___fttol@lval+1,?___fttol+1
  5157  002256  C049  F03F         	movff	___fttol@lval+2,?___fttol+2
  5158  00225A  C04A  F040         	movff	___fttol@lval+3,?___fttol+3
  5159  00225E  0012               	return		;funcret
  5160  002260                     __end_of___fttol:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function ___ftmul *****************
  5164 ;; Defined at:
  5165 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftmul.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  f1              3    8[COMRAM] float 
  5168 ;;  f2              3   11[COMRAM] float 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  5171 ;;  sign            1   22[COMRAM] unsigned char 
  5172 ;;  cntr            1   21[COMRAM] unsigned char 
  5173 ;;  exp             1   17[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  3    8[COMRAM] float 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5183 ;;      Params:         6       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5185 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5186 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:       15 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 2
  5190 ;; This function calls:
  5191 ;;		___ftpack
  5192 ;; This function is called by:
  5193 ;;		_EscribeLCD_2Decimales
  5194 ;;		_main
  5195 ;;		_calcularTemperatura
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text23
  5200  001ECE                     __ptext23:
  5201                           	callstack 0
  5202  001ECE                     ___ftmul:
  5203                           	callstack 27
  5204                           
  5205                           ;incstack = 0
  5206  001ECE  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  5207  001ED2  6A10               	clrf	(??___ftmul+1)^0,c
  5208  001ED4  6A11               	clrf	(??___ftmul+2)^0,c
  5209  001ED6  340A               	rlcf	(___ftmul@f1+1)^0,w,c
  5210  001ED8  360F               	rlcf	??___ftmul^0,f,c
  5211  001EDA  E301               	bnc	u1571
  5212  001EDC  8010               	bsf	(??___ftmul+1)^0,0,c
  5213  001EDE                     u1571:
  5214  001EDE  500F               	movf	??___ftmul^0,w,c
  5215  001EE0  6E12               	movwf	___ftmul@exp^0,c
  5216  001EE2  5012               	movf	___ftmul@exp^0,w,c
  5217  001EE4  A4D8               	btfss	status,2,c
  5218  001EE6  D007               	goto	l2307
  5219  001EE8  0E00               	movlw	0
  5220  001EEA  6E09               	movwf	?___ftmul^0,c
  5221  001EEC  0E00               	movlw	0
  5222  001EEE  6E0A               	movwf	(?___ftmul+1)^0,c
  5223  001EF0  0E00               	movlw	0
  5224  001EF2  6E0B               	movwf	(?___ftmul+2)^0,c
  5225  001EF4  0012               	return	
  5226  001EF6                     l2307:
  5227  001EF6  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  5228  001EFA  6A10               	clrf	(??___ftmul+1)^0,c
  5229  001EFC  6A11               	clrf	(??___ftmul+2)^0,c
  5230  001EFE  340D               	rlcf	(___ftmul@f2+1)^0,w,c
  5231  001F00  360F               	rlcf	??___ftmul^0,f,c
  5232  001F02  E301               	bnc	u1591
  5233  001F04  8010               	bsf	(??___ftmul+1)^0,0,c
  5234  001F06                     u1591:
  5235  001F06  500F               	movf	??___ftmul^0,w,c
  5236  001F08  6E17               	movwf	___ftmul@sign^0,c
  5237  001F0A  5017               	movf	___ftmul@sign^0,w,c
  5238  001F0C  A4D8               	btfss	status,2,c
  5239  001F0E  D007               	goto	l2313
  5240  001F10  0E00               	movlw	0
  5241  001F12  6E09               	movwf	?___ftmul^0,c
  5242  001F14  0E00               	movlw	0
  5243  001F16  6E0A               	movwf	(?___ftmul+1)^0,c
  5244  001F18  0E00               	movlw	0
  5245  001F1A  6E0B               	movwf	(?___ftmul+2)^0,c
  5246  001F1C  0012               	return	
  5247  001F1E                     l2313:
  5248  001F1E  5017               	movf	___ftmul@sign^0,w,c
  5249  001F20  0F7B               	addlw	123
  5250  001F22  2612               	addwf	___ftmul@exp^0,f,c
  5251  001F24  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  5252  001F28  500E               	movf	(___ftmul@f2+2)^0,w,c
  5253  001F2A  1A17               	xorwf	___ftmul@sign^0,f,c
  5254  001F2C  0E80               	movlw	128
  5255  001F2E  1617               	andwf	___ftmul@sign^0,f,c
  5256  001F30  8E0A               	bsf	(___ftmul@f1+1)^0,7,c
  5257  001F32  8E0D               	bsf	(___ftmul@f2+1)^0,7,c
  5258  001F34  0EFF               	movlw	255
  5259  001F36  160C               	andwf	___ftmul@f2^0,f,c
  5260  001F38  0EFF               	movlw	255
  5261  001F3A  160D               	andwf	(___ftmul@f2+1)^0,f,c
  5262  001F3C  0E00               	movlw	0
  5263  001F3E  160E               	andwf	(___ftmul@f2+2)^0,f,c
  5264  001F40  0E00               	movlw	0
  5265  001F42  6E13               	movwf	___ftmul@f3_as_product^0,c
  5266  001F44  0E00               	movlw	0
  5267  001F46  6E14               	movwf	(___ftmul@f3_as_product+1)^0,c
  5268  001F48  0E00               	movlw	0
  5269  001F4A  6E15               	movwf	(___ftmul@f3_as_product+2)^0,c
  5270  001F4C  0E07               	movlw	7
  5271  001F4E  6E16               	movwf	___ftmul@cntr^0,c
  5272  001F50                     l2327:
  5273  001F50  A009               	btfss	___ftmul@f1^0,0,c
  5274  001F52  D006               	goto	l2331
  5275  001F54  500C               	movf	___ftmul@f2^0,w,c
  5276  001F56  2613               	addwf	___ftmul@f3_as_product^0,f,c
  5277  001F58  500D               	movf	(___ftmul@f2+1)^0,w,c
  5278  001F5A  2214               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5279  001F5C  500E               	movf	(___ftmul@f2+2)^0,w,c
  5280  001F5E  2215               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5281  001F60                     l2331:
  5282  001F60  90D8               	bcf	status,0,c
  5283  001F62  320B               	rrcf	(___ftmul@f1+2)^0,f,c
  5284  001F64  320A               	rrcf	(___ftmul@f1+1)^0,f,c
  5285  001F66  3209               	rrcf	___ftmul@f1^0,f,c
  5286  001F68  90D8               	bcf	status,0,c
  5287  001F6A  360C               	rlcf	___ftmul@f2^0,f,c
  5288  001F6C  360D               	rlcf	(___ftmul@f2+1)^0,f,c
  5289  001F6E  360E               	rlcf	(___ftmul@f2+2)^0,f,c
  5290  001F70  2E16               	decfsz	___ftmul@cntr^0,f,c
  5291  001F72  D7EE               	goto	l2327
  5292  001F74  0E09               	movlw	9
  5293  001F76  6E16               	movwf	___ftmul@cntr^0,c
  5294  001F78                     l2337:
  5295  001F78  A009               	btfss	___ftmul@f1^0,0,c
  5296  001F7A  D006               	goto	l2341
  5297  001F7C  500C               	movf	___ftmul@f2^0,w,c
  5298  001F7E  2613               	addwf	___ftmul@f3_as_product^0,f,c
  5299  001F80  500D               	movf	(___ftmul@f2+1)^0,w,c
  5300  001F82  2214               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5301  001F84  500E               	movf	(___ftmul@f2+2)^0,w,c
  5302  001F86  2215               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5303  001F88                     l2341:
  5304  001F88  90D8               	bcf	status,0,c
  5305  001F8A  320B               	rrcf	(___ftmul@f1+2)^0,f,c
  5306  001F8C  320A               	rrcf	(___ftmul@f1+1)^0,f,c
  5307  001F8E  3209               	rrcf	___ftmul@f1^0,f,c
  5308  001F90  90D8               	bcf	status,0,c
  5309  001F92  3215               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5310  001F94  3214               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5311  001F96  3213               	rrcf	___ftmul@f3_as_product^0,f,c
  5312  001F98  2E16               	decfsz	___ftmul@cntr^0,f,c
  5313  001F9A  D7EE               	goto	l2337
  5314  001F9C  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5315  001FA0  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5316  001FA4  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5317  001FA8  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  5318  001FAC  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  5319  001FB0  EC94  F011         	call	___ftpack	;wreg free
  5320  001FB4  C001  F009         	movff	?___ftpack,?___ftmul
  5321  001FB8  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5322  001FBC  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5323  001FC0  0012               	return		;funcret
  5324  001FC2                     __end_of___ftmul:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function ___ftpack *****************
  5328 ;; Defined at:
  5329 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\float.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  arg             3    0[COMRAM] unsigned um
  5332 ;;  exp             1    3[COMRAM] unsigned char 
  5333 ;;  sign            1    4[COMRAM] unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  3    0[COMRAM] float 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5345 ;;      Params:         5       0       0       0       0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5347 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5348 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5349 ;;Total ram usage:        8 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 1
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		___ftadd
  5356 ;;		___ftdiv
  5357 ;;		___ftmul
  5358 ;;		___lwtoft
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text24
  5363  002328                     __ptext24:
  5364                           	callstack 0
  5365  002328                     ___ftpack:
  5366                           	callstack 27
  5367                           
  5368                           ;incstack = 0
  5369  002328  5004               	movf	___ftpack@exp^0,w,c
  5370  00232A  B4D8               	btfsc	status,2,c
  5371  00232C  D005               	goto	u1080
  5372  00232E  5001               	movf	___ftpack@arg^0,w,c
  5373  002330  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  5374  002332  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  5375  002334  A4D8               	btfss	status,2,c
  5376  002336  D00C               	goto	l1953
  5377  002338                     u1080:
  5378  002338  0E00               	movlw	0
  5379  00233A  6E01               	movwf	?___ftpack^0,c
  5380  00233C  0E00               	movlw	0
  5381  00233E  6E02               	movwf	(?___ftpack+1)^0,c
  5382  002340  0E00               	movlw	0
  5383  002342  6E03               	movwf	(?___ftpack+2)^0,c
  5384  002344  0012               	return	
  5385  002346                     l1951:
  5386  002346  2A04               	incf	___ftpack@exp^0,f,c
  5387  002348  90D8               	bcf	status,0,c
  5388  00234A  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5389  00234C  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5390  00234E  3201               	rrcf	___ftpack@arg^0,f,c
  5391  002350                     l1953:
  5392  002350  0E00               	movlw	0
  5393  002352  1401               	andwf	___ftpack@arg^0,w,c
  5394  002354  6E06               	movwf	??___ftpack^0,c
  5395  002356  0E00               	movlw	0
  5396  002358  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5397  00235A  6E07               	movwf	(??___ftpack+1)^0,c
  5398  00235C  0EFE               	movlw	254
  5399  00235E  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5400  002360  6E08               	movwf	(??___ftpack+2)^0,c
  5401  002362  5006               	movf	??___ftpack^0,w,c
  5402  002364  1007               	iorwf	(??___ftpack+1)^0,w,c
  5403  002366  1008               	iorwf	(??___ftpack+2)^0,w,c
  5404  002368  B4D8               	btfsc	status,2,c
  5405  00236A  D00C               	goto	l1959
  5406  00236C  D7EC               	goto	l1951
  5407  00236E                     l1955:
  5408  00236E  2A04               	incf	___ftpack@exp^0,f,c
  5409  002370  0E01               	movlw	1
  5410  002372  2601               	addwf	___ftpack@arg^0,f,c
  5411  002374  0E00               	movlw	0
  5412  002376  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  5413  002378  0E00               	movlw	0
  5414  00237A  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  5415  00237C  90D8               	bcf	status,0,c
  5416  00237E  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5417  002380  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5418  002382  3201               	rrcf	___ftpack@arg^0,f,c
  5419  002384                     l1959:
  5420  002384  0E00               	movlw	0
  5421  002386  1401               	andwf	___ftpack@arg^0,w,c
  5422  002388  6E06               	movwf	??___ftpack^0,c
  5423  00238A  0E00               	movlw	0
  5424  00238C  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5425  00238E  6E07               	movwf	(??___ftpack+1)^0,c
  5426  002390  0EFF               	movlw	255
  5427  002392  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5428  002394  6E08               	movwf	(??___ftpack+2)^0,c
  5429  002396  5006               	movf	??___ftpack^0,w,c
  5430  002398  1007               	iorwf	(??___ftpack+1)^0,w,c
  5431  00239A  1008               	iorwf	(??___ftpack+2)^0,w,c
  5432  00239C  B4D8               	btfsc	status,2,c
  5433  00239E  D006               	goto	l1963
  5434  0023A0  D7E6               	goto	l1955
  5435  0023A2                     l1961:
  5436  0023A2  0604               	decf	___ftpack@exp^0,f,c
  5437  0023A4  90D8               	bcf	status,0,c
  5438  0023A6  3601               	rlcf	___ftpack@arg^0,f,c
  5439  0023A8  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  5440  0023AA  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  5441  0023AC                     l1963:
  5442  0023AC  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  5443  0023AE  D003               	goto	u1120
  5444  0023B0  0E02               	movlw	2
  5445  0023B2  6004               	cpfslt	___ftpack@exp^0,c
  5446  0023B4  D7F6               	goto	l1961
  5447  0023B6                     u1120:
  5448  0023B6  A004               	btfss	___ftpack@exp^0,0,c
  5449  0023B8  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  5450  0023BA  90D8               	bcf	status,0,c
  5451  0023BC  3204               	rrcf	___ftpack@exp^0,f,c
  5452  0023BE  5004               	movf	___ftpack@exp^0,w,c
  5453  0023C0  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  5454  0023C2  5005               	movf	___ftpack@sign^0,w,c
  5455  0023C4  A4D8               	btfss	status,2,c
  5456  0023C6  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  5457  0023C8  C001  F001         	movff	___ftpack@arg,?___ftpack
  5458  0023CC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5459  0023D0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5460  0023D4  0012               	return		;funcret
  5461  0023D6                     __end_of___ftpack:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function ___awmod *****************
  5465 ;; Defined at:
  5466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  dividend        2    0[COMRAM] int 
  5469 ;;  divisor         2    2[COMRAM] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  sign            1    5[COMRAM] unsigned char 
  5472 ;;  counter         1    4[COMRAM] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  2    0[COMRAM] int 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         4       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5485 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:        6 bytes
  5487 ;; Hardware stack levels used: 1
  5488 ;; Hardware stack levels required when called: 1
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_EscribeLCD_2Decimales
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text25
  5497  0025E4                     __ptext25:
  5498                           	callstack 0
  5499  0025E4                     ___awmod:
  5500                           	callstack 28
  5501                           
  5502                           ;incstack = 0
  5503  0025E4  0E00               	movlw	0
  5504  0025E6  6E06               	movwf	___awmod@sign^0,c
  5505  0025E8  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5506  0025EA  D006               	goto	l2357
  5507  0025EC  6C01               	negf	___awmod@dividend^0,c
  5508  0025EE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5509  0025F0  B0D8               	btfsc	status,0,c
  5510  0025F2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5511  0025F4  0E01               	movlw	1
  5512  0025F6  6E06               	movwf	___awmod@sign^0,c
  5513  0025F8                     l2357:
  5514  0025F8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5515  0025FA  D004               	goto	l2361
  5516  0025FC  6C03               	negf	___awmod@divisor^0,c
  5517  0025FE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5518  002600  B0D8               	btfsc	status,0,c
  5519  002602  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5520  002604                     l2361:
  5521  002604  5003               	movf	___awmod@divisor^0,w,c
  5522  002606  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5523  002608  B4D8               	btfsc	status,2,c
  5524  00260A  D018               	goto	l2377
  5525  00260C  0E01               	movlw	1
  5526  00260E  6E05               	movwf	___awmod@counter^0,c
  5527  002610  D004               	goto	l2367
  5528  002612                     l2365:
  5529  002612  90D8               	bcf	status,0,c
  5530  002614  3603               	rlcf	___awmod@divisor^0,f,c
  5531  002616  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5532  002618  2A05               	incf	___awmod@counter^0,f,c
  5533  00261A                     l2367:
  5534  00261A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5535  00261C  D7FA               	goto	l2365
  5536  00261E                     u1660:
  5537  00261E  5003               	movf	___awmod@divisor^0,w,c
  5538  002620  5C01               	subwf	___awmod@dividend^0,w,c
  5539  002622  5004               	movf	(___awmod@divisor+1)^0,w,c
  5540  002624  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5541  002626  A0D8               	btfss	status,0,c
  5542  002628  D004               	goto	l2373
  5543  00262A  5003               	movf	___awmod@divisor^0,w,c
  5544  00262C  5E01               	subwf	___awmod@dividend^0,f,c
  5545  00262E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5546  002630  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5547  002632                     l2373:
  5548  002632  90D8               	bcf	status,0,c
  5549  002634  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5550  002636  3203               	rrcf	___awmod@divisor^0,f,c
  5551  002638  2E05               	decfsz	___awmod@counter^0,f,c
  5552  00263A  D7F1               	goto	u1660
  5553  00263C                     l2377:
  5554  00263C  5006               	movf	___awmod@sign^0,w,c
  5555  00263E  B4D8               	btfsc	status,2,c
  5556  002640  D004               	goto	l2381
  5557  002642  6C01               	negf	___awmod@dividend^0,c
  5558  002644  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5559  002646  B0D8               	btfsc	status,0,c
  5560  002648  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5561  00264A                     l2381:
  5562  00264A  C001  F001         	movff	___awmod@dividend,?___awmod
  5563  00264E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5564  002652  0012               	return		;funcret
  5565  002654                     __end_of___awmod:
  5566                           	callstack 0
  5567                           
  5568 ;; *************** function _EscribeLCD_n8 *****************
  5569 ;; Defined at:
  5570 ;;		line 128 in file "LibLCDXC8.h"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  a               1    wreg     unsigned char 
  5573 ;;  b               1    8[COMRAM] unsigned char 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  a               1   12[COMRAM] unsigned char 
  5576 ;;  unidad          1   11[COMRAM] unsigned char 
  5577 ;;  decena          1   10[COMRAM] unsigned char 
  5578 ;;  centena         1    9[COMRAM] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5588 ;;      Params:         1       0       0       0       0       0       0       0       0
  5589 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5591 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:        5 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 3
  5595 ;; This function calls:
  5596 ;;		_EnviaDato
  5597 ;;		_HabilitaLCD
  5598 ;;		_RetardoLCD
  5599 ;;		___lbdiv
  5600 ;;		___lbmod
  5601 ;; This function is called by:
  5602 ;;		_EscribeLCD_2Decimales
  5603 ;;		_imprimirTemperatura
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text26
  5608  0020A8                     __ptext26:
  5609                           	callstack 0
  5610  0020A8                     _EscribeLCD_n8:
  5611                           	callstack 26
  5612                           
  5613                           ;incstack = 0
  5614                           ;EscribeLCD_n8@a stored from wreg
  5615  0020A8  6E0D               	movwf	EscribeLCD_n8@a^0,c
  5616                           
  5617                           ;LibLCDXC8.h: 133: unsigned char centena,decena,unidad;;LibLCDXC8.h: 134: LATD2=1;
  5618  0020AA  848C               	bsf	3980,2,c	;volatile
  5619                           
  5620                           ;LibLCDXC8.h: 135: switch(b){
  5621  0020AC  D065               	goto	l2117
  5622  0020AE                     l2085:
  5623  0020AE  0E0A               	movlw	10
  5624  0020B0  6E01               	movwf	___lbmod@divisor^0,c
  5625  0020B2  500D               	movf	EscribeLCD_n8@a^0,w,c
  5626  0020B4  EC80  F014         	call	___lbmod
  5627  0020B8  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  5628                           
  5629                           ;LibLCDXC8.h: 137: EnviaDato(unidad+48);
  5630  0020BA  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  5631  0020BC  0F30               	addlw	48
  5632  0020BE  EC0A  F014         	call	_EnviaDato
  5633                           
  5634                           ;LibLCDXC8.h: 138: HabilitaLCD();
  5635  0020C2  EC30  F015         	call	_HabilitaLCD	;wreg free
  5636                           
  5637                           ;LibLCDXC8.h: 139: RetardoLCD(4);
  5638  0020C6  0E04               	movlw	4
  5639  0020C8  ECB6  F013         	call	_RetardoLCD
  5640                           
  5641                           ;LibLCDXC8.h: 140: break;
  5642  0020CC  0012               	return	
  5643  0020CE                     l2091:
  5644  0020CE  0E0A               	movlw	10
  5645  0020D0  6E05               	movwf	___lbdiv@divisor^0,c
  5646  0020D2  0E64               	movlw	100
  5647  0020D4  6E01               	movwf	___lbmod@divisor^0,c
  5648  0020D6  500D               	movf	EscribeLCD_n8@a^0,w,c
  5649  0020D8  EC80  F014         	call	___lbmod
  5650  0020DC  EC4E  F014         	call	___lbdiv
  5651  0020E0  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  5652                           
  5653                           ;LibLCDXC8.h: 142: unidad=a%10;
  5654  0020E2  0E0A               	movlw	10
  5655  0020E4  6E01               	movwf	___lbmod@divisor^0,c
  5656  0020E6  500D               	movf	EscribeLCD_n8@a^0,w,c
  5657  0020E8  EC80  F014         	call	___lbmod
  5658  0020EC  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  5659                           
  5660                           ;LibLCDXC8.h: 143: EnviaDato(decena+48);
  5661  0020EE  500B               	movf	EscribeLCD_n8@decena^0,w,c
  5662  0020F0  0F30               	addlw	48
  5663  0020F2  EC0A  F014         	call	_EnviaDato
  5664                           
  5665                           ;LibLCDXC8.h: 144: HabilitaLCD();
  5666  0020F6  EC30  F015         	call	_HabilitaLCD	;wreg free
  5667                           
  5668                           ;LibLCDXC8.h: 145: RetardoLCD(4);
  5669  0020FA  0E04               	movlw	4
  5670  0020FC  ECB6  F013         	call	_RetardoLCD
  5671                           
  5672                           ;LibLCDXC8.h: 146: EnviaDato(unidad+48);
  5673  002100  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  5674  002102  0F30               	addlw	48
  5675  002104  EC0A  F014         	call	_EnviaDato
  5676                           
  5677                           ;LibLCDXC8.h: 147: HabilitaLCD();
  5678  002108  EC30  F015         	call	_HabilitaLCD	;wreg free
  5679                           
  5680                           ;LibLCDXC8.h: 148: RetardoLCD(4);
  5681  00210C  0E04               	movlw	4
  5682  00210E  ECB6  F013         	call	_RetardoLCD
  5683                           
  5684                           ;LibLCDXC8.h: 149: break;
  5685  002112  0012               	return	
  5686  002114                     l2101:
  5687  002114  0E64               	movlw	100
  5688  002116  6E05               	movwf	___lbdiv@divisor^0,c
  5689  002118  500D               	movf	EscribeLCD_n8@a^0,w,c
  5690  00211A  EC4E  F014         	call	___lbdiv
  5691  00211E  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  5692                           
  5693                           ;LibLCDXC8.h: 151: decena=(a%100)/10;
  5694  002120  0E0A               	movlw	10
  5695  002122  6E05               	movwf	___lbdiv@divisor^0,c
  5696  002124  0E64               	movlw	100
  5697  002126  6E01               	movwf	___lbmod@divisor^0,c
  5698  002128  500D               	movf	EscribeLCD_n8@a^0,w,c
  5699  00212A  EC80  F014         	call	___lbmod
  5700  00212E  EC4E  F014         	call	___lbdiv
  5701  002132  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  5702                           
  5703                           ;LibLCDXC8.h: 152: unidad=a%10;
  5704  002134  0E0A               	movlw	10
  5705  002136  6E01               	movwf	___lbmod@divisor^0,c
  5706  002138  500D               	movf	EscribeLCD_n8@a^0,w,c
  5707  00213A  EC80  F014         	call	___lbmod
  5708  00213E  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  5709                           
  5710                           ;LibLCDXC8.h: 153: EnviaDato(centena+48);
  5711  002140  500A               	movf	EscribeLCD_n8@centena^0,w,c
  5712  002142  0F30               	addlw	48
  5713  002144  EC0A  F014         	call	_EnviaDato
  5714                           
  5715                           ;LibLCDXC8.h: 154: HabilitaLCD();
  5716  002148  EC30  F015         	call	_HabilitaLCD	;wreg free
  5717                           
  5718                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  5719  00214C  0E04               	movlw	4
  5720  00214E  ECB6  F013         	call	_RetardoLCD
  5721                           
  5722                           ;LibLCDXC8.h: 156: EnviaDato(decena+48);
  5723  002152  500B               	movf	EscribeLCD_n8@decena^0,w,c
  5724  002154  0F30               	addlw	48
  5725  002156  EC0A  F014         	call	_EnviaDato
  5726                           
  5727                           ;LibLCDXC8.h: 157: HabilitaLCD();
  5728  00215A  EC30  F015         	call	_HabilitaLCD	;wreg free
  5729                           
  5730                           ;LibLCDXC8.h: 158: RetardoLCD(4);
  5731  00215E  0E04               	movlw	4
  5732  002160  ECB6  F013         	call	_RetardoLCD
  5733                           
  5734                           ;LibLCDXC8.h: 159: EnviaDato(unidad+48);
  5735  002164  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  5736  002166  0F30               	addlw	48
  5737  002168  EC0A  F014         	call	_EnviaDato
  5738                           
  5739                           ;LibLCDXC8.h: 160: HabilitaLCD();
  5740  00216C  EC30  F015         	call	_HabilitaLCD	;wreg free
  5741                           
  5742                           ;LibLCDXC8.h: 161: RetardoLCD(4);
  5743  002170  0E04               	movlw	4
  5744  002172  ECB6  F013         	call	_RetardoLCD
  5745                           
  5746                           ;LibLCDXC8.h: 162: break;
  5747  002176  0012               	return	
  5748  002178                     l2117:
  5749  002178  5009               	movf	EscribeLCD_n8@b^0,w,c
  5750                           
  5751                           ; Switch size 1, requested type "simple"
  5752                           ; Number of cases is 3, Range of values is 1 to 3
  5753                           ; switch strategies available:
  5754                           ; Name         Instructions Cycles
  5755                           ; simple_byte           10     6 (average)
  5756                           ;	Chosen strategy is simple_byte
  5757  00217A  0A01               	xorlw	1	; case 1
  5758  00217C  B4D8               	btfsc	status,2,c
  5759  00217E  D797               	goto	l2085
  5760  002180  0A03               	xorlw	3	; case 2
  5761  002182  B4D8               	btfsc	status,2,c
  5762  002184  D7A4               	goto	l2091
  5763  002186  0A01               	xorlw	1	; case 3
  5764  002188  A4D8               	btfss	status,2,c
  5765  00218A  0012               	return	
  5766  00218C  D7C3               	goto	l2101
  5767  00218E                     __end_of_EscribeLCD_n8:
  5768                           	callstack 0
  5769                           
  5770 ;; *************** function ___lbmod *****************
  5771 ;; Defined at:
  5772 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  dividend        1    wreg     unsigned char 
  5775 ;;  divisor         1    0[COMRAM] unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  dividend        1    1[COMRAM] unsigned char 
  5778 ;;  rem             1    3[COMRAM] unsigned char 
  5779 ;;  counter         1    2[COMRAM] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5789 ;;      Params:         1       0       0       0       0       0       0       0       0
  5790 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5792 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5793 ;;Total ram usage:        4 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_EscribeLCD_n8
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text27
  5804  002900                     __ptext27:
  5805                           	callstack 0
  5806  002900                     ___lbmod:
  5807                           	callstack 27
  5808                           
  5809                           ;incstack = 0
  5810                           ;___lbmod@dividend stored from wreg
  5811  002900  6E02               	movwf	___lbmod@dividend^0,c
  5812  002902  0E08               	movlw	8
  5813  002904  6E03               	movwf	___lbmod@counter^0,c
  5814  002906  0E00               	movlw	0
  5815  002908  6E04               	movwf	___lbmod@rem^0,c
  5816  00290A                     l2007:
  5817  00290A  90D8               	bcf	status,0,c
  5818  00290C  3402               	rlcf	___lbmod@dividend^0,w,c
  5819  00290E  3404               	rlcf	___lbmod@rem^0,w,c
  5820  002910  6E04               	movwf	___lbmod@rem^0,c
  5821  002912  90D8               	bcf	status,0,c
  5822  002914  3602               	rlcf	___lbmod@dividend^0,f,c
  5823  002916  5001               	movf	___lbmod@divisor^0,w,c
  5824  002918  5C04               	subwf	___lbmod@rem^0,w,c
  5825  00291A  A0D8               	btfss	status,0,c
  5826  00291C  D002               	goto	l2015
  5827  00291E  5001               	movf	___lbmod@divisor^0,w,c
  5828  002920  5E04               	subwf	___lbmod@rem^0,f,c
  5829  002922                     l2015:
  5830  002922  2E03               	decfsz	___lbmod@counter^0,f,c
  5831  002924  D7F2               	goto	l2007
  5832  002926  5004               	movf	___lbmod@rem^0,w,c
  5833  002928  0012               	return		;funcret
  5834  00292A                     __end_of___lbmod:
  5835                           	callstack 0
  5836                           
  5837 ;; *************** function ___lbdiv *****************
  5838 ;; Defined at:
  5839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbdiv.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  dividend        1    wreg     unsigned char 
  5842 ;;  divisor         1    4[COMRAM] unsigned char 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  dividend        1    5[COMRAM] unsigned char 
  5845 ;;  quotient        1    7[COMRAM] unsigned char 
  5846 ;;  counter         1    6[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5856 ;;      Params:         1       0       0       0       0       0       0       0       0
  5857 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5859 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5860 ;;Total ram usage:        4 bytes
  5861 ;; Hardware stack levels used: 1
  5862 ;; Hardware stack levels required when called: 1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_EscribeLCD_n8
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text28
  5871  00289C                     __ptext28:
  5872                           	callstack 0
  5873  00289C                     ___lbdiv:
  5874                           	callstack 27
  5875                           
  5876                           ;incstack = 0
  5877                           ;___lbdiv@dividend stored from wreg
  5878  00289C  6E06               	movwf	___lbdiv@dividend^0,c
  5879  00289E  0E00               	movlw	0
  5880  0028A0  6E08               	movwf	___lbdiv@quotient^0,c
  5881  0028A2  5005               	movf	___lbdiv@divisor^0,w,c
  5882  0028A4  B4D8               	btfsc	status,2,c
  5883  0028A6  D015               	goto	l2001
  5884  0028A8  0E01               	movlw	1
  5885  0028AA  6E07               	movwf	___lbdiv@counter^0,c
  5886  0028AC  D003               	goto	l1989
  5887  0028AE                     l1985:
  5888  0028AE  90D8               	bcf	status,0,c
  5889  0028B0  3605               	rlcf	___lbdiv@divisor^0,f,c
  5890  0028B2  2A07               	incf	___lbdiv@counter^0,f,c
  5891  0028B4                     l1989:
  5892  0028B4  AE05               	btfss	___lbdiv@divisor^0,7,c
  5893  0028B6  D7FB               	goto	l1985
  5894  0028B8                     u1160:
  5895  0028B8  90D8               	bcf	status,0,c
  5896  0028BA  3608               	rlcf	___lbdiv@quotient^0,f,c
  5897  0028BC  5005               	movf	___lbdiv@divisor^0,w,c
  5898  0028BE  5C06               	subwf	___lbdiv@dividend^0,w,c
  5899  0028C0  A0D8               	btfss	status,0,c
  5900  0028C2  D003               	goto	l1997
  5901  0028C4  5005               	movf	___lbdiv@divisor^0,w,c
  5902  0028C6  5E06               	subwf	___lbdiv@dividend^0,f,c
  5903  0028C8  8008               	bsf	___lbdiv@quotient^0,0,c
  5904  0028CA                     l1997:
  5905  0028CA  90D8               	bcf	status,0,c
  5906  0028CC  3205               	rrcf	___lbdiv@divisor^0,f,c
  5907  0028CE  2E07               	decfsz	___lbdiv@counter^0,f,c
  5908  0028D0  D7F3               	goto	u1160
  5909  0028D2                     l2001:
  5910  0028D2  5008               	movf	___lbdiv@quotient^0,w,c
  5911  0028D4  0012               	return		;funcret
  5912  0028D6                     __end_of___lbdiv:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function _EscribeLCD_c *****************
  5916 ;; Defined at:
  5917 ;;		line 118 in file "LibLCDXC8.h"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  a               1    wreg     unsigned char 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  a               1    4[COMRAM] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        1 bytes
  5936 ;; Hardware stack levels used: 1
  5937 ;; Hardware stack levels required when called: 3
  5938 ;; This function calls:
  5939 ;;		_EnviaDato
  5940 ;;		_HabilitaLCD
  5941 ;;		_RetardoLCD
  5942 ;; This function is called by:
  5943 ;;		_EscribeLCD_n32
  5944 ;;		_MensajeLCD_Var
  5945 ;;		_EscribeLCD_2Decimales
  5946 ;;		_GuardarASCII
  5947 ;;		_imprimirTemperatura
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text29
  5952  002A36                     __ptext29:
  5953                           	callstack 0
  5954  002A36                     _EscribeLCD_c:
  5955                           	callstack 25
  5956                           
  5957                           ;incstack = 0
  5958                           ;EscribeLCD_c@a stored from wreg
  5959  002A36  6E05               	movwf	EscribeLCD_c@a^0,c
  5960                           
  5961                           ;LibLCDXC8.h: 122: LATD2=1;
  5962  002A38  848C               	bsf	3980,2,c	;volatile
  5963                           
  5964                           ;LibLCDXC8.h: 123: EnviaDato(a);
  5965  002A3A  5005               	movf	EscribeLCD_c@a^0,w,c
  5966  002A3C  EC0A  F014         	call	_EnviaDato
  5967                           
  5968                           ;LibLCDXC8.h: 124: HabilitaLCD();
  5969  002A40  EC30  F015         	call	_HabilitaLCD	;wreg free
  5970                           
  5971                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  5972  002A44  0E04               	movlw	4
  5973  002A46  ECB6  F013         	call	_RetardoLCD
  5974  002A4A  0012               	return		;funcret
  5975  002A4C                     __end_of_EscribeLCD_c:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _EnviaDato *****************
  5979 ;; Defined at:
  5980 ;;		line 55 in file "LibLCDXC8.h"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  a               1    wreg     unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  a               1    3[COMRAM] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0
  5995 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5996 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5997 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5998 ;;Total ram usage:        2 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; Hardware stack levels required when called: 2
  6001 ;; This function calls:
  6002 ;;		_HabilitaLCD
  6003 ;;		_RetardoLCD
  6004 ;; This function is called by:
  6005 ;;		_InicializaLCD
  6006 ;;		_BorraLCD
  6007 ;;		_EscribeLCD_c
  6008 ;;		_EscribeLCD_n8
  6009 ;;		_DireccionaLCD
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text30
  6014  002814                     __ptext30:
  6015                           	callstack 0
  6016  002814                     _EnviaDato:
  6017                           	callstack 25
  6018                           
  6019                           ;incstack = 0
  6020                           ;EnviaDato@a stored from wreg
  6021  002814  6E04               	movwf	EnviaDato@a^0,c
  6022                           
  6023                           ;LibLCDXC8.h: 56: if(interfaz==4){
  6024  002816  0E04               	movlw	4
  6025  002818  185E               	xorwf	_interfaz^0,w,c
  6026  00281A  A4D8               	btfss	status,2,c
  6027  00281C  D017               	goto	l1899
  6028                           
  6029                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  6030  00281E  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  6031  002822  0EF0               	movlw	240
  6032  002824  1603               	andwf	??_EnviaDato^0,f,c
  6033  002826  508C               	movf	140,w,c	;volatile
  6034  002828  0B0F               	andlw	15
  6035  00282A  1003               	iorwf	??_EnviaDato^0,w,c
  6036  00282C  6E8C               	movwf	140,c	;volatile
  6037                           
  6038                           ;LibLCDXC8.h: 58: HabilitaLCD();
  6039  00282E  EC30  F015         	call	_HabilitaLCD	;wreg free
  6040                           
  6041                           ;LibLCDXC8.h: 59: RetardoLCD(1);
  6042  002832  0E01               	movlw	1
  6043  002834  ECB6  F013         	call	_RetardoLCD
  6044                           
  6045                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a<<4);
  6046  002838  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  6047  00283C  3A03               	swapf	??_EnviaDato^0,f,c
  6048  00283E  0EF0               	movlw	240
  6049  002840  1603               	andwf	??_EnviaDato^0,f,c
  6050  002842  508C               	movf	140,w,c	;volatile
  6051  002844  0B0F               	andlw	15
  6052  002846  1003               	iorwf	??_EnviaDato^0,w,c
  6053  002848  6E8C               	movwf	140,c	;volatile
  6054                           
  6055                           ;LibLCDXC8.h: 63: }else if(interfaz==8){
  6056  00284A  0012               	return	
  6057  00284C                     l1899:
  6058  00284C  0E08               	movlw	8
  6059  00284E  185E               	xorwf	_interfaz^0,w,c
  6060  002850  A4D8               	btfss	status,2,c
  6061  002852  0012               	return	
  6062                           
  6063                           ;LibLCDXC8.h: 64: LATD=a;
  6064  002854  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  6065  002858  0012               	return		;funcret
  6066  00285A                     __end_of_EnviaDato:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _RetardoLCD *****************
  6070 ;; Defined at:
  6071 ;;		line 311 in file "LibLCDXC8.h"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  a               1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  a               1    1[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0
  6086 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6087 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6088 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6089 ;;Total ram usage:        2 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_EnviaDato
  6096 ;;		_InicializaLCD
  6097 ;;		_BorraLCD
  6098 ;;		_EscribeLCD_c
  6099 ;;		_EscribeLCD_n8
  6100 ;;		_DireccionaLCD
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text31
  6105  00276C                     __ptext31:
  6106                           	callstack 0
  6107  00276C                     _RetardoLCD:
  6108                           	callstack 26
  6109                           
  6110                           ;incstack = 0
  6111                           ;RetardoLCD@a stored from wreg
  6112  00276C  6E02               	movwf	RetardoLCD@a^0,c
  6113                           
  6114                           ;LibLCDXC8.h: 312: switch(a){
  6115  00276E  D01B               	goto	l1887
  6116  002770                     l1877:
  6117  002770  0E05               	movlw	5
  6118  002772  6E01               	movwf	??_RetardoLCD^0,c
  6119  002774  0EDE               	movlw	222
  6120  002776                     u2037:
  6121  002776  2EE8               	decfsz	wreg,f,c
  6122  002778  D7FE               	bra	u2037
  6123  00277A  2E01               	decfsz	??_RetardoLCD^0,f,c
  6124  00277C  D7FC               	bra	u2037
  6125                           
  6126                           ;LibLCDXC8.h: 315: break;
  6127  00277E  0012               	return	
  6128  002780                     l1879:
  6129  002780  0E53               	movlw	83
  6130  002782                     u2047:
  6131  002782  2EE8               	decfsz	wreg,f,c
  6132  002784  D7FE               	bra	u2047
  6133  002786  F000               	nop	
  6134                           
  6135                           ;LibLCDXC8.h: 317: _delay((unsigned long)((640)*(1000000/4000000.0)));
  6136  002788  0E35               	movlw	53
  6137  00278A                     u2057:
  6138  00278A  2EE8               	decfsz	wreg,f,c
  6139  00278C  D7FE               	bra	u2057
  6140  00278E  F000               	nop	
  6141                           
  6142                           ;LibLCDXC8.h: 319: break;
  6143  002790  0012               	return	
  6144  002792                     l1881:
  6145  002792  0E08               	movlw	8
  6146  002794                     u2067:
  6147  002794  2EE8               	decfsz	wreg,f,c
  6148  002796  D7FE               	bra	u2067
  6149  002798  F000               	nop	
  6150                           
  6151                           ;LibLCDXC8.h: 322: break;
  6152  00279A  0012               	return	
  6153  00279C                     l1883:
  6154  00279C  0E03               	movlw	3
  6155  00279E                     u2077:
  6156  00279E  2EE8               	decfsz	wreg,f,c
  6157  0027A0  D7FE               	bra	u2077
  6158  0027A2  F000               	nop	
  6159                           
  6160                           ;LibLCDXC8.h: 325: break;
  6161  0027A4  0012               	return	
  6162  0027A6                     l1887:
  6163  0027A6  5002               	movf	RetardoLCD@a^0,w,c
  6164                           
  6165                           ; Switch size 1, requested type "simple"
  6166                           ; Number of cases is 4, Range of values is 1 to 4
  6167                           ; switch strategies available:
  6168                           ; Name         Instructions Cycles
  6169                           ; simple_byte           13     7 (average)
  6170                           ;	Chosen strategy is simple_byte
  6171  0027A8  0A01               	xorlw	1	; case 1
  6172  0027AA  B4D8               	btfsc	status,2,c
  6173  0027AC  D7E1               	goto	l1877
  6174  0027AE  0A03               	xorlw	3	; case 2
  6175  0027B0  B4D8               	btfsc	status,2,c
  6176  0027B2  D7E6               	goto	l1879
  6177  0027B4  0A01               	xorlw	1	; case 3
  6178  0027B6  B4D8               	btfsc	status,2,c
  6179  0027B8  D7EC               	goto	l1881
  6180  0027BA  0A07               	xorlw	7	; case 4
  6181  0027BC  A4D8               	btfss	status,2,c
  6182  0027BE  0012               	return	
  6183  0027C0  D7ED               	goto	l1883
  6184  0027C2                     __end_of_RetardoLCD:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function _HabilitaLCD *****************
  6188 ;; Defined at:
  6189 ;;		line 102 in file "LibLCDXC8.h"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6203 ;;      Params:         0       0       0       0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used: 1
  6209 ;; Hardware stack levels required when called: 1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_EnviaDato
  6214 ;;		_InicializaLCD
  6215 ;;		_BorraLCD
  6216 ;;		_EscribeLCD_c
  6217 ;;		_EscribeLCD_n8
  6218 ;;		_DireccionaLCD
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text32
  6223  002A60                     __ptext32:
  6224                           	callstack 0
  6225  002A60                     _HabilitaLCD:
  6226                           	callstack 26
  6227                           
  6228                           ;LibLCDXC8.h: 104: LATD3=1;
  6229                           
  6230                           ;incstack = 0
  6231  002A60  868C               	bsf	3980,3,c	;volatile
  6232                           
  6233                           ;LibLCDXC8.h: 105: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6234  002A62  0E03               	movlw	3
  6235  002A64                     u2087:
  6236  002A64  2EE8               	decfsz	wreg,f,c
  6237  002A66  D7FE               	bra	u2087
  6238  002A68  F000               	nop	
  6239                           
  6240                           ;LibLCDXC8.h: 107: LATD3=0;
  6241  002A6A  968C               	bcf	3980,3,c	;volatile
  6242  002A6C  0012               	return		;funcret
  6243  002A6E                     __end_of_HabilitaLCD:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _Conversion *****************
  6247 ;; Defined at:
  6248 ;;		line 187 in file "Lab5.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  canal           1    wreg     unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  canal           1    3[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    0[COMRAM] unsigned int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6262 ;;      Params:         2       0       0       0       0       0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6265 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6266 ;;Total ram usage:        4 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text33
  6277  0029A0                     __ptext33:
  6278                           	callstack 0
  6279  0029A0                     _Conversion:
  6280                           	callstack 29
  6281                           
  6282                           ;incstack = 0
  6283                           ;Conversion@canal stored from wreg
  6284  0029A0  6E04               	movwf	Conversion@canal^0,c
  6285                           
  6286                           ;Lab5.c: 188: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  6287  0029A2  C004  F003         	movff	Conversion@canal,??_Conversion
  6288  0029A6  90D8               	bcf	status,0,c
  6289  0029A8  3603               	rlcf	??_Conversion^0,f,c
  6290  0029AA  90D8               	bcf	status,0,c
  6291  0029AC  3603               	rlcf	??_Conversion^0,f,c
  6292  0029AE  50C2               	movf	194,w,c	;volatile
  6293  0029B0  0B03               	andlw	3
  6294  0029B2  1003               	iorwf	??_Conversion^0,w,c
  6295  0029B4  6EC2               	movwf	194,c	;volatile
  6296                           
  6297                           ;Lab5.c: 189: GO=1;
  6298  0029B6  82C2               	bsf	4034,1,c	;volatile
  6299  0029B8                     l244:
  6300  0029B8  B2C2               	btfsc	4034,1,c	;volatile
  6301  0029BA  D7FE               	goto	l244
  6302                           
  6303                           ;Lab5.c: 191: return ADRES;
  6304  0029BC  CFC3 F001          	movff	4035,?_Conversion	;volatile
  6305  0029C0  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  6306  0029C4  0012               	return		;funcret
  6307  0029C6                     __end_of_Conversion:
  6308                           	callstack 0
  6309                           
  6310 ;; *************** function _ConfiguraLCD *****************
  6311 ;; Defined at:
  6312 ;;		line 51 in file "LibLCDXC8.h"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  a               1    wreg     unsigned char 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  a               1    0[COMRAM] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6329 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:        1 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_main
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text34
  6341  002A08                     __ptext34:
  6342                           	callstack 0
  6343  002A08                     _ConfiguraLCD:
  6344                           	callstack 29
  6345                           
  6346                           ;incstack = 0
  6347                           ;ConfiguraLCD@a stored from wreg
  6348  002A08  6E01               	movwf	ConfiguraLCD@a^0,c
  6349                           
  6350                           ;LibLCDXC8.h: 52: if(a==4 | a ==8)
  6351  002A0A  0E04               	movlw	4
  6352  002A0C  1801               	xorwf	ConfiguraLCD@a^0,w,c
  6353  002A0E  B4D8               	btfsc	status,2,c
  6354  002A10  D004               	goto	u1810
  6355  002A12  0E08               	movlw	8
  6356  002A14  1801               	xorwf	ConfiguraLCD@a^0,w,c
  6357  002A16  A4D8               	btfss	status,2,c
  6358  002A18  0012               	return	
  6359  002A1A                     u1810:
  6360                           
  6361                           ;LibLCDXC8.h: 53: interfaz=a;
  6362  002A1A  C001  F05E         	movff	ConfiguraLCD@a,_interfaz
  6363  002A1E  0012               	return		;funcret
  6364  002A20                     __end_of_ConfiguraLCD:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _ColorRGB *****************
  6368 ;; Defined at:
  6369 ;;		line 168 in file "Lab5.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  Temp            3   11[COMRAM] void 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6383 ;;      Params:         3       0       0       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6386 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6387 ;;Total ram usage:        3 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 2
  6390 ;; This function calls:
  6391 ;;		___ftge
  6392 ;; This function is called by:
  6393 ;;		_main
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text35
  6398  001DBE                     __ptext35:
  6399                           	callstack 0
  6400  001DBE                     _ColorRGB:
  6401                           	callstack 28
  6402                           
  6403                           ;Lab5.c: 169: if(Temp<20){
  6404                           
  6405                           ;incstack = 0
  6406  001DBE  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6407  001DC2  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6408  001DC6  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6409  001DCA  0E00               	movlw	0
  6410  001DCC  6E04               	movwf	___ftge@ff2^0,c
  6411  001DCE  0EA0               	movlw	160
  6412  001DD0  6E05               	movwf	(___ftge@ff2+1)^0,c
  6413  001DD2  0E41               	movlw	65
  6414  001DD4  6E06               	movwf	(___ftge@ff2+2)^0,c
  6415  001DD6  ECB8  F012         	call	___ftge	;wreg free
  6416  001DDA  B0D8               	btfsc	status,0,c
  6417  001DDC  D003               	goto	l2561
  6418                           
  6419                           ;Lab5.c: 170: LATB=0;
  6420  001DDE  0E00               	movlw	0
  6421  001DE0  6E8A               	movwf	138,c	;volatile
  6422                           
  6423                           ;Lab5.c: 171: }else if(Temp<23){
  6424  001DE2  0012               	return	
  6425  001DE4                     l2561:
  6426  001DE4  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6427  001DE8  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6428  001DEC  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6429  001DF0  0E00               	movlw	0
  6430  001DF2  6E04               	movwf	___ftge@ff2^0,c
  6431  001DF4  0EB8               	movlw	184
  6432  001DF6  6E05               	movwf	(___ftge@ff2+1)^0,c
  6433  001DF8  0E41               	movlw	65
  6434  001DFA  6E06               	movwf	(___ftge@ff2+2)^0,c
  6435  001DFC  ECB8  F012         	call	___ftge	;wreg free
  6436  001E00  B0D8               	btfsc	status,0,c
  6437  001E02  D003               	goto	l2565
  6438                           
  6439                           ;Lab5.c: 172: LATB=5;
  6440  001E04  0E05               	movlw	5
  6441  001E06  6E8A               	movwf	138,c	;volatile
  6442                           
  6443                           ;Lab5.c: 173: }else if(Temp<26){
  6444  001E08  0012               	return	
  6445  001E0A                     l2565:
  6446  001E0A  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6447  001E0E  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6448  001E12  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6449  001E16  0E00               	movlw	0
  6450  001E18  6E04               	movwf	___ftge@ff2^0,c
  6451  001E1A  0ED0               	movlw	208
  6452  001E1C  6E05               	movwf	(___ftge@ff2+1)^0,c
  6453  001E1E  0E41               	movlw	65
  6454  001E20  6E06               	movwf	(___ftge@ff2+2)^0,c
  6455  001E22  ECB8  F012         	call	___ftge	;wreg free
  6456  001E26  B0D8               	btfsc	status,0,c
  6457  001E28  D003               	goto	l2569
  6458                           
  6459                           ;Lab5.c: 174: LATB=1;
  6460  001E2A  0E01               	movlw	1
  6461  001E2C  6E8A               	movwf	138,c	;volatile
  6462                           
  6463                           ;Lab5.c: 175: }else if(Temp<29){
  6464  001E2E  0012               	return	
  6465  001E30                     l2569:
  6466  001E30  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6467  001E34  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6468  001E38  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6469  001E3C  0E00               	movlw	0
  6470  001E3E  6E04               	movwf	___ftge@ff2^0,c
  6471  001E40  0EE8               	movlw	232
  6472  001E42  6E05               	movwf	(___ftge@ff2+1)^0,c
  6473  001E44  0E41               	movlw	65
  6474  001E46  6E06               	movwf	(___ftge@ff2+2)^0,c
  6475  001E48  ECB8  F012         	call	___ftge	;wreg free
  6476  001E4C  B0D8               	btfsc	status,0,c
  6477  001E4E  D003               	goto	l2573
  6478                           
  6479                           ;Lab5.c: 176: LATB=3;
  6480  001E50  0E03               	movlw	3
  6481  001E52  6E8A               	movwf	138,c	;volatile
  6482                           
  6483                           ;Lab5.c: 177: }else if(Temp<32){
  6484  001E54  0012               	return	
  6485  001E56                     l2573:
  6486  001E56  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6487  001E5A  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6488  001E5E  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6489  001E62  0E00               	movlw	0
  6490  001E64  6E04               	movwf	___ftge@ff2^0,c
  6491  001E66  0E00               	movlw	0
  6492  001E68  6E05               	movwf	(___ftge@ff2+1)^0,c
  6493  001E6A  0E42               	movlw	66
  6494  001E6C  6E06               	movwf	(___ftge@ff2+2)^0,c
  6495  001E6E  ECB8  F012         	call	___ftge	;wreg free
  6496  001E72  B0D8               	btfsc	status,0,c
  6497  001E74  D003               	goto	l2577
  6498                           
  6499                           ;Lab5.c: 178: LATB=2;
  6500  001E76  0E02               	movlw	2
  6501  001E78  6E8A               	movwf	138,c	;volatile
  6502                           
  6503                           ;Lab5.c: 179: }else if(Temp<35){
  6504  001E7A  0012               	return	
  6505  001E7C                     l2577:
  6506  001E7C  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6507  001E80  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6508  001E84  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6509  001E88  0E00               	movlw	0
  6510  001E8A  6E04               	movwf	___ftge@ff2^0,c
  6511  001E8C  0E0C               	movlw	12
  6512  001E8E  6E05               	movwf	(___ftge@ff2+1)^0,c
  6513  001E90  0E42               	movlw	66
  6514  001E92  6E06               	movwf	(___ftge@ff2+2)^0,c
  6515  001E94  ECB8  F012         	call	___ftge	;wreg free
  6516  001E98  B0D8               	btfsc	status,0,c
  6517  001E9A  D003               	goto	l2581
  6518                           
  6519                           ;Lab5.c: 180: LATB=6;
  6520  001E9C  0E06               	movlw	6
  6521  001E9E  6E8A               	movwf	138,c	;volatile
  6522                           
  6523                           ;Lab5.c: 181: }else if(Temp<38){
  6524  001EA0  0012               	return	
  6525  001EA2                     l2581:
  6526  001EA2  C00C  F001         	movff	ColorRGB@Temp,___ftge@ff1
  6527  001EA6  C00D  F002         	movff	ColorRGB@Temp+1,___ftge@ff1+1
  6528  001EAA  C00E  F003         	movff	ColorRGB@Temp+2,___ftge@ff1+2
  6529  001EAE  0E00               	movlw	0
  6530  001EB0  6E04               	movwf	___ftge@ff2^0,c
  6531  001EB2  0E18               	movlw	24
  6532  001EB4  6E05               	movwf	(___ftge@ff2+1)^0,c
  6533  001EB6  0E42               	movlw	66
  6534  001EB8  6E06               	movwf	(___ftge@ff2+2)^0,c
  6535  001EBA  ECB8  F012         	call	___ftge	;wreg free
  6536  001EBE  B0D8               	btfsc	status,0,c
  6537  001EC0  D003               	goto	l2585
  6538                           
  6539                           ;Lab5.c: 182: LATB=4;
  6540  001EC2  0E04               	movlw	4
  6541  001EC4  6E8A               	movwf	138,c	;volatile
  6542                           
  6543                           ;Lab5.c: 183: }else
  6544  001EC6  0012               	return	
  6545  001EC8                     l2585:
  6546                           
  6547                           ;Lab5.c: 184: LATB=7;
  6548  001EC8  0E07               	movlw	7
  6549  001ECA  6E8A               	movwf	138,c	;volatile
  6550  001ECC  0012               	return		;funcret
  6551  001ECE                     __end_of_ColorRGB:
  6552                           	callstack 0
  6553                           
  6554 ;; *************** function ___ftge *****************
  6555 ;; Defined at:
  6556 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftge.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  ff1             3    0[COMRAM] float 
  6559 ;;  ff2             3    3[COMRAM] float 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;		None               void
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6571 ;;      Params:         6       0       0       0       0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6573 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6574 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6575 ;;Total ram usage:        9 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;;		_ColorRGB
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text36
  6587  002570                     __ptext36:
  6588                           	callstack 0
  6589  002570                     ___ftge:
  6590                           	callstack 29
  6591                           
  6592                           ;incstack = 0
  6593  002570  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  6594  002572  D00F               	goto	l2389
  6595  002574  0E00               	movlw	0
  6596  002576  6E07               	movwf	??___ftge^0,c
  6597  002578  0E00               	movlw	0
  6598  00257A  6E08               	movwf	(??___ftge+1)^0,c
  6599  00257C  0E80               	movlw	128
  6600  00257E  6E09               	movwf	(??___ftge+2)^0,c
  6601  002580  5001               	movf	___ftge@ff1^0,w,c
  6602  002582  5C07               	subwf	??___ftge^0,w,c
  6603  002584  6E01               	movwf	___ftge@ff1^0,c
  6604  002586  5002               	movf	(___ftge@ff1+1)^0,w,c
  6605  002588  5808               	subwfb	(??___ftge+1)^0,w,c
  6606  00258A  6E02               	movwf	(___ftge@ff1+1)^0,c
  6607  00258C  5003               	movf	(___ftge@ff1+2)^0,w,c
  6608  00258E  5809               	subwfb	(??___ftge+2)^0,w,c
  6609  002590  6E03               	movwf	(___ftge@ff1+2)^0,c
  6610  002592                     l2389:
  6611  002592  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  6612  002594  D00F               	goto	l2393
  6613  002596  0E00               	movlw	0
  6614  002598  6E07               	movwf	??___ftge^0,c
  6615  00259A  0E00               	movlw	0
  6616  00259C  6E08               	movwf	(??___ftge+1)^0,c
  6617  00259E  0E80               	movlw	128
  6618  0025A0  6E09               	movwf	(??___ftge+2)^0,c
  6619  0025A2  5004               	movf	___ftge@ff2^0,w,c
  6620  0025A4  5C07               	subwf	??___ftge^0,w,c
  6621  0025A6  6E04               	movwf	___ftge@ff2^0,c
  6622  0025A8  5005               	movf	(___ftge@ff2+1)^0,w,c
  6623  0025AA  5808               	subwfb	(??___ftge+1)^0,w,c
  6624  0025AC  6E05               	movwf	(___ftge@ff2+1)^0,c
  6625  0025AE  5006               	movf	(___ftge@ff2+2)^0,w,c
  6626  0025B0  5809               	subwfb	(??___ftge+2)^0,w,c
  6627  0025B2  6E06               	movwf	(___ftge@ff2+2)^0,c
  6628  0025B4                     l2393:
  6629  0025B4  0E00               	movlw	0
  6630  0025B6  1A01               	xorwf	___ftge@ff1^0,f,c
  6631  0025B8  0E00               	movlw	0
  6632  0025BA  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  6633  0025BC  0E80               	movlw	128
  6634  0025BE  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  6635  0025C0  0E00               	movlw	0
  6636  0025C2  1A04               	xorwf	___ftge@ff2^0,f,c
  6637  0025C4  0E00               	movlw	0
  6638  0025C6  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  6639  0025C8  0E80               	movlw	128
  6640  0025CA  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  6641  0025CC  5004               	movf	___ftge@ff2^0,w,c
  6642  0025CE  5C01               	subwf	___ftge@ff1^0,w,c
  6643  0025D0  5005               	movf	(___ftge@ff2+1)^0,w,c
  6644  0025D2  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  6645  0025D4  5006               	movf	(___ftge@ff2+2)^0,w,c
  6646  0025D6  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  6647  0025D8  B0D8               	btfsc	status,0,c
  6648  0025DA  D002               	goto	l2399
  6649  0025DC  90D8               	bcf	status,0,c
  6650  0025DE  0012               	return	
  6651  0025E0                     l2399:
  6652  0025E0  80D8               	bsf	status,0,c
  6653  0025E2  0012               	return		;funcret
  6654  0025E4                     __end_of___ftge:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function _ISR *****************
  6658 ;; Defined at:
  6659 ;;		line 100 in file "Lab5.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		Interrupt level 2
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	intcode
  6687  000008                     __pintcode:
  6688                           	callstack 0
  6689  000008                     _ISR:
  6690                           	callstack 25
  6691                           
  6692                           ;incstack = 0
  6693  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6694  00000A  EDF5  F014         	call	int_func,f	;refresh shadow registers
  6695                           
  6696                           	psect	intcode_body
  6697  0029EA                     __pintcode_body:
  6698                           	callstack 25
  6699  0029EA                     int_func:
  6700                           	callstack 25
  6701  0029EA  0006               	pop		; remove dummy address from shadow register refresh
  6702                           
  6703                           ;Lab5.c: 103: };Lab5.c: 105: if(TMR1IF==1){
  6704                           
  6705                           ;Lab5.c: 102: if(RBIF==1){
  6706  0029EC  A09E               	btfss	3998,0,c	;volatile
  6707  0029EE  D00A               	goto	i2u100_45
  6708                           
  6709                           ;Lab5.c: 106: TMR1=3036;
  6710  0029F0  0E0B               	movlw	11
  6711  0029F2  6ECF               	movwf	207,c	;volatile
  6712  0029F4  0EDC               	movlw	220
  6713  0029F6  6ECE               	movwf	206,c	;volatile
  6714                           
  6715                           ;Lab5.c: 107: TMR1IF=0;
  6716  0029F8  909E               	bcf	3998,0,c	;volatile
  6717                           
  6718                           ;Lab5.c: 108: LATD1=LATD1^1;
  6719  0029FA  B28C               	btfsc	3980,1,c	;volatile
  6720  0029FC  D002               	goto	i2u99_40
  6721  0029FE  828C               	bsf	3980,1,c	;volatile
  6722  002A00  D001               	goto	i2u100_45
  6723  002A02                     i2u99_40:
  6724  002A02  928C               	bcf	3980,1,c	;volatile
  6725  002A04                     i2u100_45:
  6726  002A04  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6727  002A06  0011               	retfie		f
  6728  002A08                     __end_of_ISR:
  6729                           	callstack 0
  6730                           
  6731                           	psect	rparam
  6732  0000                     
  6733                           	psect	temp
  6734  00005F                     btemp:
  6735                           	callstack 0
  6736  00005F                     	ds	1
  6737  0000                     int$flags	set	btemp
  6738  0000                     wtemp8	set	btemp+1
  6739  0000                     ttemp5	set	btemp+1
  6740  0000                     ttemp6	set	btemp+4
  6741  0000                     ttemp7	set	btemp+8
  6742                           
  6743                           	psect	idloc
  6744                           
  6745                           ;Config register IDLOC0 @ 0x200000
  6746                           ;	unspecified, using default values
  6747  200000                     	org	2097152
  6748  200000  FF                 	db	255
  6749                           
  6750                           ;Config register IDLOC1 @ 0x200001
  6751                           ;	unspecified, using default values
  6752  200001                     	org	2097153
  6753  200001  FF                 	db	255
  6754                           
  6755                           ;Config register IDLOC2 @ 0x200002
  6756                           ;	unspecified, using default values
  6757  200002                     	org	2097154
  6758  200002  FF                 	db	255
  6759                           
  6760                           ;Config register IDLOC3 @ 0x200003
  6761                           ;	unspecified, using default values
  6762  200003                     	org	2097155
  6763  200003  FF                 	db	255
  6764                           
  6765                           ;Config register IDLOC4 @ 0x200004
  6766                           ;	unspecified, using default values
  6767  200004                     	org	2097156
  6768  200004  FF                 	db	255
  6769                           
  6770                           ;Config register IDLOC5 @ 0x200005
  6771                           ;	unspecified, using default values
  6772  200005                     	org	2097157
  6773  200005  FF                 	db	255
  6774                           
  6775                           ;Config register IDLOC6 @ 0x200006
  6776                           ;	unspecified, using default values
  6777  200006                     	org	2097158
  6778  200006  FF                 	db	255
  6779                           
  6780                           ;Config register IDLOC7 @ 0x200007
  6781                           ;	unspecified, using default values
  6782  200007                     	org	2097159
  6783  200007  FF                 	db	255
  6784                           
  6785                           	psect	config
  6786                           
  6787                           ;Config register CONFIG1L @ 0x300000
  6788                           ;	unspecified, using default values
  6789                           ;	PLL Prescaler Selection bits
  6790                           ;	PLLDIV = 0x0, unprogrammed default
  6791                           ;	System Clock Postscaler Selection bits
  6792                           ;	CPUDIV = 0x0, unprogrammed default
  6793                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6794                           ;	USBDIV = 0x0, unprogrammed default
  6795  300000                     	org	3145728
  6796  300000  00                 	db	0
  6797                           
  6798                           ;Config register CONFIG1H @ 0x300001
  6799                           ;	Oscillator Selection bits
  6800                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6801                           ;	Fail-Safe Clock Monitor Enable bit
  6802                           ;	FCMEN = 0x0, unprogrammed default
  6803                           ;	Internal/External Oscillator Switchover bit
  6804                           ;	IESO = 0x0, unprogrammed default
  6805  300001                     	org	3145729
  6806  300001  09                 	db	9
  6807                           
  6808                           ;Config register CONFIG2L @ 0x300002
  6809                           ;	unspecified, using default values
  6810                           ;	Power-up Timer Enable bit
  6811                           ;	PWRT = 0x1, unprogrammed default
  6812                           ;	Brown-out Reset Enable bits
  6813                           ;	BOR = 0x3, unprogrammed default
  6814                           ;	Brown-out Reset Voltage bits
  6815                           ;	BORV = 0x3, unprogrammed default
  6816                           ;	USB Voltage Regulator Enable bit
  6817                           ;	VREGEN = 0x0, unprogrammed default
  6818  300002                     	org	3145730
  6819  300002  1F                 	db	31
  6820                           
  6821                           ;Config register CONFIG2H @ 0x300003
  6822                           ;	Watchdog Timer Enable bit
  6823                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6824                           ;	Watchdog Timer Postscale Select bits
  6825                           ;	WDTPS = 0xF, unprogrammed default
  6826  300003                     	org	3145731
  6827  300003  1E                 	db	30
  6828                           
  6829                           ; Padding undefined space
  6830  300004                     	org	3145732
  6831  300004  FF                 	db	255
  6832                           
  6833                           ;Config register CONFIG3H @ 0x300005
  6834                           ;	unspecified, using default values
  6835                           ;	CCP2 MUX bit
  6836                           ;	CCP2MX = 0x1, unprogrammed default
  6837                           ;	PORTB A/D Enable bit
  6838                           ;	PBADEN = 0x1, unprogrammed default
  6839                           ;	Low-Power Timer 1 Oscillator Enable bit
  6840                           ;	LPT1OSC = 0x0, unprogrammed default
  6841                           ;	MCLR Pin Enable bit
  6842                           ;	MCLRE = 0x1, unprogrammed default
  6843  300005                     	org	3145733
  6844  300005  83                 	db	131
  6845                           
  6846                           ;Config register CONFIG4L @ 0x300006
  6847                           ;	Stack Full/Underflow Reset Enable bit
  6848                           ;	STVREN = 0x1, unprogrammed default
  6849                           ;	Single-Supply ICSP Enable bit
  6850                           ;	LVP = OFF, Single-Supply ICSP disabled
  6851                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6852                           ;	ICPRT = 0x0, unprogrammed default
  6853                           ;	Extended Instruction Set Enable bit
  6854                           ;	XINST = 0x0, unprogrammed default
  6855                           ;	Background Debugger Enable bit
  6856                           ;	DEBUG = 0x1, unprogrammed default
  6857  300006                     	org	3145734
  6858  300006  81                 	db	129
  6859                           
  6860                           ; Padding undefined space
  6861  300007                     	org	3145735
  6862  300007  FF                 	db	255
  6863                           
  6864                           ;Config register CONFIG5L @ 0x300008
  6865                           ;	unspecified, using default values
  6866                           ;	Code Protection bit
  6867                           ;	CP0 = 0x1, unprogrammed default
  6868                           ;	Code Protection bit
  6869                           ;	CP1 = 0x1, unprogrammed default
  6870                           ;	Code Protection bit
  6871                           ;	CP2 = 0x1, unprogrammed default
  6872                           ;	Code Protection bit
  6873                           ;	CP3 = 0x1, unprogrammed default
  6874  300008                     	org	3145736
  6875  300008  0F                 	db	15
  6876                           
  6877                           ;Config register CONFIG5H @ 0x300009
  6878                           ;	unspecified, using default values
  6879                           ;	Boot Block Code Protection bit
  6880                           ;	CPB = 0x1, unprogrammed default
  6881                           ;	Data EEPROM Code Protection bit
  6882                           ;	CPD = 0x1, unprogrammed default
  6883  300009                     	org	3145737
  6884  300009  C0                 	db	192
  6885                           
  6886                           ;Config register CONFIG6L @ 0x30000A
  6887                           ;	unspecified, using default values
  6888                           ;	Write Protection bit
  6889                           ;	WRT0 = 0x1, unprogrammed default
  6890                           ;	Write Protection bit
  6891                           ;	WRT1 = 0x1, unprogrammed default
  6892                           ;	Write Protection bit
  6893                           ;	WRT2 = 0x1, unprogrammed default
  6894                           ;	Write Protection bit
  6895                           ;	WRT3 = 0x1, unprogrammed default
  6896  30000A                     	org	3145738
  6897  30000A  0F                 	db	15
  6898                           
  6899                           ;Config register CONFIG6H @ 0x30000B
  6900                           ;	unspecified, using default values
  6901                           ;	Configuration Register Write Protection bit
  6902                           ;	WRTC = 0x1, unprogrammed default
  6903                           ;	Boot Block Write Protection bit
  6904                           ;	WRTB = 0x1, unprogrammed default
  6905                           ;	Data EEPROM Write Protection bit
  6906                           ;	WRTD = 0x1, unprogrammed default
  6907  30000B                     	org	3145739
  6908  30000B  E0                 	db	224
  6909                           
  6910                           ;Config register CONFIG7L @ 0x30000C
  6911                           ;	unspecified, using default values
  6912                           ;	Table Read Protection bit
  6913                           ;	EBTR0 = 0x1, unprogrammed default
  6914                           ;	Table Read Protection bit
  6915                           ;	EBTR1 = 0x1, unprogrammed default
  6916                           ;	Table Read Protection bit
  6917                           ;	EBTR2 = 0x1, unprogrammed default
  6918                           ;	Table Read Protection bit
  6919                           ;	EBTR3 = 0x1, unprogrammed default
  6920  30000C                     	org	3145740
  6921  30000C  0F                 	db	15
  6922                           
  6923                           ;Config register CONFIG7H @ 0x30000D
  6924                           ;	unspecified, using default values
  6925                           ;	Boot Block Table Read Protection bit
  6926                           ;	EBTRB = 0x1, unprogrammed default
  6927  30000D                     	org	3145741
  6928  30000D  40                 	db	64
  6929                           tosu	equ	0xFFF
  6930                           tosh	equ	0xFFE
  6931                           tosl	equ	0xFFD
  6932                           stkptr	equ	0xFFC
  6933                           pclatu	equ	0xFFB
  6934                           pclath	equ	0xFFA
  6935                           pcl	equ	0xFF9
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           indf0	equ	0xFEF
  6943                           postinc0	equ	0xFEE
  6944                           postdec0	equ	0xFED
  6945                           preinc0	equ	0xFEC
  6946                           plusw0	equ	0xFEB
  6947                           fsr0h	equ	0xFEA
  6948                           fsr0l	equ	0xFE9
  6949                           wreg	equ	0xFE8
  6950                           indf1	equ	0xFE7
  6951                           postinc1	equ	0xFE6
  6952                           postdec1	equ	0xFE5
  6953                           preinc1	equ	0xFE4
  6954                           plusw1	equ	0xFE3
  6955                           fsr1h	equ	0xFE2
  6956                           fsr1l	equ	0xFE1
  6957                           bsr	equ	0xFE0
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           preinc2	equ	0xFDC
  6962                           plusw2	equ	0xFDB
  6963                           fsr2h	equ	0xFDA
  6964                           fsr2l	equ	0xFD9
  6965                           status	equ	0xFD8

Data Sizes:
    Strings     96
    Constant    0
    Data        9
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      94
    BANK0           160      0      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TransmitirMensaje@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[17]), 
		 -> STR_5(CODE[3]), 

    GuardarASCII@arreglo	PTR unsigned char  size(1) Largest target is 8
		 -> grados(BANK0[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[6]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_EscribeLCD_2Decimales
    _imprimirTemperatura->_EscribeLCD_n32
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n32->___lldiv
    ___lldiv->___llmod
    _calcularTemperatura->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___lwtoft->___ftpack
    _TransmitirGeneral->_TransmitirNumero
    _TransmitirNumero->___lwdiv
    ___lwdiv->___lwmod
    _TransmitirMensaje->_Transmitir
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _GuardarASCII->_DireccionaLCD
    _GuardarASCII->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _EscribeLCD_2Decimales->___fttol
    ___fttol->_calcularTemperatura
    ___ftmul->___ftpack
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _EscribeLCD_c->_EnviaDato
    _EnviaDato->_RetardoLCD
    _ColorRGB->___lwtoft

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   61438
                                             82 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
              _EscribeLCD_2Decimales
                       _GuardarASCII
                      _InicializaLCD
                     _MensajeLCD_Var
                  _TransmitirGeneral
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                _calcularTemperatura
                _imprimirTemperatura
 ---------------------------------------------------------------------------------
 (1) _imprimirTemperatura                                  5     0      5   17496
                                             53 COMRAM     5     0      5
                       _EscribeLCD_c
                     _EscribeLCD_n32
                      _EscribeLCD_n8
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     481
                                              5 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n32                                      31    26      5   14964
                                             22 COMRAM    31    26      5
                       _EscribeLCD_c
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    6999
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5634
                                              9 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _calcularTemperatura                                 10     6      4   12925
                                             50 COMRAM    10     6      4
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3708
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4696
                                             38 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3094
                                              8 COMRAM     3     0      3
                         _Conversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _TransmitirGeneral                                    3     0      3    3103
                                             21 COMRAM     3     0      3
                  _TransmitirMensaje
                   _TransmitirNumero
 ---------------------------------------------------------------------------------
 (2) _TransmitirNumero                                     9     7      2    2460
                                             12 COMRAM     9     7      2
                         _Transmitir
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1071
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TransmitirMensaje                                    1     0      1     447
                                              1 COMRAM     1     0      1
                         _Transmitir
 ---------------------------------------------------------------------------------
 (3) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _GuardarASCII                                         3     2      1     515
                                              5 COMRAM     3     2      1
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_2Decimales                                7     4      3    7170
                                             75 COMRAM     7     4      3
                       _EscribeLCD_c
                      _EscribeLCD_n8
                            ___awmod
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                             60 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                _calcularTemperatura (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4210
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1635
                                              8 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             3     0      3    1582
                                             11 COMRAM     3     0      3
                             ___ftge
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1352
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
     ___ftge
     ___lwtoft (ARG)
       _Conversion (ARG)
       ___ftpack (ARG)
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_2Decimales
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     ___awmod
     ___ftmul
       ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       _calcularTemperatura (ARG)
         ___ftadd
         ___ftdiv
         ___ftmul
   _GuardarASCII
     _DireccionaLCD
     _EscribeLCD_c
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   _TransmitirGeneral
     _TransmitirMensaje
       _Transmitir
     _TransmitirNumero
       _Transmitir
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
       ___wmul
   ___ftadd
   ___ftdiv
   ___ftge
   ___ftmul
   ___fttol
   ___lwtoft
   _calcularTemperatura
   _imprimirTemperatura
     _EscribeLCD_c
     _EscribeLCD_n32
       _EscribeLCD_c
       ___lldiv
         ___llmod (ARG)
       ___llmod
     _EscribeLCD_n8
     _MensajeLCD_Var

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       D       5        8.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      20        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 03 23:46:30 2022

              Transmitir@BufferT 0001                               _GO 007E11  
                     EnviaDato@a 0004              ___wmul@multiplicand 0003  
                   ___ftadd@exp1 0032                     ___ftadd@exp2 0031  
                   ___ftadd@sign 0030                              l204 1CEA  
                            l205 1DB0                    _InicializaLCD 23D6  
                            l244 29B8                              l317 24E2  
                            l620 1AC0                              l189 1866  
                            l631 2076                              l769 280A  
                            l698 26A8                              l779 2892  
                            _GIE 007F97                              _RE0 007C20  
                            _RE1 007C21                              _ISR 0008  
                   ___awmod@sign 0006                              wreg 000FE8  
           ?_imprimirTemperatura 0036                             ?_ISR 0001  
                   ___ftdiv@cntr 0021                     ___ftdiv@sign 0026  
                           l2001 28D2                             l2101 2114  
                           l2015 2922                             l2007 290A  
                           l2033 269A                             l2025 2666  
                           l2121 0868                             l2043 27D8  
                           l2027 2672                             l2131 0CCA  
                           l2123 089A                             l2117 2178  
                           l2045 27E0                             l2221 1A54  
                           l2133 0EC0                             l2125 0920  
                           l2141 16E2                             l2055 2800  
                           l2071 2888                             l2063 2868  
                           l2223 1A5E                             l2135 1116  
                           l2127 09FE                             l2313 1F1E  
                           l2161 2954                             l2065 2870  
                           l2241 1ADC                             l2233 1A92  
                           l2225 1A68                             l2137 13CC  
                           l2129 0B34                             l2145 292C  
                           l2091 20CE                             l2331 1F60  
                           l2307 1EF6                             l2251 1B0C  
                           l2235 1A9C                             l2085 20AE  
                           l2341 1F88                             l2165 2966  
                           l2173 1B5E                             l2261 1FEA  
                           l2149 293E                             l2327 1F50  
                           l2431 221E                             l2175 1B6C  
                           l2183 1C72                             l2361 2604  
                           l2337 1F78                             l2409 21BA  
                           l2177 1B8E                             l2169 1B40  
                           l2193 19DA                             l2601 22D6  
                           l2427 220E                             l2179 1BE4  
                           l2267 2012                             l2531 1CF8  
                           l2603 22E4                             l2381 264A  
                           l2373 2632                             l2365 2612  
                           l2357 25F8                             l2445 224E  
                           l2437 2226                             l2533 1D16  
                           l2605 22F8                             l2367 261A  
                           l2439 2232                             l1911 2A70  
                           l2551 26EE                             l2199 1A02  
                           l2287 2050                             l2535 1D50  
                           l2393 25B4                             l2561 1DE4  
                           l2377 263C                             l2545 26D0  
                           l2609 230C                             l2459 23E8  
                           l2547 26DA                             l2555 26F8  
                           l2539 1D96                             l2389 2592  
                           l2581 1EA2                             l2573 1E56  
                           l2565 1E0A                             l2469 2406  
                           l2549 26E4                             l2399 25E0  
                           l1951 2346                             l2479 2424  
                           l1927 2494                             l2727 17C2  
                           l2585 1EC8                             l2577 1E7C  
                           l2569 1E30                             l1881 2792  
                           l1961 23A2                             l1953 2350  
                           l1929 24A0                             l2593 2288  
                           l2737 1868                             l1883 279C  
                           l1963 23AC                             l1955 236E  
                           l2499 245C                             l1939 24D4  
                           l1877 2770                             l2597 22A8  
                           l1879 2780                             l1887 27A6  
                           l1959 2384                             l2687 28E2  
                           l2599 22C2                             l1985 28AE  
                           l1899 284C                             l1997 28CA  
                           l1989 28B4                             STR_1 0847  
                           STR_2 0855                             STR_3 085E  
                           STR_4 085B                             STR_5 085B  
                           STR_6 0826                             STR_7 0837  
                           STR_8 0815                             STR_9 0801  
                           u1120 23B6                             u1200 2676  
                           u1050 24A4                             u1230 27E4  
                           u1311 199A                             u2007 1774  
                           u1160 28B8                             u1080 2338  
                           u1321 19AE                             u2017 17B2  
                           u1410 1A32                             u2027 197C  
                           u1260 2874                             u2037 2776  
                           u1350 19CC                             _LATB 000F8A  
                           u2047 2782                             _LATD 000F8C  
                           u2057 278A                             u1521 1FD2  
                           u1450 1A70                             u2067 2794  
                           u1380 19F4                             u2077 279E  
                           u1541 1FFA                             u2087 2A64  
                           u1480 1AA4                             u1721 219E  
                           u1810 2A1A                             u1730 21A8  
                           u1571 1EDE                             u1660 261E  
                           u1740 21D8                             u1591 1F06  
                           u1745 21D0                             u1780 2238  
                           u1950 227C                             u1960 229C  
                           _PEIE 007F96                             _RBIF 007F90  
                           _TMR1 000FCE                             _TRMT 007D61  
                           _Van0 0058                             _Van1 0068  
                 ??_EscribeLCD_c 0005                             _main 172A  
                   ___ftpack@arg 0001                     ___ftpack@exp 0004  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 005F                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
     __size_of_TransmitirGeneral 005A                    ?_GuardarASCII 0006  
                   ___ftmul@cntr 0016       __size_of_TransmitirMensaje 0028  
                   ___param_bank 000000                     ___ftmul@sign 0017  
                          ??_ISR 0001                     ___fttol@exp1 004B  
                   ___fttol@lval 0047                   ?_InicializaLCD 0001  
                          ?_main 0001                  __end_of___lbdiv 28D6  
                          _ADRES 000FC3                  __end_of___ftadd 1B32  
                __end_of___awmod 2654                    EscribeLCD_c@a 0005  
                __end_of___lbmod 292A                  __end_of___ftdiv 20A8  
                __end_of___lldiv 24F4                  __end_of___ftmul 1FC2  
                          _T1CON 000FCD                  __end_of___llmod 26BA  
              TransmitirNumero@a 000D                TransmitirNumero@b 0011  
                __end_of___fttol 2260                            _LATD0 007C60  
                          _LATD1 007C61                            _LATD2 007C62  
                          _LATD3 007C63                  __end_of___lwdiv 2814  
                __end_of___lwmod 289C                            _RCSTA 000FAB  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TRISD 000F95                            _TXREG 000FAD  
          ??_imprimirTemperatura 003B                            _TXSTA 000FAC  
                ??_EscribeLCD_n8 000A                    ___ftpack@sign 0005  
           EscribeLCD_n32@decena 0034          __size_of_MensajeLCD_Var 0028  
            _calcularTemperatura 1C88                            tablat 000FF5  
                     _Conversion 29A0               TransmitirGeneral@b 0016  
                    _HabilitaLCD 2A60             EscribeLCD_n32@millar 0030  
           EscribeLCD_n32@millon 0024                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
           EscribeLCD_n32@unidad 0035                  ___lbdiv@divisor 0005  
                ___lbdiv@counter 0007                   ??_GuardarASCII 0007  
               __end_of_BorraLCD 2A60          calcularTemperatura@Van0 0033  
               __end_of_ColorRGB 1ECE                  __initialization 2714  
        calcularTemperatura@caso 0036                     __end_of_main 198A  
           ?_calcularTemperatura 0033               TransmitirMensaje@a 0002  
                         ??_main 0053             __end_of_ConfiguraLCD 2A20  
                  ___fttol@sign1 0046                    __activetblptr 000002  
       EscribeLCD_2Decimales@num 004F                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
               ___llmod@dividend 0001                   DireccionaLCD@a 0005  
                 EscribeLCD_n8@a 000D                   EscribeLCD_n8@b 0009  
               __end_of___ftpack 23D6               __size_of_EnviaDato 0046  
               __end_of___lwtoft 29EA                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISE0 007CB0  
                         _TRISE1 007CB1            __end_of_DireccionaLCD 2A36  
                     _RetardoLCD 276C                 ??_EscribeLCD_n32 001C  
           EscribeLCD_n8@centena 000A                           ___ftge 2570  
                         ___wmul 297A                        ??___lbdiv 0006  
                      ??___ftadd 002D                        ??___awmod 0005  
                      ??___lbmod 0002                        ??___ftdiv 001E  
          ??_calcularTemperatura 0037                        ??___lldiv 0012  
                      ??___ftmul 000F                        ??___llmod 0009  
                      ??___fttol 0041                        ??___lwdiv 000A  
                      ??___lwmod 0005                  ??_InicializaLCD 0005  
                         _grados 0060                           clear_0 2758  
 calcularTemperatura@temperatura 0037                  ___awmod@divisor 0003  
                         isa$std 000001                  ___awmod@counter 0005  
           __end_of_EscribeLCD_c 2A4C            EscribeLCD_n32@cienmil 0028  
          EscribeLCD_n32@centena 0032            ___ftmul@f3_as_product 0013  
          EscribeLCD_n32@diezmil 002C                     __pdataCOMRAM 005E  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     _Transmitir 2A6E                 ___lbdiv@dividend 0006  
      __size_of_TransmitirNumero 0156                      ?_Conversion 0001  
                ___lbmod@divisor 0001                       __accesstop 0060  
        __end_of__initialization 275E                  ___lbmod@counter 0003  
          _EscribeLCD_2Decimales 24F4                       ___ftadd@f1 0027  
                     ___ftadd@f2 002A                       ___ftge@ff1 0001  
                     ___ftge@ff2 0004                    ___rparam_used 000001  
                     ___ftdiv@f1 0018                       ___ftdiv@f2 001B  
                     ___ftdiv@f3 0022                       ___ftmul@f1 0009  
                     ___ftmul@f2 000C                       ___fttol@f1 003D  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2A7A  
              __end_of_EnviaDato 285A                 ___lbdiv@quotient 0008  
                     ___lwtoft@c 0009           EscribeLCD_2Decimales@a 004C  
EscribeLCD_2Decimales@decimalesP 0051             __end_of_GuardarASCII 2900  
    EscribeLCD_2Decimales@unidad 0052                        ?_BorraLCD 0001  
                      ?_ColorRGB 000C                   _MensajeLCD_Var 292A  
                     __pbssBANK0 0068                  MensajeLCD_Var@a 0006  
                    ?_RetardoLCD 0001                      RetardoLCD@a 0002  
                        ?___ftge 0001            __size_of_ConfiguraLCD 0018  
                        ?___wmul 0001                          _BAUDCON 000FB8  
                EscribeLCD_n32@a 0017                  EscribeLCD_n32@b 001B  
                      ?___ftpack 0001              __size_of_Conversion 0026  
                      ?___lwtoft 0009              TransmitirNumero@var 0012  
         __end_of_MensajeLCD_Var 2952                          i2u99_40 2A02  
                     ??_BorraLCD 0005                       ??_ColorRGB 000F  
                    _TempCelsius 006B                      ?_Transmitir 0001  
         ?_EscribeLCD_2Decimales 004C                     ?_HabilitaLCD 0001  
              GuardarASCII@cgram 0007                     _ConfiguraLCD 2A08  
                        __Hparam 0000                          _TempAn0 005B  
                        __Lparam 0000                    GuardarASCII@i 0008  
                        _VoltAn1 0055            __size_of_EscribeLCD_c 0016  
                __size_of___ftge 0074                          ___lbdiv 289C  
                        ___ftadd 198A                          ___awmod 25E4  
                        ___lbmod 2900                          ___ftdiv 1FC2  
                        ___lldiv 2472                  __size_of___wmul 0026  
                        ___ftmul 1ECE                          ___llmod 2654  
                        ___fttol 218E                          ___lwdiv 27C2  
                        ___lwmod 285A                     __psmallconst 0800  
    __end_of_imprimirTemperatura 2328                          __pcinit 2714  
                     ??___ftpack 0006                          __ramtop 0800  
                        __ptext0 172A                          __ptext1 2260  
                        __ptext2 292A                          __ptext3 0862  
                        __ptext4 2654                          __ptext5 2472  
                        __ptext6 1C88                          __ptext7 1FC2  
                        __ptext8 198A                          __ptext9 29C6  
                     ??___lwtoft 000C                     __size_of_ISR 2A00  
            __size_of_RetardoLCD 0056                 ___awmod@dividend 0001  
calcularTemperatura@temperaturaC 003A                  ?_MensajeLCD_Var 0006  
          __end_of_EscribeLCD_n8 218E                 _TransmitirNumero 1B32  
                 __pintcode_body 29EA             end_of_initialization 275E  
                Conversion@canal 0004                    __Lmediumconst 0000  
                        int_func 29EA                     _EscribeLCD_c 2A36  
                ___lldiv@divisor 000E                  ___lldiv@counter 0016  
                        postdec1 000FE5                          postinc0 000FEE  
            __size_of_Transmitir 000C            __size_of_GuardarASCII 002A  
               ___lbmod@dividend 0002                     ??_Conversion 0003  
                    ___lbmod@rem 0004                      ___ftdiv@exp 0025  
    __end_of_calcularTemperatura 1DBE          imprimirTemperatura@caso 003A  
                   _GuardarASCII 28D6                      ___ftmul@exp 0012  
                 __end_of___ftge 25E4                   __end_of___wmul 29A0  
            GuardarASCII@arreglo 0006                    __pidataCOMRAM 2A82  
          __end_of_InicializaLCD 2472               __end_of_Conversion 29C6  
                      _EnviaDato 2814           __size_of_DireccionaLCD 0016  
            start_initialization 2714                        _LecturaDS 005D  
           imprimirTemperatura@T 0036                      __end_of_ISR 2A08  
              __size_of_BorraLCD 0014                __size_of_ColorRGB 0110  
                   ??_RetardoLCD 0001                  ___llmod@divisor 0005  
                ___llmod@counter 0009             __size_of_HabilitaLCD 000E  
            EscribeLCD_n8@decena 000B                         ??___ftge 0007  
                       ??___wmul 0005                      __pdataBANK0 0060  
            EscribeLCD_n8@unidad 000C          __size_of_EscribeLCD_n32 0EC8  
                     ?_EnviaDato 0001                __size_of___ftpack 00AE  
                    __pbssCOMRAM 0055               __end_of_RetardoLCD 27C2  
              __size_of___lwtoft 0024          ??_EscribeLCD_2Decimales 004F  
                   ??_Transmitir 0001                    _DireccionaLCD 2A20  
               ___lwdiv@dividend 0006                        __pintcode 0008  
                       ?___lbdiv 0005                         ?___ftadd 0027  
                       ?___awmod 0001                         ?___lbmod 0001  
                       ?___ftdiv 0018                         ?___lldiv 000A  
                       ?___ftmul 0009                         ?___llmod 0001  
                       ?___fttol 003D         __end_of_TransmitirNumero 1C88  
                       ?___lwdiv 0006                         ?___lwmod 0001  
             __end_of_Transmitir 2A7A                 ??_MensajeLCD_Var 0007  
                    __smallconst 0800          TransmitirNumero@centena 000F  
               ___lwdiv@quotient 000A                   ___wmul@product 0005  
                 ?_DireccionaLCD 0001                         i2u100_45 2A04  
              ___wmul@multiplier 0001                      ??_EnviaDato 0003  
   __size_of_imprimirTemperatura 00C8                         _BorraLCD 2A4C  
       EscribeLCD_n32@cienmillon 001C                         _ColorRGB 1DBE  
                      copy_data0 2728         EscribeLCD_n32@diezmillon 0020  
                       __Hrparam 0000                         __Lrparam 0000  
         __size_of_EscribeLCD_n8 00E6                 __size_of___lbdiv 003A  
               __size_of___ftadd 01A8                 __size_of___awmod 0070  
               __size_of___lbmod 002A                 __size_of___ftdiv 00E6  
               __size_of___lldiv 0082                 __size_of___ftmul 00F4  
               __size_of___llmod 0066                 __size_of___fttol 00D2  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                       ___ftpack 2328                   _EscribeLCD_n32 0862  
                       ___lwtoft 29C6                    ConfiguraLCD@a 0001  
                ___lwdiv@divisor 0008                  ___lwdiv@counter 000C  
                       __ptext10 26BA                         __ptext11 1B32  
                       __ptext20 2A20                         __ptext12 297A  
                       __ptext21 24F4                         __ptext13 285A  
                       __ptext30 2814                         __ptext22 218E  
                       __ptext14 27C2                         __ptext31 276C  
                       __ptext23 1ECE                         __ptext15 2952  
                       __ptext32 2A60                         __ptext24 2328  
                       __ptext16 2A6E                         __ptext33 29A0  
                       __ptext25 25E4                         __ptext17 23D6  
                       __ptext34 2A08                         __ptext26 20A8  
                       __ptext18 2A4C                         __ptext35 1DBE  
                       __ptext27 2900                         __ptext19 28D6  
                       __ptext36 2570                         __ptext28 289C  
                       __ptext29 2A36                  ??_DireccionaLCD 0005  
         TransmitirNumero@decena 0014                    __size_of_main 0260  
                       _interfaz 005E           TransmitirNumero@unidad 0015  
              _TransmitirGeneral 26BA                         isa$xinst 000000  
                   ColorRGB@Temp 000C                         int$flags 005F  
         __end_of_EscribeLCD_n32 172A                _TransmitirMensaje 2952  
             ?_TransmitirGeneral 0016     __size_of_calcularTemperatura 0136  
             ?_TransmitirMensaje 0002              ??_TransmitirGeneral 0019  
            ??_TransmitirMensaje 0003                    _EscribeLCD_n8 20A8  
 __size_of_EscribeLCD_2Decimales 007C    __end_of_EscribeLCD_2Decimales 2570  
                       intlevel2 0000                    ??_HabilitaLCD 0001  
               ___lwmod@dividend 0001                 ___lldiv@dividend 000A  
                  ?_ConfiguraLCD 0001           __size_of_InicializaLCD 009C  
          TransmitirGeneral@caso 0018        __end_of_TransmitirGeneral 2714  
      __end_of_TransmitirMensaje 297A                  ?_EscribeLCD_n32 0017  
              ?_TransmitirNumero 000D               ??_TransmitirNumero 000F  
               ___lldiv@quotient 0012                  ___lwmod@divisor 0003  
                ___lwmod@counter 0005                   ?_EscribeLCD_n8 0009  
                 ??_ConfiguraLCD 0001                    ?_EscribeLCD_c 0001  
            __end_of_HabilitaLCD 2A6E              _imprimirTemperatura 2260  
