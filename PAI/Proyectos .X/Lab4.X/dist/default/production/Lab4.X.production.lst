

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 03 17:24:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.32
    54                           ; Generated 02/02/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataCOMRAM
    90  002970                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _operacion
    94  002970  20                 	db	32
    95  002971  20                 	db	32
    96  002972  20                 	db	32
    97  002973  20                 	db	32
    98  002974  00                 	db	0
    99                           
   100                           ;initializer for _interfaz
   101  002975  08                 	db	8
   102                           
   103                           ;initializer for _pacman2
   104  002976  06                 	db	6
   105  002977  09                 	db	9
   106  002978  11                 	db	17
   107  002979  17                 	db	23
   108  00297A  11                 	db	17
   109  00297B  09                 	db	9
   110  00297C  06                 	db	6
   111  00297D  00                 	db	0
   112                           
   113                           ;initializer for _pacman
   114  00297E  06                 	db	6
   115  00297F  09                 	db	9
   116  002980  12                 	db	18
   117  002981  14                 	db	20
   118  002982  12                 	db	18
   119  002983  09                 	db	9
   120  002984  06                 	db	6
   121  002985  00                 	db	0
   122                           
   123                           	psect	idataBANK0
   124  0029C6                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _barco
   128  0029C6  04                 	db	4
   129  0029C7  06                 	db	6
   130  0029C8  07                 	db	7
   131  0029C9  06                 	db	6
   132  0029CA  04                 	db	4
   133  0029CB  1F                 	db	31
   134  0029CC  0E                 	db	14
   135  0029CD  00                 	db	0
   136                           
   137                           ;initializer for _cereza
   138  0029CE  06                 	db	6
   139  0029CF  04                 	db	4
   140  0029D0  0E                 	db	14
   141  0029D1  1F                 	db	31
   142  0029D2  1F                 	db	31
   143  0029D3  17                 	db	23
   144  0029D4  0E                 	db	14
   145  0029D5  00                 	db	0
   146  0000                     _TMR0	set	4054
   147  0000                     _TMR1	set	4046
   148  0000                     _PORTB	set	3969
   149  0000                     _T0CON	set	4053
   150  0000                     _T1CON	set	4045
   151  0000                     _LATB	set	3978
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISD	set	3989
   154  0000                     _ADCON1	set	4033
   155  0000                     _LATD	set	3980
   156  0000                     _LATD0	set	31840
   157  0000                     _RB7	set	31759
   158  0000                     _RB6	set	31758
   159  0000                     _RB5	set	31757
   160  0000                     _RA0	set	31744
   161  0000                     _RB4	set	31756
   162  0000                     _POR	set	32385
   163  0000                     _PEIE	set	32662
   164  0000                     _GIE	set	32663
   165  0000                     _TMR0IE	set	32661
   166  0000                     _TMR0IF	set	32658
   167  0000                     _RBIE	set	32659
   168  0000                     _RBIF	set	32656
   169  0000                     _RBPU	set	32655
   170  0000                     _TMR1IE	set	31976
   171  0000                     _TMR1IF	set	31984
   172  0000                     _TRISA0	set	31888
   173  0000                     _LATD3	set	31843
   174  0000                     _LATD2	set	31842
   175                           
   176                           	psect	smallconst
   177  000800                     __psmallconst:
   178                           	callstack 0
   179  000800  00                 	db	0
   180  000801                     STR_3:
   181  000801  49                 	db	73	;'I'
   182  000802  6E                 	db	110	;'n'
   183  000803  64                 	db	100	;'d'
   184  000804  65                 	db	101	;'e'
   185  000805  74                 	db	116	;'t'
   186  000806  65                 	db	101	;'e'
   187  000807  72                 	db	114	;'r'
   188  000808  6D                 	db	109	;'m'
   189  000809  69                 	db	105	;'i'
   190  00080A  6E                 	db	110	;'n'
   191  00080B  61                 	db	97	;'a'
   192  00080C  64                 	db	100	;'d'
   193  00080D  6F                 	db	111	;'o'
   194  00080E  00                 	db	0
   195  00080F                     STR_2:
   196  00080F  52                 	db	82	;'R'
   197  000810  65                 	db	101	;'e'
   198  000811  73                 	db	115	;'s'
   199  000812  65                 	db	101	;'e'
   200  000813  74                 	db	116	;'t'
   201  000814  20                 	db	32
   202  000815  4D                 	db	77	;'M'
   203  000816  43                 	db	67	;'C'
   204  000817  4C                 	db	76	;'L'
   205  000818  52                 	db	82	;'R'
   206  000819  45                 	db	69	;'E'
   207  00081A  00                 	db	0
   208  00081B                     STR_1:
   209  00081B  52                 	db	82	;'R'
   210  00081C  65                 	db	101	;'e'
   211  00081D  73                 	db	115	;'s'
   212  00081E  65                 	db	101	;'e'
   213  00081F  74                 	db	116	;'t'
   214  000820  20                 	db	32
   215  000821  50                 	db	80	;'P'
   216  000822  4F                 	db	79	;'O'
   217  000823  52                 	db	82	;'R'
   218  000824  00                 	db	0
   219  000825                     STR_4:
   220  000825  49                 	db	73	;'I'
   221  000826  6E                 	db	110	;'n'
   222  000827  66                 	db	102	;'f'
   223  000828  69                 	db	105	;'i'
   224  000829  6E                 	db	110	;'n'
   225  00082A  69                 	db	105	;'i'
   226  00082B  74                 	db	116	;'t'
   227  00082C  6F                 	db	111	;'o'
   228  00082D  00                 	db	0
   229  00082E  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           ; #config settings
   232                           
   233                           	psect	cinit
   234  00267A                     __pcinit:
   235                           	callstack 0
   236  00267A                     start_initialization:
   237                           	callstack 0
   238  00267A                     __initialization:
   239                           	callstack 0
   240                           
   241                           ; Initialize objects allocated to BANK0 (16 bytes)
   242                           ; load TBLPTR registers with __pidataBANK0
   243  00267A  0EC6               	movlw	low __pidataBANK0
   244  00267C  6EF6               	movwf	tblptrl,c
   245  00267E  0E29               	movlw	high __pidataBANK0
   246  002680  6EF7               	movwf	tblptrh,c
   247  002682  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   248  002684  6EF8               	movwf	tblptru,c
   249  002686  EE00  F08B         	lfsr	0,__pdataBANK0
   250  00268A  EE10 F010          	lfsr	1,16
   251  00268E                     copy_data0:
   252  00268E  0009               	tblrd		*+
   253  002690  CFF5 FFEE          	movff	tablat,postinc0
   254  002694  50E5               	movf	postdec1,w,c
   255  002696  50E1               	movf	fsr1l,w,c
   256  002698  E1FA               	bnz	copy_data0
   257                           
   258                           ; Initialize objects allocated to COMRAM (22 bytes)
   259                           ; load TBLPTR registers with __pidataCOMRAM
   260  00269A  0E70               	movlw	low __pidataCOMRAM
   261  00269C  6EF6               	movwf	tblptrl,c
   262  00269E  0E29               	movlw	high __pidataCOMRAM
   263  0026A0  6EF7               	movwf	tblptrh,c
   264  0026A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   265  0026A4  6EF8               	movwf	tblptru,c
   266  0026A6  EE00  F03D         	lfsr	0,__pdataCOMRAM
   267  0026AA  EE10 F016          	lfsr	1,22
   268  0026AE                     copy_data1:
   269  0026AE  0009               	tblrd		*+
   270  0026B0  CFF5 FFEE          	movff	tablat,postinc0
   271  0026B4  50E5               	movf	postdec1,w,c
   272  0026B6  50E1               	movf	fsr1l,w,c
   273  0026B8  E1FA               	bnz	copy_data1
   274                           
   275                           ; Clear objects allocated to COMRAM (7 bytes)
   276  0026BA  EE00  F053         	lfsr	0,__pbssCOMRAM
   277  0026BE  0E07               	movlw	7
   278  0026C0                     clear_0:
   279  0026C0  6AEE               	clrf	postinc0,c
   280  0026C2  06E8               	decf	wreg,f,c
   281  0026C4  E1FD               	bnz	clear_0
   282  0026C6                     end_of_initialization:
   283                           	callstack 0
   284  0026C6                     __end_of__initialization:
   285                           	callstack 0
   286  0026C6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   287  0026C8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   288  0026CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  0026CC  6EF8               	movwf	tblptru,c
   290  0026CE  0100               	movlb	0
   291  0026D0  EFE2  F00D         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294  000053                     __pbssCOMRAM:
   295                           	callstack 0
   296  000053                     _reset:
   297                           	callstack 0
   298  000053                     	ds	1
   299  000054                     _activado:
   300                           	callstack 0
   301  000054                     	ds	1
   302  000055                     _digitar:
   303                           	callstack 0
   304  000055                     	ds	1
   305  000056                     _Cambio:
   306                           	callstack 0
   307  000056                     	ds	1
   308  000057                     _limpiar:
   309                           	callstack 0
   310  000057                     	ds	1
   311  000058                     _borrar:
   312                           	callstack 0
   313  000058                     	ds	1
   314  000059                     _cont:
   315                           	callstack 0
   316  000059                     	ds	1
   317                           
   318                           	psect	dataCOMRAM
   319  00003D                     __pdataCOMRAM:
   320                           	callstack 0
   321  00003D                     _operacion:
   322                           	callstack 0
   323  00003D                     	ds	5
   324  000042                     _interfaz:
   325                           	callstack 0
   326  000042                     	ds	1
   327  000043                     _pacman2:
   328                           	callstack 0
   329  000043                     	ds	8
   330  00004B                     _pacman:
   331                           	callstack 0
   332  00004B                     	ds	8
   333                           
   334                           	psect	dataBANK0
   335  00008B                     __pdataBANK0:
   336                           	callstack 0
   337  00008B                     _barco:
   338                           	callstack 0
   339  00008B                     	ds	8
   340  000093                     _cereza:
   341                           	callstack 0
   342  000093                     	ds	8
   343                           
   344                           	psect	cstackBANK0
   345  000060                     __pcstackBANK0:
   346                           	callstack 0
   347  000060                     ??_ModuloOperacion:
   348                           
   349                           ; 1 bytes @ 0x0
   350  000060                     	ds	5
   351  000065                     ModuloOperacion@n1L:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x5
   355  000065                     	ds	4
   356  000069                     ModuloOperacion@n1:
   357                           	callstack 0
   358                           
   359                           ; 3 bytes @ 0x9
   360  000069                     	ds	3
   361  00006C                     ModuloOperacion@n2:
   362                           	callstack 0
   363                           
   364                           ; 3 bytes @ 0xC
   365  00006C                     	ds	3
   366  00006F                     ModuloOperacion@i:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0xF
   370  00006F                     	ds	1
   371  000070                     ModuloOperacion@var:
   372                           	callstack 0
   373                           
   374                           ; 4 bytes @ 0x10
   375  000070                     	ds	4
   376  000074                     ModuloOperacion@var_196:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x14
   380  000074                     	ds	4
   381  000078                     ModuloOperacion@i_197:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x18
   385  000078                     	ds	4
   386  00007C                     ModuloOperacion@b:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x1C
   390  00007C                     	ds	1
   391  00007D                     ModuloOperacion@b_195:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x1D
   395  00007D                     	ds	1
   396  00007E                     ModuloOperacion@ResL:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x1E
   400  00007E                     	ds	4
   401  000082                     ModuloOperacion@ResL_194:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x22
   405  000082                     	ds	4
   406  000086                     ModuloOperacion@num2:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x26
   410  000086                     	ds	1
   411  000087                     ModuloOperacion@num1:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x27
   415  000087                     	ds	1
   416  000088                     ModuloOperacion@Res:
   417                           	callstack 0
   418                           
   419                           ; 3 bytes @ 0x28
   420  000088                     	ds	3
   421                           
   422                           	psect	cstackCOMRAM
   423  000001                     __pcstackCOMRAM:
   424                           	callstack 0
   425  000001                     ControlError@A:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x0
   429  000001                     	ds	1
   430  000002                     OpTeclado@A:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434  000002                     	ds	1
   435  000003                     OpTeclado@c:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x2
   439  000003                     	ds	1
   440  000004                     ??_ISR:
   441                           
   442                           ; 1 bytes @ 0x3
   443  000004                     	ds	2
   444  000006                     ??_RetardoLCD:
   445  000006                     ?___awmod:
   446                           	callstack 0
   447  000006                     ?___ftpack:
   448                           	callstack 0
   449  000006                     ?___lmul:
   450                           	callstack 0
   451  000006                     ?___llmod:
   452                           	callstack 0
   453  000006                     ConfiguraLCD@a:
   454                           	callstack 0
   455  000006                     ___lbmod@divisor:
   456                           	callstack 0
   457  000006                     ___awmod@dividend:
   458                           	callstack 0
   459  000006                     ___ftpack@arg:
   460                           	callstack 0
   461  000006                     ___ftge@ff1:
   462                           	callstack 0
   463  000006                     ___lmul@multiplier:
   464                           	callstack 0
   465  000006                     ___llmod@dividend:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x5
   469  000006                     	ds	1
   470  000007                     RetardoLCD@a:
   471                           	callstack 0
   472  000007                     ___lbmod@dividend:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x6
   476  000007                     	ds	1
   477  000008                     ??_EnviaDato:
   478  000008                     ___lbmod@counter:
   479                           	callstack 0
   480  000008                     ___awmod@divisor:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x7
   484  000008                     	ds	1
   485  000009                     EnviaDato@a:
   486                           	callstack 0
   487  000009                     ___ftpack@exp:
   488                           	callstack 0
   489  000009                     ___lbmod@rem:
   490                           	callstack 0
   491  000009                     ___ftge@ff2:
   492                           	callstack 0
   493                           
   494                           ; 3 bytes @ 0x8
   495  000009                     	ds	1
   496  00000A                     EscribeLCD_c@a:
   497                           	callstack 0
   498  00000A                     DireccionaLCD@a:
   499                           	callstack 0
   500  00000A                     ___awmod@counter:
   501                           	callstack 0
   502  00000A                     ___ftpack@sign:
   503                           	callstack 0
   504  00000A                     ___lbdiv@divisor:
   505                           	callstack 0
   506  00000A                     ___lmul@multiplicand:
   507                           	callstack 0
   508  00000A                     ___llmod@divisor:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x9
   512  00000A                     	ds	1
   513  00000B                     ??___ftpack:
   514  00000B                     MensajeLCD_Var@a:
   515                           	callstack 0
   516  00000B                     GuardarASCII@arreglo:
   517                           	callstack 0
   518  00000B                     ___awmod@sign:
   519                           	callstack 0
   520  00000B                     ___lbdiv@dividend:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xA
   524  00000B                     	ds	1
   525  00000C                     ??___ftge:
   526  00000C                     MensajeLCD_Var@cont:
   527                           	callstack 0
   528  00000C                     GuardarASCII@cgram:
   529                           	callstack 0
   530  00000C                     ___lbdiv@counter:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0xB
   534  00000C                     	ds	1
   535  00000D                     ??_MensajeLCD_Var:
   536  00000D                     GuardarASCII@i:
   537                           	callstack 0
   538  00000D                     ___lbdiv@quotient:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0xC
   542  00000D                     	ds	1
   543  00000E                     ?___ftdiv:
   544                           	callstack 0
   545  00000E                     ?___ftmul:
   546                           	callstack 0
   547  00000E                     ?___lbtoft:
   548                           	callstack 0
   549  00000E                     ___llmod@counter:
   550                           	callstack 0
   551  00000E                     ___ftdiv@f1:
   552                           	callstack 0
   553  00000E                     ___ftmul@f1:
   554                           	callstack 0
   555  00000E                     ___lmul@product:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0xD
   559  00000E                     	ds	1
   560  00000F                     ?___lldiv:
   561                           	callstack 0
   562  00000F                     ___lldiv@dividend:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0xE
   566  00000F                     	ds	1
   567  000010                     MensajeLCD_Var@i:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xF
   571  000010                     	ds	1
   572  000011                     ___lbtoft@c:
   573                           	callstack 0
   574  000011                     ___ftdiv@f2:
   575                           	callstack 0
   576  000011                     ___ftmul@f2:
   577                           	callstack 0
   578                           
   579                           ; 3 bytes @ 0x10
   580  000011                     	ds	2
   581  000013                     ___lldiv@divisor:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x12
   585  000013                     	ds	1
   586  000014                     ??___ftdiv:
   587  000014                     ??___ftmul:
   588                           
   589                           ; 1 bytes @ 0x13
   590  000014                     	ds	3
   591  000017                     ___ftdiv@cntr:
   592                           	callstack 0
   593  000017                     ___ftmul@exp:
   594                           	callstack 0
   595  000017                     ___lldiv@quotient:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x16
   599  000017                     	ds	1
   600  000018                     ___ftdiv@f3:
   601                           	callstack 0
   602  000018                     ___ftmul@f3_as_product:
   603                           	callstack 0
   604                           
   605                           ; 3 bytes @ 0x17
   606  000018                     	ds	3
   607  00001B                     ___lldiv@counter:
   608                           	callstack 0
   609  00001B                     ___ftdiv@exp:
   610                           	callstack 0
   611  00001B                     ___ftmul@cntr:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x1A
   615  00001B                     	ds	1
   616  00001C                     ___ftdiv@sign:
   617                           	callstack 0
   618  00001C                     ___ftmul@sign:
   619                           	callstack 0
   620  00001C                     EscribeLCD_n32@a:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x1B
   624  00001C                     	ds	1
   625  00001D                     ?___fttol:
   626                           	callstack 0
   627  00001D                     ___fttol@f1:
   628                           	callstack 0
   629                           
   630                           ; 3 bytes @ 0x1C
   631  00001D                     	ds	3
   632  000020                     EscribeLCD_n32@b:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x1F
   636  000020                     	ds	1
   637  000021                     ??___fttol:
   638  000021                     EscribeLCD_n32@cienmillon:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x20
   642  000021                     	ds	4
   643  000025                     EscribeLCD_n32@diezmillon:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x24
   647  000025                     	ds	1
   648  000026                     ___fttol@sign1:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x25
   652  000026                     	ds	1
   653  000027                     ___fttol@lval:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x26
   657  000027                     	ds	2
   658  000029                     EscribeLCD_n32@millon:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x28
   662  000029                     	ds	2
   663  00002B                     ___fttol@exp1:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x2A
   667  00002B                     	ds	1
   668  00002C                     ?_abs:
   669                           	callstack 0
   670  00002C                     EscribeLCD_n8@b:
   671                           	callstack 0
   672  00002C                     abs@a:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x2B
   676  00002C                     	ds	1
   677  00002D                     EscribeLCD_n8@centena:
   678                           	callstack 0
   679  00002D                     EscribeLCD_n32@cienmil:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x2C
   683  00002D                     	ds	1
   684  00002E                     ??_abs:
   685  00002E                     EscribeLCD_n8@decena:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x2D
   689  00002E                     	ds	1
   690  00002F                     EscribeLCD_n8@unidad:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x2E
   694  00002F                     	ds	1
   695  000030                     ?___awtoft:
   696                           	callstack 0
   697  000030                     EscribeLCD_n8@a:
   698                           	callstack 0
   699  000030                     ___awtoft@c:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x2F
   703  000030                     	ds	1
   704  000031                     EscribeLCD_2Decimales@a:
   705                           	callstack 0
   706  000031                     EscribeLCD_n32@diezmil:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x30
   710  000031                     	ds	2
   711  000033                     ___awtoft@sign:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x32
   715  000033                     	ds	1
   716  000034                     EscribeLCD_2Decimales@num:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x33
   720  000034                     	ds	1
   721  000035                     EscribeLCD_n32@millar:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x34
   725  000035                     	ds	1
   726  000036                     EscribeLCD_2Decimales@decimalesP:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x35
   730  000036                     	ds	1
   731  000037                     EscribeLCD_2Decimales@unidad:
   732                           	callstack 0
   733  000037                     EscribeLCD_n32@centena:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x36
   737  000037                     	ds	2
   738  000039                     EscribeLCD_n32@decena:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x38
   742  000039                     	ds	1
   743  00003A                     EscribeLCD_n32@unidad:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x39
   747  00003A                     	ds	1
   748  00003B                     ??_main:
   749                           
   750                           ; 1 bytes @ 0x3A
   751  00003B                     	ds	1
   752  00003C                     main@i:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x3B
   756  00003C                     	ds	1
   757                           
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 27 in file "Lab4.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  i               1   59[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         0       0       0       0       0       0       0       0       0
   778 ;;      Locals:         1       0       0       0       0       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels required when called: 8
   783 ;; This function calls:
   784 ;;		_BorraLCD
   785 ;;		_ConfiguraLCD
   786 ;;		_DireccionaLCD
   787 ;;		_EscribeLCD_c
   788 ;;		_GuardarASCII
   789 ;;		_InicializaLCD
   790 ;;		_MensajeLCD_Var
   791 ;;		_ModuloOperacion
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text0
   798  001BC4                     __ptext0:
   799                           	callstack 0
   800  001BC4                     _main:
   801                           	callstack 23
   802                           
   803                           ;Lab4.c: 28: ADCON1 = 15;
   804                           
   805                           ;incstack = 0
   806  001BC4  0E0F               	movlw	15
   807  001BC6  6EC1               	movwf	193,c	;volatile
   808                           
   809                           ;Lab4.c: 29: TRISD=0;
   810  001BC8  0E00               	movlw	0
   811  001BCA  6E95               	movwf	149,c	;volatile
   812                           
   813                           ;Lab4.c: 30: LATD=1;
   814  001BCC  0E01               	movlw	1
   815  001BCE  6E8C               	movwf	140,c	;volatile
   816                           
   817                           ;Lab4.c: 31: TRISB=0b11110000;
   818  001BD0  0EF0               	movlw	240
   819  001BD2  6E93               	movwf	147,c	;volatile
   820                           
   821                           ;Lab4.c: 32: LATB=0b00000000;
   822  001BD4  0E00               	movlw	0
   823  001BD6  6E8A               	movwf	138,c	;volatile
   824                           
   825                           ;Lab4.c: 33: TRISA0=1;
   826  001BD8  8092               	bsf	3986,0,c	;volatile
   827                           
   828                           ;Lab4.c: 34: T1CON=0b10100001;
   829  001BDA  0EA1               	movlw	161
   830  001BDC  6ECD               	movwf	205,c	;volatile
   831                           
   832                           ;Lab4.c: 35: T0CON=0b10000101;
   833  001BDE  0E85               	movlw	133
   834  001BE0  6ED5               	movwf	213,c	;volatile
   835                           
   836                           ;Lab4.c: 36: TMR1=3036;
   837  001BE2  0E0B               	movlw	11
   838  001BE4  6ECF               	movwf	207,c	;volatile
   839  001BE6  0EDC               	movlw	220
   840  001BE8  6ECE               	movwf	206,c	;volatile
   841                           
   842                           ;Lab4.c: 37: TMR1IF=0;
   843  001BEA  909E               	bcf	3998,0,c	;volatile
   844                           
   845                           ;Lab4.c: 38: TMR1IE=1;
   846  001BEC  809D               	bsf	3997,0,c	;volatile
   847                           
   848                           ;Lab4.c: 39: RBPU=0;
   849  001BEE  9EF1               	bcf	4081,7,c	;volatile
   850                           
   851                           ;Lab4.c: 40: RBIF=0;
   852  001BF0  90F2               	bcf	4082,0,c	;volatile
   853                           
   854                           ;Lab4.c: 41: RBIE=1;
   855  001BF2  86F2               	bsf	4082,3,c	;volatile
   856                           
   857                           ;Lab4.c: 42: TMR0=26473;
   858  001BF4  0E67               	movlw	103
   859  001BF6  6ED7               	movwf	215,c	;volatile
   860  001BF8  0E69               	movlw	105
   861  001BFA  6ED6               	movwf	214,c	;volatile
   862                           
   863                           ;Lab4.c: 43: TMR0IF=0;
   864  001BFC  94F2               	bcf	4082,2,c	;volatile
   865                           
   866                           ;Lab4.c: 44: TMR0IE=1;
   867  001BFE  8AF2               	bsf	4082,5,c	;volatile
   868                           
   869                           ;Lab4.c: 45: GIE=1;
   870  001C00  8EF2               	bsf	4082,7,c	;volatile
   871                           
   872                           ;Lab4.c: 46: PEIE=1;
   873  001C02  8CF2               	bsf	4082,6,c	;volatile
   874                           
   875                           ;Lab4.c: 47: _delay((unsigned long)((500)*(1000000/4000.0)));
   876  001C04  0EA3               	movlw	163
   877  001C06  6E3B               	movwf	??_main^0,c
   878  001C08  0E55               	movlw	85
   879  001C0A                     u2987:
   880  001C0A  2EE8               	decfsz	wreg,f,c
   881  001C0C  D7FE               	bra	u2987
   882  001C0E  2E3B               	decfsz	??_main^0,f,c
   883  001C10  D7FC               	bra	u2987
   884  001C12  F000               	nop	
   885                           
   886                           ;Lab4.c: 48: ConfiguraLCD(4);
   887  001C14  0E04               	movlw	4
   888  001C16  ECAC  F014         	call	_ConfiguraLCD
   889                           
   890                           ;Lab4.c: 49: InicializaLCD();
   891  001C1A  EC99  F011         	call	_InicializaLCD	;wreg free
   892                           
   893                           ;Lab4.c: 51: GuardarASCII(64,pacman);
   894  001C1E  0E4B               	movlw	low _pacman
   895  001C20  6E0B               	movwf	GuardarASCII@arreglo^0,c
   896  001C22  0E40               	movlw	64
   897  001C24  EC71  F014         	call	_GuardarASCII
   898                           
   899                           ;Lab4.c: 52: GuardarASCII(72,pacman2);
   900  001C28  0E43               	movlw	low _pacman2
   901  001C2A  6E0B               	movwf	GuardarASCII@arreglo^0,c
   902  001C2C  0E48               	movlw	72
   903  001C2E  EC71  F014         	call	_GuardarASCII
   904                           
   905                           ;Lab4.c: 53: GuardarASCII(80,cereza);
   906  001C32  0E93               	movlw	low _cereza
   907  001C34  6E0B               	movwf	GuardarASCII@arreglo^0,c
   908  001C36  0E50               	movlw	80
   909  001C38  EC71  F014         	call	_GuardarASCII
   910                           
   911                           ;Lab4.c: 54: GuardarASCII(88,barco);
   912  001C3C  0E8B               	movlw	low _barco
   913  001C3E  6E0B               	movwf	GuardarASCII@arreglo^0,c
   914  001C40  0E58               	movlw	88
   915  001C42  EC71  F014         	call	_GuardarASCII
   916                           
   917                           ;Lab4.c: 57: if(POR==0) {
   918  001C46  B2D0               	btfsc	4048,1,c	;volatile
   919  001C48  D034               	goto	l3269
   920                           
   921                           ;Lab4.c: 58: MensajeLCD_Var("Reset POR",9);
   922  001C4A  0E1B               	movlw	low STR_1
   923  001C4C  6E0B               	movwf	MensajeLCD_Var@a^0,c
   924  001C4E  0E09               	movlw	9
   925  001C50  6E0C               	movwf	MensajeLCD_Var@cont^0,c
   926  001C52  ECE3  F013         	call	_MensajeLCD_Var	;wreg free
   927                           
   928                           ;Lab4.c: 59: POR=1;
   929  001C56  82D0               	bsf	4048,1,c	;volatile
   930                           
   931                           ;Lab4.c: 60: while(activado==0){
   932  001C58  D028               	goto	l3267
   933  001C5A                     l3249:
   934                           
   935                           ;Lab4.c: 61: _delay((unsigned long)((500)*(1000000/4000.0)));
   936  001C5A  0EA3               	movlw	163
   937  001C5C  6E3B               	movwf	??_main^0,c
   938  001C5E  0E55               	movlw	85
   939  001C60                     u2997:
   940  001C60  2EE8               	decfsz	wreg,f,c
   941  001C62  D7FE               	bra	u2997
   942  001C64  2E3B               	decfsz	??_main^0,f,c
   943  001C66  D7FC               	bra	u2997
   944  001C68  F000               	nop	
   945                           
   946                           ;Lab4.c: 62: DireccionaLCD(192);
   947  001C6A  0EC0               	movlw	192
   948  001C6C  ECCE  F014         	call	_DireccionaLCD
   949                           
   950                           ;Lab4.c: 63: EscribeLCD_c(0);
   951  001C70  0E00               	movlw	0
   952  001C72  ECC3  F014         	call	_EscribeLCD_c
   953                           
   954                           ;Lab4.c: 64: EscribeLCD_c(2);
   955  001C76  0E02               	movlw	2
   956  001C78  ECC3  F014         	call	_EscribeLCD_c
   957                           
   958                           ;Lab4.c: 65: EscribeLCD_c(3);
   959  001C7C  0E03               	movlw	3
   960  001C7E  ECC3  F014         	call	_EscribeLCD_c
   961                           
   962                           ;Lab4.c: 66: _delay((unsigned long)((500)*(1000000/4000.0)));
   963  001C82  0EA3               	movlw	163
   964  001C84  6E3B               	movwf	??_main^0,c
   965  001C86  0E55               	movlw	85
   966  001C88                     u3007:
   967  001C88  2EE8               	decfsz	wreg,f,c
   968  001C8A  D7FE               	bra	u3007
   969  001C8C  2E3B               	decfsz	??_main^0,f,c
   970  001C8E  D7FC               	bra	u3007
   971  001C90  F000               	nop	
   972                           
   973                           ;Lab4.c: 67: DireccionaLCD(192);
   974  001C92  0EC0               	movlw	192
   975  001C94  ECCE  F014         	call	_DireccionaLCD
   976                           
   977                           ;Lab4.c: 68: EscribeLCD_c(1);
   978  001C98  0E01               	movlw	1
   979  001C9A  ECC3  F014         	call	_EscribeLCD_c
   980                           
   981                           ;Lab4.c: 69: EscribeLCD_c(2);
   982  001C9E  0E02               	movlw	2
   983  001CA0  ECC3  F014         	call	_EscribeLCD_c
   984                           
   985                           ;Lab4.c: 70: EscribeLCD_c(3);
   986  001CA4  0E03               	movlw	3
   987  001CA6  ECC3  F014         	call	_EscribeLCD_c
   988  001CAA                     l3267:
   989  001CAA  5054               	movf	_activado^0,w,c
   990  001CAC  A4D8               	btfss	status,2,c
   991  001CAE  D00A               	goto	u2890
   992  001CB0  D7D4               	goto	l3249
   993  001CB2                     l3269:
   994                           
   995                           ;Lab4.c: 73: else {;Lab4.c: 74: MensajeLCD_Var("Reset MCLRE",11);
   996  001CB2  0E0F               	movlw	low STR_2
   997  001CB4  6E0B               	movwf	MensajeLCD_Var@a^0,c
   998  001CB6  0E0B               	movlw	11
   999  001CB8  6E0C               	movwf	MensajeLCD_Var@cont^0,c
  1000  001CBA  ECE3  F013         	call	_MensajeLCD_Var	;wreg free
  1001  001CBE                     l3271:
  1002  001CBE  5054               	movf	_activado^0,w,c
  1003  001CC0  B4D8               	btfsc	status,2,c
  1004  001CC2  D7FD               	goto	l3271
  1005  001CC4                     u2890:
  1006                           
  1007                           ;Lab4.c: 76: };Lab4.c: 80: BorraLCD();
  1008  001CC4  ECD9  F014         	call	_BorraLCD	;wreg free
  1009  001CC8                     l3275:
  1010                           
  1011                           ;Lab4.c: 84: if(Cambio==1){
  1012  001CC8  0456               	decf	_Cambio^0,w,c
  1013  001CCA  A4D8               	btfss	status,2,c
  1014  001CCC  D7FD               	goto	l3275
  1015                           
  1016                           ;Lab4.c: 85: if(limpiar==1){
  1017  001CCE  0457               	decf	_limpiar^0,w,c
  1018  001CD0  A4D8               	btfss	status,2,c
  1019  001CD2  D010               	goto	l3295
  1020                           
  1021                           ;Lab4.c: 86: BorraLCD();
  1022  001CD4  ECD9  F014         	call	_BorraLCD	;wreg free
  1023                           
  1024                           ;Lab4.c: 87: char i;;Lab4.c: 88: for(i=1;i<4;i++){
  1025  001CD8  0E01               	movlw	1
  1026  001CDA  6E3C               	movwf	main@i^0,c
  1027  001CDC                     l3287:
  1028                           
  1029                           ;Lab4.c: 89: operacion[i]=' ';
  1030  001CDC  503C               	movf	main@i^0,w,c
  1031  001CDE  0F3D               	addlw	low _operacion
  1032  001CE0  6ED9               	movwf	fsr2l,c
  1033  001CE2  6ADA               	clrf	fsr2h,c
  1034  001CE4  0E20               	movlw	32
  1035  001CE6  6EDF               	movwf	indf2,c
  1036  001CE8  2A3C               	incf	main@i^0,f,c
  1037  001CEA  0E03               	movlw	3
  1038  001CEC  643C               	cpfsgt	main@i^0,c
  1039  001CEE  D7F6               	goto	l3287
  1040                           
  1041                           ;Lab4.c: 90: };Lab4.c: 91: limpiar=0;
  1042  001CF0  0E00               	movlw	0
  1043  001CF2  6E57               	movwf	_limpiar^0,c
  1044  001CF4                     l3295:
  1045                           
  1046                           ;Lab4.c: 92: };Lab4.c: 94: if(borrar==1){
  1047  001CF4  0458               	decf	_borrar^0,w,c
  1048  001CF6  A4D8               	btfss	status,2,c
  1049  001CF8  D014               	goto	l3309
  1050                           
  1051                           ;Lab4.c: 95: DireccionaLCD(127+cont);
  1052  001CFA  5059               	movf	_cont^0,w,c
  1053  001CFC  0F7F               	addlw	127
  1054  001CFE  ECCE  F014         	call	_DireccionaLCD
  1055                           
  1056                           ;Lab4.c: 96: EscribeLCD_c(operacion[cont]);
  1057  001D02  5059               	movf	_cont^0,w,c
  1058  001D04  0F3D               	addlw	low _operacion
  1059  001D06  6ED9               	movwf	fsr2l,c
  1060  001D08  6ADA               	clrf	fsr2h,c
  1061  001D0A  50DF               	movf	indf2,w,c
  1062  001D0C  ECC3  F014         	call	_EscribeLCD_c
  1063                           
  1064                           ;Lab4.c: 97: DireccionaLCD(127+cont);
  1065  001D10  5059               	movf	_cont^0,w,c
  1066  001D12  0F7F               	addlw	127
  1067  001D14  ECCE  F014         	call	_DireccionaLCD
  1068                           
  1069                           ;Lab4.c: 98: cont--;
  1070  001D18  0659               	decf	_cont^0,f,c
  1071                           
  1072                           ;Lab4.c: 99: borrar=0;
  1073  001D1A  0E00               	movlw	0
  1074  001D1C  6E58               	movwf	_borrar^0,c
  1075                           
  1076                           ;Lab4.c: 100: Cambio=0;
  1077  001D1E  0E00               	movlw	0
  1078  001D20  6E56               	movwf	_Cambio^0,c
  1079  001D22                     l3309:
  1080                           
  1081                           ;Lab4.c: 101: };Lab4.c: 103: if(digitar==1){
  1082  001D22  0455               	decf	_digitar^0,w,c
  1083  001D24  A4D8               	btfss	status,2,c
  1084  001D26  D00B               	goto	l3317
  1085                           
  1086                           ;Lab4.c: 104: EscribeLCD_c(operacion[cont-1]);
  1087  001D28  5059               	movf	_cont^0,w,c
  1088  001D2A  0F3C               	addlw	low (_operacion+255)
  1089  001D2C  6ED9               	movwf	fsr2l,c
  1090  001D2E  6ADA               	clrf	fsr2h,c
  1091  001D30  50DF               	movf	indf2,w,c
  1092  001D32  ECC3  F014         	call	_EscribeLCD_c
  1093                           
  1094                           ;Lab4.c: 105: digitar=0;
  1095  001D36  0E00               	movlw	0
  1096  001D38  6E55               	movwf	_digitar^0,c
  1097                           
  1098                           ;Lab4.c: 106: Cambio=0;
  1099  001D3A  0E00               	movlw	0
  1100  001D3C  6E56               	movwf	_Cambio^0,c
  1101  001D3E                     l3317:
  1102                           
  1103                           ;Lab4.c: 107: };Lab4.c: 109: if(cont==4||(cont==3&&operacion[1]=='!')){
  1104  001D3E  0E04               	movlw	4
  1105  001D40  1859               	xorwf	_cont^0,w,c
  1106  001D42  B4D8               	btfsc	status,2,c
  1107  001D44  D008               	goto	u2970
  1108  001D46  0E03               	movlw	3
  1109  001D48  1859               	xorwf	_cont^0,w,c
  1110  001D4A  A4D8               	btfss	status,2,c
  1111  001D4C  D7BD               	goto	l3275
  1112  001D4E  0E21               	movlw	33
  1113  001D50  183E               	xorwf	(_operacion+1)^0,w,c
  1114  001D52  A4D8               	btfss	status,2,c
  1115  001D54  D7B9               	goto	l3275
  1116  001D56                     u2970:
  1117                           
  1118                           ;Lab4.c: 110: ModuloOperacion();
  1119  001D56  EC7C  F00B         	call	_ModuloOperacion	;wreg free
  1120                           
  1121                           ;Lab4.c: 111: cont=0;
  1122  001D5A  0E00               	movlw	0
  1123  001D5C  6E59               	movwf	_cont^0,c
  1124                           
  1125                           ;Lab4.c: 112: limpiar=1;
  1126  001D5E  0E01               	movlw	1
  1127  001D60  6E57               	movwf	_limpiar^0,c
  1128                           
  1129                           ;Lab4.c: 113: Cambio=0;
  1130  001D62  0E00               	movlw	0
  1131  001D64  6E56               	movwf	_Cambio^0,c
  1132  001D66  D7B0               	goto	l3275
  1133  001D68                     __end_of_main:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _ModuloOperacion *****************
  1137 ;; Defined at:
  1138 ;;		line 187 in file "Lab4.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  n2              3   12[BANK0 ] void 
  1143 ;;  n1              3    9[BANK0 ] void 
  1144 ;;  ResL            4   34[BANK0 ] unsigned long 
  1145 ;;  i               4   24[BANK0 ] long 
  1146 ;;  var             4   20[BANK0 ] long 
  1147 ;;  b               1   29[BANK0 ] unsigned char 
  1148 ;;  ResL            4   30[BANK0 ] unsigned long 
  1149 ;;  var             4   16[BANK0 ] long 
  1150 ;;  n1L             4    5[BANK0 ] unsigned long 
  1151 ;;  b               1   28[BANK0 ] unsigned char 
  1152 ;;  i               1   15[BANK0 ] unsigned char 
  1153 ;;  Res             3   40[BANK0 ] unsigned char 
  1154 ;;  num1            1   39[BANK0 ] unsigned char 
  1155 ;;  num2            1   38[BANK0 ] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         0      38       0       0       0       0       0       0       0
  1167 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1168 ;;      Totals:         0      43       0       0       0       0       0       0       0
  1169 ;;Total ram usage:       43 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 7
  1172 ;; This function calls:
  1173 ;;		_DireccionaLCD
  1174 ;;		_EscribeLCD_2Decimales
  1175 ;;		_EscribeLCD_c
  1176 ;;		_EscribeLCD_n32
  1177 ;;		_EscribeLCD_n8
  1178 ;;		_MensajeLCD_Var
  1179 ;;		___awtoft
  1180 ;;		___ftdiv
  1181 ;;		___ftge
  1182 ;;		___fttol
  1183 ;;		___lbmod
  1184 ;;		___lbtoft
  1185 ;;		___lmul
  1186 ;;		_abs
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text1
  1193  0016F8                     __ptext1:
  1194                           	callstack 0
  1195  0016F8                     _ModuloOperacion:
  1196                           	callstack 23
  1197                           
  1198                           ;Lab4.c: 188: char num1;;Lab4.c: 189: char num2;;Lab4.c: 191: double Res;;Lab4.c: 193: n
      +                          um1=operacion[0]-48;
  1199                           
  1200                           ;incstack = 0
  1201  0016F8  503D               	movf	_operacion^0,w,c
  1202  0016FA  0FD0               	addlw	208
  1203  0016FC  0100               	movlb	0	; () banked
  1204  0016FE  6F87               	movwf	ModuloOperacion@num1& (0+255),b
  1205                           
  1206                           ;Lab4.c: 194: num2=operacion[2]-48;
  1207  001700  503F               	movf	(_operacion+2)^0,w,c
  1208  001702  0FD0               	addlw	208
  1209  001704  6F86               	movwf	ModuloOperacion@num2& (0+255),b
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;Lab4.c: 197: DireccionaLCD(192);
  1213  001706  0EC0               	movlw	192
  1214  001708  ECCE  F014         	call	_DireccionaLCD
  1215                           
  1216                           ;Lab4.c: 199: if(operacion[1]=='+'){
  1217  00170C  0E2B               	movlw	43
  1218  00170E  183E               	xorwf	(_operacion+1)^0,w,c
  1219  001710  A4D8               	btfss	status,2,c
  1220  001712  D03A               	goto	l3083
  1221                           
  1222                           ;Lab4.c: 200: Res= num1+num2;
  1223  001714  0100               	movlb	0	; () banked
  1224  001716  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1225  001718  2586               	addwf	ModuloOperacion@num2& (0+255),w,b
  1226  00171A  6E30               	movwf	___awtoft@c^0,c
  1227  00171C  6A31               	clrf	(___awtoft@c+1)^0,c
  1228  00171E  3631               	rlcf	(___awtoft@c+1)^0,f,c
  1229  001720  EC40  F014         	call	___awtoft	;wreg free
  1230  001724  C030  F088         	movff	?___awtoft,ModuloOperacion@Res
  1231  001728  C031  F089         	movff	?___awtoft+1,ModuloOperacion@Res+1
  1232  00172C  C032  F08A         	movff	?___awtoft+2,ModuloOperacion@Res+2
  1233                           
  1234                           ;Lab4.c: 201: if(Res<10){
  1235  001730  C088  F006         	movff	ModuloOperacion@Res,___ftge@ff1
  1236  001734  C089  F007         	movff	ModuloOperacion@Res+1,___ftge@ff1+1
  1237  001738  C08A  F008         	movff	ModuloOperacion@Res+2,___ftge@ff1+2
  1238  00173C  0E00               	movlw	0
  1239  00173E  6E09               	movwf	___ftge@ff2^0,c
  1240  001740  0E20               	movlw	32
  1241  001742  6E0A               	movwf	(___ftge@ff2+1)^0,c
  1242  001744  0E41               	movlw	65
  1243  001746  6E0B               	movwf	(___ftge@ff2+2)^0,c
  1244  001748  EC66  F012         	call	___ftge	;wreg free
  1245  00174C  B0D8               	btfsc	status,0,c
  1246  00174E  D00E               	goto	l3081
  1247                           
  1248                           ;Lab4.c: 202: EscribeLCD_n8(Res,1);
  1249  001750  0E01               	movlw	1
  1250  001752  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1251  001754  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1252  001758  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1253  00175C  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1254  001760  ECD9  F010         	call	___fttol	;wreg free
  1255  001764  501D               	movf	?___fttol^0,w,c
  1256  001766  EC66  F010         	call	_EscribeLCD_n8
  1257                           
  1258                           ;Lab4.c: 203: }else{
  1259  00176A  0012               	return	
  1260  00176C                     l3081:
  1261                           
  1262                           ;Lab4.c: 204: EscribeLCD_n8(Res,2);
  1263  00176C  0E02               	movlw	2
  1264  00176E  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1265  001770  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1266  001774  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1267  001778  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1268  00177C  ECD9  F010         	call	___fttol	;wreg free
  1269  001780  501D               	movf	?___fttol^0,w,c
  1270  001782  EC66  F010         	call	_EscribeLCD_n8
  1271  001786  0012               	return	
  1272  001788                     l3083:
  1273  001788  0E2D               	movlw	45
  1274  00178A  183E               	xorwf	(_operacion+1)^0,w,c
  1275  00178C  A4D8               	btfss	status,2,c
  1276  00178E  D04D               	goto	l3095
  1277                           
  1278                           ;Lab4.c: 208: Res= num1-num2;
  1279  001790  0100               	movlb	0	; () banked
  1280  001792  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1281  001794  5D87               	subwf	ModuloOperacion@num1& (0+255),w,b
  1282  001796  6E30               	movwf	___awtoft@c^0,c
  1283  001798  6A31               	clrf	(___awtoft@c+1)^0,c
  1284  00179A  A0D8               	btfss	status,0,c
  1285  00179C  0631               	decf	(___awtoft@c+1)^0,f,c
  1286  00179E  EC40  F014         	call	___awtoft	;wreg free
  1287  0017A2  C030  F088         	movff	?___awtoft,ModuloOperacion@Res
  1288  0017A6  C031  F089         	movff	?___awtoft+1,ModuloOperacion@Res+1
  1289  0017AA  C032  F08A         	movff	?___awtoft+2,ModuloOperacion@Res+2
  1290                           
  1291                           ;Lab4.c: 209: if(Res>=0)EscribeLCD_n8(Res,1);
  1292  0017AE  0100               	movlb	0	; () banked
  1293  0017B0  BF8A               	btfsc	(ModuloOperacion@Res+2)& (0+255),7,b
  1294  0017B2  D00E               	goto	l3091
  1295                           
  1296                           ; BSR set to: 0
  1297  0017B4  0E01               	movlw	1
  1298  0017B6  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1299  0017B8  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1300  0017BC  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1301  0017C0  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1302  0017C4  ECD9  F010         	call	___fttol	;wreg free
  1303  0017C8  501D               	movf	?___fttol^0,w,c
  1304  0017CA  EC66  F010         	call	_EscribeLCD_n8
  1305  0017CE  0012               	return	
  1306  0017D0                     l3091:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;Lab4.c: 210: else if(Res<0){Res=abs(Res);
  1310  0017D0  AF8A               	btfss	(ModuloOperacion@Res+2)& (0+255),7,b
  1311  0017D2  0012               	return	
  1312                           
  1313                           ; BSR set to: 0
  1314  0017D4  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1315  0017D8  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1316  0017DC  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1317  0017E0  ECD9  F010         	call	___fttol	;wreg free
  1318  0017E4  C01D  F02C         	movff	?___fttol,abs@a
  1319  0017E8  C01E  F02D         	movff	?___fttol+1,abs@a+1
  1320  0017EC  EC86  F014         	call	_abs	;wreg free
  1321  0017F0  C02C  F030         	movff	?_abs,___awtoft@c
  1322  0017F4  C02D  F031         	movff	?_abs+1,___awtoft@c+1
  1323  0017F8  EC40  F014         	call	___awtoft	;wreg free
  1324  0017FC  C030  F088         	movff	?___awtoft,ModuloOperacion@Res
  1325  001800  C031  F089         	movff	?___awtoft+1,ModuloOperacion@Res+1
  1326  001804  C032  F08A         	movff	?___awtoft+2,ModuloOperacion@Res+2
  1327                           
  1328                           ;Lab4.c: 211: EscribeLCD_c('-');
  1329  001808  0E2D               	movlw	45
  1330  00180A  ECC3  F014         	call	_EscribeLCD_c
  1331                           
  1332                           ;Lab4.c: 212: EscribeLCD_n8(Res,1);
  1333  00180E  0E01               	movlw	1
  1334  001810  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1335  001812  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1336  001816  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1337  00181A  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1338  00181E  ECD9  F010         	call	___fttol	;wreg free
  1339  001822  501D               	movf	?___fttol^0,w,c
  1340  001824  EC66  F010         	call	_EscribeLCD_n8
  1341  001828  0012               	return	
  1342  00182A                     l3095:
  1343  00182A  0E78               	movlw	120
  1344  00182C  183E               	xorwf	(_operacion+1)^0,w,c
  1345  00182E  A4D8               	btfss	status,2,c
  1346  001830  D03B               	goto	l3105
  1347                           
  1348                           ;Lab4.c: 215: Res= num1*num2;
  1349  001832  0100               	movlb	0	; () banked
  1350  001834  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1351  001836  0386               	mulwf	ModuloOperacion@num2& (0+255),b
  1352  001838  CFF3 F030          	movff	prodl,___awtoft@c
  1353  00183C  CFF4 F031          	movff	prodh,___awtoft@c+1
  1354  001840  EC40  F014         	call	___awtoft	;wreg free
  1355  001844  C030  F088         	movff	?___awtoft,ModuloOperacion@Res
  1356  001848  C031  F089         	movff	?___awtoft+1,ModuloOperacion@Res+1
  1357  00184C  C032  F08A         	movff	?___awtoft+2,ModuloOperacion@Res+2
  1358                           
  1359                           ;Lab4.c: 216: if(Res<10){
  1360  001850  C088  F006         	movff	ModuloOperacion@Res,___ftge@ff1
  1361  001854  C089  F007         	movff	ModuloOperacion@Res+1,___ftge@ff1+1
  1362  001858  C08A  F008         	movff	ModuloOperacion@Res+2,___ftge@ff1+2
  1363  00185C  0E00               	movlw	0
  1364  00185E  6E09               	movwf	___ftge@ff2^0,c
  1365  001860  0E20               	movlw	32
  1366  001862  6E0A               	movwf	(___ftge@ff2+1)^0,c
  1367  001864  0E41               	movlw	65
  1368  001866  6E0B               	movwf	(___ftge@ff2+2)^0,c
  1369  001868  EC66  F012         	call	___ftge	;wreg free
  1370  00186C  B0D8               	btfsc	status,0,c
  1371  00186E  D00E               	goto	l3103
  1372                           
  1373                           ;Lab4.c: 217: EscribeLCD_n8(Res,1);
  1374  001870  0E01               	movlw	1
  1375  001872  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1376  001874  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1377  001878  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1378  00187C  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1379  001880  ECD9  F010         	call	___fttol	;wreg free
  1380  001884  501D               	movf	?___fttol^0,w,c
  1381  001886  EC66  F010         	call	_EscribeLCD_n8
  1382                           
  1383                           ;Lab4.c: 218: }else{
  1384  00188A  0012               	return	
  1385  00188C                     l3103:
  1386                           
  1387                           ;Lab4.c: 219: EscribeLCD_n8(Res,2);
  1388  00188C  0E02               	movlw	2
  1389  00188E  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1390  001890  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1391  001894  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1392  001898  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1393  00189C  ECD9  F010         	call	___fttol	;wreg free
  1394  0018A0  501D               	movf	?___fttol^0,w,c
  1395  0018A2  EC66  F010         	call	_EscribeLCD_n8
  1396  0018A6  0012               	return	
  1397  0018A8                     l3105:
  1398  0018A8  0E2F               	movlw	47
  1399  0018AA  183E               	xorwf	(_operacion+1)^0,w,c
  1400  0018AC  A4D8               	btfss	status,2,c
  1401  0018AE  D05F               	goto	l3131
  1402                           
  1403                           ;Lab4.c: 222: if(num2==0&&num1==0){
  1404  0018B0  0100               	movlb	0	; () banked
  1405  0018B2  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1406  0018B4  A4D8               	btfss	status,2,c
  1407  0018B6  D00A               	goto	l3117
  1408                           
  1409                           ; BSR set to: 0
  1410  0018B8  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1411  0018BA  A4D8               	btfss	status,2,c
  1412  0018BC  D007               	goto	l3117
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;Lab4.c: 223: MensajeLCD_Var("Indeterminado",13);
  1416  0018BE  0E01               	movlw	low STR_3
  1417  0018C0  6E0B               	movwf	MensajeLCD_Var@a^0,c
  1418  0018C2  0E0D               	movlw	13
  1419  0018C4  6E0C               	movwf	MensajeLCD_Var@cont^0,c
  1420  0018C6  ECE3  F013         	call	_MensajeLCD_Var	;wreg free
  1421  0018CA  0012               	return	
  1422  0018CC                     l3117:
  1423                           
  1424                           ; BSR set to: 0
  1425  0018CC  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1426  0018CE  A4D8               	btfss	status,2,c
  1427  0018D0  D007               	goto	l3125
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;Lab4.c: 226: MensajeLCD_Var("Infinito",8);
  1431  0018D2  0E25               	movlw	low STR_4
  1432  0018D4  6E0B               	movwf	MensajeLCD_Var@a^0,c
  1433  0018D6  0E08               	movlw	8
  1434  0018D8  6E0C               	movwf	MensajeLCD_Var@cont^0,c
  1435  0018DA  ECE3  F013         	call	_MensajeLCD_Var	;wreg free
  1436  0018DE  0012               	return	
  1437  0018E0                     l3125:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;Lab4.c: 229: double n1;;Lab4.c: 230: double n2;;Lab4.c: 231: n1=num1;
  1441  0018E0  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1442  0018E2  EC9A  F014         	call	___lbtoft
  1443  0018E6  C00E  F069         	movff	?___lbtoft,ModuloOperacion@n1
  1444  0018EA  C00F  F06A         	movff	?___lbtoft+1,ModuloOperacion@n1+1
  1445  0018EE  C010  F06B         	movff	?___lbtoft+2,ModuloOperacion@n1+2
  1446                           
  1447                           ;Lab4.c: 232: n2=num2;
  1448  0018F2  0100               	movlb	0	; () banked
  1449  0018F4  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1450  0018F6  EC9A  F014         	call	___lbtoft
  1451  0018FA  C00E  F06C         	movff	?___lbtoft,ModuloOperacion@n2
  1452  0018FE  C00F  F06D         	movff	?___lbtoft+1,ModuloOperacion@n2+1
  1453  001902  C010  F06E         	movff	?___lbtoft+2,ModuloOperacion@n2+2
  1454                           
  1455                           ;Lab4.c: 233: Res= n1/n2;
  1456  001906  C069  F00E         	movff	ModuloOperacion@n1,___ftdiv@f1
  1457  00190A  C06A  F00F         	movff	ModuloOperacion@n1+1,___ftdiv@f1+1
  1458  00190E  C06B  F010         	movff	ModuloOperacion@n1+2,___ftdiv@f1+2
  1459  001912  C06C  F011         	movff	ModuloOperacion@n2,___ftdiv@f2
  1460  001916  C06D  F012         	movff	ModuloOperacion@n2+1,___ftdiv@f2+1
  1461  00191A  C06E  F013         	movff	ModuloOperacion@n2+2,___ftdiv@f2+2
  1462  00191E  ECF3  F00F         	call	___ftdiv	;wreg free
  1463  001922  C00E  F088         	movff	?___ftdiv,ModuloOperacion@Res
  1464  001926  C00F  F089         	movff	?___ftdiv+1,ModuloOperacion@Res+1
  1465  00192A  C010  F08A         	movff	?___ftdiv+2,ModuloOperacion@Res+2
  1466                           
  1467                           ;Lab4.c: 235: if(num1%num2==0){
  1468  00192E  C086  F006         	movff	ModuloOperacion@num2,___lbmod@divisor
  1469  001932  0100               	movlb	0	; () banked
  1470  001934  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1471  001936  EC5C  F014         	call	___lbmod
  1472  00193A  0900               	iorlw	0
  1473  00193C  A4D8               	btfss	status,2,c
  1474  00193E  D00E               	goto	l3129
  1475                           
  1476                           ;Lab4.c: 236: EscribeLCD_n8(Res,1);
  1477  001940  0E01               	movlw	1
  1478  001942  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1479  001944  C088  F01D         	movff	ModuloOperacion@Res,___fttol@f1
  1480  001948  C089  F01E         	movff	ModuloOperacion@Res+1,___fttol@f1+1
  1481  00194C  C08A  F01F         	movff	ModuloOperacion@Res+2,___fttol@f1+2
  1482  001950  ECD9  F010         	call	___fttol	;wreg free
  1483  001954  501D               	movf	?___fttol^0,w,c
  1484  001956  EC66  F010         	call	_EscribeLCD_n8
  1485                           
  1486                           ;Lab4.c: 237: } else{
  1487  00195A  0012               	return	
  1488  00195C                     l3129:
  1489                           
  1490                           ;Lab4.c: 238: EscribeLCD_2Decimales(Res);
  1491  00195C  C088  F031         	movff	ModuloOperacion@Res,EscribeLCD_2Decimales@a
  1492  001960  C089  F032         	movff	ModuloOperacion@Res+1,EscribeLCD_2Decimales@a+1
  1493  001964  C08A  F033         	movff	ModuloOperacion@Res+2,EscribeLCD_2Decimales@a+2
  1494  001968  EC28  F012         	call	_EscribeLCD_2Decimales	;wreg free
  1495  00196C  0012               	return	
  1496  00196E                     l3131:
  1497  00196E  0E5E               	movlw	94
  1498  001970  183E               	xorwf	(_operacion+1)^0,w,c
  1499  001972  A4D8               	btfss	status,2,c
  1500  001974  D092               	goto	l3179
  1501                           
  1502                           ;Lab4.c: 242: unsigned long ResL;;Lab4.c: 243: unsigned long n1L;;Lab4.c: 244: char i;;L
      +                          ab4.c: 245: char b=0;
  1503  001976  0E00               	movlw	0
  1504  001978  0100               	movlb	0	; () banked
  1505  00197A  6F7C               	movwf	ModuloOperacion@b& (0+255),b
  1506                           
  1507                           ;Lab4.c: 246: long var=1;
  1508  00197C  0E01               	movlw	1
  1509  00197E  6F70               	movwf	ModuloOperacion@var& (0+255),b
  1510  001980  0E00               	movlw	0
  1511  001982  6F71               	movwf	(ModuloOperacion@var+1)& (0+255),b
  1512  001984  0E00               	movlw	0
  1513  001986  6F72               	movwf	(ModuloOperacion@var+2)& (0+255),b
  1514  001988  0E00               	movlw	0
  1515  00198A  6F73               	movwf	(ModuloOperacion@var+3)& (0+255),b
  1516                           
  1517                           ;Lab4.c: 248: if(num1==0&& num2==0){
  1518  00198C  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1519  00198E  A4D8               	btfss	status,2,c
  1520  001990  D00A               	goto	l3143
  1521                           
  1522                           ; BSR set to: 0
  1523  001992  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1524  001994  A4D8               	btfss	status,2,c
  1525  001996  D007               	goto	l3143
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;Lab4.c: 249: MensajeLCD_Var("Indeterminado",13);
  1529  001998  0E01               	movlw	low STR_3
  1530  00199A  6E0B               	movwf	MensajeLCD_Var@a^0,c
  1531  00199C  0E0D               	movlw	13
  1532  00199E  6E0C               	movwf	MensajeLCD_Var@cont^0,c
  1533  0019A0  ECE3  F013         	call	_MensajeLCD_Var	;wreg free
  1534  0019A4  0012               	return	
  1535  0019A6                     l3143:
  1536                           
  1537                           ; BSR set to: 0
  1538  0019A6  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1539  0019A8  A4D8               	btfss	status,2,c
  1540  0019AA  D006               	goto	l3151
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;Lab4.c: 252: EscribeLCD_n8(0,1);
  1544  0019AC  0E01               	movlw	1
  1545  0019AE  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1546  0019B0  0E00               	movlw	0
  1547  0019B2  EC66  F010         	call	_EscribeLCD_n8
  1548  0019B6  0012               	return	
  1549  0019B8                     l3151:
  1550                           
  1551                           ; BSR set to: 0
  1552  0019B8  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1553  0019BA  A4D8               	btfss	status,2,c
  1554  0019BC  D006               	goto	l3159
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;Lab4.c: 255: EscribeLCD_n8(1,1);
  1558  0019BE  0E01               	movlw	1
  1559  0019C0  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1560  0019C2  0E01               	movlw	1
  1561  0019C4  EC66  F010         	call	_EscribeLCD_n8
  1562  0019C8  0012               	return	
  1563  0019CA                     l3159:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;Lab4.c: 258: n1L=num1;
  1567  0019CA  5187               	movf	ModuloOperacion@num1& (0+255),w,b
  1568  0019CC  6F65               	movwf	ModuloOperacion@n1L& (0+255),b
  1569  0019CE  6B66               	clrf	(ModuloOperacion@n1L+1)& (0+255),b
  1570  0019D0  6B67               	clrf	(ModuloOperacion@n1L+2)& (0+255),b
  1571  0019D2  6B68               	clrf	(ModuloOperacion@n1L+3)& (0+255),b
  1572                           
  1573                           ;Lab4.c: 259: ResL=1;
  1574  0019D4  0E01               	movlw	1
  1575  0019D6  6F7E               	movwf	ModuloOperacion@ResL& (0+255),b
  1576  0019D8  0E00               	movlw	0
  1577  0019DA  6F7F               	movwf	(ModuloOperacion@ResL+1)& (0+255),b
  1578  0019DC  0E00               	movlw	0
  1579  0019DE  6F80               	movwf	(ModuloOperacion@ResL+2)& (0+255),b
  1580  0019E0  0E00               	movlw	0
  1581  0019E2  6F81               	movwf	(ModuloOperacion@ResL+3)& (0+255),b
  1582                           
  1583                           ;Lab4.c: 260: for(i=0;i<num2;i++){
  1584  0019E4  0E00               	movlw	0
  1585  0019E6  6F6F               	movwf	ModuloOperacion@i& (0+255),b
  1586  0019E8  D01C               	goto	l3165
  1587  0019EA                     l3161:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;Lab4.c: 261: ResL=ResL*n1L;
  1591  0019EA  C07E  F006         	movff	ModuloOperacion@ResL,___lmul@multiplier
  1592  0019EE  C07F  F007         	movff	ModuloOperacion@ResL+1,___lmul@multiplier+1
  1593  0019F2  C080  F008         	movff	ModuloOperacion@ResL+2,___lmul@multiplier+2
  1594  0019F6  C081  F009         	movff	ModuloOperacion@ResL+3,___lmul@multiplier+3
  1595  0019FA  C065  F00A         	movff	ModuloOperacion@n1L,___lmul@multiplicand
  1596  0019FE  C066  F00B         	movff	ModuloOperacion@n1L+1,___lmul@multiplicand+1
  1597  001A02  C067  F00C         	movff	ModuloOperacion@n1L+2,___lmul@multiplicand+2
  1598  001A06  C068  F00D         	movff	ModuloOperacion@n1L+3,___lmul@multiplicand+3
  1599  001A0A  EC6A  F013         	call	___lmul	;wreg free
  1600  001A0E  C006  F07E         	movff	?___lmul,ModuloOperacion@ResL
  1601  001A12  C007  F07F         	movff	?___lmul+1,ModuloOperacion@ResL+1
  1602  001A16  C008  F080         	movff	?___lmul+2,ModuloOperacion@ResL+2
  1603  001A1A  C009  F081         	movff	?___lmul+3,ModuloOperacion@ResL+3
  1604  001A1E  0100               	movlb	0	; () banked
  1605  001A20  2B6F               	incf	ModuloOperacion@i& (0+255),f,b
  1606  001A22                     l3165:
  1607                           
  1608                           ; BSR set to: 0
  1609  001A22  5186               	movf	ModuloOperacion@num2& (0+255),w,b
  1610  001A24  5D6F               	subwf	ModuloOperacion@i& (0+255),w,b
  1611  001A26  B0D8               	btfsc	status,0,c
  1612  001A28  D021               	goto	l3175
  1613  001A2A  D7DF               	goto	l3161
  1614  001A2C                     l3167:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;Lab4.c: 265: var*=10;
  1618  001A2C  C070  F006         	movff	ModuloOperacion@var,___lmul@multiplier
  1619  001A30  C071  F007         	movff	ModuloOperacion@var+1,___lmul@multiplier+1
  1620  001A34  C072  F008         	movff	ModuloOperacion@var+2,___lmul@multiplier+2
  1621  001A38  C073  F009         	movff	ModuloOperacion@var+3,___lmul@multiplier+3
  1622  001A3C  0E0A               	movlw	10
  1623  001A3E  6E0A               	movwf	___lmul@multiplicand^0,c
  1624  001A40  0E00               	movlw	0
  1625  001A42  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  1626  001A44  0E00               	movlw	0
  1627  001A46  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  1628  001A48  0E00               	movlw	0
  1629  001A4A  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  1630  001A4C  EC6A  F013         	call	___lmul	;wreg free
  1631  001A50  C006  F070         	movff	?___lmul,ModuloOperacion@var
  1632  001A54  C007  F071         	movff	?___lmul+1,ModuloOperacion@var+1
  1633  001A58  C008  F072         	movff	?___lmul+2,ModuloOperacion@var+2
  1634  001A5C  C009  F073         	movff	?___lmul+3,ModuloOperacion@var+3
  1635                           
  1636                           ;Lab4.c: 266: b+=1;
  1637  001A60  0100               	movlb	0	; () banked
  1638  001A62  2B7C               	incf	ModuloOperacion@b& (0+255),f,b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;Lab4.c: 267: if(b==9) break;
  1642  001A64  0E09               	movlw	9
  1643  001A66  197C               	xorwf	ModuloOperacion@b& (0+255),w,b
  1644  001A68  B4D8               	btfsc	status,2,c
  1645  001A6A  D00A               	goto	u2810
  1646  001A6C                     l3175:
  1647                           
  1648                           ; BSR set to: 0
  1649  001A6C  5170               	movf	ModuloOperacion@var& (0+255),w,b
  1650  001A6E  5D7E               	subwf	ModuloOperacion@ResL& (0+255),w,b
  1651  001A70  5171               	movf	(ModuloOperacion@var+1)& (0+255),w,b
  1652  001A72  597F               	subwfb	(ModuloOperacion@ResL+1)& (0+255),w,b
  1653  001A74  5172               	movf	(ModuloOperacion@var+2)& (0+255),w,b
  1654  001A76  5980               	subwfb	(ModuloOperacion@ResL+2)& (0+255),w,b
  1655  001A78  5173               	movf	(ModuloOperacion@var+3)& (0+255),w,b
  1656  001A7A  5981               	subwfb	(ModuloOperacion@ResL+3)& (0+255),w,b
  1657  001A7C  B0D8               	btfsc	status,0,c
  1658  001A7E  D7D6               	goto	l3167
  1659  001A80                     u2810:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;Lab4.c: 268: };Lab4.c: 269: EscribeLCD_n32(ResL,b);
  1663  001A80  C07E  F01C         	movff	ModuloOperacion@ResL,EscribeLCD_n32@a
  1664  001A84  C07F  F01D         	movff	ModuloOperacion@ResL+1,EscribeLCD_n32@a+1
  1665  001A88  C080  F01E         	movff	ModuloOperacion@ResL+2,EscribeLCD_n32@a+2
  1666  001A8C  C081  F01F         	movff	ModuloOperacion@ResL+3,EscribeLCD_n32@a+3
  1667  001A90  C07C  F020         	movff	ModuloOperacion@b,EscribeLCD_n32@b
  1668  001A94  EC18  F004         	call	_EscribeLCD_n32	;wreg free
  1669  001A98  0012               	return	
  1670  001A9A                     l3179:
  1671  001A9A  0E21               	movlw	33
  1672  001A9C  183E               	xorwf	(_operacion+1)^0,w,c
  1673  001A9E  A4D8               	btfss	status,2,c
  1674  001AA0  0012               	return	
  1675                           
  1676                           ;Lab4.c: 273: unsigned long ResL;;Lab4.c: 274: char b=0;
  1677  001AA2  0E00               	movlw	0
  1678  001AA4  0100               	movlb	0	; () banked
  1679  001AA6  6F7D               	movwf	ModuloOperacion@b_195& (0+255),b
  1680                           
  1681                           ;Lab4.c: 275: long var=1;
  1682  001AA8  0E01               	movlw	1
  1683  001AAA  6F74               	movwf	ModuloOperacion@var_196& (0+255),b
  1684  001AAC  0E00               	movlw	0
  1685  001AAE  6F75               	movwf	(ModuloOperacion@var_196+1)& (0+255),b
  1686  001AB0  0E00               	movlw	0
  1687  001AB2  6F76               	movwf	(ModuloOperacion@var_196+2)& (0+255),b
  1688  001AB4  0E00               	movlw	0
  1689  001AB6  6F77               	movwf	(ModuloOperacion@var_196+3)& (0+255),b
  1690                           
  1691                           ;Lab4.c: 276: ResL=1;
  1692  001AB8  0E01               	movlw	1
  1693  001ABA  6F82               	movwf	ModuloOperacion@ResL_194& (0+255),b
  1694  001ABC  0E00               	movlw	0
  1695  001ABE  6F83               	movwf	(ModuloOperacion@ResL_194+1)& (0+255),b
  1696  001AC0  0E00               	movlw	0
  1697  001AC2  6F84               	movwf	(ModuloOperacion@ResL_194+2)& (0+255),b
  1698  001AC4  0E00               	movlw	0
  1699  001AC6  6F85               	movwf	(ModuloOperacion@ResL_194+3)& (0+255),b
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;Lab4.c: 277: long i;;Lab4.c: 278: if(num1<2){
  1703  001AC8  0E02               	movlw	2
  1704  001ACA  6187               	cpfslt	ModuloOperacion@num1& (0+255),b
  1705  001ACC  D006               	goto	l3187
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;Lab4.c: 279: EscribeLCD_n8(1,1);
  1709  001ACE  0E01               	movlw	1
  1710  001AD0  6E2C               	movwf	EscribeLCD_n8@b^0,c
  1711  001AD2  0E01               	movlw	1
  1712  001AD4  EC66  F010         	call	_EscribeLCD_n8
  1713                           
  1714                           ;Lab4.c: 280: }else{
  1715  001AD8  0012               	return	
  1716  001ADA                     l3187:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Lab4.c: 281: for (i=1;i<=num1;i++){
  1720  001ADA  0E01               	movlw	1
  1721  001ADC  6F78               	movwf	ModuloOperacion@i_197& (0+255),b
  1722  001ADE  0E00               	movlw	0
  1723  001AE0  6F79               	movwf	(ModuloOperacion@i_197+1)& (0+255),b
  1724  001AE2  0E00               	movlw	0
  1725  001AE4  6F7A               	movwf	(ModuloOperacion@i_197+2)& (0+255),b
  1726  001AE6  0E00               	movlw	0
  1727  001AE8  6F7B               	movwf	(ModuloOperacion@i_197+3)& (0+255),b
  1728  001AEA  D021               	goto	l3193
  1729  001AEC                     l3189:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;Lab4.c: 282: ResL*=i;
  1733  001AEC  C082  F006         	movff	ModuloOperacion@ResL_194,___lmul@multiplier
  1734  001AF0  C083  F007         	movff	ModuloOperacion@ResL_194+1,___lmul@multiplier+1
  1735  001AF4  C084  F008         	movff	ModuloOperacion@ResL_194+2,___lmul@multiplier+2
  1736  001AF8  C085  F009         	movff	ModuloOperacion@ResL_194+3,___lmul@multiplier+3
  1737  001AFC  C078  F00A         	movff	ModuloOperacion@i_197,___lmul@multiplicand
  1738  001B00  C079  F00B         	movff	ModuloOperacion@i_197+1,___lmul@multiplicand+1
  1739  001B04  C07A  F00C         	movff	ModuloOperacion@i_197+2,___lmul@multiplicand+2
  1740  001B08  C07B  F00D         	movff	ModuloOperacion@i_197+3,___lmul@multiplicand+3
  1741  001B0C  EC6A  F013         	call	___lmul	;wreg free
  1742  001B10  C006  F082         	movff	?___lmul,ModuloOperacion@ResL_194
  1743  001B14  C007  F083         	movff	?___lmul+1,ModuloOperacion@ResL_194+1
  1744  001B18  C008  F084         	movff	?___lmul+2,ModuloOperacion@ResL_194+2
  1745  001B1C  C009  F085         	movff	?___lmul+3,ModuloOperacion@ResL_194+3
  1746  001B20  0E01               	movlw	1
  1747  001B22  0100               	movlb	0	; () banked
  1748  001B24  2778               	addwf	ModuloOperacion@i_197& (0+255),f,b
  1749  001B26  0E00               	movlw	0
  1750  001B28  2379               	addwfc	(ModuloOperacion@i_197+1)& (0+255),f,b
  1751  001B2A  237A               	addwfc	(ModuloOperacion@i_197+2)& (0+255),f,b
  1752  001B2C  237B               	addwfc	(ModuloOperacion@i_197+3)& (0+255),f,b
  1753  001B2E                     l3193:
  1754                           
  1755                           ; BSR set to: 0
  1756  001B2E  C087  F060         	movff	ModuloOperacion@num1,??_ModuloOperacion
  1757  001B32  6B61               	clrf	(??_ModuloOperacion+1)& (0+255),b
  1758  001B34  6B62               	clrf	(??_ModuloOperacion+2)& (0+255),b
  1759  001B36  6B63               	clrf	(??_ModuloOperacion+3)& (0+255),b
  1760  001B38  5178               	movf	ModuloOperacion@i_197& (0+255),w,b
  1761  001B3A  5D60               	subwf	??_ModuloOperacion& (0+255),w,b
  1762  001B3C  5179               	movf	(ModuloOperacion@i_197+1)& (0+255),w,b
  1763  001B3E  5961               	subwfb	(??_ModuloOperacion+1)& (0+255),w,b
  1764  001B40  517A               	movf	(ModuloOperacion@i_197+2)& (0+255),w,b
  1765  001B42  5962               	subwfb	(??_ModuloOperacion+2)& (0+255),w,b
  1766  001B44  5163               	movf	(??_ModuloOperacion+3)& (0+255),w,b
  1767  001B46  0A80               	xorlw	128
  1768  001B48  6F64               	movwf	(??_ModuloOperacion+4)& (0+255),b
  1769  001B4A  517B               	movf	(ModuloOperacion@i_197+3)& (0+255),w,b
  1770  001B4C  0A80               	xorlw	128
  1771  001B4E  5964               	subwfb	(??_ModuloOperacion+4)& (0+255),w,b
  1772  001B50  A0D8               	btfss	status,0,c
  1773  001B52  D021               	goto	l3203
  1774  001B54  D7CB               	goto	l3189
  1775  001B56                     l3195:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;Lab4.c: 285: var*=10;
  1779  001B56  C074  F006         	movff	ModuloOperacion@var_196,___lmul@multiplier
  1780  001B5A  C075  F007         	movff	ModuloOperacion@var_196+1,___lmul@multiplier+1
  1781  001B5E  C076  F008         	movff	ModuloOperacion@var_196+2,___lmul@multiplier+2
  1782  001B62  C077  F009         	movff	ModuloOperacion@var_196+3,___lmul@multiplier+3
  1783  001B66  0E0A               	movlw	10
  1784  001B68  6E0A               	movwf	___lmul@multiplicand^0,c
  1785  001B6A  0E00               	movlw	0
  1786  001B6C  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  1787  001B6E  0E00               	movlw	0
  1788  001B70  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  1789  001B72  0E00               	movlw	0
  1790  001B74  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  1791  001B76  EC6A  F013         	call	___lmul	;wreg free
  1792  001B7A  C006  F074         	movff	?___lmul,ModuloOperacion@var_196
  1793  001B7E  C007  F075         	movff	?___lmul+1,ModuloOperacion@var_196+1
  1794  001B82  C008  F076         	movff	?___lmul+2,ModuloOperacion@var_196+2
  1795  001B86  C009  F077         	movff	?___lmul+3,ModuloOperacion@var_196+3
  1796                           
  1797                           ;Lab4.c: 286: b+=1;
  1798  001B8A  0100               	movlb	0	; () banked
  1799  001B8C  2B7D               	incf	ModuloOperacion@b_195& (0+255),f,b
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;Lab4.c: 287: if(b==9) break;
  1803  001B8E  0E09               	movlw	9
  1804  001B90  197D               	xorwf	ModuloOperacion@b_195& (0+255),w,b
  1805  001B92  B4D8               	btfsc	status,2,c
  1806  001B94  D00A               	goto	u2860
  1807  001B96                     l3203:
  1808                           
  1809                           ; BSR set to: 0
  1810  001B96  5174               	movf	ModuloOperacion@var_196& (0+255),w,b
  1811  001B98  5D82               	subwf	ModuloOperacion@ResL_194& (0+255),w,b
  1812  001B9A  5175               	movf	(ModuloOperacion@var_196+1)& (0+255),w,b
  1813  001B9C  5983               	subwfb	(ModuloOperacion@ResL_194+1)& (0+255),w,b
  1814  001B9E  5176               	movf	(ModuloOperacion@var_196+2)& (0+255),w,b
  1815  001BA0  5984               	subwfb	(ModuloOperacion@ResL_194+2)& (0+255),w,b
  1816  001BA2  5177               	movf	(ModuloOperacion@var_196+3)& (0+255),w,b
  1817  001BA4  5985               	subwfb	(ModuloOperacion@ResL_194+3)& (0+255),w,b
  1818  001BA6  B0D8               	btfsc	status,0,c
  1819  001BA8  D7D6               	goto	l3195
  1820  001BAA                     u2860:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;Lab4.c: 288: };Lab4.c: 289: EscribeLCD_n32(ResL,b);
  1824  001BAA  C082  F01C         	movff	ModuloOperacion@ResL_194,EscribeLCD_n32@a
  1825  001BAE  C083  F01D         	movff	ModuloOperacion@ResL_194+1,EscribeLCD_n32@a+1
  1826  001BB2  C084  F01E         	movff	ModuloOperacion@ResL_194+2,EscribeLCD_n32@a+2
  1827  001BB6  C085  F01F         	movff	ModuloOperacion@ResL_194+3,EscribeLCD_n32@a+3
  1828  001BBA  C07D  F020         	movff	ModuloOperacion@b_195,EscribeLCD_n32@b
  1829  001BBE  EC18  F004         	call	_EscribeLCD_n32	;wreg free
  1830  001BC2  0012               	return		;funcret
  1831  001BC4                     __end_of_ModuloOperacion:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _abs *****************
  1835 ;; Defined at:
  1836 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\abs.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  a               2   43[COMRAM] int 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2   43[COMRAM] int 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1850 ;;      Params:         2       0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1852 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1853 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        4 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 3
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_ModuloOperacion
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text2
  1865  00290C                     __ptext2:
  1866                           	callstack 0
  1867  00290C                     _abs:
  1868                           	callstack 26
  1869                           
  1870                           ;incstack = 0
  1871  00290C  AE2D               	btfss	(abs@a+1)^0,7,c
  1872  00290E  D00D               	goto	l996
  1873  002910  C02C  F02E         	movff	abs@a,??_abs
  1874  002914  C02D  F02F         	movff	abs@a+1,??_abs+1
  1875  002918  1E2E               	comf	??_abs^0,f,c
  1876  00291A  1E2F               	comf	(??_abs+1)^0,f,c
  1877  00291C  4A2E               	infsnz	??_abs^0,f,c
  1878  00291E  2A2F               	incf	(??_abs+1)^0,f,c
  1879  002920  C02E  F02C         	movff	??_abs,?_abs
  1880  002924  C02F  F02D         	movff	??_abs+1,?_abs+1
  1881  002928  0012               	return	
  1882  00292A                     l996:
  1883  00292A  C02C  F02C         	movff	abs@a,?_abs
  1884  00292E  C02D  F02D         	movff	abs@a+1,?_abs+1
  1885  002932  0012               	return		;funcret
  1886  002934                     __end_of_abs:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function ___lmul *****************
  1890 ;; Defined at:
  1891 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  multiplier      4    5[COMRAM] unsigned long 
  1894 ;;  multiplicand    4    9[COMRAM] unsigned long 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  product         4   13[COMRAM] unsigned long 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  4    5[COMRAM] unsigned long 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         8       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:       12 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 3
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_ModuloOperacion
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text3
  1921  0026D4                     __ptext3:
  1922                           	callstack 0
  1923  0026D4                     ___lmul:
  1924                           	callstack 26
  1925                           
  1926                           ;incstack = 0
  1927  0026D4  0E00               	movlw	0
  1928  0026D6  6E0E               	movwf	___lmul@product^0,c
  1929  0026D8  0E00               	movlw	0
  1930  0026DA  6E0F               	movwf	(___lmul@product+1)^0,c
  1931  0026DC  0E00               	movlw	0
  1932  0026DE  6E10               	movwf	(___lmul@product+2)^0,c
  1933  0026E0  0E00               	movlw	0
  1934  0026E2  6E11               	movwf	(___lmul@product+3)^0,c
  1935  0026E4                     l2533:
  1936  0026E4  A006               	btfss	___lmul@multiplier^0,0,c
  1937  0026E6  D008               	goto	l2537
  1938  0026E8  500A               	movf	___lmul@multiplicand^0,w,c
  1939  0026EA  260E               	addwf	___lmul@product^0,f,c
  1940  0026EC  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  1941  0026EE  220F               	addwfc	(___lmul@product+1)^0,f,c
  1942  0026F0  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  1943  0026F2  2210               	addwfc	(___lmul@product+2)^0,f,c
  1944  0026F4  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  1945  0026F6  2211               	addwfc	(___lmul@product+3)^0,f,c
  1946  0026F8                     l2537:
  1947  0026F8  90D8               	bcf	status,0,c
  1948  0026FA  360A               	rlcf	___lmul@multiplicand^0,f,c
  1949  0026FC  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1950  0026FE  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1951  002700  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1952  002702  90D8               	bcf	status,0,c
  1953  002704  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  1954  002706  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  1955  002708  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  1956  00270A  3206               	rrcf	___lmul@multiplier^0,f,c
  1957  00270C  5006               	movf	___lmul@multiplier^0,w,c
  1958  00270E  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  1959  002710  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  1960  002712  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  1961  002714  A4D8               	btfss	status,2,c
  1962  002716  D7E6               	goto	l2533
  1963  002718  C00E  F006         	movff	___lmul@product,?___lmul
  1964  00271C  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  1965  002720  C010  F008         	movff	___lmul@product+2,?___lmul+2
  1966  002724  C011  F009         	movff	___lmul@product+3,?___lmul+3
  1967  002728  0012               	return		;funcret
  1968  00272A                     __end_of___lmul:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function ___lbtoft *****************
  1972 ;; Defined at:
  1973 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbtoft.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  c               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  c               1   16[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  3   13[COMRAM] float 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 3F/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         3       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1990 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:        4 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 4
  1994 ;; This function calls:
  1995 ;;		___ftpack
  1996 ;; This function is called by:
  1997 ;;		_ModuloOperacion
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text4
  2002  002934                     __ptext4:
  2003                           	callstack 0
  2004  002934                     ___lbtoft:
  2005                           	callstack 25
  2006                           
  2007                           ;incstack = 0
  2008                           ;___lbtoft@c stored from wreg
  2009  002934  6E11               	movwf	___lbtoft@c^0,c
  2010  002936  5011               	movf	___lbtoft@c^0,w,c
  2011  002938  6E06               	movwf	___ftpack@arg^0,c
  2012  00293A  6A07               	clrf	(___ftpack@arg+1)^0,c
  2013  00293C  6A08               	clrf	(___ftpack@arg+2)^0,c
  2014  00293E  0E8E               	movlw	142
  2015  002940  6E09               	movwf	___ftpack@exp^0,c
  2016  002942  0E00               	movlw	0
  2017  002944  6E0A               	movwf	___ftpack@sign^0,c
  2018  002946  EC42  F011         	call	___ftpack	;wreg free
  2019  00294A  C006  F00E         	movff	?___ftpack,?___lbtoft
  2020  00294E  C007  F00F         	movff	?___ftpack+1,?___lbtoft+1
  2021  002952  C008  F010         	movff	?___ftpack+2,?___lbtoft+2
  2022  002956  0012               	return		;funcret
  2023  002958                     __end_of___lbtoft:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function ___ftge *****************
  2027 ;; Defined at:
  2028 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftge.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  ff1             3    5[COMRAM] float 
  2031 ;;  ff2             3    8[COMRAM] float 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         6       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2046 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        9 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 3
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_ModuloOperacion
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text5
  2058  0024CC                     __ptext5:
  2059                           	callstack 0
  2060  0024CC                     ___ftge:
  2061                           	callstack 26
  2062                           
  2063                           ;incstack = 0
  2064  0024CC  AE08               	btfss	(___ftge@ff1+2)^0,7,c
  2065  0024CE  D00F               	goto	l2603
  2066  0024D0  0E00               	movlw	0
  2067  0024D2  6E0C               	movwf	??___ftge^0,c
  2068  0024D4  0E00               	movlw	0
  2069  0024D6  6E0D               	movwf	(??___ftge+1)^0,c
  2070  0024D8  0E80               	movlw	128
  2071  0024DA  6E0E               	movwf	(??___ftge+2)^0,c
  2072  0024DC  5006               	movf	___ftge@ff1^0,w,c
  2073  0024DE  5C0C               	subwf	??___ftge^0,w,c
  2074  0024E0  6E06               	movwf	___ftge@ff1^0,c
  2075  0024E2  5007               	movf	(___ftge@ff1+1)^0,w,c
  2076  0024E4  580D               	subwfb	(??___ftge+1)^0,w,c
  2077  0024E6  6E07               	movwf	(___ftge@ff1+1)^0,c
  2078  0024E8  5008               	movf	(___ftge@ff1+2)^0,w,c
  2079  0024EA  580E               	subwfb	(??___ftge+2)^0,w,c
  2080  0024EC  6E08               	movwf	(___ftge@ff1+2)^0,c
  2081  0024EE                     l2603:
  2082  0024EE  AE0B               	btfss	(___ftge@ff2+2)^0,7,c
  2083  0024F0  D00F               	goto	l2607
  2084  0024F2  0E00               	movlw	0
  2085  0024F4  6E0C               	movwf	??___ftge^0,c
  2086  0024F6  0E00               	movlw	0
  2087  0024F8  6E0D               	movwf	(??___ftge+1)^0,c
  2088  0024FA  0E80               	movlw	128
  2089  0024FC  6E0E               	movwf	(??___ftge+2)^0,c
  2090  0024FE  5009               	movf	___ftge@ff2^0,w,c
  2091  002500  5C0C               	subwf	??___ftge^0,w,c
  2092  002502  6E09               	movwf	___ftge@ff2^0,c
  2093  002504  500A               	movf	(___ftge@ff2+1)^0,w,c
  2094  002506  580D               	subwfb	(??___ftge+1)^0,w,c
  2095  002508  6E0A               	movwf	(___ftge@ff2+1)^0,c
  2096  00250A  500B               	movf	(___ftge@ff2+2)^0,w,c
  2097  00250C  580E               	subwfb	(??___ftge+2)^0,w,c
  2098  00250E  6E0B               	movwf	(___ftge@ff2+2)^0,c
  2099  002510                     l2607:
  2100  002510  0E00               	movlw	0
  2101  002512  1A06               	xorwf	___ftge@ff1^0,f,c
  2102  002514  0E00               	movlw	0
  2103  002516  1A07               	xorwf	(___ftge@ff1+1)^0,f,c
  2104  002518  0E80               	movlw	128
  2105  00251A  1A08               	xorwf	(___ftge@ff1+2)^0,f,c
  2106  00251C  0E00               	movlw	0
  2107  00251E  1A09               	xorwf	___ftge@ff2^0,f,c
  2108  002520  0E00               	movlw	0
  2109  002522  1A0A               	xorwf	(___ftge@ff2+1)^0,f,c
  2110  002524  0E80               	movlw	128
  2111  002526  1A0B               	xorwf	(___ftge@ff2+2)^0,f,c
  2112  002528  5009               	movf	___ftge@ff2^0,w,c
  2113  00252A  5C06               	subwf	___ftge@ff1^0,w,c
  2114  00252C  500A               	movf	(___ftge@ff2+1)^0,w,c
  2115  00252E  5807               	subwfb	(___ftge@ff1+1)^0,w,c
  2116  002530  500B               	movf	(___ftge@ff2+2)^0,w,c
  2117  002532  5808               	subwfb	(___ftge@ff1+2)^0,w,c
  2118  002534  B0D8               	btfsc	status,0,c
  2119  002536  D002               	goto	l2613
  2120  002538  90D8               	bcf	status,0,c
  2121  00253A  0012               	return	
  2122  00253C                     l2613:
  2123  00253C  80D8               	bsf	status,0,c
  2124  00253E  0012               	return		;funcret
  2125  002540                     __end_of___ftge:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function ___ftdiv *****************
  2129 ;; Defined at:
  2130 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdiv.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  f1              3   13[COMRAM] float 
  2133 ;;  f2              3   16[COMRAM] float 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  f3              3   23[COMRAM] float 
  2136 ;;  sign            1   27[COMRAM] unsigned char 
  2137 ;;  exp             1   26[COMRAM] unsigned char 
  2138 ;;  cntr            1   22[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  3   13[COMRAM] float 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         6       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2151 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:       15 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 4
  2155 ;; This function calls:
  2156 ;;		___ftpack
  2157 ;; This function is called by:
  2158 ;;		_ModuloOperacion
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text6
  2163  001FE6                     __ptext6:
  2164                           	callstack 0
  2165  001FE6                     ___ftdiv:
  2166                           	callstack 25
  2167                           
  2168                           ;incstack = 0
  2169  001FE6  C010  F014         	movff	___ftdiv@f1+2,??___ftdiv
  2170  001FEA  6A15               	clrf	(??___ftdiv+1)^0,c
  2171  001FEC  6A16               	clrf	(??___ftdiv+2)^0,c
  2172  001FEE  340F               	rlcf	(___ftdiv@f1+1)^0,w,c
  2173  001FF0  3614               	rlcf	??___ftdiv^0,f,c
  2174  001FF2  E301               	bnc	u1831
  2175  001FF4  8015               	bsf	(??___ftdiv+1)^0,0,c
  2176  001FF6                     u1831:
  2177  001FF6  5014               	movf	??___ftdiv^0,w,c
  2178  001FF8  6E1B               	movwf	___ftdiv@exp^0,c
  2179  001FFA  501B               	movf	___ftdiv@exp^0,w,c
  2180  001FFC  A4D8               	btfss	status,2,c
  2181  001FFE  D007               	goto	l2547
  2182  002000  0E00               	movlw	0
  2183  002002  6E0E               	movwf	?___ftdiv^0,c
  2184  002004  0E00               	movlw	0
  2185  002006  6E0F               	movwf	(?___ftdiv+1)^0,c
  2186  002008  0E00               	movlw	0
  2187  00200A  6E10               	movwf	(?___ftdiv+2)^0,c
  2188  00200C  0012               	return	
  2189  00200E                     l2547:
  2190  00200E  C013  F014         	movff	___ftdiv@f2+2,??___ftdiv
  2191  002012  6A15               	clrf	(??___ftdiv+1)^0,c
  2192  002014  6A16               	clrf	(??___ftdiv+2)^0,c
  2193  002016  3412               	rlcf	(___ftdiv@f2+1)^0,w,c
  2194  002018  3614               	rlcf	??___ftdiv^0,f,c
  2195  00201A  E301               	bnc	u1851
  2196  00201C  8015               	bsf	(??___ftdiv+1)^0,0,c
  2197  00201E                     u1851:
  2198  00201E  5014               	movf	??___ftdiv^0,w,c
  2199  002020  6E1C               	movwf	___ftdiv@sign^0,c
  2200  002022  501C               	movf	___ftdiv@sign^0,w,c
  2201  002024  A4D8               	btfss	status,2,c
  2202  002026  D007               	goto	l2553
  2203  002028  0E00               	movlw	0
  2204  00202A  6E0E               	movwf	?___ftdiv^0,c
  2205  00202C  0E00               	movlw	0
  2206  00202E  6E0F               	movwf	(?___ftdiv+1)^0,c
  2207  002030  0E00               	movlw	0
  2208  002032  6E10               	movwf	(?___ftdiv+2)^0,c
  2209  002034  0012               	return	
  2210  002036                     l2553:
  2211  002036  0E00               	movlw	0
  2212  002038  6E18               	movwf	___ftdiv@f3^0,c
  2213  00203A  0E00               	movlw	0
  2214  00203C  6E19               	movwf	(___ftdiv@f3+1)^0,c
  2215  00203E  0E00               	movlw	0
  2216  002040  6E1A               	movwf	(___ftdiv@f3+2)^0,c
  2217  002042  501C               	movf	___ftdiv@sign^0,w,c
  2218  002044  0F89               	addlw	137
  2219  002046  5E1B               	subwf	___ftdiv@exp^0,f,c
  2220  002048  C010  F01C         	movff	___ftdiv@f1+2,___ftdiv@sign
  2221  00204C  5013               	movf	(___ftdiv@f2+2)^0,w,c
  2222  00204E  1A1C               	xorwf	___ftdiv@sign^0,f,c
  2223  002050  0E80               	movlw	128
  2224  002052  161C               	andwf	___ftdiv@sign^0,f,c
  2225  002054  8E0F               	bsf	(___ftdiv@f1+1)^0,7,c
  2226  002056  0EFF               	movlw	255
  2227  002058  160E               	andwf	___ftdiv@f1^0,f,c
  2228  00205A  0EFF               	movlw	255
  2229  00205C  160F               	andwf	(___ftdiv@f1+1)^0,f,c
  2230  00205E  0E00               	movlw	0
  2231  002060  1610               	andwf	(___ftdiv@f1+2)^0,f,c
  2232  002062  8E12               	bsf	(___ftdiv@f2+1)^0,7,c
  2233  002064  0EFF               	movlw	255
  2234  002066  1611               	andwf	___ftdiv@f2^0,f,c
  2235  002068  0EFF               	movlw	255
  2236  00206A  1612               	andwf	(___ftdiv@f2+1)^0,f,c
  2237  00206C  0E00               	movlw	0
  2238  00206E  1613               	andwf	(___ftdiv@f2+2)^0,f,c
  2239  002070  0E18               	movlw	24
  2240  002072  6E17               	movwf	___ftdiv@cntr^0,c
  2241  002074                     l2573:
  2242  002074  90D8               	bcf	status,0,c
  2243  002076  3618               	rlcf	___ftdiv@f3^0,f,c
  2244  002078  3619               	rlcf	(___ftdiv@f3+1)^0,f,c
  2245  00207A  361A               	rlcf	(___ftdiv@f3+2)^0,f,c
  2246  00207C  5011               	movf	___ftdiv@f2^0,w,c
  2247  00207E  5C0E               	subwf	___ftdiv@f1^0,w,c
  2248  002080  5012               	movf	(___ftdiv@f2+1)^0,w,c
  2249  002082  580F               	subwfb	(___ftdiv@f1+1)^0,w,c
  2250  002084  5013               	movf	(___ftdiv@f2+2)^0,w,c
  2251  002086  5810               	subwfb	(___ftdiv@f1+2)^0,w,c
  2252  002088  A0D8               	btfss	status,0,c
  2253  00208A  D007               	goto	l675
  2254  00208C  5011               	movf	___ftdiv@f2^0,w,c
  2255  00208E  5E0E               	subwf	___ftdiv@f1^0,f,c
  2256  002090  5012               	movf	(___ftdiv@f2+1)^0,w,c
  2257  002092  5A0F               	subwfb	(___ftdiv@f1+1)^0,f,c
  2258  002094  5013               	movf	(___ftdiv@f2+2)^0,w,c
  2259  002096  5A10               	subwfb	(___ftdiv@f1+2)^0,f,c
  2260  002098  8018               	bsf	___ftdiv@f3^0,0,c
  2261  00209A                     l675:
  2262  00209A  90D8               	bcf	status,0,c
  2263  00209C  360E               	rlcf	___ftdiv@f1^0,f,c
  2264  00209E  360F               	rlcf	(___ftdiv@f1+1)^0,f,c
  2265  0020A0  3610               	rlcf	(___ftdiv@f1+2)^0,f,c
  2266  0020A2  2E17               	decfsz	___ftdiv@cntr^0,f,c
  2267  0020A4  D7E7               	goto	l2573
  2268  0020A6  C018  F006         	movff	___ftdiv@f3,___ftpack@arg
  2269  0020AA  C019  F007         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2270  0020AE  C01A  F008         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2271  0020B2  C01B  F009         	movff	___ftdiv@exp,___ftpack@exp
  2272  0020B6  C01C  F00A         	movff	___ftdiv@sign,___ftpack@sign
  2273  0020BA  EC42  F011         	call	___ftpack	;wreg free
  2274  0020BE  C006  F00E         	movff	?___ftpack,?___ftdiv
  2275  0020C2  C007  F00F         	movff	?___ftpack+1,?___ftdiv+1
  2276  0020C6  C008  F010         	movff	?___ftpack+2,?___ftdiv+2
  2277  0020CA  0012               	return		;funcret
  2278  0020CC                     __end_of___ftdiv:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function ___awtoft *****************
  2282 ;; Defined at:
  2283 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awtoft.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  c               2   47[COMRAM] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  sign            1   50[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  3   47[COMRAM] float 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2297 ;;      Params:         3       0       0       0       0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2300 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 4
  2304 ;; This function calls:
  2305 ;;		___ftpack
  2306 ;; This function is called by:
  2307 ;;		_ModuloOperacion
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text7
  2312  002880                     __ptext7:
  2313                           	callstack 0
  2314  002880                     ___awtoft:
  2315                           	callstack 25
  2316                           
  2317                           ;incstack = 0
  2318  002880  0E00               	movlw	0
  2319  002882  6E33               	movwf	___awtoft@sign^0,c
  2320  002884  AE31               	btfss	(___awtoft@c+1)^0,7,c
  2321  002886  D006               	goto	l2595
  2322  002888  6C30               	negf	___awtoft@c^0,c
  2323  00288A  1E31               	comf	(___awtoft@c+1)^0,f,c
  2324  00288C  B0D8               	btfsc	status,0,c
  2325  00288E  2A31               	incf	(___awtoft@c+1)^0,f,c
  2326  002890  0E01               	movlw	1
  2327  002892  6E33               	movwf	___awtoft@sign^0,c
  2328  002894                     l2595:
  2329  002894  C030  F006         	movff	___awtoft@c,___ftpack@arg
  2330  002898  C031  F007         	movff	___awtoft@c+1,___ftpack@arg+1
  2331  00289C  6A08               	clrf	(___ftpack@arg+2)^0,c
  2332  00289E  0E8E               	movlw	142
  2333  0028A0  6E09               	movwf	___ftpack@exp^0,c
  2334  0028A2  C033  F00A         	movff	___awtoft@sign,___ftpack@sign
  2335  0028A6  EC42  F011         	call	___ftpack	;wreg free
  2336  0028AA  C006  F030         	movff	?___ftpack,?___awtoft
  2337  0028AE  C007  F031         	movff	?___ftpack+1,?___awtoft+1
  2338  0028B2  C008  F032         	movff	?___ftpack+2,?___awtoft+2
  2339  0028B6  0012               	return		;funcret
  2340  0028B8                     __end_of___awtoft:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _MensajeLCD_Var *****************
  2344 ;; Defined at:
  2345 ;;		line 292 in file "LibLCDXC8.h"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  a               1   10[COMRAM] PTR unsigned char 
  2348 ;;		 -> STR_5(14), STR_4(9), STR_3(14), STR_2(12), 
  2349 ;;		 -> STR_1(10), 
  2350 ;;  cont            1   11[COMRAM] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  i               2   15[COMRAM] int 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2362 ;;      Params:         2       0       0       0       0       0       0       0       0
  2363 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2364 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2365 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:        7 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 6
  2369 ;; This function calls:
  2370 ;;		_EscribeLCD_c
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;;		_ModuloOperacion
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text8
  2378  0027C6                     __ptext8:
  2379                           	callstack 0
  2380  0027C6                     _MensajeLCD_Var:
  2381                           	callstack 23
  2382                           
  2383                           ;LibLCDXC8.h: 293: int i;;LibLCDXC8.h: 294: for(i=0;i<(cont);i++){
  2384                           
  2385                           ;incstack = 0
  2386  0027C6  0E00               	movlw	0
  2387  0027C8  6E11               	movwf	(MensajeLCD_Var@i+1)^0,c
  2388  0027CA  0E00               	movlw	0
  2389  0027CC  6E10               	movwf	MensajeLCD_Var@i^0,c
  2390  0027CE  D00D               	goto	l2439
  2391  0027D0                     l2435:
  2392                           
  2393                           ;LibLCDXC8.h: 295: EscribeLCD_c(a[i]);
  2394  0027D0  500B               	movf	MensajeLCD_Var@a^0,w,c
  2395  0027D2  2410               	addwf	MensajeLCD_Var@i^0,w,c
  2396  0027D4  6E0D               	movwf	??_MensajeLCD_Var^0,c
  2397  0027D6  C00D  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2398  0027DA                     	if	1	;There is more than 1 active tblptr byte
  2399  0027DA  0E08               	movlw	high __smallconst
  2400  0027DC  6EF7               	movwf	tblptrh,c
  2401  0027DE                     	endif
  2402  0027DE                     	if	0	;tblptru may be non-zero
  2403  0027DE                     	endif
  2404  0027DE                     	if	0	;tblptru may be non-zero
  2405  0027DE                     	endif
  2406  0027DE  0008               	tblrd		*
  2407  0027E0  50F5               	movf	tablat,w,c
  2408  0027E2  ECC3  F014         	call	_EscribeLCD_c
  2409  0027E6  4A10               	infsnz	MensajeLCD_Var@i^0,f,c
  2410  0027E8  2A11               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2411  0027EA                     l2439:
  2412  0027EA  500C               	movf	MensajeLCD_Var@cont^0,w,c
  2413  0027EC  6E0D               	movwf	??_MensajeLCD_Var^0,c
  2414  0027EE  6A0E               	clrf	(??_MensajeLCD_Var+1)^0,c
  2415  0027F0  500D               	movf	??_MensajeLCD_Var^0,w,c
  2416  0027F2  5C10               	subwf	MensajeLCD_Var@i^0,w,c
  2417  0027F4  5011               	movf	(MensajeLCD_Var@i+1)^0,w,c
  2418  0027F6  0A80               	xorlw	128
  2419  0027F8  6E0F               	movwf	(??_MensajeLCD_Var+2)^0,c
  2420  0027FA  500E               	movf	(??_MensajeLCD_Var+1)^0,w,c
  2421  0027FC  0A80               	xorlw	128
  2422  0027FE  580F               	subwfb	(??_MensajeLCD_Var+2)^0,w,c
  2423  002800  B0D8               	btfsc	status,0,c
  2424  002802  0012               	return	
  2425  002804  D7E5               	goto	l2435
  2426  002806                     __end_of_MensajeLCD_Var:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _EscribeLCD_n32 *****************
  2430 ;; Defined at:
  2431 ;;		line 167 in file "LibLCDXC8.h"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  a               4   27[COMRAM] unsigned long 
  2434 ;;  b               1   31[COMRAM] unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  diezmil         4   48[COMRAM] unsigned long 
  2437 ;;  cienmil         4   44[COMRAM] unsigned long 
  2438 ;;  millon          4   40[COMRAM] unsigned long 
  2439 ;;  diezmillon      4   36[COMRAM] unsigned long 
  2440 ;;  cienmillon      4   32[COMRAM] unsigned long 
  2441 ;;  centena         2   54[COMRAM] unsigned int 
  2442 ;;  millar          2   52[COMRAM] unsigned int 
  2443 ;;  unidad          1   57[COMRAM] unsigned char 
  2444 ;;  decena          1   56[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 3F/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         5       0       0       0       0       0       0       0       0
  2455 ;;      Locals:        26       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:        31       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:       31 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 6
  2461 ;; This function calls:
  2462 ;;		_EscribeLCD_c
  2463 ;;		___lldiv
  2464 ;;		___llmod
  2465 ;; This function is called by:
  2466 ;;		_ModuloOperacion
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text9
  2471  000830                     __ptext9:
  2472                           	callstack 0
  2473  000830                     _EscribeLCD_n32:
  2474                           	callstack 23
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;LibLCDXC8.h: 172: unsigned char decena,unidad;;LibLCDXC8.h: 173: unsigned int centena,m
      +                          illar;;LibLCDXC8.h: 174: unsigned long diezmil,cienmil,millon,diezmillon,cienmillon;;Lib
      +                          LCDXC8.h: 175: LATD2=1;
  2478                           
  2479                           ;incstack = 0
  2480  000830  848C               	bsf	3980,2,c	;volatile
  2481                           
  2482                           ;LibLCDXC8.h: 177: switch(b){
  2483  000832  EF58  F00B         	goto	l2431
  2484  000836                     l2411:
  2485                           
  2486                           ; BSR set to: 0
  2487  000836  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2488  00083A  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2489  00083E  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2490  000842  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2491  000846  0E0A               	movlw	10
  2492  000848  6E0A               	movwf	___llmod@divisor^0,c
  2493  00084A  0E00               	movlw	0
  2494  00084C  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2495  00084E  0E00               	movlw	0
  2496  000850  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2497  000852  0E00               	movlw	0
  2498  000854  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2499  000856  ECD8  F012         	call	___llmod	;wreg free
  2500  00085A  5006               	movf	?___llmod^0,w,c
  2501  00085C  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  2502                           
  2503                           ;LibLCDXC8.h: 179: EscribeLCD_c(unidad+48);
  2504  00085E  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  2505  000860  0F30               	addlw	48
  2506  000862  ECC3  F014         	call	_EscribeLCD_c
  2507                           
  2508                           ;LibLCDXC8.h: 180: break;
  2509  000866  0012               	return	
  2510  000868                     l2413:
  2511                           
  2512                           ; BSR set to: 0
  2513  000868  0E64               	movlw	100
  2514  00086A  6E0A               	movwf	___llmod@divisor^0,c
  2515  00086C  0E00               	movlw	0
  2516  00086E  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2517  000870  0E00               	movlw	0
  2518  000872  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2519  000874  0E00               	movlw	0
  2520  000876  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2521  000878  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2522  00087C  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2523  000880  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2524  000884  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2525  000888  ECD8  F012         	call	___llmod	;wreg free
  2526  00088C  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2527  000890  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2528  000894  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2529  000898  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2530  00089C  0E0A               	movlw	10
  2531  00089E  6E13               	movwf	___lldiv@divisor^0,c
  2532  0008A0  0E00               	movlw	0
  2533  0008A2  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2534  0008A4  0E00               	movlw	0
  2535  0008A6  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2536  0008A8  0E00               	movlw	0
  2537  0008AA  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2538  0008AC  ECE7  F011         	call	___lldiv	;wreg free
  2539  0008B0  500F               	movf	?___lldiv^0,w,c
  2540  0008B2  6E39               	movwf	EscribeLCD_n32@decena^0,c
  2541                           
  2542                           ;LibLCDXC8.h: 182: unidad=a%10;
  2543  0008B4  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2544  0008B8  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2545  0008BC  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2546  0008C0  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2547  0008C4  0E0A               	movlw	10
  2548  0008C6  6E0A               	movwf	___llmod@divisor^0,c
  2549  0008C8  0E00               	movlw	0
  2550  0008CA  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2551  0008CC  0E00               	movlw	0
  2552  0008CE  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2553  0008D0  0E00               	movlw	0
  2554  0008D2  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2555  0008D4  ECD8  F012         	call	___llmod	;wreg free
  2556  0008D8  5006               	movf	?___llmod^0,w,c
  2557  0008DA  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  2558                           
  2559                           ;LibLCDXC8.h: 183: EscribeLCD_c(decena+48);
  2560  0008DC  5039               	movf	EscribeLCD_n32@decena^0,w,c
  2561  0008DE  0F30               	addlw	48
  2562  0008E0  ECC3  F014         	call	_EscribeLCD_c
  2563                           
  2564                           ;LibLCDXC8.h: 184: EscribeLCD_c(unidad+48);
  2565  0008E4  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  2566  0008E6  0F30               	addlw	48
  2567  0008E8  ECC3  F014         	call	_EscribeLCD_c
  2568                           
  2569                           ;LibLCDXC8.h: 185: break;
  2570  0008EC  0012               	return	
  2571  0008EE                     l2415:
  2572                           
  2573                           ; BSR set to: 0
  2574  0008EE  0EE8               	movlw	232
  2575  0008F0  6E0A               	movwf	___llmod@divisor^0,c
  2576  0008F2  0E03               	movlw	3
  2577  0008F4  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2578  0008F6  0E00               	movlw	0
  2579  0008F8  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2580  0008FA  0E00               	movlw	0
  2581  0008FC  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2582  0008FE  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2583  000902  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2584  000906  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2585  00090A  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2586  00090E  ECD8  F012         	call	___llmod	;wreg free
  2587  000912  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2588  000916  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2589  00091A  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2590  00091E  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2591  000922  0E64               	movlw	100
  2592  000924  6E13               	movwf	___lldiv@divisor^0,c
  2593  000926  0E00               	movlw	0
  2594  000928  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2595  00092A  0E00               	movlw	0
  2596  00092C  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2597  00092E  0E00               	movlw	0
  2598  000930  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2599  000932  ECE7  F011         	call	___lldiv	;wreg free
  2600  000936  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  2601  00093A  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2602                           
  2603                           ;LibLCDXC8.h: 187: decena=(a%100)/10;
  2604  00093E  0E64               	movlw	100
  2605  000940  6E0A               	movwf	___llmod@divisor^0,c
  2606  000942  0E00               	movlw	0
  2607  000944  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2608  000946  0E00               	movlw	0
  2609  000948  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2610  00094A  0E00               	movlw	0
  2611  00094C  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2612  00094E  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2613  000952  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2614  000956  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2615  00095A  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2616  00095E  ECD8  F012         	call	___llmod	;wreg free
  2617  000962  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2618  000966  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2619  00096A  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2620  00096E  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2621  000972  0E0A               	movlw	10
  2622  000974  6E13               	movwf	___lldiv@divisor^0,c
  2623  000976  0E00               	movlw	0
  2624  000978  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2625  00097A  0E00               	movlw	0
  2626  00097C  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2627  00097E  0E00               	movlw	0
  2628  000980  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2629  000982  ECE7  F011         	call	___lldiv	;wreg free
  2630  000986  500F               	movf	?___lldiv^0,w,c
  2631  000988  6E39               	movwf	EscribeLCD_n32@decena^0,c
  2632                           
  2633                           ;LibLCDXC8.h: 188: unidad=a%10;
  2634  00098A  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2635  00098E  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2636  000992  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2637  000996  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2638  00099A  0E0A               	movlw	10
  2639  00099C  6E0A               	movwf	___llmod@divisor^0,c
  2640  00099E  0E00               	movlw	0
  2641  0009A0  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2642  0009A2  0E00               	movlw	0
  2643  0009A4  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2644  0009A6  0E00               	movlw	0
  2645  0009A8  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2646  0009AA  ECD8  F012         	call	___llmod	;wreg free
  2647  0009AE  5006               	movf	?___llmod^0,w,c
  2648  0009B0  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  2649                           
  2650                           ;LibLCDXC8.h: 189: EscribeLCD_c(centena+48);
  2651  0009B2  5037               	movf	EscribeLCD_n32@centena^0,w,c
  2652  0009B4  0F30               	addlw	48
  2653  0009B6  ECC3  F014         	call	_EscribeLCD_c
  2654                           
  2655                           ;LibLCDXC8.h: 190: EscribeLCD_c(decena+48);
  2656  0009BA  5039               	movf	EscribeLCD_n32@decena^0,w,c
  2657  0009BC  0F30               	addlw	48
  2658  0009BE  ECC3  F014         	call	_EscribeLCD_c
  2659                           
  2660                           ;LibLCDXC8.h: 191: EscribeLCD_c(unidad+48);
  2661  0009C2  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  2662  0009C4  0F30               	addlw	48
  2663  0009C6  ECC3  F014         	call	_EscribeLCD_c
  2664                           
  2665                           ;LibLCDXC8.h: 192: break;
  2666  0009CA  0012               	return	
  2667  0009CC                     l2417:
  2668                           
  2669                           ; BSR set to: 0
  2670  0009CC  0E10               	movlw	16
  2671  0009CE  6E0A               	movwf	___llmod@divisor^0,c
  2672  0009D0  0E27               	movlw	39
  2673  0009D2  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2674  0009D4  0E00               	movlw	0
  2675  0009D6  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2676  0009D8  0E00               	movlw	0
  2677  0009DA  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2678  0009DC  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2679  0009E0  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2680  0009E4  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2681  0009E8  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2682  0009EC  ECD8  F012         	call	___llmod	;wreg free
  2683  0009F0  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2684  0009F4  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2685  0009F8  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2686  0009FC  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2687  000A00  0EE8               	movlw	232
  2688  000A02  6E13               	movwf	___lldiv@divisor^0,c
  2689  000A04  0E03               	movlw	3
  2690  000A06  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2691  000A08  0E00               	movlw	0
  2692  000A0A  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2693  000A0C  0E00               	movlw	0
  2694  000A0E  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2695  000A10  ECE7  F011         	call	___lldiv	;wreg free
  2696  000A14  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  2697  000A18  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2698                           
  2699                           ;LibLCDXC8.h: 194: centena=(a%1000)/100;
  2700  000A1C  0EE8               	movlw	232
  2701  000A1E  6E0A               	movwf	___llmod@divisor^0,c
  2702  000A20  0E03               	movlw	3
  2703  000A22  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2704  000A24  0E00               	movlw	0
  2705  000A26  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2706  000A28  0E00               	movlw	0
  2707  000A2A  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2708  000A2C  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2709  000A30  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2710  000A34  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2711  000A38  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2712  000A3C  ECD8  F012         	call	___llmod	;wreg free
  2713  000A40  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2714  000A44  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2715  000A48  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2716  000A4C  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2717  000A50  0E64               	movlw	100
  2718  000A52  6E13               	movwf	___lldiv@divisor^0,c
  2719  000A54  0E00               	movlw	0
  2720  000A56  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2721  000A58  0E00               	movlw	0
  2722  000A5A  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2723  000A5C  0E00               	movlw	0
  2724  000A5E  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2725  000A60  ECE7  F011         	call	___lldiv	;wreg free
  2726  000A64  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  2727  000A68  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2728                           
  2729                           ;LibLCDXC8.h: 195: decena=(a%100)/10;
  2730  000A6C  0E64               	movlw	100
  2731  000A6E  6E0A               	movwf	___llmod@divisor^0,c
  2732  000A70  0E00               	movlw	0
  2733  000A72  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2734  000A74  0E00               	movlw	0
  2735  000A76  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2736  000A78  0E00               	movlw	0
  2737  000A7A  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2738  000A7C  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2739  000A80  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2740  000A84  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2741  000A88  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2742  000A8C  ECD8  F012         	call	___llmod	;wreg free
  2743  000A90  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2744  000A94  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2745  000A98  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2746  000A9C  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2747  000AA0  0E0A               	movlw	10
  2748  000AA2  6E13               	movwf	___lldiv@divisor^0,c
  2749  000AA4  0E00               	movlw	0
  2750  000AA6  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2751  000AA8  0E00               	movlw	0
  2752  000AAA  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2753  000AAC  0E00               	movlw	0
  2754  000AAE  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2755  000AB0  ECE7  F011         	call	___lldiv	;wreg free
  2756  000AB4  500F               	movf	?___lldiv^0,w,c
  2757  000AB6  6E39               	movwf	EscribeLCD_n32@decena^0,c
  2758                           
  2759                           ;LibLCDXC8.h: 196: unidad=a%10;
  2760  000AB8  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2761  000ABC  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2762  000AC0  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2763  000AC4  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2764  000AC8  0E0A               	movlw	10
  2765  000ACA  6E0A               	movwf	___llmod@divisor^0,c
  2766  000ACC  0E00               	movlw	0
  2767  000ACE  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2768  000AD0  0E00               	movlw	0
  2769  000AD2  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2770  000AD4  0E00               	movlw	0
  2771  000AD6  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2772  000AD8  ECD8  F012         	call	___llmod	;wreg free
  2773  000ADC  5006               	movf	?___llmod^0,w,c
  2774  000ADE  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  2775                           
  2776                           ;LibLCDXC8.h: 197: EscribeLCD_c(millar+48);
  2777  000AE0  5035               	movf	EscribeLCD_n32@millar^0,w,c
  2778  000AE2  0F30               	addlw	48
  2779  000AE4  ECC3  F014         	call	_EscribeLCD_c
  2780                           
  2781                           ;LibLCDXC8.h: 198: EscribeLCD_c(centena+48);
  2782  000AE8  5037               	movf	EscribeLCD_n32@centena^0,w,c
  2783  000AEA  0F30               	addlw	48
  2784  000AEC  ECC3  F014         	call	_EscribeLCD_c
  2785                           
  2786                           ;LibLCDXC8.h: 199: EscribeLCD_c(decena+48);
  2787  000AF0  5039               	movf	EscribeLCD_n32@decena^0,w,c
  2788  000AF2  0F30               	addlw	48
  2789  000AF4  ECC3  F014         	call	_EscribeLCD_c
  2790                           
  2791                           ;LibLCDXC8.h: 200: EscribeLCD_c(unidad+48);
  2792  000AF8  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  2793  000AFA  0F30               	addlw	48
  2794  000AFC  ECC3  F014         	call	_EscribeLCD_c
  2795                           
  2796                           ;LibLCDXC8.h: 201: break;
  2797  000B00  0012               	return	
  2798  000B02                     l2419:
  2799                           
  2800                           ; BSR set to: 0
  2801  000B02  0EA0               	movlw	160
  2802  000B04  6E0A               	movwf	___llmod@divisor^0,c
  2803  000B06  0E86               	movlw	134
  2804  000B08  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2805  000B0A  0E01               	movlw	1
  2806  000B0C  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2807  000B0E  0E00               	movlw	0
  2808  000B10  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2809  000B12  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2810  000B16  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2811  000B1A  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2812  000B1E  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2813  000B22  ECD8  F012         	call	___llmod	;wreg free
  2814  000B26  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2815  000B2A  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2816  000B2E  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2817  000B32  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2818  000B36  0E10               	movlw	16
  2819  000B38  6E13               	movwf	___lldiv@divisor^0,c
  2820  000B3A  0E27               	movlw	39
  2821  000B3C  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2822  000B3E  0E00               	movlw	0
  2823  000B40  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2824  000B42  0E00               	movlw	0
  2825  000B44  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2826  000B46  ECE7  F011         	call	___lldiv	;wreg free
  2827  000B4A  C00F  F031         	movff	?___lldiv,EscribeLCD_n32@diezmil
  2828  000B4E  C010  F032         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  2829  000B52  C011  F033         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  2830  000B56  C012  F034         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  2831                           
  2832                           ;LibLCDXC8.h: 203: millar=(a%10000)/1000;
  2833  000B5A  0E10               	movlw	16
  2834  000B5C  6E0A               	movwf	___llmod@divisor^0,c
  2835  000B5E  0E27               	movlw	39
  2836  000B60  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2837  000B62  0E00               	movlw	0
  2838  000B64  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2839  000B66  0E00               	movlw	0
  2840  000B68  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2841  000B6A  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2842  000B6E  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2843  000B72  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2844  000B76  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2845  000B7A  ECD8  F012         	call	___llmod	;wreg free
  2846  000B7E  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2847  000B82  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2848  000B86  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2849  000B8A  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2850  000B8E  0EE8               	movlw	232
  2851  000B90  6E13               	movwf	___lldiv@divisor^0,c
  2852  000B92  0E03               	movlw	3
  2853  000B94  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2854  000B96  0E00               	movlw	0
  2855  000B98  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2856  000B9A  0E00               	movlw	0
  2857  000B9C  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2858  000B9E  ECE7  F011         	call	___lldiv	;wreg free
  2859  000BA2  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  2860  000BA6  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  2861                           
  2862                           ;LibLCDXC8.h: 204: centena=(a%1000)/100;
  2863  000BAA  0EE8               	movlw	232
  2864  000BAC  6E0A               	movwf	___llmod@divisor^0,c
  2865  000BAE  0E03               	movlw	3
  2866  000BB0  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2867  000BB2  0E00               	movlw	0
  2868  000BB4  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2869  000BB6  0E00               	movlw	0
  2870  000BB8  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2871  000BBA  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2872  000BBE  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2873  000BC2  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2874  000BC6  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2875  000BCA  ECD8  F012         	call	___llmod	;wreg free
  2876  000BCE  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2877  000BD2  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2878  000BD6  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2879  000BDA  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2880  000BDE  0E64               	movlw	100
  2881  000BE0  6E13               	movwf	___lldiv@divisor^0,c
  2882  000BE2  0E00               	movlw	0
  2883  000BE4  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2884  000BE6  0E00               	movlw	0
  2885  000BE8  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2886  000BEA  0E00               	movlw	0
  2887  000BEC  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2888  000BEE  ECE7  F011         	call	___lldiv	;wreg free
  2889  000BF2  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  2890  000BF6  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  2891                           
  2892                           ;LibLCDXC8.h: 205: decena=(a%100)/10;
  2893  000BFA  0E64               	movlw	100
  2894  000BFC  6E0A               	movwf	___llmod@divisor^0,c
  2895  000BFE  0E00               	movlw	0
  2896  000C00  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2897  000C02  0E00               	movlw	0
  2898  000C04  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2899  000C06  0E00               	movlw	0
  2900  000C08  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2901  000C0A  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2902  000C0E  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2903  000C12  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2904  000C16  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2905  000C1A  ECD8  F012         	call	___llmod	;wreg free
  2906  000C1E  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2907  000C22  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2908  000C26  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2909  000C2A  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2910  000C2E  0E0A               	movlw	10
  2911  000C30  6E13               	movwf	___lldiv@divisor^0,c
  2912  000C32  0E00               	movlw	0
  2913  000C34  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2914  000C36  0E00               	movlw	0
  2915  000C38  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2916  000C3A  0E00               	movlw	0
  2917  000C3C  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2918  000C3E  ECE7  F011         	call	___lldiv	;wreg free
  2919  000C42  500F               	movf	?___lldiv^0,w,c
  2920  000C44  6E39               	movwf	EscribeLCD_n32@decena^0,c
  2921                           
  2922                           ;LibLCDXC8.h: 206: unidad=a%10;
  2923  000C46  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2924  000C4A  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2925  000C4E  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2926  000C52  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2927  000C56  0E0A               	movlw	10
  2928  000C58  6E0A               	movwf	___llmod@divisor^0,c
  2929  000C5A  0E00               	movlw	0
  2930  000C5C  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2931  000C5E  0E00               	movlw	0
  2932  000C60  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2933  000C62  0E00               	movlw	0
  2934  000C64  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2935  000C66  ECD8  F012         	call	___llmod	;wreg free
  2936  000C6A  5006               	movf	?___llmod^0,w,c
  2937  000C6C  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  2938                           
  2939                           ;LibLCDXC8.h: 207: EscribeLCD_c(diezmil+48);
  2940  000C6E  5031               	movf	EscribeLCD_n32@diezmil^0,w,c
  2941  000C70  0F30               	addlw	48
  2942  000C72  ECC3  F014         	call	_EscribeLCD_c
  2943                           
  2944                           ;LibLCDXC8.h: 208: EscribeLCD_c(millar+48);
  2945  000C76  5035               	movf	EscribeLCD_n32@millar^0,w,c
  2946  000C78  0F30               	addlw	48
  2947  000C7A  ECC3  F014         	call	_EscribeLCD_c
  2948                           
  2949                           ;LibLCDXC8.h: 209: EscribeLCD_c(centena+48);
  2950  000C7E  5037               	movf	EscribeLCD_n32@centena^0,w,c
  2951  000C80  0F30               	addlw	48
  2952  000C82  ECC3  F014         	call	_EscribeLCD_c
  2953                           
  2954                           ;LibLCDXC8.h: 210: EscribeLCD_c(decena+48);
  2955  000C86  5039               	movf	EscribeLCD_n32@decena^0,w,c
  2956  000C88  0F30               	addlw	48
  2957  000C8A  ECC3  F014         	call	_EscribeLCD_c
  2958                           
  2959                           ;LibLCDXC8.h: 211: EscribeLCD_c(unidad+48);
  2960  000C8E  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  2961  000C90  0F30               	addlw	48
  2962  000C92  ECC3  F014         	call	_EscribeLCD_c
  2963                           
  2964                           ;LibLCDXC8.h: 212: break;
  2965  000C96  0012               	return	
  2966  000C98                     l2421:
  2967                           
  2968                           ; BSR set to: 0
  2969  000C98  0E40               	movlw	64
  2970  000C9A  6E0A               	movwf	___llmod@divisor^0,c
  2971  000C9C  0E42               	movlw	66
  2972  000C9E  6E0B               	movwf	(___llmod@divisor+1)^0,c
  2973  000CA0  0E0F               	movlw	15
  2974  000CA2  6E0C               	movwf	(___llmod@divisor+2)^0,c
  2975  000CA4  0E00               	movlw	0
  2976  000CA6  6E0D               	movwf	(___llmod@divisor+3)^0,c
  2977  000CA8  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  2978  000CAC  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  2979  000CB0  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  2980  000CB4  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  2981  000CB8  ECD8  F012         	call	___llmod	;wreg free
  2982  000CBC  C006  F00F         	movff	?___llmod,___lldiv@dividend
  2983  000CC0  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  2984  000CC4  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  2985  000CC8  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  2986  000CCC  0EA0               	movlw	160
  2987  000CCE  6E13               	movwf	___lldiv@divisor^0,c
  2988  000CD0  0E86               	movlw	134
  2989  000CD2  6E14               	movwf	(___lldiv@divisor+1)^0,c
  2990  000CD4  0E01               	movlw	1
  2991  000CD6  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2992  000CD8  0E00               	movlw	0
  2993  000CDA  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2994  000CDC  ECE7  F011         	call	___lldiv	;wreg free
  2995  000CE0  C00F  F02D         	movff	?___lldiv,EscribeLCD_n32@cienmil
  2996  000CE4  C010  F02E         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  2997  000CE8  C011  F02F         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  2998  000CEC  C012  F030         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  2999                           
  3000                           ;LibLCDXC8.h: 215: diezmil=(a%100000)/10000;
  3001  000CF0  0EA0               	movlw	160
  3002  000CF2  6E0A               	movwf	___llmod@divisor^0,c
  3003  000CF4  0E86               	movlw	134
  3004  000CF6  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3005  000CF8  0E01               	movlw	1
  3006  000CFA  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3007  000CFC  0E00               	movlw	0
  3008  000CFE  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3009  000D00  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3010  000D04  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3011  000D08  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3012  000D0C  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3013  000D10  ECD8  F012         	call	___llmod	;wreg free
  3014  000D14  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3015  000D18  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3016  000D1C  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3017  000D20  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3018  000D24  0E10               	movlw	16
  3019  000D26  6E13               	movwf	___lldiv@divisor^0,c
  3020  000D28  0E27               	movlw	39
  3021  000D2A  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3022  000D2C  0E00               	movlw	0
  3023  000D2E  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3024  000D30  0E00               	movlw	0
  3025  000D32  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3026  000D34  ECE7  F011         	call	___lldiv	;wreg free
  3027  000D38  C00F  F031         	movff	?___lldiv,EscribeLCD_n32@diezmil
  3028  000D3C  C010  F032         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  3029  000D40  C011  F033         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  3030  000D44  C012  F034         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  3031                           
  3032                           ;LibLCDXC8.h: 216: millar=(a%10000)/1000;
  3033  000D48  0E10               	movlw	16
  3034  000D4A  6E0A               	movwf	___llmod@divisor^0,c
  3035  000D4C  0E27               	movlw	39
  3036  000D4E  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3037  000D50  0E00               	movlw	0
  3038  000D52  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3039  000D54  0E00               	movlw	0
  3040  000D56  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3041  000D58  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3042  000D5C  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3043  000D60  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3044  000D64  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3045  000D68  ECD8  F012         	call	___llmod	;wreg free
  3046  000D6C  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3047  000D70  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3048  000D74  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3049  000D78  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3050  000D7C  0EE8               	movlw	232
  3051  000D7E  6E13               	movwf	___lldiv@divisor^0,c
  3052  000D80  0E03               	movlw	3
  3053  000D82  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3054  000D84  0E00               	movlw	0
  3055  000D86  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3056  000D88  0E00               	movlw	0
  3057  000D8A  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3058  000D8C  ECE7  F011         	call	___lldiv	;wreg free
  3059  000D90  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  3060  000D94  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  3061                           
  3062                           ;LibLCDXC8.h: 217: centena=(a%1000)/100;
  3063  000D98  0EE8               	movlw	232
  3064  000D9A  6E0A               	movwf	___llmod@divisor^0,c
  3065  000D9C  0E03               	movlw	3
  3066  000D9E  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3067  000DA0  0E00               	movlw	0
  3068  000DA2  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3069  000DA4  0E00               	movlw	0
  3070  000DA6  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3071  000DA8  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3072  000DAC  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3073  000DB0  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3074  000DB4  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3075  000DB8  ECD8  F012         	call	___llmod	;wreg free
  3076  000DBC  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3077  000DC0  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3078  000DC4  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3079  000DC8  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3080  000DCC  0E64               	movlw	100
  3081  000DCE  6E13               	movwf	___lldiv@divisor^0,c
  3082  000DD0  0E00               	movlw	0
  3083  000DD2  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3084  000DD4  0E00               	movlw	0
  3085  000DD6  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3086  000DD8  0E00               	movlw	0
  3087  000DDA  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3088  000DDC  ECE7  F011         	call	___lldiv	;wreg free
  3089  000DE0  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  3090  000DE4  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  3091                           
  3092                           ;LibLCDXC8.h: 218: decena=(a%100)/10;
  3093  000DE8  0E64               	movlw	100
  3094  000DEA  6E0A               	movwf	___llmod@divisor^0,c
  3095  000DEC  0E00               	movlw	0
  3096  000DEE  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3097  000DF0  0E00               	movlw	0
  3098  000DF2  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3099  000DF4  0E00               	movlw	0
  3100  000DF6  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3101  000DF8  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3102  000DFC  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3103  000E00  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3104  000E04  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3105  000E08  ECD8  F012         	call	___llmod	;wreg free
  3106  000E0C  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3107  000E10  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3108  000E14  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3109  000E18  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3110  000E1C  0E0A               	movlw	10
  3111  000E1E  6E13               	movwf	___lldiv@divisor^0,c
  3112  000E20  0E00               	movlw	0
  3113  000E22  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3114  000E24  0E00               	movlw	0
  3115  000E26  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3116  000E28  0E00               	movlw	0
  3117  000E2A  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3118  000E2C  ECE7  F011         	call	___lldiv	;wreg free
  3119  000E30  500F               	movf	?___lldiv^0,w,c
  3120  000E32  6E39               	movwf	EscribeLCD_n32@decena^0,c
  3121                           
  3122                           ;LibLCDXC8.h: 219: unidad=a%10;
  3123  000E34  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3124  000E38  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3125  000E3C  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3126  000E40  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3127  000E44  0E0A               	movlw	10
  3128  000E46  6E0A               	movwf	___llmod@divisor^0,c
  3129  000E48  0E00               	movlw	0
  3130  000E4A  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3131  000E4C  0E00               	movlw	0
  3132  000E4E  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3133  000E50  0E00               	movlw	0
  3134  000E52  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3135  000E54  ECD8  F012         	call	___llmod	;wreg free
  3136  000E58  5006               	movf	?___llmod^0,w,c
  3137  000E5A  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  3138                           
  3139                           ;LibLCDXC8.h: 220: EscribeLCD_c(cienmil+48);
  3140  000E5C  502D               	movf	EscribeLCD_n32@cienmil^0,w,c
  3141  000E5E  0F30               	addlw	48
  3142  000E60  ECC3  F014         	call	_EscribeLCD_c
  3143                           
  3144                           ;LibLCDXC8.h: 221: EscribeLCD_c(diezmil+48);
  3145  000E64  5031               	movf	EscribeLCD_n32@diezmil^0,w,c
  3146  000E66  0F30               	addlw	48
  3147  000E68  ECC3  F014         	call	_EscribeLCD_c
  3148                           
  3149                           ;LibLCDXC8.h: 222: EscribeLCD_c(millar+48);
  3150  000E6C  5035               	movf	EscribeLCD_n32@millar^0,w,c
  3151  000E6E  0F30               	addlw	48
  3152  000E70  ECC3  F014         	call	_EscribeLCD_c
  3153                           
  3154                           ;LibLCDXC8.h: 223: EscribeLCD_c(centena+48);
  3155  000E74  5037               	movf	EscribeLCD_n32@centena^0,w,c
  3156  000E76  0F30               	addlw	48
  3157  000E78  ECC3  F014         	call	_EscribeLCD_c
  3158                           
  3159                           ;LibLCDXC8.h: 224: EscribeLCD_c(decena+48);
  3160  000E7C  5039               	movf	EscribeLCD_n32@decena^0,w,c
  3161  000E7E  0F30               	addlw	48
  3162  000E80  ECC3  F014         	call	_EscribeLCD_c
  3163                           
  3164                           ;LibLCDXC8.h: 225: EscribeLCD_c(unidad+48);
  3165  000E84  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  3166  000E86  0F30               	addlw	48
  3167  000E88  ECC3  F014         	call	_EscribeLCD_c
  3168                           
  3169                           ;LibLCDXC8.h: 226: break;
  3170  000E8C  0012               	return	
  3171  000E8E                     l2423:
  3172                           
  3173                           ; BSR set to: 0
  3174  000E8E  0E80               	movlw	128
  3175  000E90  6E0A               	movwf	___llmod@divisor^0,c
  3176  000E92  0E96               	movlw	150
  3177  000E94  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3178  000E96  0E98               	movlw	152
  3179  000E98  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3180  000E9A  0E00               	movlw	0
  3181  000E9C  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3182  000E9E  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3183  000EA2  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3184  000EA6  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3185  000EAA  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3186  000EAE  ECD8  F012         	call	___llmod	;wreg free
  3187  000EB2  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3188  000EB6  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3189  000EBA  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3190  000EBE  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3191  000EC2  0E40               	movlw	64
  3192  000EC4  6E13               	movwf	___lldiv@divisor^0,c
  3193  000EC6  0E42               	movlw	66
  3194  000EC8  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3195  000ECA  0E0F               	movlw	15
  3196  000ECC  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3197  000ECE  0E00               	movlw	0
  3198  000ED0  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3199  000ED2  ECE7  F011         	call	___lldiv	;wreg free
  3200  000ED6  C00F  F029         	movff	?___lldiv,EscribeLCD_n32@millon
  3201  000EDA  C010  F02A         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  3202  000EDE  C011  F02B         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  3203  000EE2  C012  F02C         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  3204                           
  3205                           ;LibLCDXC8.h: 229: cienmil=(a%1000000)/100000;
  3206  000EE6  0E40               	movlw	64
  3207  000EE8  6E0A               	movwf	___llmod@divisor^0,c
  3208  000EEA  0E42               	movlw	66
  3209  000EEC  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3210  000EEE  0E0F               	movlw	15
  3211  000EF0  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3212  000EF2  0E00               	movlw	0
  3213  000EF4  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3214  000EF6  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3215  000EFA  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3216  000EFE  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3217  000F02  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3218  000F06  ECD8  F012         	call	___llmod	;wreg free
  3219  000F0A  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3220  000F0E  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3221  000F12  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3222  000F16  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3223  000F1A  0EA0               	movlw	160
  3224  000F1C  6E13               	movwf	___lldiv@divisor^0,c
  3225  000F1E  0E86               	movlw	134
  3226  000F20  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3227  000F22  0E01               	movlw	1
  3228  000F24  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3229  000F26  0E00               	movlw	0
  3230  000F28  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3231  000F2A  ECE7  F011         	call	___lldiv	;wreg free
  3232  000F2E  C00F  F02D         	movff	?___lldiv,EscribeLCD_n32@cienmil
  3233  000F32  C010  F02E         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  3234  000F36  C011  F02F         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  3235  000F3A  C012  F030         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  3236                           
  3237                           ;LibLCDXC8.h: 230: diezmil=(a%100000)/10000;
  3238  000F3E  0EA0               	movlw	160
  3239  000F40  6E0A               	movwf	___llmod@divisor^0,c
  3240  000F42  0E86               	movlw	134
  3241  000F44  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3242  000F46  0E01               	movlw	1
  3243  000F48  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3244  000F4A  0E00               	movlw	0
  3245  000F4C  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3246  000F4E  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3247  000F52  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3248  000F56  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3249  000F5A  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3250  000F5E  ECD8  F012         	call	___llmod	;wreg free
  3251  000F62  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3252  000F66  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3253  000F6A  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3254  000F6E  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3255  000F72  0E10               	movlw	16
  3256  000F74  6E13               	movwf	___lldiv@divisor^0,c
  3257  000F76  0E27               	movlw	39
  3258  000F78  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3259  000F7A  0E00               	movlw	0
  3260  000F7C  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3261  000F7E  0E00               	movlw	0
  3262  000F80  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3263  000F82  ECE7  F011         	call	___lldiv	;wreg free
  3264  000F86  C00F  F031         	movff	?___lldiv,EscribeLCD_n32@diezmil
  3265  000F8A  C010  F032         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  3266  000F8E  C011  F033         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  3267  000F92  C012  F034         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  3268                           
  3269                           ;LibLCDXC8.h: 231: millar=(a%10000)/1000;
  3270  000F96  0E10               	movlw	16
  3271  000F98  6E0A               	movwf	___llmod@divisor^0,c
  3272  000F9A  0E27               	movlw	39
  3273  000F9C  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3274  000F9E  0E00               	movlw	0
  3275  000FA0  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3276  000FA2  0E00               	movlw	0
  3277  000FA4  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3278  000FA6  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3279  000FAA  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3280  000FAE  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3281  000FB2  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3282  000FB6  ECD8  F012         	call	___llmod	;wreg free
  3283  000FBA  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3284  000FBE  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3285  000FC2  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3286  000FC6  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3287  000FCA  0EE8               	movlw	232
  3288  000FCC  6E13               	movwf	___lldiv@divisor^0,c
  3289  000FCE  0E03               	movlw	3
  3290  000FD0  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3291  000FD2  0E00               	movlw	0
  3292  000FD4  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3293  000FD6  0E00               	movlw	0
  3294  000FD8  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3295  000FDA  ECE7  F011         	call	___lldiv	;wreg free
  3296  000FDE  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  3297  000FE2  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  3298                           
  3299                           ;LibLCDXC8.h: 232: centena=(a%1000)/100;
  3300  000FE6  0EE8               	movlw	232
  3301  000FE8  6E0A               	movwf	___llmod@divisor^0,c
  3302  000FEA  0E03               	movlw	3
  3303  000FEC  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3304  000FEE  0E00               	movlw	0
  3305  000FF0  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3306  000FF2  0E00               	movlw	0
  3307  000FF4  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3308  000FF6  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3309  000FFA  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3310  000FFE  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3311  001002  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3312  001006  ECD8  F012         	call	___llmod	;wreg free
  3313  00100A  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3314  00100E  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3315  001012  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3316  001016  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3317  00101A  0E64               	movlw	100
  3318  00101C  6E13               	movwf	___lldiv@divisor^0,c
  3319  00101E  0E00               	movlw	0
  3320  001020  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3321  001022  0E00               	movlw	0
  3322  001024  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3323  001026  0E00               	movlw	0
  3324  001028  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3325  00102A  ECE7  F011         	call	___lldiv	;wreg free
  3326  00102E  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  3327  001032  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  3328                           
  3329                           ;LibLCDXC8.h: 233: decena=(a%100)/10;
  3330  001036  0E64               	movlw	100
  3331  001038  6E0A               	movwf	___llmod@divisor^0,c
  3332  00103A  0E00               	movlw	0
  3333  00103C  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3334  00103E  0E00               	movlw	0
  3335  001040  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3336  001042  0E00               	movlw	0
  3337  001044  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3338  001046  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3339  00104A  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3340  00104E  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3341  001052  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3342  001056  ECD8  F012         	call	___llmod	;wreg free
  3343  00105A  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3344  00105E  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3345  001062  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3346  001066  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3347  00106A  0E0A               	movlw	10
  3348  00106C  6E13               	movwf	___lldiv@divisor^0,c
  3349  00106E  0E00               	movlw	0
  3350  001070  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3351  001072  0E00               	movlw	0
  3352  001074  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3353  001076  0E00               	movlw	0
  3354  001078  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3355  00107A  ECE7  F011         	call	___lldiv	;wreg free
  3356  00107E  500F               	movf	?___lldiv^0,w,c
  3357  001080  6E39               	movwf	EscribeLCD_n32@decena^0,c
  3358                           
  3359                           ;LibLCDXC8.h: 234: unidad=a%10;
  3360  001082  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3361  001086  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3362  00108A  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3363  00108E  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3364  001092  0E0A               	movlw	10
  3365  001094  6E0A               	movwf	___llmod@divisor^0,c
  3366  001096  0E00               	movlw	0
  3367  001098  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3368  00109A  0E00               	movlw	0
  3369  00109C  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3370  00109E  0E00               	movlw	0
  3371  0010A0  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3372  0010A2  ECD8  F012         	call	___llmod	;wreg free
  3373  0010A6  5006               	movf	?___llmod^0,w,c
  3374  0010A8  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  3375                           
  3376                           ;LibLCDXC8.h: 235: EscribeLCD_c(millon+48);
  3377  0010AA  5029               	movf	EscribeLCD_n32@millon^0,w,c
  3378  0010AC  0F30               	addlw	48
  3379  0010AE  ECC3  F014         	call	_EscribeLCD_c
  3380                           
  3381                           ;LibLCDXC8.h: 236: EscribeLCD_c(cienmil+48);
  3382  0010B2  502D               	movf	EscribeLCD_n32@cienmil^0,w,c
  3383  0010B4  0F30               	addlw	48
  3384  0010B6  ECC3  F014         	call	_EscribeLCD_c
  3385                           
  3386                           ;LibLCDXC8.h: 237: EscribeLCD_c(diezmil+48);
  3387  0010BA  5031               	movf	EscribeLCD_n32@diezmil^0,w,c
  3388  0010BC  0F30               	addlw	48
  3389  0010BE  ECC3  F014         	call	_EscribeLCD_c
  3390                           
  3391                           ;LibLCDXC8.h: 238: EscribeLCD_c(millar+48);
  3392  0010C2  5035               	movf	EscribeLCD_n32@millar^0,w,c
  3393  0010C4  0F30               	addlw	48
  3394  0010C6  ECC3  F014         	call	_EscribeLCD_c
  3395                           
  3396                           ;LibLCDXC8.h: 239: EscribeLCD_c(centena+48);
  3397  0010CA  5037               	movf	EscribeLCD_n32@centena^0,w,c
  3398  0010CC  0F30               	addlw	48
  3399  0010CE  ECC3  F014         	call	_EscribeLCD_c
  3400                           
  3401                           ;LibLCDXC8.h: 240: EscribeLCD_c(decena+48);
  3402  0010D2  5039               	movf	EscribeLCD_n32@decena^0,w,c
  3403  0010D4  0F30               	addlw	48
  3404  0010D6  ECC3  F014         	call	_EscribeLCD_c
  3405                           
  3406                           ;LibLCDXC8.h: 241: EscribeLCD_c(unidad+48);
  3407  0010DA  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  3408  0010DC  0F30               	addlw	48
  3409  0010DE  ECC3  F014         	call	_EscribeLCD_c
  3410                           
  3411                           ;LibLCDXC8.h: 242: break;
  3412  0010E2  0012               	return	
  3413  0010E4                     l2425:
  3414                           
  3415                           ; BSR set to: 0
  3416  0010E4  0E00               	movlw	0
  3417  0010E6  6E0A               	movwf	___llmod@divisor^0,c
  3418  0010E8  0EE1               	movlw	225
  3419  0010EA  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3420  0010EC  0EF5               	movlw	245
  3421  0010EE  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3422  0010F0  0E05               	movlw	5
  3423  0010F2  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3424  0010F4  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3425  0010F8  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3426  0010FC  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3427  001100  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3428  001104  ECD8  F012         	call	___llmod	;wreg free
  3429  001108  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3430  00110C  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3431  001110  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3432  001114  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3433  001118  0E80               	movlw	128
  3434  00111A  6E13               	movwf	___lldiv@divisor^0,c
  3435  00111C  0E96               	movlw	150
  3436  00111E  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3437  001120  0E98               	movlw	152
  3438  001122  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3439  001124  0E00               	movlw	0
  3440  001126  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3441  001128  ECE7  F011         	call	___lldiv	;wreg free
  3442  00112C  C00F  F025         	movff	?___lldiv,EscribeLCD_n32@diezmillon
  3443  001130  C010  F026         	movff	?___lldiv+1,EscribeLCD_n32@diezmillon+1
  3444  001134  C011  F027         	movff	?___lldiv+2,EscribeLCD_n32@diezmillon+2
  3445  001138  C012  F028         	movff	?___lldiv+3,EscribeLCD_n32@diezmillon+3
  3446                           
  3447                           ;LibLCDXC8.h: 246: millon=(a%10000000)/1000000;
  3448  00113C  0E80               	movlw	128
  3449  00113E  6E0A               	movwf	___llmod@divisor^0,c
  3450  001140  0E96               	movlw	150
  3451  001142  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3452  001144  0E98               	movlw	152
  3453  001146  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3454  001148  0E00               	movlw	0
  3455  00114A  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3456  00114C  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3457  001150  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3458  001154  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3459  001158  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3460  00115C  ECD8  F012         	call	___llmod	;wreg free
  3461  001160  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3462  001164  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3463  001168  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3464  00116C  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3465  001170  0E40               	movlw	64
  3466  001172  6E13               	movwf	___lldiv@divisor^0,c
  3467  001174  0E42               	movlw	66
  3468  001176  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3469  001178  0E0F               	movlw	15
  3470  00117A  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3471  00117C  0E00               	movlw	0
  3472  00117E  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3473  001180  ECE7  F011         	call	___lldiv	;wreg free
  3474  001184  C00F  F029         	movff	?___lldiv,EscribeLCD_n32@millon
  3475  001188  C010  F02A         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  3476  00118C  C011  F02B         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  3477  001190  C012  F02C         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  3478                           
  3479                           ;LibLCDXC8.h: 247: cienmil=(a%1000000)/100000;
  3480  001194  0E40               	movlw	64
  3481  001196  6E0A               	movwf	___llmod@divisor^0,c
  3482  001198  0E42               	movlw	66
  3483  00119A  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3484  00119C  0E0F               	movlw	15
  3485  00119E  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3486  0011A0  0E00               	movlw	0
  3487  0011A2  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3488  0011A4  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3489  0011A8  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3490  0011AC  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3491  0011B0  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3492  0011B4  ECD8  F012         	call	___llmod	;wreg free
  3493  0011B8  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3494  0011BC  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3495  0011C0  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3496  0011C4  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3497  0011C8  0EA0               	movlw	160
  3498  0011CA  6E13               	movwf	___lldiv@divisor^0,c
  3499  0011CC  0E86               	movlw	134
  3500  0011CE  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3501  0011D0  0E01               	movlw	1
  3502  0011D2  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3503  0011D4  0E00               	movlw	0
  3504  0011D6  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3505  0011D8  ECE7  F011         	call	___lldiv	;wreg free
  3506  0011DC  C00F  F02D         	movff	?___lldiv,EscribeLCD_n32@cienmil
  3507  0011E0  C010  F02E         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  3508  0011E4  C011  F02F         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  3509  0011E8  C012  F030         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  3510                           
  3511                           ;LibLCDXC8.h: 248: diezmil=(a%100000)/10000;
  3512  0011EC  0EA0               	movlw	160
  3513  0011EE  6E0A               	movwf	___llmod@divisor^0,c
  3514  0011F0  0E86               	movlw	134
  3515  0011F2  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3516  0011F4  0E01               	movlw	1
  3517  0011F6  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3518  0011F8  0E00               	movlw	0
  3519  0011FA  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3520  0011FC  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3521  001200  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3522  001204  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3523  001208  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3524  00120C  ECD8  F012         	call	___llmod	;wreg free
  3525  001210  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3526  001214  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3527  001218  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3528  00121C  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3529  001220  0E10               	movlw	16
  3530  001222  6E13               	movwf	___lldiv@divisor^0,c
  3531  001224  0E27               	movlw	39
  3532  001226  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3533  001228  0E00               	movlw	0
  3534  00122A  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3535  00122C  0E00               	movlw	0
  3536  00122E  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3537  001230  ECE7  F011         	call	___lldiv	;wreg free
  3538  001234  C00F  F031         	movff	?___lldiv,EscribeLCD_n32@diezmil
  3539  001238  C010  F032         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  3540  00123C  C011  F033         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  3541  001240  C012  F034         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  3542                           
  3543                           ;LibLCDXC8.h: 249: millar=(a%10000)/1000;
  3544  001244  0E10               	movlw	16
  3545  001246  6E0A               	movwf	___llmod@divisor^0,c
  3546  001248  0E27               	movlw	39
  3547  00124A  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3548  00124C  0E00               	movlw	0
  3549  00124E  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3550  001250  0E00               	movlw	0
  3551  001252  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3552  001254  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3553  001258  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3554  00125C  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3555  001260  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3556  001264  ECD8  F012         	call	___llmod	;wreg free
  3557  001268  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3558  00126C  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3559  001270  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3560  001274  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3561  001278  0EE8               	movlw	232
  3562  00127A  6E13               	movwf	___lldiv@divisor^0,c
  3563  00127C  0E03               	movlw	3
  3564  00127E  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3565  001280  0E00               	movlw	0
  3566  001282  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3567  001284  0E00               	movlw	0
  3568  001286  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3569  001288  ECE7  F011         	call	___lldiv	;wreg free
  3570  00128C  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  3571  001290  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  3572                           
  3573                           ;LibLCDXC8.h: 250: centena=(a%1000)/100;
  3574  001294  0EE8               	movlw	232
  3575  001296  6E0A               	movwf	___llmod@divisor^0,c
  3576  001298  0E03               	movlw	3
  3577  00129A  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3578  00129C  0E00               	movlw	0
  3579  00129E  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3580  0012A0  0E00               	movlw	0
  3581  0012A2  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3582  0012A4  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3583  0012A8  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3584  0012AC  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3585  0012B0  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3586  0012B4  ECD8  F012         	call	___llmod	;wreg free
  3587  0012B8  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3588  0012BC  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3589  0012C0  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3590  0012C4  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3591  0012C8  0E64               	movlw	100
  3592  0012CA  6E13               	movwf	___lldiv@divisor^0,c
  3593  0012CC  0E00               	movlw	0
  3594  0012CE  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3595  0012D0  0E00               	movlw	0
  3596  0012D2  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3597  0012D4  0E00               	movlw	0
  3598  0012D6  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3599  0012D8  ECE7  F011         	call	___lldiv	;wreg free
  3600  0012DC  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  3601  0012E0  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  3602                           
  3603                           ;LibLCDXC8.h: 251: decena=(a%100)/10;
  3604  0012E4  0E64               	movlw	100
  3605  0012E6  6E0A               	movwf	___llmod@divisor^0,c
  3606  0012E8  0E00               	movlw	0
  3607  0012EA  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3608  0012EC  0E00               	movlw	0
  3609  0012EE  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3610  0012F0  0E00               	movlw	0
  3611  0012F2  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3612  0012F4  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3613  0012F8  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3614  0012FC  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3615  001300  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3616  001304  ECD8  F012         	call	___llmod	;wreg free
  3617  001308  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3618  00130C  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3619  001310  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3620  001314  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3621  001318  0E0A               	movlw	10
  3622  00131A  6E13               	movwf	___lldiv@divisor^0,c
  3623  00131C  0E00               	movlw	0
  3624  00131E  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3625  001320  0E00               	movlw	0
  3626  001322  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3627  001324  0E00               	movlw	0
  3628  001326  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3629  001328  ECE7  F011         	call	___lldiv	;wreg free
  3630  00132C  500F               	movf	?___lldiv^0,w,c
  3631  00132E  6E39               	movwf	EscribeLCD_n32@decena^0,c
  3632                           
  3633                           ;LibLCDXC8.h: 252: unidad=a%10;
  3634  001330  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3635  001334  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3636  001338  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3637  00133C  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3638  001340  0E0A               	movlw	10
  3639  001342  6E0A               	movwf	___llmod@divisor^0,c
  3640  001344  0E00               	movlw	0
  3641  001346  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3642  001348  0E00               	movlw	0
  3643  00134A  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3644  00134C  0E00               	movlw	0
  3645  00134E  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3646  001350  ECD8  F012         	call	___llmod	;wreg free
  3647  001354  5006               	movf	?___llmod^0,w,c
  3648  001356  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  3649                           
  3650                           ;LibLCDXC8.h: 253: EscribeLCD_c(diezmillon+48);
  3651  001358  5025               	movf	EscribeLCD_n32@diezmillon^0,w,c
  3652  00135A  0F30               	addlw	48
  3653  00135C  ECC3  F014         	call	_EscribeLCD_c
  3654                           
  3655                           ;LibLCDXC8.h: 254: EscribeLCD_c(millon+48);
  3656  001360  5029               	movf	EscribeLCD_n32@millon^0,w,c
  3657  001362  0F30               	addlw	48
  3658  001364  ECC3  F014         	call	_EscribeLCD_c
  3659                           
  3660                           ;LibLCDXC8.h: 255: EscribeLCD_c(cienmil+48);
  3661  001368  502D               	movf	EscribeLCD_n32@cienmil^0,w,c
  3662  00136A  0F30               	addlw	48
  3663  00136C  ECC3  F014         	call	_EscribeLCD_c
  3664                           
  3665                           ;LibLCDXC8.h: 256: EscribeLCD_c(diezmil+48);
  3666  001370  5031               	movf	EscribeLCD_n32@diezmil^0,w,c
  3667  001372  0F30               	addlw	48
  3668  001374  ECC3  F014         	call	_EscribeLCD_c
  3669                           
  3670                           ;LibLCDXC8.h: 257: EscribeLCD_c(millar+48);
  3671  001378  5035               	movf	EscribeLCD_n32@millar^0,w,c
  3672  00137A  0F30               	addlw	48
  3673  00137C  ECC3  F014         	call	_EscribeLCD_c
  3674                           
  3675                           ;LibLCDXC8.h: 258: EscribeLCD_c(centena+48);
  3676  001380  5037               	movf	EscribeLCD_n32@centena^0,w,c
  3677  001382  0F30               	addlw	48
  3678  001384  ECC3  F014         	call	_EscribeLCD_c
  3679                           
  3680                           ;LibLCDXC8.h: 259: EscribeLCD_c(decena+48);
  3681  001388  5039               	movf	EscribeLCD_n32@decena^0,w,c
  3682  00138A  0F30               	addlw	48
  3683  00138C  ECC3  F014         	call	_EscribeLCD_c
  3684                           
  3685                           ;LibLCDXC8.h: 260: EscribeLCD_c(unidad+48);
  3686  001390  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  3687  001392  0F30               	addlw	48
  3688  001394  ECC3  F014         	call	_EscribeLCD_c
  3689                           
  3690                           ;LibLCDXC8.h: 261: break;
  3691  001398  0012               	return	
  3692  00139A                     l2427:
  3693                           
  3694                           ; BSR set to: 0
  3695  00139A  0E00               	movlw	0
  3696  00139C  6E0A               	movwf	___llmod@divisor^0,c
  3697  00139E  0ECA               	movlw	202
  3698  0013A0  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3699  0013A2  0E9A               	movlw	154
  3700  0013A4  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3701  0013A6  0E3B               	movlw	59
  3702  0013A8  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3703  0013AA  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3704  0013AE  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3705  0013B2  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3706  0013B6  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3707  0013BA  ECD8  F012         	call	___llmod	;wreg free
  3708  0013BE  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3709  0013C2  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3710  0013C6  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3711  0013CA  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3712  0013CE  0E00               	movlw	0
  3713  0013D0  6E13               	movwf	___lldiv@divisor^0,c
  3714  0013D2  0EE1               	movlw	225
  3715  0013D4  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3716  0013D6  0EF5               	movlw	245
  3717  0013D8  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3718  0013DA  0E05               	movlw	5
  3719  0013DC  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3720  0013DE  ECE7  F011         	call	___lldiv	;wreg free
  3721  0013E2  C00F  F021         	movff	?___lldiv,EscribeLCD_n32@cienmillon
  3722  0013E6  C010  F022         	movff	?___lldiv+1,EscribeLCD_n32@cienmillon+1
  3723  0013EA  C011  F023         	movff	?___lldiv+2,EscribeLCD_n32@cienmillon+2
  3724  0013EE  C012  F024         	movff	?___lldiv+3,EscribeLCD_n32@cienmillon+3
  3725                           
  3726                           ;LibLCDXC8.h: 264: diezmillon=(a%100000000)/10000000;
  3727  0013F2  0E00               	movlw	0
  3728  0013F4  6E0A               	movwf	___llmod@divisor^0,c
  3729  0013F6  0EE1               	movlw	225
  3730  0013F8  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3731  0013FA  0EF5               	movlw	245
  3732  0013FC  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3733  0013FE  0E05               	movlw	5
  3734  001400  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3735  001402  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3736  001406  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3737  00140A  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3738  00140E  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3739  001412  ECD8  F012         	call	___llmod	;wreg free
  3740  001416  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3741  00141A  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3742  00141E  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3743  001422  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3744  001426  0E80               	movlw	128
  3745  001428  6E13               	movwf	___lldiv@divisor^0,c
  3746  00142A  0E96               	movlw	150
  3747  00142C  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3748  00142E  0E98               	movlw	152
  3749  001430  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3750  001432  0E00               	movlw	0
  3751  001434  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3752  001436  ECE7  F011         	call	___lldiv	;wreg free
  3753  00143A  C00F  F025         	movff	?___lldiv,EscribeLCD_n32@diezmillon
  3754  00143E  C010  F026         	movff	?___lldiv+1,EscribeLCD_n32@diezmillon+1
  3755  001442  C011  F027         	movff	?___lldiv+2,EscribeLCD_n32@diezmillon+2
  3756  001446  C012  F028         	movff	?___lldiv+3,EscribeLCD_n32@diezmillon+3
  3757                           
  3758                           ;LibLCDXC8.h: 265: millon=(a%10000000)/1000000;
  3759  00144A  0E80               	movlw	128
  3760  00144C  6E0A               	movwf	___llmod@divisor^0,c
  3761  00144E  0E96               	movlw	150
  3762  001450  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3763  001452  0E98               	movlw	152
  3764  001454  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3765  001456  0E00               	movlw	0
  3766  001458  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3767  00145A  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3768  00145E  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3769  001462  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3770  001466  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3771  00146A  ECD8  F012         	call	___llmod	;wreg free
  3772  00146E  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3773  001472  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3774  001476  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3775  00147A  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3776  00147E  0E40               	movlw	64
  3777  001480  6E13               	movwf	___lldiv@divisor^0,c
  3778  001482  0E42               	movlw	66
  3779  001484  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3780  001486  0E0F               	movlw	15
  3781  001488  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3782  00148A  0E00               	movlw	0
  3783  00148C  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3784  00148E  ECE7  F011         	call	___lldiv	;wreg free
  3785  001492  C00F  F029         	movff	?___lldiv,EscribeLCD_n32@millon
  3786  001496  C010  F02A         	movff	?___lldiv+1,EscribeLCD_n32@millon+1
  3787  00149A  C011  F02B         	movff	?___lldiv+2,EscribeLCD_n32@millon+2
  3788  00149E  C012  F02C         	movff	?___lldiv+3,EscribeLCD_n32@millon+3
  3789                           
  3790                           ;LibLCDXC8.h: 266: cienmil=(a%1000000)/100000;
  3791  0014A2  0E40               	movlw	64
  3792  0014A4  6E0A               	movwf	___llmod@divisor^0,c
  3793  0014A6  0E42               	movlw	66
  3794  0014A8  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3795  0014AA  0E0F               	movlw	15
  3796  0014AC  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3797  0014AE  0E00               	movlw	0
  3798  0014B0  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3799  0014B2  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3800  0014B6  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3801  0014BA  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3802  0014BE  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3803  0014C2  ECD8  F012         	call	___llmod	;wreg free
  3804  0014C6  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3805  0014CA  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3806  0014CE  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3807  0014D2  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3808  0014D6  0EA0               	movlw	160
  3809  0014D8  6E13               	movwf	___lldiv@divisor^0,c
  3810  0014DA  0E86               	movlw	134
  3811  0014DC  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3812  0014DE  0E01               	movlw	1
  3813  0014E0  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3814  0014E2  0E00               	movlw	0
  3815  0014E4  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3816  0014E6  ECE7  F011         	call	___lldiv	;wreg free
  3817  0014EA  C00F  F02D         	movff	?___lldiv,EscribeLCD_n32@cienmil
  3818  0014EE  C010  F02E         	movff	?___lldiv+1,EscribeLCD_n32@cienmil+1
  3819  0014F2  C011  F02F         	movff	?___lldiv+2,EscribeLCD_n32@cienmil+2
  3820  0014F6  C012  F030         	movff	?___lldiv+3,EscribeLCD_n32@cienmil+3
  3821                           
  3822                           ;LibLCDXC8.h: 267: diezmil=(a%100000)/10000;
  3823  0014FA  0EA0               	movlw	160
  3824  0014FC  6E0A               	movwf	___llmod@divisor^0,c
  3825  0014FE  0E86               	movlw	134
  3826  001500  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3827  001502  0E01               	movlw	1
  3828  001504  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3829  001506  0E00               	movlw	0
  3830  001508  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3831  00150A  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3832  00150E  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3833  001512  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3834  001516  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3835  00151A  ECD8  F012         	call	___llmod	;wreg free
  3836  00151E  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3837  001522  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3838  001526  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3839  00152A  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3840  00152E  0E10               	movlw	16
  3841  001530  6E13               	movwf	___lldiv@divisor^0,c
  3842  001532  0E27               	movlw	39
  3843  001534  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3844  001536  0E00               	movlw	0
  3845  001538  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3846  00153A  0E00               	movlw	0
  3847  00153C  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3848  00153E  ECE7  F011         	call	___lldiv	;wreg free
  3849  001542  C00F  F031         	movff	?___lldiv,EscribeLCD_n32@diezmil
  3850  001546  C010  F032         	movff	?___lldiv+1,EscribeLCD_n32@diezmil+1
  3851  00154A  C011  F033         	movff	?___lldiv+2,EscribeLCD_n32@diezmil+2
  3852  00154E  C012  F034         	movff	?___lldiv+3,EscribeLCD_n32@diezmil+3
  3853                           
  3854                           ;LibLCDXC8.h: 268: millar=(a%10000)/1000;
  3855  001552  0E10               	movlw	16
  3856  001554  6E0A               	movwf	___llmod@divisor^0,c
  3857  001556  0E27               	movlw	39
  3858  001558  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3859  00155A  0E00               	movlw	0
  3860  00155C  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3861  00155E  0E00               	movlw	0
  3862  001560  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3863  001562  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3864  001566  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3865  00156A  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3866  00156E  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3867  001572  ECD8  F012         	call	___llmod	;wreg free
  3868  001576  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3869  00157A  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3870  00157E  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3871  001582  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3872  001586  0EE8               	movlw	232
  3873  001588  6E13               	movwf	___lldiv@divisor^0,c
  3874  00158A  0E03               	movlw	3
  3875  00158C  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3876  00158E  0E00               	movlw	0
  3877  001590  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3878  001592  0E00               	movlw	0
  3879  001594  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3880  001596  ECE7  F011         	call	___lldiv	;wreg free
  3881  00159A  C00F  F035         	movff	?___lldiv,EscribeLCD_n32@millar
  3882  00159E  C010  F036         	movff	?___lldiv+1,EscribeLCD_n32@millar+1
  3883                           
  3884                           ;LibLCDXC8.h: 269: centena=(a%1000)/100;
  3885  0015A2  0EE8               	movlw	232
  3886  0015A4  6E0A               	movwf	___llmod@divisor^0,c
  3887  0015A6  0E03               	movlw	3
  3888  0015A8  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3889  0015AA  0E00               	movlw	0
  3890  0015AC  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3891  0015AE  0E00               	movlw	0
  3892  0015B0  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3893  0015B2  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3894  0015B6  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3895  0015BA  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3896  0015BE  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3897  0015C2  ECD8  F012         	call	___llmod	;wreg free
  3898  0015C6  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3899  0015CA  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3900  0015CE  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3901  0015D2  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3902  0015D6  0E64               	movlw	100
  3903  0015D8  6E13               	movwf	___lldiv@divisor^0,c
  3904  0015DA  0E00               	movlw	0
  3905  0015DC  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3906  0015DE  0E00               	movlw	0
  3907  0015E0  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3908  0015E2  0E00               	movlw	0
  3909  0015E4  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3910  0015E6  ECE7  F011         	call	___lldiv	;wreg free
  3911  0015EA  C00F  F037         	movff	?___lldiv,EscribeLCD_n32@centena
  3912  0015EE  C010  F038         	movff	?___lldiv+1,EscribeLCD_n32@centena+1
  3913                           
  3914                           ;LibLCDXC8.h: 270: decena=(a%100)/10;
  3915  0015F2  0E64               	movlw	100
  3916  0015F4  6E0A               	movwf	___llmod@divisor^0,c
  3917  0015F6  0E00               	movlw	0
  3918  0015F8  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3919  0015FA  0E00               	movlw	0
  3920  0015FC  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3921  0015FE  0E00               	movlw	0
  3922  001600  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3923  001602  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3924  001606  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3925  00160A  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3926  00160E  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3927  001612  ECD8  F012         	call	___llmod	;wreg free
  3928  001616  C006  F00F         	movff	?___llmod,___lldiv@dividend
  3929  00161A  C007  F010         	movff	?___llmod+1,___lldiv@dividend+1
  3930  00161E  C008  F011         	movff	?___llmod+2,___lldiv@dividend+2
  3931  001622  C009  F012         	movff	?___llmod+3,___lldiv@dividend+3
  3932  001626  0E0A               	movlw	10
  3933  001628  6E13               	movwf	___lldiv@divisor^0,c
  3934  00162A  0E00               	movlw	0
  3935  00162C  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3936  00162E  0E00               	movlw	0
  3937  001630  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3938  001632  0E00               	movlw	0
  3939  001634  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3940  001636  ECE7  F011         	call	___lldiv	;wreg free
  3941  00163A  500F               	movf	?___lldiv^0,w,c
  3942  00163C  6E39               	movwf	EscribeLCD_n32@decena^0,c
  3943                           
  3944                           ;LibLCDXC8.h: 271: unidad=a%10;
  3945  00163E  C01C  F006         	movff	EscribeLCD_n32@a,___llmod@dividend
  3946  001642  C01D  F007         	movff	EscribeLCD_n32@a+1,___llmod@dividend+1
  3947  001646  C01E  F008         	movff	EscribeLCD_n32@a+2,___llmod@dividend+2
  3948  00164A  C01F  F009         	movff	EscribeLCD_n32@a+3,___llmod@dividend+3
  3949  00164E  0E0A               	movlw	10
  3950  001650  6E0A               	movwf	___llmod@divisor^0,c
  3951  001652  0E00               	movlw	0
  3952  001654  6E0B               	movwf	(___llmod@divisor+1)^0,c
  3953  001656  0E00               	movlw	0
  3954  001658  6E0C               	movwf	(___llmod@divisor+2)^0,c
  3955  00165A  0E00               	movlw	0
  3956  00165C  6E0D               	movwf	(___llmod@divisor+3)^0,c
  3957  00165E  ECD8  F012         	call	___llmod	;wreg free
  3958  001662  5006               	movf	?___llmod^0,w,c
  3959  001664  6E3A               	movwf	EscribeLCD_n32@unidad^0,c
  3960                           
  3961                           ;LibLCDXC8.h: 272: EscribeLCD_c(cienmillon+48);
  3962  001666  5021               	movf	EscribeLCD_n32@cienmillon^0,w,c
  3963  001668  0F30               	addlw	48
  3964  00166A  ECC3  F014         	call	_EscribeLCD_c
  3965                           
  3966                           ;LibLCDXC8.h: 273: EscribeLCD_c(diezmillon+48);
  3967  00166E  5025               	movf	EscribeLCD_n32@diezmillon^0,w,c
  3968  001670  0F30               	addlw	48
  3969  001672  ECC3  F014         	call	_EscribeLCD_c
  3970                           
  3971                           ;LibLCDXC8.h: 274: EscribeLCD_c(millon+48);
  3972  001676  5029               	movf	EscribeLCD_n32@millon^0,w,c
  3973  001678  0F30               	addlw	48
  3974  00167A  ECC3  F014         	call	_EscribeLCD_c
  3975                           
  3976                           ;LibLCDXC8.h: 275: EscribeLCD_c(cienmil+48);
  3977  00167E  502D               	movf	EscribeLCD_n32@cienmil^0,w,c
  3978  001680  0F30               	addlw	48
  3979  001682  ECC3  F014         	call	_EscribeLCD_c
  3980                           
  3981                           ;LibLCDXC8.h: 276: EscribeLCD_c(diezmil+48);
  3982  001686  5031               	movf	EscribeLCD_n32@diezmil^0,w,c
  3983  001688  0F30               	addlw	48
  3984  00168A  ECC3  F014         	call	_EscribeLCD_c
  3985                           
  3986                           ;LibLCDXC8.h: 277: EscribeLCD_c(millar+48);
  3987  00168E  5035               	movf	EscribeLCD_n32@millar^0,w,c
  3988  001690  0F30               	addlw	48
  3989  001692  ECC3  F014         	call	_EscribeLCD_c
  3990                           
  3991                           ;LibLCDXC8.h: 278: EscribeLCD_c(centena+48);
  3992  001696  5037               	movf	EscribeLCD_n32@centena^0,w,c
  3993  001698  0F30               	addlw	48
  3994  00169A  ECC3  F014         	call	_EscribeLCD_c
  3995                           
  3996                           ;LibLCDXC8.h: 279: EscribeLCD_c(decena+48);
  3997  00169E  5039               	movf	EscribeLCD_n32@decena^0,w,c
  3998  0016A0  0F30               	addlw	48
  3999  0016A2  ECC3  F014         	call	_EscribeLCD_c
  4000                           
  4001                           ;LibLCDXC8.h: 280: EscribeLCD_c(unidad+48);
  4002  0016A6  503A               	movf	EscribeLCD_n32@unidad^0,w,c
  4003  0016A8  0F30               	addlw	48
  4004  0016AA  ECC3  F014         	call	_EscribeLCD_c
  4005                           
  4006                           ;LibLCDXC8.h: 281: break;
  4007  0016AE  0012               	return	
  4008  0016B0                     l2431:
  4009                           
  4010                           ; BSR set to: 0
  4011  0016B0  5020               	movf	EscribeLCD_n32@b^0,w,c
  4012                           
  4013                           ; Switch size 1, requested type "simple"
  4014                           ; Number of cases is 9, Range of values is 1 to 9
  4015                           ; switch strategies available:
  4016                           ; Name         Instructions Cycles
  4017                           ; simple_byte           28    15 (average)
  4018                           ;	Chosen strategy is simple_byte
  4019  0016B2  0A01               	xorlw	1	; case 1
  4020  0016B4  B4D8               	btfsc	status,2,c
  4021  0016B6  EF1B  F004         	goto	l2411
  4022  0016BA  0A03               	xorlw	3	; case 2
  4023  0016BC  B4D8               	btfsc	status,2,c
  4024  0016BE  EF34  F004         	goto	l2413
  4025  0016C2  0A01               	xorlw	1	; case 3
  4026  0016C4  B4D8               	btfsc	status,2,c
  4027  0016C6  EF77  F004         	goto	l2415
  4028  0016CA  0A07               	xorlw	7	; case 4
  4029  0016CC  B4D8               	btfsc	status,2,c
  4030  0016CE  EFE6  F004         	goto	l2417
  4031  0016D2  0A01               	xorlw	1	; case 5
  4032  0016D4  B4D8               	btfsc	status,2,c
  4033  0016D6  EF81  F005         	goto	l2419
  4034  0016DA  0A03               	xorlw	3	; case 6
  4035  0016DC  B4D8               	btfsc	status,2,c
  4036  0016DE  EF4C  F006         	goto	l2421
  4037  0016E2  0A01               	xorlw	1	; case 7
  4038  0016E4  B4D8               	btfsc	status,2,c
  4039  0016E6  EF47  F007         	goto	l2423
  4040  0016EA  0A0F               	xorlw	15	; case 8
  4041  0016EC  B4D8               	btfsc	status,2,c
  4042  0016EE  D4FA               	goto	l2425
  4043  0016F0  0A01               	xorlw	1	; case 9
  4044  0016F2  A4D8               	btfss	status,2,c
  4045  0016F4  0012               	return	
  4046  0016F6  D651               	goto	l2427
  4047  0016F8                     __end_of_EscribeLCD_n32:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function ___llmod *****************
  4051 ;; Defined at:
  4052 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  dividend        4    5[COMRAM] unsigned long 
  4055 ;;  divisor         4    9[COMRAM] unsigned long 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  counter         1   13[COMRAM] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  4    5[COMRAM] unsigned long 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4067 ;;      Params:         8       0       0       0       0       0       0       0       0
  4068 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:        9 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 3
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_EscribeLCD_n32
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text10
  4082  0025B0                     __ptext10:
  4083                           	callstack 0
  4084  0025B0                     ___llmod:
  4085                           	callstack 25
  4086                           
  4087                           ;incstack = 0
  4088  0025B0  500A               	movf	___llmod@divisor^0,w,c
  4089  0025B2  100B               	iorwf	(___llmod@divisor+1)^0,w,c
  4090  0025B4  100C               	iorwf	(___llmod@divisor+2)^0,w,c
  4091  0025B6  100D               	iorwf	(___llmod@divisor+3)^0,w,c
  4092  0025B8  B4D8               	btfsc	status,2,c
  4093  0025BA  D024               	goto	l742
  4094  0025BC  0E01               	movlw	1
  4095  0025BE  6E0E               	movwf	___llmod@counter^0,c
  4096  0025C0  D006               	goto	l2391
  4097  0025C2                     l2389:
  4098  0025C2  90D8               	bcf	status,0,c
  4099  0025C4  360A               	rlcf	___llmod@divisor^0,f,c
  4100  0025C6  360B               	rlcf	(___llmod@divisor+1)^0,f,c
  4101  0025C8  360C               	rlcf	(___llmod@divisor+2)^0,f,c
  4102  0025CA  360D               	rlcf	(___llmod@divisor+3)^0,f,c
  4103  0025CC  2A0E               	incf	___llmod@counter^0,f,c
  4104  0025CE                     l2391:
  4105  0025CE  AE0D               	btfss	(___llmod@divisor+3)^0,7,c
  4106  0025D0  D7F8               	goto	l2389
  4107  0025D2                     u1690:
  4108  0025D2  500A               	movf	___llmod@divisor^0,w,c
  4109  0025D4  5C06               	subwf	___llmod@dividend^0,w,c
  4110  0025D6  500B               	movf	(___llmod@divisor+1)^0,w,c
  4111  0025D8  5807               	subwfb	(___llmod@dividend+1)^0,w,c
  4112  0025DA  500C               	movf	(___llmod@divisor+2)^0,w,c
  4113  0025DC  5808               	subwfb	(___llmod@dividend+2)^0,w,c
  4114  0025DE  500D               	movf	(___llmod@divisor+3)^0,w,c
  4115  0025E0  5809               	subwfb	(___llmod@dividend+3)^0,w,c
  4116  0025E2  A0D8               	btfss	status,0,c
  4117  0025E4  D008               	goto	l2397
  4118  0025E6  500A               	movf	___llmod@divisor^0,w,c
  4119  0025E8  5E06               	subwf	___llmod@dividend^0,f,c
  4120  0025EA  500B               	movf	(___llmod@divisor+1)^0,w,c
  4121  0025EC  5A07               	subwfb	(___llmod@dividend+1)^0,f,c
  4122  0025EE  500C               	movf	(___llmod@divisor+2)^0,w,c
  4123  0025F0  5A08               	subwfb	(___llmod@dividend+2)^0,f,c
  4124  0025F2  500D               	movf	(___llmod@divisor+3)^0,w,c
  4125  0025F4  5A09               	subwfb	(___llmod@dividend+3)^0,f,c
  4126  0025F6                     l2397:
  4127  0025F6  90D8               	bcf	status,0,c
  4128  0025F8  320D               	rrcf	(___llmod@divisor+3)^0,f,c
  4129  0025FA  320C               	rrcf	(___llmod@divisor+2)^0,f,c
  4130  0025FC  320B               	rrcf	(___llmod@divisor+1)^0,f,c
  4131  0025FE  320A               	rrcf	___llmod@divisor^0,f,c
  4132  002600  2E0E               	decfsz	___llmod@counter^0,f,c
  4133  002602  D7E7               	goto	u1690
  4134  002604                     l742:
  4135  002604  C006  F006         	movff	___llmod@dividend,?___llmod
  4136  002608  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
  4137  00260C  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
  4138  002610  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
  4139  002614  0012               	return		;funcret
  4140  002616                     __end_of___llmod:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function ___lldiv *****************
  4144 ;; Defined at:
  4145 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  dividend        4   14[COMRAM] unsigned long 
  4148 ;;  divisor         4   18[COMRAM] unsigned long 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  quotient        4   22[COMRAM] unsigned long 
  4151 ;;  counter         1   26[COMRAM] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  4   14[COMRAM] unsigned long 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         8       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4164 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:       13 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 3
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_EscribeLCD_n32
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text11
  4176  0023CE                     __ptext11:
  4177                           	callstack 0
  4178  0023CE                     ___lldiv:
  4179                           	callstack 25
  4180                           
  4181                           ;incstack = 0
  4182  0023CE  0E00               	movlw	0
  4183  0023D0  6E17               	movwf	___lldiv@quotient^0,c
  4184  0023D2  0E00               	movlw	0
  4185  0023D4  6E18               	movwf	(___lldiv@quotient+1)^0,c
  4186  0023D6  0E00               	movlw	0
  4187  0023D8  6E19               	movwf	(___lldiv@quotient+2)^0,c
  4188  0023DA  0E00               	movlw	0
  4189  0023DC  6E1A               	movwf	(___lldiv@quotient+3)^0,c
  4190  0023DE  5013               	movf	___lldiv@divisor^0,w,c
  4191  0023E0  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
  4192  0023E2  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
  4193  0023E4  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
  4194  0023E6  B4D8               	btfsc	status,2,c
  4195  0023E8  D02A               	goto	l361
  4196  0023EA  0E01               	movlw	1
  4197  0023EC  6E1B               	movwf	___lldiv@counter^0,c
  4198  0023EE  D006               	goto	l2241
  4199  0023F0                     l2239:
  4200  0023F0  90D8               	bcf	status,0,c
  4201  0023F2  3613               	rlcf	___lldiv@divisor^0,f,c
  4202  0023F4  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
  4203  0023F6  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
  4204  0023F8  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
  4205  0023FA  2A1B               	incf	___lldiv@counter^0,f,c
  4206  0023FC                     l2241:
  4207  0023FC  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
  4208  0023FE  D7F8               	goto	l2239
  4209  002400                     u1460:
  4210  002400  90D8               	bcf	status,0,c
  4211  002402  3617               	rlcf	___lldiv@quotient^0,f,c
  4212  002404  3618               	rlcf	(___lldiv@quotient+1)^0,f,c
  4213  002406  3619               	rlcf	(___lldiv@quotient+2)^0,f,c
  4214  002408  361A               	rlcf	(___lldiv@quotient+3)^0,f,c
  4215  00240A  5013               	movf	___lldiv@divisor^0,w,c
  4216  00240C  5C0F               	subwf	___lldiv@dividend^0,w,c
  4217  00240E  5014               	movf	(___lldiv@divisor+1)^0,w,c
  4218  002410  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
  4219  002412  5015               	movf	(___lldiv@divisor+2)^0,w,c
  4220  002414  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
  4221  002416  5016               	movf	(___lldiv@divisor+3)^0,w,c
  4222  002418  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
  4223  00241A  A0D8               	btfss	status,0,c
  4224  00241C  D009               	goto	l2251
  4225  00241E  5013               	movf	___lldiv@divisor^0,w,c
  4226  002420  5E0F               	subwf	___lldiv@dividend^0,f,c
  4227  002422  5014               	movf	(___lldiv@divisor+1)^0,w,c
  4228  002424  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
  4229  002426  5015               	movf	(___lldiv@divisor+2)^0,w,c
  4230  002428  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
  4231  00242A  5016               	movf	(___lldiv@divisor+3)^0,w,c
  4232  00242C  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
  4233  00242E  8017               	bsf	___lldiv@quotient^0,0,c
  4234  002430                     l2251:
  4235  002430  90D8               	bcf	status,0,c
  4236  002432  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
  4237  002434  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
  4238  002436  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
  4239  002438  3213               	rrcf	___lldiv@divisor^0,f,c
  4240  00243A  2E1B               	decfsz	___lldiv@counter^0,f,c
  4241  00243C  D7E1               	goto	u1460
  4242  00243E                     l361:
  4243  00243E  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4244  002442  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4245  002446  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4246  00244A  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4247  00244E  0012               	return		;funcret
  4248  002450                     __end_of___lldiv:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _EscribeLCD_2Decimales *****************
  4252 ;; Defined at:
  4253 ;;		line 329 in file "LibLCDXC8.h"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  a               3   48[COMRAM] unsigned long 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  num             2   51[COMRAM] int 
  4258 ;;  unidad          1   54[COMRAM] unsigned char 
  4259 ;;  decimalesP      1   53[COMRAM] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4269 ;;      Params:         3       0       0       0       0       0       0       0       0
  4270 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4272 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4273 ;;Total ram usage:        7 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 6
  4276 ;; This function calls:
  4277 ;;		_EscribeLCD_c
  4278 ;;		_EscribeLCD_n8
  4279 ;;		___awmod
  4280 ;;		___ftmul
  4281 ;;		___fttol
  4282 ;; This function is called by:
  4283 ;;		_ModuloOperacion
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text12
  4288  002450                     __ptext12:
  4289                           	callstack 0
  4290  002450                     _EscribeLCD_2Decimales:
  4291                           	callstack 23
  4292                           
  4293                           ;LibLCDXC8.h: 330: int num;;LibLCDXC8.h: 331: char decimalesP;;LibLCDXC8.h: 332: char un
      +                          idad;;LibLCDXC8.h: 333: unidad=a;
  4294                           
  4295                           ;incstack = 0
  4296  002450  C031  F01D         	movff	EscribeLCD_2Decimales@a,___fttol@f1
  4297  002454  C032  F01E         	movff	EscribeLCD_2Decimales@a+1,___fttol@f1+1
  4298  002458  C033  F01F         	movff	EscribeLCD_2Decimales@a+2,___fttol@f1+2
  4299  00245C  ECD9  F010         	call	___fttol	;wreg free
  4300  002460  501D               	movf	?___fttol^0,w,c
  4301  002462  6E37               	movwf	EscribeLCD_2Decimales@unidad^0,c
  4302                           
  4303                           ;LibLCDXC8.h: 334: num=(a*100);
  4304  002464  0E00               	movlw	0
  4305  002466  6E11               	movwf	___ftmul@f2^0,c
  4306  002468  0EC8               	movlw	200
  4307  00246A  6E12               	movwf	(___ftmul@f2+1)^0,c
  4308  00246C  0E42               	movlw	66
  4309  00246E  6E13               	movwf	(___ftmul@f2+2)^0,c
  4310  002470  C031  F00E         	movff	EscribeLCD_2Decimales@a,___ftmul@f1
  4311  002474  C032  F00F         	movff	EscribeLCD_2Decimales@a+1,___ftmul@f1+1
  4312  002478  C033  F010         	movff	EscribeLCD_2Decimales@a+2,___ftmul@f1+2
  4313  00247C  EC79  F00F         	call	___ftmul	;wreg free
  4314  002480  C00E  F01D         	movff	?___ftmul,___fttol@f1
  4315  002484  C00F  F01E         	movff	?___ftmul+1,___fttol@f1+1
  4316  002488  C010  F01F         	movff	?___ftmul+2,___fttol@f1+2
  4317  00248C  ECD9  F010         	call	___fttol	;wreg free
  4318  002490  C01D  F034         	movff	?___fttol,EscribeLCD_2Decimales@num
  4319  002494  C01E  F035         	movff	?___fttol+1,EscribeLCD_2Decimales@num+1
  4320                           
  4321                           ;LibLCDXC8.h: 335: decimalesP=num%100;
  4322  002498  C034  F006         	movff	EscribeLCD_2Decimales@num,___awmod@dividend
  4323  00249C  C035  F007         	movff	EscribeLCD_2Decimales@num+1,___awmod@dividend+1
  4324  0024A0  0E00               	movlw	0
  4325  0024A2  6E09               	movwf	(___awmod@divisor+1)^0,c
  4326  0024A4  0E64               	movlw	100
  4327  0024A6  6E08               	movwf	___awmod@divisor^0,c
  4328  0024A8  ECA0  F012         	call	___awmod	;wreg free
  4329  0024AC  5006               	movf	?___awmod^0,w,c
  4330  0024AE  6E36               	movwf	EscribeLCD_2Decimales@decimalesP^0,c
  4331                           
  4332                           ;LibLCDXC8.h: 336: EscribeLCD_n8(unidad,1);
  4333  0024B0  0E01               	movlw	1
  4334  0024B2  6E2C               	movwf	EscribeLCD_n8@b^0,c
  4335  0024B4  5037               	movf	EscribeLCD_2Decimales@unidad^0,w,c
  4336  0024B6  EC66  F010         	call	_EscribeLCD_n8
  4337                           
  4338                           ;LibLCDXC8.h: 337: EscribeLCD_c('.');
  4339  0024BA  0E2E               	movlw	46
  4340  0024BC  ECC3  F014         	call	_EscribeLCD_c
  4341                           
  4342                           ;LibLCDXC8.h: 338: EscribeLCD_n8(decimalesP,2);
  4343  0024C0  0E02               	movlw	2
  4344  0024C2  6E2C               	movwf	EscribeLCD_n8@b^0,c
  4345  0024C4  5036               	movf	EscribeLCD_2Decimales@decimalesP^0,w,c
  4346  0024C6  EC66  F010         	call	_EscribeLCD_n8
  4347  0024CA  0012               	return		;funcret
  4348  0024CC                     __end_of_EscribeLCD_2Decimales:
  4349                           	callstack 0
  4350                           
  4351 ;; *************** function ___fttol *****************
  4352 ;; Defined at:
  4353 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fttol.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  f1              3   28[COMRAM] float 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  lval            4   38[COMRAM] unsigned long 
  4358 ;;  exp1            1   42[COMRAM] unsigned char 
  4359 ;;  sign1           1   37[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  4   28[COMRAM] long 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4369 ;;      Params:         4       0       0       0       0       0       0       0       0
  4370 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4371 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4372 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4373 ;;Total ram usage:       15 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 3
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_EscribeLCD_2Decimales
  4380 ;;		_ModuloOperacion
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text13
  4385  0021B2                     __ptext13:
  4386                           	callstack 0
  4387  0021B2                     ___fttol:
  4388                           	callstack 26
  4389                           
  4390                           ;incstack = 0
  4391  0021B2  C01F  F021         	movff	___fttol@f1+2,??___fttol
  4392  0021B6  6A22               	clrf	(??___fttol+1)^0,c
  4393  0021B8  6A23               	clrf	(??___fttol+2)^0,c
  4394  0021BA  341E               	rlcf	(___fttol@f1+1)^0,w,c
  4395  0021BC  3621               	rlcf	??___fttol^0,f,c
  4396  0021BE  E301               	bnc	u1601
  4397  0021C0  8022               	bsf	(??___fttol+1)^0,0,c
  4398  0021C2                     u1601:
  4399  0021C2  5021               	movf	??___fttol^0,w,c
  4400  0021C4  6E2B               	movwf	___fttol@exp1^0,c
  4401  0021C6  502B               	movf	___fttol@exp1^0,w,c
  4402  0021C8  A4D8               	btfss	status,2,c
  4403  0021CA  D009               	goto	l2345
  4404  0021CC                     u1610:
  4405  0021CC  0E00               	movlw	0
  4406  0021CE  6E1D               	movwf	?___fttol^0,c
  4407  0021D0  0E00               	movlw	0
  4408  0021D2  6E1E               	movwf	(?___fttol+1)^0,c
  4409  0021D4  0E00               	movlw	0
  4410  0021D6  6E1F               	movwf	(?___fttol+2)^0,c
  4411  0021D8  0E00               	movlw	0
  4412  0021DA  6E20               	movwf	(?___fttol+3)^0,c
  4413  0021DC  0012               	return	
  4414  0021DE                     l2345:
  4415  0021DE  0E17               	movlw	23
  4416  0021E0  6E21               	movwf	??___fttol^0,c
  4417  0021E2  C01D  F022         	movff	___fttol@f1,??___fttol+1
  4418  0021E6  C01E  F023         	movff	___fttol@f1+1,??___fttol+2
  4419  0021EA  C01F  F024         	movff	___fttol@f1+2,??___fttol+3
  4420  0021EE  2821               	incf	??___fttol^0,w,c
  4421  0021F0  6E25               	movwf	(??___fttol+4)^0,c
  4422  0021F2  D004               	goto	u1620
  4423  0021F4                     u1625:
  4424  0021F4  90D8               	bcf	status,0,c
  4425  0021F6  3224               	rrcf	(??___fttol+3)^0,f,c
  4426  0021F8  3223               	rrcf	(??___fttol+2)^0,f,c
  4427  0021FA  3222               	rrcf	(??___fttol+1)^0,f,c
  4428  0021FC                     u1620:
  4429  0021FC  2E25               	decfsz	(??___fttol+4)^0,f,c
  4430  0021FE  D7FA               	goto	u1625
  4431  002200  5022               	movf	(??___fttol+1)^0,w,c
  4432  002202  6E26               	movwf	___fttol@sign1^0,c
  4433  002204  8E1E               	bsf	(___fttol@f1+1)^0,7,c
  4434  002206  0EFF               	movlw	255
  4435  002208  161D               	andwf	___fttol@f1^0,f,c
  4436  00220A  0EFF               	movlw	255
  4437  00220C  161E               	andwf	(___fttol@f1+1)^0,f,c
  4438  00220E  0E00               	movlw	0
  4439  002210  161F               	andwf	(___fttol@f1+2)^0,f,c
  4440  002212  501D               	movf	___fttol@f1^0,w,c
  4441  002214  6E27               	movwf	___fttol@lval^0,c
  4442  002216  501E               	movf	(___fttol@f1+1)^0,w,c
  4443  002218  6E28               	movwf	(___fttol@lval+1)^0,c
  4444  00221A  501F               	movf	(___fttol@f1+2)^0,w,c
  4445  00221C  6E29               	movwf	(___fttol@lval+2)^0,c
  4446  00221E  6A2A               	clrf	(___fttol@lval+3)^0,c
  4447  002220  0E8E               	movlw	142
  4448  002222  5E2B               	subwf	___fttol@exp1^0,f,c
  4449  002224  AE2B               	btfss	___fttol@exp1^0,7,c
  4450  002226  D00D               	goto	l2367
  4451  002228  502B               	movf	___fttol@exp1^0,w,c
  4452  00222A  0A80               	xorlw	128
  4453  00222C  0F8F               	addlw	143
  4454  00222E  A0D8               	btfss	status,0,c
  4455  002230  D7CD               	goto	u1610
  4456  002232                     l2363:
  4457  002232  90D8               	bcf	status,0,c
  4458  002234  322A               	rrcf	(___fttol@lval+3)^0,f,c
  4459  002236  3229               	rrcf	(___fttol@lval+2)^0,f,c
  4460  002238  3228               	rrcf	(___fttol@lval+1)^0,f,c
  4461  00223A  3227               	rrcf	___fttol@lval^0,f,c
  4462  00223C  3E2B               	incfsz	___fttol@exp1^0,f,c
  4463  00223E  D7F9               	goto	l2363
  4464  002240  D00D               	goto	u1660
  4465  002242                     l2367:
  4466  002242  0E17               	movlw	23
  4467  002244  642B               	cpfsgt	___fttol@exp1^0,c
  4468  002246  D007               	goto	l2375
  4469  002248  D7C1               	goto	u1610
  4470  00224A                     l2373:
  4471  00224A  90D8               	bcf	status,0,c
  4472  00224C  3627               	rlcf	___fttol@lval^0,f,c
  4473  00224E  3628               	rlcf	(___fttol@lval+1)^0,f,c
  4474  002250  3629               	rlcf	(___fttol@lval+2)^0,f,c
  4475  002252  362A               	rlcf	(___fttol@lval+3)^0,f,c
  4476  002254  062B               	decf	___fttol@exp1^0,f,c
  4477  002256                     l2375:
  4478  002256  502B               	movf	___fttol@exp1^0,w,c
  4479  002258  A4D8               	btfss	status,2,c
  4480  00225A  D7F7               	goto	l2373
  4481  00225C                     u1660:
  4482  00225C  5026               	movf	___fttol@sign1^0,w,c
  4483  00225E  B4D8               	btfsc	status,2,c
  4484  002260  D008               	goto	l2381
  4485  002262  1E2A               	comf	(___fttol@lval+3)^0,f,c
  4486  002264  1E29               	comf	(___fttol@lval+2)^0,f,c
  4487  002266  1E28               	comf	(___fttol@lval+1)^0,f,c
  4488  002268  6C27               	negf	___fttol@lval^0,c
  4489  00226A  0E00               	movlw	0
  4490  00226C  2228               	addwfc	(___fttol@lval+1)^0,f,c
  4491  00226E  2229               	addwfc	(___fttol@lval+2)^0,f,c
  4492  002270  222A               	addwfc	(___fttol@lval+3)^0,f,c
  4493  002272                     l2381:
  4494  002272  C027  F01D         	movff	___fttol@lval,?___fttol
  4495  002276  C028  F01E         	movff	___fttol@lval+1,?___fttol+1
  4496  00227A  C029  F01F         	movff	___fttol@lval+2,?___fttol+2
  4497  00227E  C02A  F020         	movff	___fttol@lval+3,?___fttol+3
  4498  002282  0012               	return		;funcret
  4499  002284                     __end_of___fttol:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function ___ftmul *****************
  4503 ;; Defined at:
  4504 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftmul.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  f1              3   13[COMRAM] float 
  4507 ;;  f2              3   16[COMRAM] float 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  4510 ;;  sign            1   27[COMRAM] unsigned char 
  4511 ;;  cntr            1   26[COMRAM] unsigned char 
  4512 ;;  exp             1   22[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  3   13[COMRAM] float 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4522 ;;      Params:         6       0       0       0       0       0       0       0       0
  4523 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4524 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4525 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4526 ;;Total ram usage:       15 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 4
  4529 ;; This function calls:
  4530 ;;		___ftpack
  4531 ;; This function is called by:
  4532 ;;		_EscribeLCD_2Decimales
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text14
  4537  001EF2                     __ptext14:
  4538                           	callstack 0
  4539  001EF2                     ___ftmul:
  4540                           	callstack 24
  4541                           
  4542                           ;incstack = 0
  4543  001EF2  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  4544  001EF6  6A15               	clrf	(??___ftmul+1)^0,c
  4545  001EF8  6A16               	clrf	(??___ftmul+2)^0,c
  4546  001EFA  340F               	rlcf	(___ftmul@f1+1)^0,w,c
  4547  001EFC  3614               	rlcf	??___ftmul^0,f,c
  4548  001EFE  E301               	bnc	u1481
  4549  001F00  8015               	bsf	(??___ftmul+1)^0,0,c
  4550  001F02                     u1481:
  4551  001F02  5014               	movf	??___ftmul^0,w,c
  4552  001F04  6E17               	movwf	___ftmul@exp^0,c
  4553  001F06  5017               	movf	___ftmul@exp^0,w,c
  4554  001F08  A4D8               	btfss	status,2,c
  4555  001F0A  D007               	goto	l2261
  4556  001F0C  0E00               	movlw	0
  4557  001F0E  6E0E               	movwf	?___ftmul^0,c
  4558  001F10  0E00               	movlw	0
  4559  001F12  6E0F               	movwf	(?___ftmul+1)^0,c
  4560  001F14  0E00               	movlw	0
  4561  001F16  6E10               	movwf	(?___ftmul+2)^0,c
  4562  001F18  0012               	return	
  4563  001F1A                     l2261:
  4564  001F1A  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  4565  001F1E  6A15               	clrf	(??___ftmul+1)^0,c
  4566  001F20  6A16               	clrf	(??___ftmul+2)^0,c
  4567  001F22  3412               	rlcf	(___ftmul@f2+1)^0,w,c
  4568  001F24  3614               	rlcf	??___ftmul^0,f,c
  4569  001F26  E301               	bnc	u1501
  4570  001F28  8015               	bsf	(??___ftmul+1)^0,0,c
  4571  001F2A                     u1501:
  4572  001F2A  5014               	movf	??___ftmul^0,w,c
  4573  001F2C  6E1C               	movwf	___ftmul@sign^0,c
  4574  001F2E  501C               	movf	___ftmul@sign^0,w,c
  4575  001F30  A4D8               	btfss	status,2,c
  4576  001F32  D007               	goto	l2267
  4577  001F34  0E00               	movlw	0
  4578  001F36  6E0E               	movwf	?___ftmul^0,c
  4579  001F38  0E00               	movlw	0
  4580  001F3A  6E0F               	movwf	(?___ftmul+1)^0,c
  4581  001F3C  0E00               	movlw	0
  4582  001F3E  6E10               	movwf	(?___ftmul+2)^0,c
  4583  001F40  0012               	return	
  4584  001F42                     l2267:
  4585  001F42  501C               	movf	___ftmul@sign^0,w,c
  4586  001F44  0F7B               	addlw	123
  4587  001F46  2617               	addwf	___ftmul@exp^0,f,c
  4588  001F48  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  4589  001F4C  5013               	movf	(___ftmul@f2+2)^0,w,c
  4590  001F4E  1A1C               	xorwf	___ftmul@sign^0,f,c
  4591  001F50  0E80               	movlw	128
  4592  001F52  161C               	andwf	___ftmul@sign^0,f,c
  4593  001F54  8E0F               	bsf	(___ftmul@f1+1)^0,7,c
  4594  001F56  8E12               	bsf	(___ftmul@f2+1)^0,7,c
  4595  001F58  0EFF               	movlw	255
  4596  001F5A  1611               	andwf	___ftmul@f2^0,f,c
  4597  001F5C  0EFF               	movlw	255
  4598  001F5E  1612               	andwf	(___ftmul@f2+1)^0,f,c
  4599  001F60  0E00               	movlw	0
  4600  001F62  1613               	andwf	(___ftmul@f2+2)^0,f,c
  4601  001F64  0E00               	movlw	0
  4602  001F66  6E18               	movwf	___ftmul@f3_as_product^0,c
  4603  001F68  0E00               	movlw	0
  4604  001F6A  6E19               	movwf	(___ftmul@f3_as_product+1)^0,c
  4605  001F6C  0E00               	movlw	0
  4606  001F6E  6E1A               	movwf	(___ftmul@f3_as_product+2)^0,c
  4607  001F70  0E07               	movlw	7
  4608  001F72  6E1B               	movwf	___ftmul@cntr^0,c
  4609  001F74                     l2281:
  4610  001F74  A00E               	btfss	___ftmul@f1^0,0,c
  4611  001F76  D006               	goto	l2285
  4612  001F78  5011               	movf	___ftmul@f2^0,w,c
  4613  001F7A  2618               	addwf	___ftmul@f3_as_product^0,f,c
  4614  001F7C  5012               	movf	(___ftmul@f2+1)^0,w,c
  4615  001F7E  2219               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4616  001F80  5013               	movf	(___ftmul@f2+2)^0,w,c
  4617  001F82  221A               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4618  001F84                     l2285:
  4619  001F84  90D8               	bcf	status,0,c
  4620  001F86  3210               	rrcf	(___ftmul@f1+2)^0,f,c
  4621  001F88  320F               	rrcf	(___ftmul@f1+1)^0,f,c
  4622  001F8A  320E               	rrcf	___ftmul@f1^0,f,c
  4623  001F8C  90D8               	bcf	status,0,c
  4624  001F8E  3611               	rlcf	___ftmul@f2^0,f,c
  4625  001F90  3612               	rlcf	(___ftmul@f2+1)^0,f,c
  4626  001F92  3613               	rlcf	(___ftmul@f2+2)^0,f,c
  4627  001F94  2E1B               	decfsz	___ftmul@cntr^0,f,c
  4628  001F96  D7EE               	goto	l2281
  4629  001F98  0E09               	movlw	9
  4630  001F9A  6E1B               	movwf	___ftmul@cntr^0,c
  4631  001F9C                     l2291:
  4632  001F9C  A00E               	btfss	___ftmul@f1^0,0,c
  4633  001F9E  D006               	goto	l2295
  4634  001FA0  5011               	movf	___ftmul@f2^0,w,c
  4635  001FA2  2618               	addwf	___ftmul@f3_as_product^0,f,c
  4636  001FA4  5012               	movf	(___ftmul@f2+1)^0,w,c
  4637  001FA6  2219               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4638  001FA8  5013               	movf	(___ftmul@f2+2)^0,w,c
  4639  001FAA  221A               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4640  001FAC                     l2295:
  4641  001FAC  90D8               	bcf	status,0,c
  4642  001FAE  3210               	rrcf	(___ftmul@f1+2)^0,f,c
  4643  001FB0  320F               	rrcf	(___ftmul@f1+1)^0,f,c
  4644  001FB2  320E               	rrcf	___ftmul@f1^0,f,c
  4645  001FB4  90D8               	bcf	status,0,c
  4646  001FB6  321A               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4647  001FB8  3219               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4648  001FBA  3218               	rrcf	___ftmul@f3_as_product^0,f,c
  4649  001FBC  2E1B               	decfsz	___ftmul@cntr^0,f,c
  4650  001FBE  D7EE               	goto	l2291
  4651  001FC0  C018  F006         	movff	___ftmul@f3_as_product,___ftpack@arg
  4652  001FC4  C019  F007         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4653  001FC8  C01A  F008         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4654  001FCC  C017  F009         	movff	___ftmul@exp,___ftpack@exp
  4655  001FD0  C01C  F00A         	movff	___ftmul@sign,___ftpack@sign
  4656  001FD4  EC42  F011         	call	___ftpack	;wreg free
  4657  001FD8  C006  F00E         	movff	?___ftpack,?___ftmul
  4658  001FDC  C007  F00F         	movff	?___ftpack+1,?___ftmul+1
  4659  001FE0  C008  F010         	movff	?___ftpack+2,?___ftmul+2
  4660  001FE4  0012               	return		;funcret
  4661  001FE6                     __end_of___ftmul:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function ___ftpack *****************
  4665 ;; Defined at:
  4666 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\float.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  arg             3    5[COMRAM] unsigned um
  4669 ;;  exp             1    8[COMRAM] unsigned char 
  4670 ;;  sign            1    9[COMRAM] unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  3    5[COMRAM] float 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4682 ;;      Params:         5       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        8 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 3
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		___awtoft
  4693 ;;		___ftdiv
  4694 ;;		___ftmul
  4695 ;;		___lbtoft
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text15
  4700  002284                     __ptext15:
  4701                           	callstack 0
  4702  002284                     ___ftpack:
  4703                           	callstack 25
  4704                           
  4705                           ;incstack = 0
  4706  002284  5009               	movf	___ftpack@exp^0,w,c
  4707  002286  B4D8               	btfsc	status,2,c
  4708  002288  D005               	goto	u1340
  4709  00228A  5006               	movf	___ftpack@arg^0,w,c
  4710  00228C  1007               	iorwf	(___ftpack@arg+1)^0,w,c
  4711  00228E  1008               	iorwf	(___ftpack@arg+2)^0,w,c
  4712  002290  A4D8               	btfss	status,2,c
  4713  002292  D00C               	goto	l2121
  4714  002294                     u1340:
  4715  002294  0E00               	movlw	0
  4716  002296  6E06               	movwf	?___ftpack^0,c
  4717  002298  0E00               	movlw	0
  4718  00229A  6E07               	movwf	(?___ftpack+1)^0,c
  4719  00229C  0E00               	movlw	0
  4720  00229E  6E08               	movwf	(?___ftpack+2)^0,c
  4721  0022A0  0012               	return	
  4722  0022A2                     l2119:
  4723  0022A2  2A09               	incf	___ftpack@exp^0,f,c
  4724  0022A4  90D8               	bcf	status,0,c
  4725  0022A6  3208               	rrcf	(___ftpack@arg+2)^0,f,c
  4726  0022A8  3207               	rrcf	(___ftpack@arg+1)^0,f,c
  4727  0022AA  3206               	rrcf	___ftpack@arg^0,f,c
  4728  0022AC                     l2121:
  4729  0022AC  0E00               	movlw	0
  4730  0022AE  1406               	andwf	___ftpack@arg^0,w,c
  4731  0022B0  6E0B               	movwf	??___ftpack^0,c
  4732  0022B2  0E00               	movlw	0
  4733  0022B4  1407               	andwf	(___ftpack@arg+1)^0,w,c
  4734  0022B6  6E0C               	movwf	(??___ftpack+1)^0,c
  4735  0022B8  0EFE               	movlw	254
  4736  0022BA  1408               	andwf	(___ftpack@arg+2)^0,w,c
  4737  0022BC  6E0D               	movwf	(??___ftpack+2)^0,c
  4738  0022BE  500B               	movf	??___ftpack^0,w,c
  4739  0022C0  100C               	iorwf	(??___ftpack+1)^0,w,c
  4740  0022C2  100D               	iorwf	(??___ftpack+2)^0,w,c
  4741  0022C4  B4D8               	btfsc	status,2,c
  4742  0022C6  D00C               	goto	l2127
  4743  0022C8  D7EC               	goto	l2119
  4744  0022CA                     l2123:
  4745  0022CA  2A09               	incf	___ftpack@exp^0,f,c
  4746  0022CC  0E01               	movlw	1
  4747  0022CE  2606               	addwf	___ftpack@arg^0,f,c
  4748  0022D0  0E00               	movlw	0
  4749  0022D2  2207               	addwfc	(___ftpack@arg+1)^0,f,c
  4750  0022D4  0E00               	movlw	0
  4751  0022D6  2208               	addwfc	(___ftpack@arg+2)^0,f,c
  4752  0022D8  90D8               	bcf	status,0,c
  4753  0022DA  3208               	rrcf	(___ftpack@arg+2)^0,f,c
  4754  0022DC  3207               	rrcf	(___ftpack@arg+1)^0,f,c
  4755  0022DE  3206               	rrcf	___ftpack@arg^0,f,c
  4756  0022E0                     l2127:
  4757  0022E0  0E00               	movlw	0
  4758  0022E2  1406               	andwf	___ftpack@arg^0,w,c
  4759  0022E4  6E0B               	movwf	??___ftpack^0,c
  4760  0022E6  0E00               	movlw	0
  4761  0022E8  1407               	andwf	(___ftpack@arg+1)^0,w,c
  4762  0022EA  6E0C               	movwf	(??___ftpack+1)^0,c
  4763  0022EC  0EFF               	movlw	255
  4764  0022EE  1408               	andwf	(___ftpack@arg+2)^0,w,c
  4765  0022F0  6E0D               	movwf	(??___ftpack+2)^0,c
  4766  0022F2  500B               	movf	??___ftpack^0,w,c
  4767  0022F4  100C               	iorwf	(??___ftpack+1)^0,w,c
  4768  0022F6  100D               	iorwf	(??___ftpack+2)^0,w,c
  4769  0022F8  B4D8               	btfsc	status,2,c
  4770  0022FA  D006               	goto	l2131
  4771  0022FC  D7E6               	goto	l2123
  4772  0022FE                     l2129:
  4773  0022FE  0609               	decf	___ftpack@exp^0,f,c
  4774  002300  90D8               	bcf	status,0,c
  4775  002302  3606               	rlcf	___ftpack@arg^0,f,c
  4776  002304  3607               	rlcf	(___ftpack@arg+1)^0,f,c
  4777  002306  3608               	rlcf	(___ftpack@arg+2)^0,f,c
  4778  002308                     l2131:
  4779  002308  BE07               	btfsc	(___ftpack@arg+1)^0,7,c
  4780  00230A  D003               	goto	u1380
  4781  00230C  0E02               	movlw	2
  4782  00230E  6009               	cpfslt	___ftpack@exp^0,c
  4783  002310  D7F6               	goto	l2129
  4784  002312                     u1380:
  4785  002312  A009               	btfss	___ftpack@exp^0,0,c
  4786  002314  9E07               	bcf	(___ftpack@arg+1)^0,7,c
  4787  002316  90D8               	bcf	status,0,c
  4788  002318  3209               	rrcf	___ftpack@exp^0,f,c
  4789  00231A  5009               	movf	___ftpack@exp^0,w,c
  4790  00231C  1208               	iorwf	(___ftpack@arg+2)^0,f,c
  4791  00231E  500A               	movf	___ftpack@sign^0,w,c
  4792  002320  A4D8               	btfss	status,2,c
  4793  002322  8E08               	bsf	(___ftpack@arg+2)^0,7,c
  4794  002324  C006  F006         	movff	___ftpack@arg,?___ftpack
  4795  002328  C007  F007         	movff	___ftpack@arg+1,?___ftpack+1
  4796  00232C  C008  F008         	movff	___ftpack@arg+2,?___ftpack+2
  4797  002330  0012               	return		;funcret
  4798  002332                     __end_of___ftpack:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function ___awmod *****************
  4802 ;; Defined at:
  4803 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  dividend        2    5[COMRAM] int 
  4806 ;;  divisor         2    7[COMRAM] int 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  sign            1   10[COMRAM] unsigned char 
  4809 ;;  counter         1    9[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    5[COMRAM] int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         4       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        6 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 3
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_EscribeLCD_2Decimales
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text16
  4834  002540                     __ptext16:
  4835                           	callstack 0
  4836  002540                     ___awmod:
  4837                           	callstack 25
  4838                           
  4839                           ;incstack = 0
  4840  002540  0E00               	movlw	0
  4841  002542  6E0B               	movwf	___awmod@sign^0,c
  4842  002544  AE07               	btfss	(___awmod@dividend+1)^0,7,c
  4843  002546  D006               	goto	l2311
  4844  002548  6C06               	negf	___awmod@dividend^0,c
  4845  00254A  1E07               	comf	(___awmod@dividend+1)^0,f,c
  4846  00254C  B0D8               	btfsc	status,0,c
  4847  00254E  2A07               	incf	(___awmod@dividend+1)^0,f,c
  4848  002550  0E01               	movlw	1
  4849  002552  6E0B               	movwf	___awmod@sign^0,c
  4850  002554                     l2311:
  4851  002554  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  4852  002556  D004               	goto	l2315
  4853  002558  6C08               	negf	___awmod@divisor^0,c
  4854  00255A  1E09               	comf	(___awmod@divisor+1)^0,f,c
  4855  00255C  B0D8               	btfsc	status,0,c
  4856  00255E  2A09               	incf	(___awmod@divisor+1)^0,f,c
  4857  002560                     l2315:
  4858  002560  5008               	movf	___awmod@divisor^0,w,c
  4859  002562  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  4860  002564  B4D8               	btfsc	status,2,c
  4861  002566  D018               	goto	l2331
  4862  002568  0E01               	movlw	1
  4863  00256A  6E0A               	movwf	___awmod@counter^0,c
  4864  00256C  D004               	goto	l2321
  4865  00256E                     l2319:
  4866  00256E  90D8               	bcf	status,0,c
  4867  002570  3608               	rlcf	___awmod@divisor^0,f,c
  4868  002572  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  4869  002574  2A0A               	incf	___awmod@counter^0,f,c
  4870  002576                     l2321:
  4871  002576  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  4872  002578  D7FA               	goto	l2319
  4873  00257A                     u1570:
  4874  00257A  5008               	movf	___awmod@divisor^0,w,c
  4875  00257C  5C06               	subwf	___awmod@dividend^0,w,c
  4876  00257E  5009               	movf	(___awmod@divisor+1)^0,w,c
  4877  002580  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  4878  002582  A0D8               	btfss	status,0,c
  4879  002584  D004               	goto	l2327
  4880  002586  5008               	movf	___awmod@divisor^0,w,c
  4881  002588  5E06               	subwf	___awmod@dividend^0,f,c
  4882  00258A  5009               	movf	(___awmod@divisor+1)^0,w,c
  4883  00258C  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  4884  00258E                     l2327:
  4885  00258E  90D8               	bcf	status,0,c
  4886  002590  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  4887  002592  3208               	rrcf	___awmod@divisor^0,f,c
  4888  002594  2E0A               	decfsz	___awmod@counter^0,f,c
  4889  002596  D7F1               	goto	u1570
  4890  002598                     l2331:
  4891  002598  500B               	movf	___awmod@sign^0,w,c
  4892  00259A  B4D8               	btfsc	status,2,c
  4893  00259C  D004               	goto	l2335
  4894  00259E  6C06               	negf	___awmod@dividend^0,c
  4895  0025A0  1E07               	comf	(___awmod@dividend+1)^0,f,c
  4896  0025A2  B0D8               	btfsc	status,0,c
  4897  0025A4  2A07               	incf	(___awmod@dividend+1)^0,f,c
  4898  0025A6                     l2335:
  4899  0025A6  C006  F006         	movff	___awmod@dividend,?___awmod
  4900  0025AA  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  4901  0025AE  0012               	return		;funcret
  4902  0025B0                     __end_of___awmod:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _EscribeLCD_n8 *****************
  4906 ;; Defined at:
  4907 ;;		line 128 in file "LibLCDXC8.h"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  a               1    wreg     unsigned char 
  4910 ;;  b               1   43[COMRAM] unsigned char 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  a               1   47[COMRAM] unsigned char 
  4913 ;;  unidad          1   46[COMRAM] unsigned char 
  4914 ;;  decena          1   45[COMRAM] unsigned char 
  4915 ;;  centena         1   44[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4925 ;;      Params:         1       0       0       0       0       0       0       0       0
  4926 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4928 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4929 ;;Total ram usage:        5 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 5
  4932 ;; This function calls:
  4933 ;;		_EnviaDato
  4934 ;;		_HabilitaLCD
  4935 ;;		_RetardoLCD
  4936 ;;		___lbdiv
  4937 ;;		___lbmod
  4938 ;; This function is called by:
  4939 ;;		_EscribeLCD_2Decimales
  4940 ;;		_ModuloOperacion
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text17
  4945  0020CC                     __ptext17:
  4946                           	callstack 0
  4947  0020CC                     _EscribeLCD_n8:
  4948                           	callstack 24
  4949                           
  4950                           ;incstack = 0
  4951                           ;EscribeLCD_n8@a stored from wreg
  4952  0020CC  6E30               	movwf	EscribeLCD_n8@a^0,c
  4953                           
  4954                           ;LibLCDXC8.h: 133: unsigned char centena,decena,unidad;;LibLCDXC8.h: 134: LATD2=1;
  4955  0020CE  848C               	bsf	3980,2,c	;volatile
  4956                           
  4957                           ;LibLCDXC8.h: 135: switch(b){
  4958  0020D0  D065               	goto	l2231
  4959  0020D2                     l2199:
  4960  0020D2  0E0A               	movlw	10
  4961  0020D4  6E06               	movwf	___lbmod@divisor^0,c
  4962  0020D6  5030               	movf	EscribeLCD_n8@a^0,w,c
  4963  0020D8  EC5C  F014         	call	___lbmod
  4964  0020DC  6E2F               	movwf	EscribeLCD_n8@unidad^0,c
  4965                           
  4966                           ;LibLCDXC8.h: 137: EnviaDato(unidad+48);
  4967  0020DE  502F               	movf	EscribeLCD_n8@unidad^0,w,c
  4968  0020E0  0F30               	addlw	48
  4969  0020E2  ECC0  F013         	call	_EnviaDato
  4970                           
  4971                           ;LibLCDXC8.h: 138: HabilitaLCD();
  4972  0020E6  ECEB  F014         	call	_HabilitaLCD	;wreg free
  4973                           
  4974                           ;LibLCDXC8.h: 139: RetardoLCD(4);
  4975  0020EA  0E04               	movlw	4
  4976  0020EC  EC95  F013         	call	_RetardoLCD
  4977                           
  4978                           ;LibLCDXC8.h: 140: break;
  4979  0020F0  0012               	return	
  4980  0020F2                     l2205:
  4981  0020F2  0E0A               	movlw	10
  4982  0020F4  6E0A               	movwf	___lbdiv@divisor^0,c
  4983  0020F6  0E64               	movlw	100
  4984  0020F8  6E06               	movwf	___lbmod@divisor^0,c
  4985  0020FA  5030               	movf	EscribeLCD_n8@a^0,w,c
  4986  0020FC  EC5C  F014         	call	___lbmod
  4987  002100  EC23  F014         	call	___lbdiv
  4988  002104  6E2E               	movwf	EscribeLCD_n8@decena^0,c
  4989                           
  4990                           ;LibLCDXC8.h: 142: unidad=a%10;
  4991  002106  0E0A               	movlw	10
  4992  002108  6E06               	movwf	___lbmod@divisor^0,c
  4993  00210A  5030               	movf	EscribeLCD_n8@a^0,w,c
  4994  00210C  EC5C  F014         	call	___lbmod
  4995  002110  6E2F               	movwf	EscribeLCD_n8@unidad^0,c
  4996                           
  4997                           ;LibLCDXC8.h: 143: EnviaDato(decena+48);
  4998  002112  502E               	movf	EscribeLCD_n8@decena^0,w,c
  4999  002114  0F30               	addlw	48
  5000  002116  ECC0  F013         	call	_EnviaDato
  5001                           
  5002                           ;LibLCDXC8.h: 144: HabilitaLCD();
  5003  00211A  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5004                           
  5005                           ;LibLCDXC8.h: 145: RetardoLCD(4);
  5006  00211E  0E04               	movlw	4
  5007  002120  EC95  F013         	call	_RetardoLCD
  5008                           
  5009                           ;LibLCDXC8.h: 146: EnviaDato(unidad+48);
  5010  002124  502F               	movf	EscribeLCD_n8@unidad^0,w,c
  5011  002126  0F30               	addlw	48
  5012  002128  ECC0  F013         	call	_EnviaDato
  5013                           
  5014                           ;LibLCDXC8.h: 147: HabilitaLCD();
  5015  00212C  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5016                           
  5017                           ;LibLCDXC8.h: 148: RetardoLCD(4);
  5018  002130  0E04               	movlw	4
  5019  002132  EC95  F013         	call	_RetardoLCD
  5020                           
  5021                           ;LibLCDXC8.h: 149: break;
  5022  002136  0012               	return	
  5023  002138                     l2215:
  5024  002138  0E64               	movlw	100
  5025  00213A  6E0A               	movwf	___lbdiv@divisor^0,c
  5026  00213C  5030               	movf	EscribeLCD_n8@a^0,w,c
  5027  00213E  EC23  F014         	call	___lbdiv
  5028  002142  6E2D               	movwf	EscribeLCD_n8@centena^0,c
  5029                           
  5030                           ;LibLCDXC8.h: 151: decena=(a%100)/10;
  5031  002144  0E0A               	movlw	10
  5032  002146  6E0A               	movwf	___lbdiv@divisor^0,c
  5033  002148  0E64               	movlw	100
  5034  00214A  6E06               	movwf	___lbmod@divisor^0,c
  5035  00214C  5030               	movf	EscribeLCD_n8@a^0,w,c
  5036  00214E  EC5C  F014         	call	___lbmod
  5037  002152  EC23  F014         	call	___lbdiv
  5038  002156  6E2E               	movwf	EscribeLCD_n8@decena^0,c
  5039                           
  5040                           ;LibLCDXC8.h: 152: unidad=a%10;
  5041  002158  0E0A               	movlw	10
  5042  00215A  6E06               	movwf	___lbmod@divisor^0,c
  5043  00215C  5030               	movf	EscribeLCD_n8@a^0,w,c
  5044  00215E  EC5C  F014         	call	___lbmod
  5045  002162  6E2F               	movwf	EscribeLCD_n8@unidad^0,c
  5046                           
  5047                           ;LibLCDXC8.h: 153: EnviaDato(centena+48);
  5048  002164  502D               	movf	EscribeLCD_n8@centena^0,w,c
  5049  002166  0F30               	addlw	48
  5050  002168  ECC0  F013         	call	_EnviaDato
  5051                           
  5052                           ;LibLCDXC8.h: 154: HabilitaLCD();
  5053  00216C  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5054                           
  5055                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  5056  002170  0E04               	movlw	4
  5057  002172  EC95  F013         	call	_RetardoLCD
  5058                           
  5059                           ;LibLCDXC8.h: 156: EnviaDato(decena+48);
  5060  002176  502E               	movf	EscribeLCD_n8@decena^0,w,c
  5061  002178  0F30               	addlw	48
  5062  00217A  ECC0  F013         	call	_EnviaDato
  5063                           
  5064                           ;LibLCDXC8.h: 157: HabilitaLCD();
  5065  00217E  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5066                           
  5067                           ;LibLCDXC8.h: 158: RetardoLCD(4);
  5068  002182  0E04               	movlw	4
  5069  002184  EC95  F013         	call	_RetardoLCD
  5070                           
  5071                           ;LibLCDXC8.h: 159: EnviaDato(unidad+48);
  5072  002188  502F               	movf	EscribeLCD_n8@unidad^0,w,c
  5073  00218A  0F30               	addlw	48
  5074  00218C  ECC0  F013         	call	_EnviaDato
  5075                           
  5076                           ;LibLCDXC8.h: 160: HabilitaLCD();
  5077  002190  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5078                           
  5079                           ;LibLCDXC8.h: 161: RetardoLCD(4);
  5080  002194  0E04               	movlw	4
  5081  002196  EC95  F013         	call	_RetardoLCD
  5082                           
  5083                           ;LibLCDXC8.h: 162: break;
  5084  00219A  0012               	return	
  5085  00219C                     l2231:
  5086  00219C  502C               	movf	EscribeLCD_n8@b^0,w,c
  5087                           
  5088                           ; Switch size 1, requested type "simple"
  5089                           ; Number of cases is 3, Range of values is 1 to 3
  5090                           ; switch strategies available:
  5091                           ; Name         Instructions Cycles
  5092                           ; simple_byte           10     6 (average)
  5093                           ;	Chosen strategy is simple_byte
  5094  00219E  0A01               	xorlw	1	; case 1
  5095  0021A0  B4D8               	btfsc	status,2,c
  5096  0021A2  D797               	goto	l2199
  5097  0021A4  0A03               	xorlw	3	; case 2
  5098  0021A6  B4D8               	btfsc	status,2,c
  5099  0021A8  D7A4               	goto	l2205
  5100  0021AA  0A01               	xorlw	1	; case 3
  5101  0021AC  A4D8               	btfss	status,2,c
  5102  0021AE  0012               	return	
  5103  0021B0  D7C3               	goto	l2215
  5104  0021B2                     __end_of_EscribeLCD_n8:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function ___lbmod *****************
  5108 ;; Defined at:
  5109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  dividend        1    wreg     unsigned char 
  5112 ;;  divisor         1    5[COMRAM] unsigned char 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  dividend        1    6[COMRAM] unsigned char 
  5115 ;;  rem             1    8[COMRAM] unsigned char 
  5116 ;;  counter         1    7[COMRAM] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      unsigned char 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5126 ;;      Params:         1       0       0       0       0       0       0       0       0
  5127 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5129 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5130 ;;Total ram usage:        4 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 3
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_EscribeLCD_n8
  5137 ;;		_ModuloOperacion
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text18
  5142  0028B8                     __ptext18:
  5143                           	callstack 0
  5144  0028B8                     ___lbmod:
  5145                           	callstack 26
  5146                           
  5147                           ;incstack = 0
  5148                           ;___lbmod@dividend stored from wreg
  5149  0028B8  6E07               	movwf	___lbmod@dividend^0,c
  5150  0028BA  0E08               	movlw	8
  5151  0028BC  6E08               	movwf	___lbmod@counter^0,c
  5152  0028BE  0E00               	movlw	0
  5153  0028C0  6E09               	movwf	___lbmod@rem^0,c
  5154  0028C2                     l2175:
  5155  0028C2  90D8               	bcf	status,0,c
  5156  0028C4  3407               	rlcf	___lbmod@dividend^0,w,c
  5157  0028C6  3409               	rlcf	___lbmod@rem^0,w,c
  5158  0028C8  6E09               	movwf	___lbmod@rem^0,c
  5159  0028CA  90D8               	bcf	status,0,c
  5160  0028CC  3607               	rlcf	___lbmod@dividend^0,f,c
  5161  0028CE  5006               	movf	___lbmod@divisor^0,w,c
  5162  0028D0  5C09               	subwf	___lbmod@rem^0,w,c
  5163  0028D2  A0D8               	btfss	status,0,c
  5164  0028D4  D002               	goto	l2183
  5165  0028D6  5006               	movf	___lbmod@divisor^0,w,c
  5166  0028D8  5E09               	subwf	___lbmod@rem^0,f,c
  5167  0028DA                     l2183:
  5168  0028DA  2E08               	decfsz	___lbmod@counter^0,f,c
  5169  0028DC  D7F2               	goto	l2175
  5170  0028DE  5009               	movf	___lbmod@rem^0,w,c
  5171  0028E0  0012               	return		;funcret
  5172  0028E2                     __end_of___lbmod:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function ___lbdiv *****************
  5176 ;; Defined at:
  5177 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbdiv.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  dividend        1    wreg     unsigned char 
  5180 ;;  divisor         1    9[COMRAM] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  dividend        1   10[COMRAM] unsigned char 
  5183 ;;  quotient        1   12[COMRAM] unsigned char 
  5184 ;;  counter         1   11[COMRAM] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      unsigned char 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         1       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        4 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; Hardware stack levels required when called: 3
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_EscribeLCD_n8
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text19
  5209  002846                     __ptext19:
  5210                           	callstack 0
  5211  002846                     ___lbdiv:
  5212                           	callstack 25
  5213                           
  5214                           ;incstack = 0
  5215                           ;___lbdiv@dividend stored from wreg
  5216  002846  6E0B               	movwf	___lbdiv@dividend^0,c
  5217  002848  0E00               	movlw	0
  5218  00284A  6E0D               	movwf	___lbdiv@quotient^0,c
  5219  00284C  500A               	movf	___lbdiv@divisor^0,w,c
  5220  00284E  B4D8               	btfsc	status,2,c
  5221  002850  D015               	goto	l2169
  5222  002852  0E01               	movlw	1
  5223  002854  6E0C               	movwf	___lbdiv@counter^0,c
  5224  002856  D003               	goto	l2157
  5225  002858                     l2153:
  5226  002858  90D8               	bcf	status,0,c
  5227  00285A  360A               	rlcf	___lbdiv@divisor^0,f,c
  5228  00285C  2A0C               	incf	___lbdiv@counter^0,f,c
  5229  00285E                     l2157:
  5230  00285E  AE0A               	btfss	___lbdiv@divisor^0,7,c
  5231  002860  D7FB               	goto	l2153
  5232  002862                     u1420:
  5233  002862  90D8               	bcf	status,0,c
  5234  002864  360D               	rlcf	___lbdiv@quotient^0,f,c
  5235  002866  500A               	movf	___lbdiv@divisor^0,w,c
  5236  002868  5C0B               	subwf	___lbdiv@dividend^0,w,c
  5237  00286A  A0D8               	btfss	status,0,c
  5238  00286C  D003               	goto	l2165
  5239  00286E  500A               	movf	___lbdiv@divisor^0,w,c
  5240  002870  5E0B               	subwf	___lbdiv@dividend^0,f,c
  5241  002872  800D               	bsf	___lbdiv@quotient^0,0,c
  5242  002874                     l2165:
  5243  002874  90D8               	bcf	status,0,c
  5244  002876  320A               	rrcf	___lbdiv@divisor^0,f,c
  5245  002878  2E0C               	decfsz	___lbdiv@counter^0,f,c
  5246  00287A  D7F3               	goto	u1420
  5247  00287C                     l2169:
  5248  00287C  500D               	movf	___lbdiv@quotient^0,w,c
  5249  00287E  0012               	return		;funcret
  5250  002880                     __end_of___lbdiv:
  5251                           	callstack 0
  5252                           
  5253 ;; *************** function _InicializaLCD *****************
  5254 ;; Defined at:
  5255 ;;		line 67 in file "LibLCDXC8.h"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; Hardware stack levels required when called: 6
  5276 ;; This function calls:
  5277 ;;		_BorraLCD
  5278 ;;		_EnviaDato
  5279 ;;		_HabilitaLCD
  5280 ;;		_RetardoLCD
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text20
  5287  002332                     __ptext20:
  5288                           	callstack 0
  5289  002332                     _InicializaLCD:
  5290                           	callstack 24
  5291                           
  5292                           ;LibLCDXC8.h: 69: LATD2=0;
  5293                           
  5294                           ;incstack = 0
  5295  002332  948C               	bcf	3980,2,c	;volatile
  5296                           
  5297                           ;LibLCDXC8.h: 70: if(interfaz==4)
  5298  002334  0E04               	movlw	4
  5299  002336  1842               	xorwf	_interfaz^0,w,c
  5300  002338  A4D8               	btfss	status,2,c
  5301  00233A  D004               	goto	l2631
  5302                           
  5303                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
  5304  00233C  508C               	movf	140,w,c	;volatile
  5305  00233E  0B0F               	andlw	15
  5306  002340  0930               	iorlw	48
  5307  002342  D001               	goto	L1
  5308  002344                     l2631:
  5309                           
  5310                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
  5311  002344  0E3F               	movlw	63
  5312  002346                     L1:
  5313  002346  6E8C               	movwf	140,c	;volatile
  5314                           
  5315                           ;LibLCDXC8.h: 74: HabilitaLCD();
  5316  002348  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5317                           
  5318                           ;LibLCDXC8.h: 75: RetardoLCD(1);
  5319  00234C  0E01               	movlw	1
  5320  00234E  EC95  F013         	call	_RetardoLCD
  5321                           
  5322                           ;LibLCDXC8.h: 76: if(interfaz==4)
  5323  002352  0E04               	movlw	4
  5324  002354  1842               	xorwf	_interfaz^0,w,c
  5325  002356  A4D8               	btfss	status,2,c
  5326  002358  D004               	goto	l2641
  5327                           
  5328                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
  5329  00235A  508C               	movf	140,w,c	;volatile
  5330  00235C  0B0F               	andlw	15
  5331  00235E  0930               	iorlw	48
  5332  002360  D001               	goto	L2
  5333  002362                     l2641:
  5334                           
  5335                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  5336  002362  0E3F               	movlw	63
  5337  002364                     L2:
  5338  002364  6E8C               	movwf	140,c	;volatile
  5339                           
  5340                           ;LibLCDXC8.h: 80: HabilitaLCD();
  5341  002366  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5342                           
  5343                           ;LibLCDXC8.h: 81: RetardoLCD(3);
  5344  00236A  0E03               	movlw	3
  5345  00236C  EC95  F013         	call	_RetardoLCD
  5346                           
  5347                           ;LibLCDXC8.h: 82: if(interfaz==4)
  5348  002370  0E04               	movlw	4
  5349  002372  1842               	xorwf	_interfaz^0,w,c
  5350  002374  A4D8               	btfss	status,2,c
  5351  002376  D004               	goto	l2651
  5352                           
  5353                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x30;
  5354  002378  508C               	movf	140,w,c	;volatile
  5355  00237A  0B0F               	andlw	15
  5356  00237C  0930               	iorlw	48
  5357  00237E  D001               	goto	L3
  5358  002380                     l2651:
  5359                           
  5360                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
  5361  002380  0E3F               	movlw	63
  5362  002382                     L3:
  5363  002382  6E8C               	movwf	140,c	;volatile
  5364                           
  5365                           ;LibLCDXC8.h: 86: HabilitaLCD();
  5366  002384  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5367                           
  5368                           ;LibLCDXC8.h: 87: RetardoLCD(4);
  5369  002388  0E04               	movlw	4
  5370  00238A  EC95  F013         	call	_RetardoLCD
  5371                           
  5372                           ;LibLCDXC8.h: 88: if(interfaz==4){
  5373  00238E  0E04               	movlw	4
  5374  002390  1842               	xorwf	_interfaz^0,w,c
  5375  002392  A4D8               	btfss	status,2,c
  5376  002394  D011               	goto	l2671
  5377                           
  5378                           ;LibLCDXC8.h: 89: LATD=(LATD & 0b00001111) | 0x20;
  5379  002396  508C               	movf	140,w,c	;volatile
  5380  002398  0B0F               	andlw	15
  5381  00239A  0920               	iorlw	32
  5382  00239C  6E8C               	movwf	140,c	;volatile
  5383                           
  5384                           ;LibLCDXC8.h: 90: HabilitaLCD();
  5385  00239E  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5386                           
  5387                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  5388  0023A2  0E04               	movlw	4
  5389  0023A4  EC95  F013         	call	_RetardoLCD
  5390                           
  5391                           ;LibLCDXC8.h: 92: EnviaDato(0x2F);
  5392  0023A8  0E2F               	movlw	47
  5393  0023AA  ECC0  F013         	call	_EnviaDato
  5394                           
  5395                           ;LibLCDXC8.h: 93: HabilitaLCD();
  5396  0023AE  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5397                           
  5398                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  5399  0023B2  0E04               	movlw	4
  5400  0023B4  EC95  F013         	call	_RetardoLCD
  5401  0023B8                     l2671:
  5402                           
  5403                           ;LibLCDXC8.h: 95: };LibLCDXC8.h: 96: BorraLCD();
  5404  0023B8  ECD9  F014         	call	_BorraLCD	;wreg free
  5405                           
  5406                           ;LibLCDXC8.h: 97: EnviaDato(0xF);
  5407  0023BC  0E0F               	movlw	15
  5408  0023BE  ECC0  F013         	call	_EnviaDato
  5409                           
  5410                           ;LibLCDXC8.h: 98: HabilitaLCD();
  5411  0023C2  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5412                           
  5413                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  5414  0023C6  0E04               	movlw	4
  5415  0023C8  EC95  F013         	call	_RetardoLCD
  5416  0023CC  0012               	return		;funcret
  5417  0023CE                     __end_of_InicializaLCD:
  5418                           	callstack 0
  5419                           
  5420 ;; *************** function _BorraLCD *****************
  5421 ;; Defined at:
  5422 ;;		line 110 in file "LibLCDXC8.h"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5436 ;;      Params:         0       0       0       0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5439 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 5
  5443 ;; This function calls:
  5444 ;;		_EnviaDato
  5445 ;;		_HabilitaLCD
  5446 ;;		_RetardoLCD
  5447 ;; This function is called by:
  5448 ;;		_InicializaLCD
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text21
  5454  0029B2                     __ptext21:
  5455                           	callstack 0
  5456  0029B2                     _BorraLCD:
  5457                           	callstack 24
  5458                           
  5459                           ;LibLCDXC8.h: 112: LATD2=0;
  5460                           
  5461                           ;incstack = 0
  5462  0029B2  948C               	bcf	3980,2,c	;volatile
  5463                           
  5464                           ;LibLCDXC8.h: 113: EnviaDato(0x01);
  5465  0029B4  0E01               	movlw	1
  5466  0029B6  ECC0  F013         	call	_EnviaDato
  5467                           
  5468                           ;LibLCDXC8.h: 114: HabilitaLCD();
  5469  0029BA  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5470                           
  5471                           ;LibLCDXC8.h: 115: RetardoLCD(2);
  5472  0029BE  0E02               	movlw	2
  5473  0029C0  EC95  F013         	call	_RetardoLCD
  5474  0029C4  0012               	return		;funcret
  5475  0029C6                     __end_of_BorraLCD:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _GuardarASCII *****************
  5479 ;; Defined at:
  5480 ;;		line 341 in file "LibLCDXC8.h"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  cgram           1    wreg     unsigned char 
  5483 ;;  arreglo         1   10[COMRAM] PTR unsigned char 
  5484 ;;		 -> barco(8), cereza(8), pacman2(8), pacman(8), 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  cgram           1   11[COMRAM] unsigned char 
  5487 ;;  i               1   12[COMRAM] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1    wreg      void 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5497 ;;      Params:         1       0       0       0       0       0       0       0       0
  5498 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5500 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5501 ;;Total ram usage:        3 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; Hardware stack levels required when called: 6
  5504 ;; This function calls:
  5505 ;;		_DireccionaLCD
  5506 ;;		_EscribeLCD_c
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text22
  5513  0028E2                     __ptext22:
  5514                           	callstack 0
  5515  0028E2                     _GuardarASCII:
  5516                           	callstack 24
  5517                           
  5518                           ;incstack = 0
  5519                           ;GuardarASCII@cgram stored from wreg
  5520  0028E2  6E0C               	movwf	GuardarASCII@cgram^0,c
  5521                           
  5522                           ;LibLCDXC8.h: 342: unsigned char i;;LibLCDXC8.h: 343: DireccionaLCD(cgram);
  5523  0028E4  500C               	movf	GuardarASCII@cgram^0,w,c
  5524  0028E6  ECCE  F014         	call	_DireccionaLCD
  5525                           
  5526                           ;LibLCDXC8.h: 344: for(i=0;i<8;i++){
  5527  0028EA  0E00               	movlw	0
  5528  0028EC  6E0D               	movwf	GuardarASCII@i^0,c
  5529  0028EE                     l3063:
  5530                           
  5531                           ;LibLCDXC8.h: 345: EscribeLCD_c(arreglo[i]);
  5532  0028EE  500B               	movf	GuardarASCII@arreglo^0,w,c
  5533  0028F0  240D               	addwf	GuardarASCII@i^0,w,c
  5534  0028F2  6ED9               	movwf	fsr2l,c
  5535  0028F4  6ADA               	clrf	fsr2h,c
  5536  0028F6  50DF               	movf	indf2,w,c
  5537  0028F8  ECC3  F014         	call	_EscribeLCD_c
  5538  0028FC  2A0D               	incf	GuardarASCII@i^0,f,c
  5539  0028FE  0E07               	movlw	7
  5540  002900  640D               	cpfsgt	GuardarASCII@i^0,c
  5541  002902  D7F5               	goto	l3063
  5542                           
  5543                           ;LibLCDXC8.h: 346: };LibLCDXC8.h: 347: DireccionaLCD(128);
  5544  002904  0E80               	movlw	128
  5545  002906  ECCE  F014         	call	_DireccionaLCD
  5546  00290A  0012               	return		;funcret
  5547  00290C                     __end_of_GuardarASCII:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function _EscribeLCD_c *****************
  5551 ;; Defined at:
  5552 ;;		line 118 in file "LibLCDXC8.h"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  a               1    wreg     unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  a               1    9[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        1 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 5
  5573 ;; This function calls:
  5574 ;;		_EnviaDato
  5575 ;;		_HabilitaLCD
  5576 ;;		_RetardoLCD
  5577 ;; This function is called by:
  5578 ;;		_EscribeLCD_n32
  5579 ;;		_MensajeLCD_Var
  5580 ;;		_EscribeLCD_2Decimales
  5581 ;;		_GuardarASCII
  5582 ;;		_main
  5583 ;;		_ModuloOperacion
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text23
  5588  002986                     __ptext23:
  5589                           	callstack 0
  5590  002986                     _EscribeLCD_c:
  5591                           	callstack 23
  5592                           
  5593                           ;incstack = 0
  5594                           ;EscribeLCD_c@a stored from wreg
  5595  002986  6E0A               	movwf	EscribeLCD_c@a^0,c
  5596                           
  5597                           ;LibLCDXC8.h: 122: LATD2=1;
  5598  002988  848C               	bsf	3980,2,c	;volatile
  5599                           
  5600                           ;LibLCDXC8.h: 123: EnviaDato(a);
  5601  00298A  500A               	movf	EscribeLCD_c@a^0,w,c
  5602  00298C  ECC0  F013         	call	_EnviaDato
  5603                           
  5604                           ;LibLCDXC8.h: 124: HabilitaLCD();
  5605  002990  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5606                           
  5607                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  5608  002994  0E04               	movlw	4
  5609  002996  EC95  F013         	call	_RetardoLCD
  5610  00299A  0012               	return		;funcret
  5611  00299C                     __end_of_EscribeLCD_c:
  5612                           	callstack 0
  5613                           
  5614 ;; *************** function _DireccionaLCD *****************
  5615 ;; Defined at:
  5616 ;;		line 299 in file "LibLCDXC8.h"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  a               1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  a               1    9[COMRAM] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5634 ;;Total ram usage:        1 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 5
  5637 ;; This function calls:
  5638 ;;		_EnviaDato
  5639 ;;		_HabilitaLCD
  5640 ;;		_RetardoLCD
  5641 ;; This function is called by:
  5642 ;;		_GuardarASCII
  5643 ;;		_main
  5644 ;;		_ModuloOperacion
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text24
  5649  00299C                     __ptext24:
  5650                           	callstack 0
  5651  00299C                     _DireccionaLCD:
  5652                           	callstack 24
  5653                           
  5654                           ;incstack = 0
  5655                           ;DireccionaLCD@a stored from wreg
  5656  00299C  6E0A               	movwf	DireccionaLCD@a^0,c
  5657                           
  5658                           ;LibLCDXC8.h: 302: LATD2=0;
  5659  00299E  948C               	bcf	3980,2,c	;volatile
  5660                           
  5661                           ;LibLCDXC8.h: 303: EnviaDato(a);
  5662  0029A0  500A               	movf	DireccionaLCD@a^0,w,c
  5663  0029A2  ECC0  F013         	call	_EnviaDato
  5664                           
  5665                           ;LibLCDXC8.h: 304: HabilitaLCD();
  5666  0029A6  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5667                           
  5668                           ;LibLCDXC8.h: 305: RetardoLCD(4);
  5669  0029AA  0E04               	movlw	4
  5670  0029AC  EC95  F013         	call	_RetardoLCD
  5671  0029B0  0012               	return		;funcret
  5672  0029B2                     __end_of_DireccionaLCD:
  5673                           	callstack 0
  5674                           
  5675 ;; *************** function _EnviaDato *****************
  5676 ;; Defined at:
  5677 ;;		line 55 in file "LibLCDXC8.h"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  a               1    wreg     unsigned char 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  a               1    8[COMRAM] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0
  5692 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5693 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5694 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used: 1
  5697 ;; Hardware stack levels required when called: 4
  5698 ;; This function calls:
  5699 ;;		_HabilitaLCD
  5700 ;;		_RetardoLCD
  5701 ;; This function is called by:
  5702 ;;		_InicializaLCD
  5703 ;;		_BorraLCD
  5704 ;;		_EscribeLCD_c
  5705 ;;		_EscribeLCD_n8
  5706 ;;		_DireccionaLCD
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text25
  5711  002780                     __ptext25:
  5712                           	callstack 0
  5713  002780                     _EnviaDato:
  5714                           	callstack 23
  5715                           
  5716                           ;incstack = 0
  5717                           ;EnviaDato@a stored from wreg
  5718  002780  6E09               	movwf	EnviaDato@a^0,c
  5719                           
  5720                           ;LibLCDXC8.h: 56: if(interfaz==4){
  5721  002782  0E04               	movlw	4
  5722  002784  1842               	xorwf	_interfaz^0,w,c
  5723  002786  A4D8               	btfss	status,2,c
  5724  002788  D017               	goto	l2107
  5725                           
  5726                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  5727  00278A  C009  F008         	movff	EnviaDato@a,??_EnviaDato
  5728  00278E  0EF0               	movlw	240
  5729  002790  1608               	andwf	??_EnviaDato^0,f,c
  5730  002792  508C               	movf	140,w,c	;volatile
  5731  002794  0B0F               	andlw	15
  5732  002796  1008               	iorwf	??_EnviaDato^0,w,c
  5733  002798  6E8C               	movwf	140,c	;volatile
  5734                           
  5735                           ;LibLCDXC8.h: 58: HabilitaLCD();
  5736  00279A  ECEB  F014         	call	_HabilitaLCD	;wreg free
  5737                           
  5738                           ;LibLCDXC8.h: 59: RetardoLCD(1);
  5739  00279E  0E01               	movlw	1
  5740  0027A0  EC95  F013         	call	_RetardoLCD
  5741                           
  5742                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a<<4);
  5743  0027A4  C009  F008         	movff	EnviaDato@a,??_EnviaDato
  5744  0027A8  3A08               	swapf	??_EnviaDato^0,f,c
  5745  0027AA  0EF0               	movlw	240
  5746  0027AC  1608               	andwf	??_EnviaDato^0,f,c
  5747  0027AE  508C               	movf	140,w,c	;volatile
  5748  0027B0  0B0F               	andlw	15
  5749  0027B2  1008               	iorwf	??_EnviaDato^0,w,c
  5750  0027B4  6E8C               	movwf	140,c	;volatile
  5751                           
  5752                           ;LibLCDXC8.h: 63: }else if(interfaz==8){
  5753  0027B6  0012               	return	
  5754  0027B8                     l2107:
  5755  0027B8  0E08               	movlw	8
  5756  0027BA  1842               	xorwf	_interfaz^0,w,c
  5757  0027BC  A4D8               	btfss	status,2,c
  5758  0027BE  0012               	return	
  5759                           
  5760                           ;LibLCDXC8.h: 64: LATD=a;
  5761  0027C0  C009  FF8C         	movff	EnviaDato@a,3980	;volatile
  5762  0027C4  0012               	return		;funcret
  5763  0027C6                     __end_of_EnviaDato:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function _RetardoLCD *****************
  5767 ;; Defined at:
  5768 ;;		line 308 in file "LibLCDXC8.h"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  a               1    wreg     unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  a               1    6[COMRAM] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0
  5783 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5784 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5786 ;;Total ram usage:        2 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 3
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_EnviaDato
  5793 ;;		_InicializaLCD
  5794 ;;		_BorraLCD
  5795 ;;		_EscribeLCD_c
  5796 ;;		_EscribeLCD_n8
  5797 ;;		_DireccionaLCD
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text26
  5802  00272A                     __ptext26:
  5803                           	callstack 0
  5804  00272A                     _RetardoLCD:
  5805                           	callstack 24
  5806                           
  5807                           ;incstack = 0
  5808                           ;RetardoLCD@a stored from wreg
  5809  00272A  6E07               	movwf	RetardoLCD@a^0,c
  5810                           
  5811                           ;LibLCDXC8.h: 309: switch(a){
  5812  00272C  D01B               	goto	l2095
  5813  00272E                     l2085:
  5814  00272E  0E05               	movlw	5
  5815  002730  6E06               	movwf	??_RetardoLCD^0,c
  5816  002732  0EDE               	movlw	222
  5817  002734                     u3017:
  5818  002734  2EE8               	decfsz	wreg,f,c
  5819  002736  D7FE               	bra	u3017
  5820  002738  2E06               	decfsz	??_RetardoLCD^0,f,c
  5821  00273A  D7FC               	bra	u3017
  5822                           
  5823                           ;LibLCDXC8.h: 312: break;
  5824  00273C  0012               	return	
  5825  00273E                     l2087:
  5826  00273E  0E53               	movlw	83
  5827  002740                     u3027:
  5828  002740  2EE8               	decfsz	wreg,f,c
  5829  002742  D7FE               	bra	u3027
  5830  002744  F000               	nop	
  5831                           
  5832                           ;LibLCDXC8.h: 314: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5833  002746  0E35               	movlw	53
  5834  002748                     u3037:
  5835  002748  2EE8               	decfsz	wreg,f,c
  5836  00274A  D7FE               	bra	u3037
  5837  00274C  F000               	nop	
  5838                           
  5839                           ;LibLCDXC8.h: 316: break;
  5840  00274E  0012               	return	
  5841  002750                     l2089:
  5842  002750  0E08               	movlw	8
  5843  002752                     u3047:
  5844  002752  2EE8               	decfsz	wreg,f,c
  5845  002754  D7FE               	bra	u3047
  5846  002756  F000               	nop	
  5847                           
  5848                           ;LibLCDXC8.h: 319: break;
  5849  002758  0012               	return	
  5850  00275A                     l2091:
  5851  00275A  0E03               	movlw	3
  5852  00275C                     u3057:
  5853  00275C  2EE8               	decfsz	wreg,f,c
  5854  00275E  D7FE               	bra	u3057
  5855  002760  F000               	nop	
  5856                           
  5857                           ;LibLCDXC8.h: 322: break;
  5858  002762  0012               	return	
  5859  002764                     l2095:
  5860  002764  5007               	movf	RetardoLCD@a^0,w,c
  5861                           
  5862                           ; Switch size 1, requested type "simple"
  5863                           ; Number of cases is 4, Range of values is 1 to 4
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte           13     7 (average)
  5867                           ;	Chosen strategy is simple_byte
  5868  002766  0A01               	xorlw	1	; case 1
  5869  002768  B4D8               	btfsc	status,2,c
  5870  00276A  D7E1               	goto	l2085
  5871  00276C  0A03               	xorlw	3	; case 2
  5872  00276E  B4D8               	btfsc	status,2,c
  5873  002770  D7E6               	goto	l2087
  5874  002772  0A01               	xorlw	1	; case 3
  5875  002774  B4D8               	btfsc	status,2,c
  5876  002776  D7EC               	goto	l2089
  5877  002778  0A07               	xorlw	7	; case 4
  5878  00277A  A4D8               	btfss	status,2,c
  5879  00277C  0012               	return	
  5880  00277E  D7ED               	goto	l2091
  5881  002780                     __end_of_RetardoLCD:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _HabilitaLCD *****************
  5885 ;; Defined at:
  5886 ;;		line 102 in file "LibLCDXC8.h"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 3
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_EnviaDato
  5911 ;;		_InicializaLCD
  5912 ;;		_BorraLCD
  5913 ;;		_EscribeLCD_c
  5914 ;;		_EscribeLCD_n8
  5915 ;;		_DireccionaLCD
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text27
  5920  0029D6                     __ptext27:
  5921                           	callstack 0
  5922  0029D6                     _HabilitaLCD:
  5923                           	callstack 24
  5924                           
  5925                           ;LibLCDXC8.h: 104: LATD3=1;
  5926                           
  5927                           ;incstack = 0
  5928  0029D6  868C               	bsf	3980,3,c	;volatile
  5929                           
  5930                           ;LibLCDXC8.h: 105: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5931  0029D8  0E03               	movlw	3
  5932  0029DA                     u3067:
  5933  0029DA  2EE8               	decfsz	wreg,f,c
  5934  0029DC  D7FE               	bra	u3067
  5935  0029DE  F000               	nop	
  5936                           
  5937                           ;LibLCDXC8.h: 107: LATD3=0;
  5938  0029E0  968C               	bcf	3980,3,c	;volatile
  5939  0029E2  0012               	return		;funcret
  5940  0029E4                     __end_of_HabilitaLCD:
  5941                           	callstack 0
  5942                           
  5943 ;; *************** function _ConfiguraLCD *****************
  5944 ;; Defined at:
  5945 ;;		line 51 in file "LibLCDXC8.h"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  a               1    wreg     unsigned char 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  a               1    5[COMRAM] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0
  5960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5962 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5963 ;;Total ram usage:        1 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 3
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text28
  5974  002958                     __ptext28:
  5975                           	callstack 0
  5976  002958                     _ConfiguraLCD:
  5977                           	callstack 27
  5978                           
  5979                           ;incstack = 0
  5980                           ;ConfiguraLCD@a stored from wreg
  5981  002958  6E06               	movwf	ConfiguraLCD@a^0,c
  5982                           
  5983                           ;LibLCDXC8.h: 52: if(a==4 | a ==8)
  5984  00295A  0E04               	movlw	4
  5985  00295C  1806               	xorwf	ConfiguraLCD@a^0,w,c
  5986  00295E  B4D8               	btfsc	status,2,c
  5987  002960  D004               	goto	u1930
  5988  002962  0E08               	movlw	8
  5989  002964  1806               	xorwf	ConfiguraLCD@a^0,w,c
  5990  002966  A4D8               	btfss	status,2,c
  5991  002968  0012               	return	
  5992  00296A                     u1930:
  5993                           
  5994                           ;LibLCDXC8.h: 53: interfaz=a;
  5995  00296A  C006  F042         	movff	ConfiguraLCD@a,_interfaz
  5996  00296E  0012               	return		;funcret
  5997  002970                     __end_of_ConfiguraLCD:
  5998                           	callstack 0
  5999                           
  6000 ;; *************** function _ISR *****************
  6001 ;; Defined at:
  6002 ;;		line 119 in file "Lab4.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6016 ;;      Params:         0       0       0       0       0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6018 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6019 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6020 ;;Total ram usage:        2 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 2
  6023 ;; This function calls:
  6024 ;;		_OpTeclado
  6025 ;; This function is called by:
  6026 ;;		Interrupt level 2
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	intcode
  6031  000008                     __pintcode:
  6032                           	callstack 0
  6033  000008                     _ISR:
  6034                           	callstack 23
  6035                           
  6036                           ;incstack = 0
  6037  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6038  00000A  EDB4  F00E         	call	int_func,f	;refresh shadow registers
  6039                           
  6040                           	psect	intcode_body
  6041  001D68                     __pintcode_body:
  6042                           	callstack 23
  6043  001D68                     int_func:
  6044                           	callstack 23
  6045  001D68  0006               	pop		; remove dummy address from shadow register refresh
  6046  001D6A  CFD9 F004          	movff	fsr2l,??_ISR
  6047  001D6E  CFDA F005          	movff	fsr2h,??_ISR+1
  6048                           
  6049                           ;Lab4.c: 121: if(RBIF==1){
  6050  001D72  A0F2               	btfss	4082,0,c	;volatile
  6051  001D74  D0A4               	goto	i2l3041
  6052                           
  6053                           ;Lab4.c: 122: if(PORTB!=0b11110000){
  6054  001D76  0EF0               	movlw	240
  6055  001D78  1881               	xorwf	129,w,c	;volatile
  6056  001D7A  B4D8               	btfsc	status,2,c
  6057  001D7C  D09F               	goto	i2l3039
  6058                           
  6059                           ;Lab4.c: 123: LATB=0b11111110;
  6060  001D7E  0EFE               	movlw	254
  6061  001D80  6E8A               	movwf	138,c	;volatile
  6062                           
  6063                           ;Lab4.c: 124: if(RB4==0) {
  6064  001D82  B881               	btfsc	3969,4,c	;volatile
  6065  001D84  D00E               	goto	i2l217
  6066                           
  6067                           ;Lab4.c: 125: if(RA0==0)OpTeclado(2, '+');
  6068  001D86  B080               	btfsc	3968,0,c	;volatile
  6069  001D88  D006               	goto	i2l2985
  6070  001D8A  0E2B               	movlw	43
  6071  001D8C  6E02               	movwf	OpTeclado@A^0,c
  6072  001D8E  0E02               	movlw	2
  6073  001D90  EC03  F014         	call	_OpTeclado
  6074  001D94  D08B               	goto	i2l3033
  6075  001D96                     i2l2985:
  6076                           
  6077                           ;Lab4.c: 126: else OpTeclado(2, '^');
  6078  001D96  0E5E               	movlw	94
  6079  001D98  6E02               	movwf	OpTeclado@A^0,c
  6080  001D9A  0E02               	movlw	2
  6081  001D9C  EC03  F014         	call	_OpTeclado
  6082  001DA0  D085               	goto	i2l3033
  6083  001DA2                     i2l217:
  6084                           
  6085                           ;Lab4.c: 128: else if(RB5==0){
  6086  001DA2  BA81               	btfsc	3969,5,c	;volatile
  6087  001DA4  D00E               	goto	i2l221
  6088                           
  6089                           ;Lab4.c: 129: if(RA0==0) OpTeclado(2, '-');
  6090  001DA6  B080               	btfsc	3968,0,c	;volatile
  6091  001DA8  D006               	goto	i2l2991
  6092  001DAA  0E2D               	movlw	45
  6093  001DAC  6E02               	movwf	OpTeclado@A^0,c
  6094  001DAE  0E02               	movlw	2
  6095  001DB0  EC03  F014         	call	_OpTeclado
  6096  001DB4  D07B               	goto	i2l3033
  6097  001DB6                     i2l2991:
  6098                           
  6099                           ;Lab4.c: 130: else OpTeclado(2, '!');
  6100  001DB6  0E21               	movlw	33
  6101  001DB8  6E02               	movwf	OpTeclado@A^0,c
  6102  001DBA  0E02               	movlw	2
  6103  001DBC  EC03  F014         	call	_OpTeclado
  6104                           
  6105                           ;Lab4.c: 132: }
  6106  001DC0  D075               	goto	i2l3033
  6107  001DC2                     i2l221:
  6108                           
  6109                           ;Lab4.c: 133: else if(RB6==0) OpTeclado(2, 'x');
  6110  001DC2  BC81               	btfsc	3969,6,c	;volatile
  6111  001DC4  D006               	goto	i2l225
  6112  001DC6  0E78               	movlw	120
  6113  001DC8  6E02               	movwf	OpTeclado@A^0,c
  6114  001DCA  0E02               	movlw	2
  6115  001DCC  EC03  F014         	call	_OpTeclado
  6116  001DD0  D06D               	goto	i2l3033
  6117  001DD2                     i2l225:
  6118                           
  6119                           ;Lab4.c: 134: else if(RB7==0) OpTeclado(2, '/');
  6120  001DD2  BE81               	btfsc	3969,7,c	;volatile
  6121  001DD4  D006               	goto	i2l2997
  6122  001DD6  0E2F               	movlw	47
  6123  001DD8  6E02               	movwf	OpTeclado@A^0,c
  6124  001DDA  0E02               	movlw	2
  6125  001DDC  EC03  F014         	call	_OpTeclado
  6126  001DE0  D065               	goto	i2l3033
  6127  001DE2                     i2l2997:
  6128                           
  6129                           ;Lab4.c: 135: else{;Lab4.c: 136: LATB=0b11111101;
  6130  001DE2  0EFD               	movlw	253
  6131  001DE4  6E8A               	movwf	138,c	;volatile
  6132                           
  6133                           ;Lab4.c: 137: if(RB4==0) OpTeclado(3, '=');
  6134  001DE6  B881               	btfsc	3969,4,c	;volatile
  6135  001DE8  D006               	goto	i2l229
  6136  001DEA  0E3D               	movlw	61
  6137  001DEC  6E02               	movwf	OpTeclado@A^0,c
  6138  001DEE  0E03               	movlw	3
  6139  001DF0  EC03  F014         	call	_OpTeclado
  6140  001DF4  D05B               	goto	i2l3033
  6141  001DF6                     i2l229:
  6142                           
  6143                           ;Lab4.c: 138: else if(RB5==0) OpTeclado(1, '9');
  6144  001DF6  BA81               	btfsc	3969,5,c	;volatile
  6145  001DF8  D006               	goto	i2l231
  6146  001DFA  0E39               	movlw	57
  6147  001DFC  6E02               	movwf	OpTeclado@A^0,c
  6148  001DFE  0E01               	movlw	1
  6149  001E00  EC03  F014         	call	_OpTeclado
  6150  001E04  D053               	goto	i2l3033
  6151  001E06                     i2l231:
  6152                           
  6153                           ;Lab4.c: 139: else if(RB6==0) OpTeclado(1, '6');
  6154  001E06  BC81               	btfsc	3969,6,c	;volatile
  6155  001E08  D006               	goto	i2l233
  6156  001E0A  0E36               	movlw	54
  6157  001E0C  6E02               	movwf	OpTeclado@A^0,c
  6158  001E0E  0E01               	movlw	1
  6159  001E10  EC03  F014         	call	_OpTeclado
  6160  001E14  D04B               	goto	i2l3033
  6161  001E16                     i2l233:
  6162                           
  6163                           ;Lab4.c: 140: else if(RB7==0) OpTeclado(1, '3');
  6164  001E16  BE81               	btfsc	3969,7,c	;volatile
  6165  001E18  D006               	goto	i2l3009
  6166  001E1A  0E33               	movlw	51
  6167  001E1C  6E02               	movwf	OpTeclado@A^0,c
  6168  001E1E  0E01               	movlw	1
  6169  001E20  EC03  F014         	call	_OpTeclado
  6170  001E24  D043               	goto	i2l3033
  6171  001E26                     i2l3009:
  6172                           
  6173                           ;Lab4.c: 141: else{;Lab4.c: 142: LATB=0b11111011;
  6174  001E26  0EFB               	movlw	251
  6175  001E28  6E8A               	movwf	138,c	;volatile
  6176                           
  6177                           ;Lab4.c: 143: if(RB4==0) OpTeclado(1, '0');
  6178  001E2A  B881               	btfsc	3969,4,c	;volatile
  6179  001E2C  D006               	goto	i2l237
  6180  001E2E  0E30               	movlw	48
  6181  001E30  6E02               	movwf	OpTeclado@A^0,c
  6182  001E32  0E01               	movlw	1
  6183  001E34  EC03  F014         	call	_OpTeclado
  6184  001E38  D039               	goto	i2l3033
  6185  001E3A                     i2l237:
  6186                           
  6187                           ;Lab4.c: 144: else if(RB5==0) OpTeclado(1, '8');
  6188  001E3A  BA81               	btfsc	3969,5,c	;volatile
  6189  001E3C  D006               	goto	i2l239
  6190  001E3E  0E38               	movlw	56
  6191  001E40  6E02               	movwf	OpTeclado@A^0,c
  6192  001E42  0E01               	movlw	1
  6193  001E44  EC03  F014         	call	_OpTeclado
  6194  001E48  D031               	goto	i2l3033
  6195  001E4A                     i2l239:
  6196                           
  6197                           ;Lab4.c: 145: else if(RB6==0) OpTeclado(1, '5');
  6198  001E4A  BC81               	btfsc	3969,6,c	;volatile
  6199  001E4C  D006               	goto	i2l241
  6200  001E4E  0E35               	movlw	53
  6201  001E50  6E02               	movwf	OpTeclado@A^0,c
  6202  001E52  0E01               	movlw	1
  6203  001E54  EC03  F014         	call	_OpTeclado
  6204  001E58  D029               	goto	i2l3033
  6205  001E5A                     i2l241:
  6206                           
  6207                           ;Lab4.c: 146: else if(RB7==0) OpTeclado(1, '2');
  6208  001E5A  BE81               	btfsc	3969,7,c	;volatile
  6209  001E5C  D006               	goto	i2l3021
  6210  001E5E  0E32               	movlw	50
  6211  001E60  6E02               	movwf	OpTeclado@A^0,c
  6212  001E62  0E01               	movlw	1
  6213  001E64  EC03  F014         	call	_OpTeclado
  6214  001E68  D021               	goto	i2l3033
  6215  001E6A                     i2l3021:
  6216                           
  6217                           ;Lab4.c: 147: else{;Lab4.c: 148: LATB=0b11110111;
  6218  001E6A  0EF7               	movlw	247
  6219  001E6C  6E8A               	movwf	138,c	;volatile
  6220                           
  6221                           ;Lab4.c: 149: if(RB4==0) OpTeclado(4,' ');
  6222  001E6E  B881               	btfsc	3969,4,c	;volatile
  6223  001E70  D006               	goto	i2l245
  6224  001E72  0E20               	movlw	32
  6225  001E74  6E02               	movwf	OpTeclado@A^0,c
  6226  001E76  0E04               	movlw	4
  6227  001E78  EC03  F014         	call	_OpTeclado
  6228  001E7C  D017               	goto	i2l3033
  6229  001E7E                     i2l245:
  6230                           
  6231                           ;Lab4.c: 150: else if(RB5==0) OpTeclado(1, '7');
  6232  001E7E  BA81               	btfsc	3969,5,c	;volatile
  6233  001E80  D006               	goto	i2l247
  6234  001E82  0E37               	movlw	55
  6235  001E84  6E02               	movwf	OpTeclado@A^0,c
  6236  001E86  0E01               	movlw	1
  6237  001E88  EC03  F014         	call	_OpTeclado
  6238  001E8C  D00F               	goto	i2l3033
  6239  001E8E                     i2l247:
  6240                           
  6241                           ;Lab4.c: 151: else if(RB6==0) OpTeclado(1, '4');
  6242  001E8E  BC81               	btfsc	3969,6,c	;volatile
  6243  001E90  D006               	goto	i2l249
  6244  001E92  0E34               	movlw	52
  6245  001E94  6E02               	movwf	OpTeclado@A^0,c
  6246  001E96  0E01               	movlw	1
  6247  001E98  EC03  F014         	call	_OpTeclado
  6248  001E9C  D007               	goto	i2l3033
  6249  001E9E                     i2l249:
  6250                           
  6251                           ;Lab4.c: 152: else if(RB7==0) OpTeclado(1, '1');
  6252  001E9E  BE81               	btfsc	3969,7,c	;volatile
  6253  001EA0  D005               	goto	i2l3033
  6254  001EA2  0E31               	movlw	49
  6255  001EA4  6E02               	movwf	OpTeclado@A^0,c
  6256  001EA6  0E01               	movlw	1
  6257  001EA8  EC03  F014         	call	_OpTeclado
  6258  001EAC                     i2l3033:
  6259                           
  6260                           ;Lab4.c: 153: };Lab4.c: 154: };Lab4.c: 155: };Lab4.c: 156: LATB=0b11110000;
  6261  001EAC  0EF0               	movlw	240
  6262  001EAE  6E8A               	movwf	138,c	;volatile
  6263                           
  6264                           ;Lab4.c: 157: activado=1;
  6265  001EB0  0E01               	movlw	1
  6266  001EB2  6E54               	movwf	_activado^0,c
  6267                           
  6268                           ;Lab4.c: 158: TMR0=26473;
  6269  001EB4  0E67               	movlw	103
  6270  001EB6  6ED7               	movwf	215,c	;volatile
  6271  001EB8  0E69               	movlw	105
  6272  001EBA  6ED6               	movwf	214,c	;volatile
  6273  001EBC                     i2l3039:
  6274                           
  6275                           ;Lab4.c: 159: };Lab4.c: 160: RBIF=0;
  6276  001EBC  90F2               	bcf	4082,0,c	;volatile
  6277  001EBE                     i2l3041:
  6278                           
  6279                           ;Lab4.c: 161: };Lab4.c: 163: if(TMR1IF==1){
  6280  001EBE  A09E               	btfss	3998,0,c	;volatile
  6281  001EC0  D00A               	goto	i2u259_45
  6282                           
  6283                           ;Lab4.c: 164: TMR1=3036;
  6284  001EC2  0E0B               	movlw	11
  6285  001EC4  6ECF               	movwf	207,c	;volatile
  6286  001EC6  0EDC               	movlw	220
  6287  001EC8  6ECE               	movwf	206,c	;volatile
  6288                           
  6289                           ;Lab4.c: 165: TMR1IF=0;
  6290  001ECA  909E               	bcf	3998,0,c	;volatile
  6291                           
  6292                           ;Lab4.c: 166: LATD0=LATD0^1;
  6293  001ECC  B08C               	btfsc	3980,0,c	;volatile
  6294  001ECE  D002               	goto	i2u258_40
  6295  001ED0  808C               	bsf	3980,0,c	;volatile
  6296  001ED2  D001               	goto	i2u259_45
  6297  001ED4                     i2u258_40:
  6298  001ED4  908C               	bcf	3980,0,c	;volatile
  6299  001ED6                     i2u259_45:
  6300                           
  6301                           ;Lab4.c: 167: };Lab4.c: 169: if(TMR0IF==1){
  6302  001ED6  A4F2               	btfss	4082,2,c	;volatile
  6303  001ED8  D006               	goto	i2l254
  6304                           
  6305                           ;Lab4.c: 170: TMR0=26473;
  6306  001EDA  0E67               	movlw	103
  6307  001EDC  6ED7               	movwf	215,c	;volatile
  6308  001EDE  0E69               	movlw	105
  6309  001EE0  6ED6               	movwf	214,c	;volatile
  6310                           
  6311                           ;Lab4.c: 171: TMR0IF=0;
  6312  001EE2  94F2               	bcf	4082,2,c	;volatile
  6313  001EE4  0003               	sleep		;# 
  6314  001EE6                     i2l254:
  6315  001EE6  C005  FFDA         	movff	??_ISR+1,fsr2h
  6316  001EEA  C004  FFD9         	movff	??_ISR,fsr2l
  6317  001EEE  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6318  001EF0  0011               	retfie		f
  6319  001EF2                     __end_of_ISR:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _OpTeclado *****************
  6323 ;; Defined at:
  6324 ;;		line 176 in file "Lab4.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  c               1    wreg     unsigned char 
  6327 ;;  A               1    1[COMRAM] unsigned char 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  c               1    2[COMRAM] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6339 ;;      Params:         1       0       0       0       0       0       0       0       0
  6340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6342 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; Hardware stack levels required when called: 1
  6346 ;; This function calls:
  6347 ;;		_ControlError
  6348 ;; This function is called by:
  6349 ;;		_ISR
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text30
  6354  002806                     __ptext30:
  6355                           	callstack 0
  6356  002806                     _OpTeclado:
  6357                           	callstack 23
  6358                           
  6359                           ;incstack = 0
  6360                           ;OpTeclado@c stored from wreg
  6361  002806  6E03               	movwf	OpTeclado@c^0,c
  6362                           
  6363                           ;Lab4.c: 177: Cambio=ControlError(c);
  6364  002808  5003               	movf	OpTeclado@c^0,w,c
  6365  00280A  EC0B  F013         	call	_ControlError
  6366  00280E  6E56               	movwf	_Cambio^0,c
  6367                           
  6368                           ;Lab4.c: 178: if(Cambio==1){
  6369  002810  0456               	decf	_Cambio^0,w,c
  6370  002812  A4D8               	btfss	status,2,c
  6371  002814  0012               	return	
  6372                           
  6373                           ;Lab4.c: 179: if(A==' ') {borrar=1;cont--;operacion[cont]=A;}
  6374  002816  0E20               	movlw	32
  6375  002818  1802               	xorwf	OpTeclado@A^0,w,c
  6376  00281A  A4D8               	btfss	status,2,c
  6377  00281C  D00A               	goto	i2l2843
  6378  00281E  0E01               	movlw	1
  6379  002820  6E58               	movwf	_borrar^0,c
  6380  002822  0659               	decf	_cont^0,f,c
  6381  002824  5059               	movf	_cont^0,w,c
  6382  002826  0F3D               	addlw	low _operacion
  6383  002828  6ED9               	movwf	fsr2l,c
  6384  00282A  6ADA               	clrf	fsr2h,c
  6385  00282C  C002  FFDF         	movff	OpTeclado@A,indf2
  6386  002830  D002               	goto	i2l2845
  6387  002832                     i2l2843:
  6388                           
  6389                           ;Lab4.c: 180: else;Lab4.c: 181: digitar=1;
  6390  002832  0E01               	movlw	1
  6391  002834  6E55               	movwf	_digitar^0,c
  6392  002836                     i2l2845:
  6393                           
  6394                           ;Lab4.c: 182: operacion[cont]=A;
  6395  002836  5059               	movf	_cont^0,w,c
  6396  002838  0F3D               	addlw	low _operacion
  6397  00283A  6ED9               	movwf	fsr2l,c
  6398  00283C  6ADA               	clrf	fsr2h,c
  6399  00283E  C002  FFDF         	movff	OpTeclado@A,indf2
  6400                           
  6401                           ;Lab4.c: 183: cont++;
  6402  002842  2A59               	incf	_cont^0,f,c
  6403  002844  0012               	return		;funcret
  6404  002846                     __end_of_OpTeclado:
  6405                           	callstack 0
  6406                           
  6407 ;; *************** function _ControlError *****************
  6408 ;; Defined at:
  6409 ;;		line 294 in file "Lab4.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  A               1    wreg     unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  A               1    0[COMRAM] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      unsigned char 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0
  6424 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6426 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_OpTeclado
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text31
  6437  002616                     __ptext31:
  6438                           	callstack 0
  6439  002616                     _ControlError:
  6440                           	callstack 23
  6441                           
  6442                           ;incstack = 0
  6443                           ;ControlError@A stored from wreg
  6444  002616  6E01               	movwf	ControlError@A^0,c
  6445                           
  6446                           ;Lab4.c: 295: switch(A){
  6447  002618  D022               	goto	i2l2521
  6448  00261A                     i2l2453:
  6449  00261A  5059               	movf	_cont^0,w,c
  6450  00261C  B4D8               	btfsc	status,2,c
  6451  00261E  D008               	goto	i2u174_40
  6452  002620  0E02               	movlw	2
  6453  002622  1859               	xorwf	_cont^0,w,c
  6454  002624  A4D8               	btfss	status,2,c
  6455  002626  D006               	goto	i2l2465
  6456  002628  0E21               	movlw	33
  6457  00262A  183E               	xorwf	(_operacion+1)^0,w,c
  6458  00262C  B4D8               	btfsc	status,2,c
  6459  00262E  D002               	goto	i2l2465
  6460  002630                     i2u174_40:
  6461  002630  0E01               	movlw	1
  6462  002632  0012               	return	
  6463  002634                     i2l2465:
  6464                           
  6465                           ;Lab4.c: 297: else return 0;
  6466  002634  0E00               	movlw	0
  6467  002636  0012               	return	
  6468  002638                     i2l2469:
  6469  002638  0459               	decf	_cont^0,w,c
  6470  00263A  B4D8               	btfsc	status,2,c
  6471  00263C  D7F9               	goto	i2u174_40
  6472  00263E  D7FA               	goto	i2l2465
  6473  002640                     i2l2481:
  6474  002640  0E03               	movlw	3
  6475  002642  1859               	xorwf	_cont^0,w,c
  6476  002644  B4D8               	btfsc	status,2,c
  6477  002646  D7F4               	goto	i2u174_40
  6478                           
  6479                           ;Lab4.c: 301: else if(cont==2 && operacion[1]=='!') return 1;
  6480  002648  0E02               	movlw	2
  6481  00264A  1859               	xorwf	_cont^0,w,c
  6482  00264C  A4D8               	btfss	status,2,c
  6483  00264E  D7F2               	goto	i2l2465
  6484  002650  0E21               	movlw	33
  6485  002652  183E               	xorwf	(_operacion+1)^0,w,c
  6486  002654  D7F2               	goto	L4
  6487  002656                     i2l2503:
  6488  002656  5059               	movf	_cont^0,w,c
  6489  002658  A4D8               	btfss	status,2,c
  6490  00265A  D7EA               	goto	i2u174_40
  6491  00265C  D7EB               	goto	i2l2465
  6492  00265E                     i2l2521:
  6493  00265E  5001               	movf	ControlError@A^0,w,c
  6494                           
  6495                           ; Switch size 1, requested type "simple"
  6496                           ; Number of cases is 4, Range of values is 1 to 4
  6497                           ; switch strategies available:
  6498                           ; Name         Instructions Cycles
  6499                           ; simple_byte           13     7 (average)
  6500                           ;	Chosen strategy is simple_byte
  6501  002660  0A01               	xorlw	1	; case 1
  6502  002662  B4D8               	btfsc	status,2,c
  6503  002664  D7DA               	goto	i2l2453
  6504  002666  0A03               	xorlw	3	; case 2
  6505  002668  B4D8               	btfsc	status,2,c
  6506  00266A  D7E6               	goto	i2l2469
  6507  00266C  0A01               	xorlw	1	; case 3
  6508  00266E  B4D8               	btfsc	status,2,c
  6509  002670  D7E7               	goto	i2l2481
  6510  002672  0A07               	xorlw	7	; case 4
  6511  002674  B4D8               	btfsc	status,2,c
  6512  002676  D7EF               	goto	i2l2503
  6513  002678  D7DD               	goto	i2l2465
  6514  00267A                     __end_of_ControlError:
  6515                           	callstack 0
  6516                           
  6517                           	psect	rparam
  6518  0000                     
  6519                           	psect	temp
  6520  00005A                     btemp:
  6521                           	callstack 0
  6522  00005A                     	ds	1
  6523  0000                     int$flags	set	btemp
  6524  0000                     wtemp8	set	btemp+1
  6525  0000                     ttemp5	set	btemp+1
  6526  0000                     ttemp6	set	btemp+4
  6527  0000                     ttemp7	set	btemp+8
  6528                           
  6529                           	psect	idloc
  6530                           
  6531                           ;Config register IDLOC0 @ 0x200000
  6532                           ;	unspecified, using default values
  6533  200000                     	org	2097152
  6534  200000  FF                 	db	255
  6535                           
  6536                           ;Config register IDLOC1 @ 0x200001
  6537                           ;	unspecified, using default values
  6538  200001                     	org	2097153
  6539  200001  FF                 	db	255
  6540                           
  6541                           ;Config register IDLOC2 @ 0x200002
  6542                           ;	unspecified, using default values
  6543  200002                     	org	2097154
  6544  200002  FF                 	db	255
  6545                           
  6546                           ;Config register IDLOC3 @ 0x200003
  6547                           ;	unspecified, using default values
  6548  200003                     	org	2097155
  6549  200003  FF                 	db	255
  6550                           
  6551                           ;Config register IDLOC4 @ 0x200004
  6552                           ;	unspecified, using default values
  6553  200004                     	org	2097156
  6554  200004  FF                 	db	255
  6555                           
  6556                           ;Config register IDLOC5 @ 0x200005
  6557                           ;	unspecified, using default values
  6558  200005                     	org	2097157
  6559  200005  FF                 	db	255
  6560                           
  6561                           ;Config register IDLOC6 @ 0x200006
  6562                           ;	unspecified, using default values
  6563  200006                     	org	2097158
  6564  200006  FF                 	db	255
  6565                           
  6566                           ;Config register IDLOC7 @ 0x200007
  6567                           ;	unspecified, using default values
  6568  200007                     	org	2097159
  6569  200007  FF                 	db	255
  6570                           
  6571                           	psect	config
  6572                           
  6573                           ;Config register CONFIG1L @ 0x300000
  6574                           ;	unspecified, using default values
  6575                           ;	PLL Prescaler Selection bits
  6576                           ;	PLLDIV = 0x0, unprogrammed default
  6577                           ;	System Clock Postscaler Selection bits
  6578                           ;	CPUDIV = 0x0, unprogrammed default
  6579                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6580                           ;	USBDIV = 0x0, unprogrammed default
  6581  300000                     	org	3145728
  6582  300000  00                 	db	0
  6583                           
  6584                           ;Config register CONFIG1H @ 0x300001
  6585                           ;	Oscillator Selection bits
  6586                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6587                           ;	Fail-Safe Clock Monitor Enable bit
  6588                           ;	FCMEN = 0x0, unprogrammed default
  6589                           ;	Internal/External Oscillator Switchover bit
  6590                           ;	IESO = 0x0, unprogrammed default
  6591  300001                     	org	3145729
  6592  300001  09                 	db	9
  6593                           
  6594                           ;Config register CONFIG2L @ 0x300002
  6595                           ;	unspecified, using default values
  6596                           ;	Power-up Timer Enable bit
  6597                           ;	PWRT = 0x1, unprogrammed default
  6598                           ;	Brown-out Reset Enable bits
  6599                           ;	BOR = 0x3, unprogrammed default
  6600                           ;	Brown-out Reset Voltage bits
  6601                           ;	BORV = 0x3, unprogrammed default
  6602                           ;	USB Voltage Regulator Enable bit
  6603                           ;	VREGEN = 0x0, unprogrammed default
  6604  300002                     	org	3145730
  6605  300002  1F                 	db	31
  6606                           
  6607                           ;Config register CONFIG2H @ 0x300003
  6608                           ;	Watchdog Timer Enable bit
  6609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6610                           ;	Watchdog Timer Postscale Select bits
  6611                           ;	WDTPS = 0xF, unprogrammed default
  6612  300003                     	org	3145731
  6613  300003  1E                 	db	30
  6614                           
  6615                           ; Padding undefined space
  6616  300004                     	org	3145732
  6617  300004  FF                 	db	255
  6618                           
  6619                           ;Config register CONFIG3H @ 0x300005
  6620                           ;	unspecified, using default values
  6621                           ;	CCP2 MUX bit
  6622                           ;	CCP2MX = 0x1, unprogrammed default
  6623                           ;	PORTB A/D Enable bit
  6624                           ;	PBADEN = 0x1, unprogrammed default
  6625                           ;	Low-Power Timer 1 Oscillator Enable bit
  6626                           ;	LPT1OSC = 0x0, unprogrammed default
  6627                           ;	MCLR Pin Enable bit
  6628                           ;	MCLRE = 0x1, unprogrammed default
  6629  300005                     	org	3145733
  6630  300005  83                 	db	131
  6631                           
  6632                           ;Config register CONFIG4L @ 0x300006
  6633                           ;	Stack Full/Underflow Reset Enable bit
  6634                           ;	STVREN = 0x1, unprogrammed default
  6635                           ;	Single-Supply ICSP Enable bit
  6636                           ;	LVP = OFF, Single-Supply ICSP disabled
  6637                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6638                           ;	ICPRT = 0x0, unprogrammed default
  6639                           ;	Extended Instruction Set Enable bit
  6640                           ;	XINST = 0x0, unprogrammed default
  6641                           ;	Background Debugger Enable bit
  6642                           ;	DEBUG = 0x1, unprogrammed default
  6643  300006                     	org	3145734
  6644  300006  81                 	db	129
  6645                           
  6646                           ; Padding undefined space
  6647  300007                     	org	3145735
  6648  300007  FF                 	db	255
  6649                           
  6650                           ;Config register CONFIG5L @ 0x300008
  6651                           ;	unspecified, using default values
  6652                           ;	Code Protection bit
  6653                           ;	CP0 = 0x1, unprogrammed default
  6654                           ;	Code Protection bit
  6655                           ;	CP1 = 0x1, unprogrammed default
  6656                           ;	Code Protection bit
  6657                           ;	CP2 = 0x1, unprogrammed default
  6658                           ;	Code Protection bit
  6659                           ;	CP3 = 0x1, unprogrammed default
  6660  300008                     	org	3145736
  6661  300008  0F                 	db	15
  6662                           
  6663                           ;Config register CONFIG5H @ 0x300009
  6664                           ;	unspecified, using default values
  6665                           ;	Boot Block Code Protection bit
  6666                           ;	CPB = 0x1, unprogrammed default
  6667                           ;	Data EEPROM Code Protection bit
  6668                           ;	CPD = 0x1, unprogrammed default
  6669  300009                     	org	3145737
  6670  300009  C0                 	db	192
  6671                           
  6672                           ;Config register CONFIG6L @ 0x30000A
  6673                           ;	unspecified, using default values
  6674                           ;	Write Protection bit
  6675                           ;	WRT0 = 0x1, unprogrammed default
  6676                           ;	Write Protection bit
  6677                           ;	WRT1 = 0x1, unprogrammed default
  6678                           ;	Write Protection bit
  6679                           ;	WRT2 = 0x1, unprogrammed default
  6680                           ;	Write Protection bit
  6681                           ;	WRT3 = 0x1, unprogrammed default
  6682  30000A                     	org	3145738
  6683  30000A  0F                 	db	15
  6684                           
  6685                           ;Config register CONFIG6H @ 0x30000B
  6686                           ;	unspecified, using default values
  6687                           ;	Configuration Register Write Protection bit
  6688                           ;	WRTC = 0x1, unprogrammed default
  6689                           ;	Boot Block Write Protection bit
  6690                           ;	WRTB = 0x1, unprogrammed default
  6691                           ;	Data EEPROM Write Protection bit
  6692                           ;	WRTD = 0x1, unprogrammed default
  6693  30000B                     	org	3145739
  6694  30000B  E0                 	db	224
  6695                           
  6696                           ;Config register CONFIG7L @ 0x30000C
  6697                           ;	unspecified, using default values
  6698                           ;	Table Read Protection bit
  6699                           ;	EBTR0 = 0x1, unprogrammed default
  6700                           ;	Table Read Protection bit
  6701                           ;	EBTR1 = 0x1, unprogrammed default
  6702                           ;	Table Read Protection bit
  6703                           ;	EBTR2 = 0x1, unprogrammed default
  6704                           ;	Table Read Protection bit
  6705                           ;	EBTR3 = 0x1, unprogrammed default
  6706  30000C                     	org	3145740
  6707  30000C  0F                 	db	15
  6708                           
  6709                           ;Config register CONFIG7H @ 0x30000D
  6710                           ;	unspecified, using default values
  6711                           ;	Boot Block Table Read Protection bit
  6712                           ;	EBTRB = 0x1, unprogrammed default
  6713  30000D                     	org	3145741
  6714  30000D  40                 	db	64
  6715                           tosu	equ	0xFFF
  6716                           tosh	equ	0xFFE
  6717                           tosl	equ	0xFFD
  6718                           stkptr	equ	0xFFC
  6719                           pclatu	equ	0xFFB
  6720                           pclath	equ	0xFFA
  6721                           pcl	equ	0xFF9
  6722                           tblptru	equ	0xFF8
  6723                           tblptrh	equ	0xFF7
  6724                           tblptrl	equ	0xFF6
  6725                           tablat	equ	0xFF5
  6726                           prodh	equ	0xFF4
  6727                           prodl	equ	0xFF3
  6728                           indf0	equ	0xFEF
  6729                           postinc0	equ	0xFEE
  6730                           postdec0	equ	0xFED
  6731                           preinc0	equ	0xFEC
  6732                           plusw0	equ	0xFEB
  6733                           fsr0h	equ	0xFEA
  6734                           fsr0l	equ	0xFE9
  6735                           wreg	equ	0xFE8
  6736                           indf1	equ	0xFE7
  6737                           postinc1	equ	0xFE6
  6738                           postdec1	equ	0xFE5
  6739                           preinc1	equ	0xFE4
  6740                           plusw1	equ	0xFE3
  6741                           fsr1h	equ	0xFE2
  6742                           fsr1l	equ	0xFE1
  6743                           bsr	equ	0xFE0
  6744                           indf2	equ	0xFDF
  6745                           postinc2	equ	0xFDE
  6746                           postdec2	equ	0xFDD
  6747                           preinc2	equ	0xFDC
  6748                           plusw2	equ	0xFDB
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    0
    Data        38
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      89
    BANK0           160     43      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GuardarASCII@arreglo	PTR unsigned char  size(1) Largest target is 8
		 -> barco(BANK0[8]), cereza(BANK0[8]), pacman2(COMRAM[8]), pacman(COMRAM[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _ModuloOperacion->_EscribeLCD_n32
    _abs->___fttol
    ___lbtoft->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->_abs
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n32->___lldiv
    ___lldiv->___llmod
    _EscribeLCD_2Decimales->_EscribeLCD_n8
    ___fttol->___ftmul
    ___ftmul->___ftpack
    _EscribeLCD_n8->___fttol
    ___lbdiv->___lbmod
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _GuardarASCII->_DireccionaLCD
    _GuardarASCII->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->_OpTeclado
    _OpTeclado->_ControlError

Critical Paths under _main in BANK0

    _main->_ModuloOperacion

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   43053
                                             58 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                       _GuardarASCII
                      _InicializaLCD
                     _MensajeLCD_Var
                    _ModuloOperacion
 ---------------------------------------------------------------------------------
 (1) _ModuloOperacion                                     43    43      0   40527
                                              0 BANK0     43    43      0
                      _DireccionaLCD
              _EscribeLCD_2Decimales
                       _EscribeLCD_c
                     _EscribeLCD_n32
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___fttol
                            ___lbmod
                           ___lbtoft
                             ___lmul
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                             43 COMRAM     4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     826
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                             13 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              5 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             13 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3239
                                             47 COMRAM     4     1      3
                           ___ftpack
                            ___fttol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       7     5      2     982
                                             10 COMRAM     7     5      2
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n32                                      31    26      5   15116
                                             27 COMRAM    31    26      5
                       _EscribeLCD_c
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    6999
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5634
                                             14 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_2Decimales                                7     4      3    7550
                                             48 COMRAM     7     4      3
                       _EscribeLCD_c
                      _EscribeLCD_n8
                            ___awmod
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1012
                                             28 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3450
                                             13 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              5 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    2319
                                             43 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___fttol (ARG)
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     615
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              9 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _GuardarASCII                                         3     2      1     785
                                             10 COMRAM     3     2      1
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              9 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                              9 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              7 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0    1478
                                              3 COMRAM     2     2      0
                          _OpTeclado
 ---------------------------------------------------------------------------------
 (7) _OpTeclado                                            2     1      1    1478
                                              1 COMRAM     2     1      1
                       _ControlError
 ---------------------------------------------------------------------------------
 (8) _ControlError                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarASCII
     _DireccionaLCD
     _EscribeLCD_c
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   _ModuloOperacion
     _DireccionaLCD
     _EscribeLCD_2Decimales
       _EscribeLCD_c
       _EscribeLCD_n8
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___awmod
       ___ftmul
       ___fttol
     _EscribeLCD_c
     _EscribeLCD_n32
       _EscribeLCD_c
       ___lldiv
         ___llmod (ARG)
       ___llmod
     _EscribeLCD_n8
     _MensajeLCD_Var
     ___awtoft
       ___ftpack
       ___fttol (ARG)
       _abs (ARG)
         ___fttol (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___fttol
     ___lbmod
     ___lbtoft
       ___ftpack
     ___lmul
     _abs

 _ISR (ROOT)
   _OpTeclado
     _ControlError

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      3B       5       36.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      20        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 03 17:24:29 2022

                     EnviaDato@a 0009                    _InicializaLCD 2332  
                            l361 243E                              l742 2604  
                            l675 209A                              _GIE 007F97  
                            l996 292A                              _RA0 007C00  
                            _RB4 007C0C                              _RB5 007C0D  
                            _RB6 007C0E                              _RB7 007C0F  
                            _ISR 0008                              _POR 007E81  
                            _abs 290C                     ___awmod@sign 000B  
                            wreg 000FE8                             ?_ISR 0001  
                   ___ftdiv@cntr 0017                     ___ftdiv@sign 001C  
                           ?_abs 002C                             l2121 22AC  
                           l2107 27B8                             l2131 2308  
                           l2123 22CA                             l2205 20F2  
                           l2215 2138                             l2231 219C  
                           l2311 2554                             l2127 22E0  
                           l2119 22A2                             l3103 188C  
                           l2153 2858                             l2321 2576  
                           l2129 22FE                             l2241 23FC  
                           l3105 18A8                             l2091 275A  
                           l2331 2598                             l2315 2560  
                           l2251 2430                             l2411 0836  
                           l3203 1B96                             l3131 196E  
                           l2085 272E                             l2165 2874  
                           l2157 285E                             l2261 1F1A  
                           l2421 0C98                             l2413 0868  
                           l3125 18E0                             l3117 18CC  
                           l2087 273E                             l2095 2764  
                           l3063 28EE                             l2183 28DA  
                           l2175 28C2                             l2335 25A6  
                           l2327 258E                             l2319 256E  
                           l2239 23F0                             l2423 0E8E  
                           l2415 08EE                             l2431 16B0  
                           l3151 19B8                             l3143 19A6  
                           l2089 2750                             l2169 287C  
                           l2281 1F74                             l2345 21DE  
                           l2425 10E4                             l2417 09CC  
                           l3161 19EA                             l3129 195C  
                           l3081 176C                             l2291 1F9C  
                           l2267 1F42                             l2363 2232  
                           l2427 139A                             l2419 0B02  
                           l2435 27D0                             l2603 24EE  
                           l3091 17D0                             l3083 1788  
                           l2285 1F84                             l2381 2272  
                           l2373 224A                             l2613 253C  
                           l2533 26E4                             l3165 1A22  
                           l3317 1D3E                             l3309 1D22  
                           l2631 2344                             l2199 20D2  
                           l2295 1FAC                             l2375 2256  
                           l2367 2242                             l2391 25CE  
                           l2439 27EA                             l2607 2510  
                           l3167 1A2C                             l3175 1A6C  
                           l3159 19CA                             l3095 182A  
                           l3271 1CBE                             l2641 2362  
                           l2553 2036                             l2537 26F8  
                           l3193 1B2E                             l3249 1C5A  
                           l2651 2380                             l2547 200E  
                           l3195 1B56                             l3187 1ADA  
                           l3179 1A9A                             l3275 1CC8  
                           l3267 1CAA                             l2397 25F6  
                           l2389 25C2                             l2573 2074  
                           l3189 1AEC                             l3269 1CB2  
                           l2671 23B8                             l3287 1CDC  
                           l3295 1CF4                             l2595 2894  
                           STR_1 081B                             STR_2 080F  
                           STR_3 0801                             STR_4 0825  
                           STR_5 0801                             u1420 2862  
                           u1340 2294                             u1501 1F2A  
                           _LATB 000F8A                             u3007 1C88  
                           _LATD 000F8C                             u3017 2734  
                           u1601 21C2                             u1610 21CC  
                           u3027 2740                             u1380 2312  
                           u1620 21FC                             u1460 2400  
                           u3037 2748                             u3047 2752  
                           u3057 275C                             u1481 1F02  
                           u1625 21F4                             u1570 257A  
                           u3067 29DA                             u1660 225C  
                           u1831 1FF6                             u1930 296A  
                           u1690 25D2                             u2810 1A80  
                           u1851 201E                             _PEIE 007F96  
                           u2860 1BAA                             _RBIE 007F93  
                           _RBIF 007F90                             u2970 1D56  
                           u2890 1CC4                             u2987 1C0A  
                           u2997 1C60                             _RBPU 007F8F  
                           _TMR0 000FD6                             _TMR1 000FCE  
                 ??_EscribeLCD_c 000A                             abs@a 002C  
                           _cont 0059                             _main 1BC4  
                   ___ftpack@arg 0006                     ___ftpack@exp 0009  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 005A                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                 ??_ControlError 0001                    ?_GuardarASCII 000B  
                   ___ftmul@cntr 001B                       OpTeclado@A 0002  
                     OpTeclado@c 0003                     ___param_bank 000000  
                   ___ftmul@sign 001C                            ??_ISR 0004  
                   ___fttol@exp1 002B                            ??_abs 002E  
                   ___fttol@lval 0027                   ?_InicializaLCD 0001  
                          ?_main 0001                  __end_of___lbdiv 2880  
                __end_of___awmod 25B0                    EscribeLCD_c@a 000A  
                __end_of___lbmod 28E2                  __end_of___ftdiv 20CC  
                __end_of___lldiv 2450                  __end_of___ftmul 1FE6  
                          _T0CON 000FD5                            _T1CON 000FCD  
                __end_of___llmod 2616                  __end_of___fttol 2284  
                          _LATD0 007C60                            _LATD2 007C62  
                          _LATD3 007C63                            i2l221 1DC2  
                          i2l231 1E06                            i2l241 1E5A  
                          i2l233 1E16                            i2l225 1DD2  
                          i2l217 1DA2                            i2l245 1E7E  
                          i2l237 1E3A                            i2l229 1DF6  
                          i2l254 1EE6                            i2l247 1E8E  
                          i2l239 1E4A                            i2l249 1E9E  
                          _PORTB 000F81                            _TRISB 000F93  
                          _TRISD 000F95              ___lmul@multiplicand 000A  
                ??_EscribeLCD_n8 002D                            _barco 008B  
                  ___awtoft@sign 0033                            _reset 0053  
                  ___ftpack@sign 000A             EscribeLCD_n32@decena 0039  
                          main@i 003C          __size_of_MensajeLCD_Var 0040  
                          tablat 000FF5                      _HabilitaLCD 29D6  
           EscribeLCD_n32@millar 0035             EscribeLCD_n32@millon 0029  
                          ttemp5 005B                            ttemp6 005E  
                          ttemp7 0062                            status 000FD8  
                          wtemp8 005B             EscribeLCD_n32@unidad 003A  
                ___lbdiv@divisor 000A                  ___lbdiv@counter 000C  
                 ??_GuardarASCII 000C                    ControlError@A 0001  
               __end_of_BorraLCD 29C6                  __initialization 267A  
                   __end_of_main 1D68                           ??_main 003B  
           __end_of_ConfiguraLCD 2970                    ___fttol@sign1 0026  
                  __activetblptr 000002         EscribeLCD_2Decimales@num 0034  
                         _ADCON1 000FC1                 ___llmod@dividend 0006  
                 DireccionaLCD@a 000A                   EscribeLCD_n8@a 0030  
                 EscribeLCD_n8@b 002C                 __end_of___awtoft 28B8  
               __end_of___ftpack 2332               __size_of_EnviaDato 0046  
               __end_of___lbtoft 2958                           i2l3021 1E6A  
                         i2l3009 1E26                           i2l3033 1EAC  
                         i2l3041 1EBE                           i2l2503 2656  
                         i2l3039 1EBC                           i2l2521 265E  
                         i2l2453 261A                           i2l2481 2640  
                         i2l2465 2634                           i2l2469 2638  
                         i2l2843 2832                           i2l2845 2836  
                         i2l2991 1DB6                           i2l2985 1D96  
                         i2l2997 1DE2                           _TMR0IE 007F95  
                         _TMR0IF 007F92                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISA0 007C90  
          __end_of_DireccionaLCD 29B2                       _RetardoLCD 272A  
                         _Cambio 0056               __size_of_OpTeclado 0040  
               ??_EscribeLCD_n32 0021             EscribeLCD_n8@centena 002D  
                         ___ftge 24CC                           ___lmul 26D4  
                      ??___lbdiv 000B                        ??___awmod 000A  
                      ??___lbmod 0007                        ??___ftdiv 0014  
                      ??___lldiv 0017                        ??___ftmul 0014  
                      ??___llmod 000E                           _cereza 0093  
                      ??___fttol 0021                  ??_InicializaLCD 000A  
                         _borrar 0058                           _pacman 004B  
                         clear_0 26C0                  ___awmod@divisor 0008  
                         isa$std 000001                  ___awmod@counter 000A  
           __end_of_EscribeLCD_c 299C            EscribeLCD_n32@cienmil 002D  
          EscribeLCD_n32@centena 0037            ___ftmul@f3_as_product 0018  
          EscribeLCD_n32@diezmil 0031                     __pdataCOMRAM 003D  
           __end_of_ControlError 267A                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8         __size_of_ModuloOperacion 04CC  
               ___lbdiv@dividend 000B                  ___lbmod@divisor 0006  
                     __accesstop 0060          __end_of__initialization 26C6  
                ___lbmod@counter 0008            _EscribeLCD_2Decimales 2450  
                     ___ftge@ff1 0006                       ___ftge@ff2 0009  
                  ___rparam_used 000001                       ___ftdiv@f1 000E  
                     ___ftdiv@f2 0011                       ___ftdiv@f3 0018  
                     ___awtoft@c 0030                       ___lbtoft@c 0011  
                     ___ftmul@f1 000E                       ___ftmul@f2 0011  
                     ___fttol@f1 001D                   __pcstackCOMRAM 0001  
                   __pidataBANK0 29C6                __end_of_EnviaDato 27C6  
               ___lbdiv@quotient 000D           EscribeLCD_2Decimales@a 0031  
              __end_of_OpTeclado 2846  EscribeLCD_2Decimales@decimalesP 0036  
           __end_of_GuardarASCII 290C      EscribeLCD_2Decimales@unidad 0037  
                      ?_BorraLCD 0001                   _MensajeLCD_Var 27C6  
                MensajeLCD_Var@a 000B                  MensajeLCD_Var@i 0010  
                    ?_RetardoLCD 0001                      RetardoLCD@a 0007  
           ModuloOperacion@b_195 007D             ModuloOperacion@i_197 0078  
                        ?___ftge 0006                          ?___lmul 0006  
          __size_of_ConfiguraLCD 0018                  EscribeLCD_n32@a 001C  
                EscribeLCD_n32@b 0020                   ___lmul@product 000E  
                      ?___awtoft 0030                        ?___ftpack 0006  
                      ?___lbtoft 000E           __end_of_MensajeLCD_Var 2806  
                     ??_BorraLCD 000A           ?_EscribeLCD_2Decimales 0031  
         ModuloOperacion@var_196 0074                     ?_HabilitaLCD 0001  
              GuardarASCII@cgram 000C                     _ConfiguraLCD 2958  
              ??_ModuloOperacion 0060                          __Hparam 0000  
                        __Lparam 0000                    GuardarASCII@i 000D  
          __size_of_EscribeLCD_c 0016                  __size_of___ftge 0074  
                        ___lbdiv 2846                  __size_of___lmul 0056  
                        ___awmod 2540                          ___lbmod 28B8  
                        ___ftdiv 1FE6                          ___lldiv 23CE  
                        ___ftmul 1EF2                          ___llmod 25B0  
                        ___fttol 21B2                     __psmallconst 0800  
                        __pcinit 267A                       ??___awtoft 0033  
                     ??___ftpack 000B                       ??___lbtoft 0011  
          __size_of_ControlError 0064                          __ramtop 0800  
              ModuloOperacion@n1 0069                ModuloOperacion@n2 006C  
                        _digitar 0055                          __ptext0 1BC4  
                        __ptext1 16F8                          __ptext2 290C  
                        __ptext3 26D4                          __ptext4 2934  
                        __ptext5 24CC                          __ptext6 1FE6  
                        __ptext7 2880                          __ptext8 27C6  
                        __ptext9 0830                     __size_of_ISR 1EEA  
                        _pacman2 0043                     __size_of_abs 0028  
            __size_of_RetardoLCD 0056                          _limpiar 0057  
               ___awmod@dividend 0006                  ?_MensajeLCD_Var 000B  
          __end_of_EscribeLCD_n8 21B2                   __pintcode_body 1D68  
           end_of_initialization 26C6                    __Lmediumconst 0000  
                        int_func 1D68                     _EscribeLCD_c 2986  
                ___lldiv@divisor 0013                  ___lldiv@counter 001B  
                   _ControlError 2616                          postdec1 000FE5  
                        postinc0 000FEE            __size_of_GuardarASCII 002A  
               ___lbmod@dividend 0007                      ___lbmod@rem 0009  
             MensajeLCD_Var@cont 000C                      ___ftdiv@exp 001B  
                   _GuardarASCII 28E2                      ___ftmul@exp 0017  
                 __end_of___ftge 2540                   __end_of___lmul 272A  
            GuardarASCII@arreglo 000B                    __pidataCOMRAM 2970  
          __end_of_InicializaLCD 23CE                        _EnviaDato 2780  
         __size_of_DireccionaLCD 0016              start_initialization 267A  
                    __end_of_ISR 1EF2                      __end_of_abs 2934  
                      _OpTeclado 2806                __size_of_BorraLCD 0014  
                   ??_RetardoLCD 0006                  ___llmod@divisor 000A  
                ___llmod@counter 000E             __size_of_HabilitaLCD 000E  
            EscribeLCD_n8@decena 002E                         ??___ftge 000C  
                       ??___lmul 000E                      __pdataBANK0 008B  
            EscribeLCD_n8@unidad 002F          __size_of_EscribeLCD_n32 0EC8  
                     ?_EnviaDato 0001                __size_of___awtoft 0038  
              __size_of___ftpack 00AE                __size_of___lbtoft 0024  
                    __pbssCOMRAM 0053               __end_of_RetardoLCD 2780  
                  __pcstackBANK0 0060          ??_EscribeLCD_2Decimales 0034  
                _ModuloOperacion 16F8                       ?_OpTeclado 0002  
                  _DireccionaLCD 299C              ModuloOperacion@ResL 007E  
                      __pintcode 0008              ModuloOperacion@num1 0087  
            ModuloOperacion@num2 0086                         ?___lbdiv 000A  
                       ?___awmod 0006                         ?___lbmod 0006  
                       ?___ftdiv 000E                         ?___lldiv 000F  
                       ?___ftmul 000E                         ?___llmod 0006  
                       ?___fttol 001D                 ??_MensajeLCD_Var 000D  
        ModuloOperacion@ResL_194 0082                      __smallconst 0800  
               ModuloOperacion@b 007C                 ModuloOperacion@i 006F  
                 ?_DireccionaLCD 0001                        _operacion 003D  
                       i2u174_40 2630                         i2u258_40 1ED4  
                       i2u259_45 1ED6          __end_of_ModuloOperacion 1BC4  
                    ??_EnviaDato 0008                      ??_OpTeclado 0003  
                       _BorraLCD 29B2         EscribeLCD_n32@cienmillon 0021  
              ___lmul@multiplier 0006                        copy_data0 268E  
                      copy_data1 26AE         EscribeLCD_n32@diezmillon 0025  
                       __Hrparam 0000                         __Lrparam 0000  
         __size_of_EscribeLCD_n8 00E6                 __size_of___lbdiv 003A  
               __size_of___awmod 0070                 __size_of___lbmod 002A  
               __size_of___ftdiv 00E6                 __size_of___lldiv 0082  
               __size_of___ftmul 00F4                 __size_of___llmod 0066  
               __size_of___fttol 00D2                         ___awtoft 2880  
                       ___ftpack 2284                         ___lbtoft 2934  
                 _EscribeLCD_n32 0830                    ConfiguraLCD@a 0006  
                       _activado 0054               ModuloOperacion@n1L 0065  
             ModuloOperacion@Res 0088               ModuloOperacion@var 0070  
                       __ptext10 25B0                         __ptext11 23CE  
                       __ptext20 2332                         __ptext12 2450  
                       __ptext21 29B2                         __ptext13 21B2  
                       __ptext30 2806                         __ptext22 28E2  
                       __ptext14 1EF2                         __ptext31 2616  
                       __ptext23 2986                         __ptext15 2284  
                       __ptext24 299C                         __ptext16 2540  
                       __ptext25 2780                         __ptext17 20CC  
                       __ptext26 272A                         __ptext18 28B8  
                       __ptext27 29D6                         __ptext19 2846  
                       __ptext28 2958                  ??_DireccionaLCD 000A  
                  __size_of_main 01A4                         _interfaz 0042  
                       isa$xinst 000000                         int$flags 005A  
         __end_of_EscribeLCD_n32 16F8                 ?_ModuloOperacion 0001  
                  _EscribeLCD_n8 20CC   __size_of_EscribeLCD_2Decimales 007C  
  __end_of_EscribeLCD_2Decimales 24CC                         intlevel2 0000  
                  ??_HabilitaLCD 0006                 ___lldiv@dividend 000F  
                  ?_ConfiguraLCD 0001           __size_of_InicializaLCD 009C  
                ?_EscribeLCD_n32 001C                 ___lldiv@quotient 0017  
                 ?_EscribeLCD_n8 002C                   ??_ConfiguraLCD 0006  
                  ?_EscribeLCD_c 0001                    ?_ControlError 0001  
            __end_of_HabilitaLCD 29E4  
