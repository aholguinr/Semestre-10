

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu May 18 20:18:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 09/02/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   007D9B                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _interfaz
    63   007D9B  08                 	db	8
    64   000000                     _RD1	set	31769
    65   000000                     _IRCF0	set	32412
    66   000000                     _LATD3	set	31843
    67   000000                     _LATD2	set	31842
    68   000000                     _LATD	set	3980
    69   000000                     _RD0	set	31768
    70   000000                     _TRISD	set	3989
    71   000000                     _IRCF1	set	32413
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   007E02                     __pcinit:
    77                           	callstack 0
    78   007E02                     start_initialization:
    79                           	callstack 0
    80   007E02                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Initialize objects allocated to COMRAM (1 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85   007E02  0E9B               	movlw	low __pidataCOMRAM
    86   007E04  6EF6               	movwf	tblptrl,c
    87   007E06  0E7D               	movlw	high __pidataCOMRAM
    88   007E08  6EF7               	movwf	tblptrh,c
    89   007E0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    90   007E0C  6EF8               	movwf	tblptru,c
    91   007E0E  0009               	tblrd		*+	;fetch initializer
    92   007E10  CFF5 F008          	movff	tablat,__pdataCOMRAM
    93   007E14                     end_of_initialization:
    94                           	callstack 0
    95   007E14                     __end_of__initialization:
    96                           	callstack 0
    97   007E14  0E00               	movlw	low (__Lmediumconst shr (0+16))
    98   007E16  6EF8               	movwf	tblptru,c
    99   007E18  0100               	movlb	0
   100   007E1A  EF65  F03F         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	dataCOMRAM
   103   000008                     __pdataCOMRAM:
   104                           	callstack 0
   105   000008                     _interfaz:
   106                           	callstack 0
   107   000008                     	ds	1
   108                           
   109                           	psect	cstackCOMRAM
   110   000001                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000001                     ??_RetardoLCD:
   113   000001                     ConfiguraLCD@a:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x0
   117   000001                     	ds	1
   118   000002                     RetardoLCD@a:
   119                           	callstack 0
   120                           
   121                           ; 1 bytes @ 0x1
   122   000002                     	ds	1
   123   000003                     ??_EnviaDato:
   124                           
   125                           ; 1 bytes @ 0x2
   126   000003                     	ds	1
   127   000004                     EnviaDato@a:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x3
   131   000004                     	ds	1
   132   000005                     EscribeLCD_c@a:
   133                           	callstack 0
   134   000005                     DireccionaLCD@a:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x4
   138   000005                     	ds	1
   139   000006                     ??_main:
   140                           
   141                           ; 1 bytes @ 0x5
   142   000006                     	ds	2
   143                           
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 7 in file "PruebaLCD.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          2       0       0       0       0       0       0       0       0
   166 ;;      Totals:         2       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        2 bytes
   168 ;; Hardware stack levels required when called: 4
   169 ;; This function calls:
   170 ;;		_ConfiguraLCD
   171 ;;		_DireccionaLCD
   172 ;;		_EscribeLCD_c
   173 ;;		_InicializaLCD
   174 ;; This function is called by:
   175 ;;		Startup code after reset
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text0
   180   007ECA                     __ptext0:
   181                           	callstack 0
   182   007ECA                     _main:
   183                           	callstack 27
   184                           
   185                           ;PruebaLCD.c: 8: IRCF1=1;
   186                           
   187                           ;incstack = 0
   188   007ECA  8AD3               	bsf	4051,5,c	;volatile
   189                           
   190                           ;PruebaLCD.c: 9: IRCF0=1;
   191   007ECC  88D3               	bsf	4051,4,c	;volatile
   192                           
   193                           ;PruebaLCD.c: 10: TRISD=0;
   194   007ECE  0E00               	movlw	0
   195   007ED0  6E95               	movwf	149,c	;volatile
   196                           
   197                           ;PruebaLCD.c: 11: LATD=0;
   198   007ED2  0E00               	movlw	0
   199   007ED4  6E8C               	movwf	140,c	;volatile
   200                           
   201                           ;PruebaLCD.c: 12: RD0=0;
   202   007ED6  9083               	bcf	3971,0,c	;volatile
   203                           
   204                           ;PruebaLCD.c: 13: _delay((unsigned long)((1000)*(8000000/4000.0)));
   205   007ED8  0E0B               	movlw	11
   206   007EDA  6E07               	movwf	(??_main+1)^0,c
   207   007EDC  0E26               	movlw	38
   208   007EDE  6E06               	movwf	??_main^0,c
   209   007EE0  0E5E               	movlw	94
   210   007EE2                     u97:
   211   007EE2  2EE8               	decfsz	wreg,f,c
   212   007EE4  D7FE               	bra	u97
   213   007EE6  2E06               	decfsz	??_main^0,f,c
   214   007EE8  D7FC               	bra	u97
   215   007EEA  2E07               	decfsz	(??_main+1)^0,f,c
   216   007EEC  D7FA               	bra	u97
   217                           
   218                           ;PruebaLCD.c: 14: RD1=1;
   219   007EEE  8283               	bsf	3971,1,c	;volatile
   220                           
   221                           ;PruebaLCD.c: 15: ConfiguraLCD(4);
   222   007EF0  0E04               	movlw	4
   223   007EF2  ECF5  F03E         	call	_ConfiguraLCD
   224                           
   225                           ;PruebaLCD.c: 16: InicializaLCD();
   226   007EF6  ECB2  F03F         	call	_InicializaLCD	;wreg free
   227                           
   228                           ;PruebaLCD.c: 17: _delay((unsigned long)((1000)*(8000000/4000.0)));
   229   007EFA  0E0B               	movlw	11
   230   007EFC  6E07               	movwf	(??_main+1)^0,c
   231   007EFE  0E26               	movlw	38
   232   007F00  6E06               	movwf	??_main^0,c
   233   007F02  0E5E               	movlw	94
   234   007F04                     u107:
   235   007F04  2EE8               	decfsz	wreg,f,c
   236   007F06  D7FE               	bra	u107
   237   007F08  2E06               	decfsz	??_main^0,f,c
   238   007F0A  D7FC               	bra	u107
   239   007F0C  2E07               	decfsz	(??_main+1)^0,f,c
   240   007F0E  D7FA               	bra	u107
   241                           
   242                           ;PruebaLCD.c: 18: RD1=0;
   243   007F10  9283               	bcf	3971,1,c	;volatile
   244                           
   245                           ;PruebaLCD.c: 20: EscribeLCD_c('H');
   246   007F12  0E48               	movlw	72
   247   007F14  ECEA  F03E         	call	_EscribeLCD_c
   248                           
   249                           ;PruebaLCD.c: 21: EscribeLCD_c('o');
   250   007F18  0E6F               	movlw	111
   251   007F1A  ECEA  F03E         	call	_EscribeLCD_c
   252                           
   253                           ;PruebaLCD.c: 22: EscribeLCD_c('l');
   254   007F1E  0E6C               	movlw	108
   255   007F20  ECEA  F03E         	call	_EscribeLCD_c
   256                           
   257                           ;PruebaLCD.c: 23: EscribeLCD_c('a');
   258   007F24  0E61               	movlw	97
   259   007F26  ECEA  F03E         	call	_EscribeLCD_c
   260                           
   261                           ;PruebaLCD.c: 24: EscribeLCD_c(' ');
   262   007F2A  0E20               	movlw	32
   263   007F2C  ECEA  F03E         	call	_EscribeLCD_c
   264                           
   265                           ;PruebaLCD.c: 25: EscribeLCD_c('m');
   266   007F30  0E6D               	movlw	109
   267   007F32  ECEA  F03E         	call	_EscribeLCD_c
   268                           
   269                           ;PruebaLCD.c: 26: EscribeLCD_c('u');
   270   007F36  0E75               	movlw	117
   271   007F38  ECEA  F03E         	call	_EscribeLCD_c
   272                           
   273                           ;PruebaLCD.c: 27: EscribeLCD_c('n');
   274   007F3C  0E6E               	movlw	110
   275   007F3E  ECEA  F03E         	call	_EscribeLCD_c
   276                           
   277                           ;PruebaLCD.c: 28: EscribeLCD_c('d');
   278   007F42  0E64               	movlw	100
   279   007F44  ECEA  F03E         	call	_EscribeLCD_c
   280                           
   281                           ;PruebaLCD.c: 29: EscribeLCD_c('o');
   282   007F48  0E6F               	movlw	111
   283   007F4A  ECEA  F03E         	call	_EscribeLCD_c
   284                           
   285                           ;PruebaLCD.c: 30: DireccionaLCD(0xC0);
   286   007F4E  0EC0               	movlw	192
   287   007F50  ECDF  F03E         	call	_DireccionaLCD
   288                           
   289                           ;PruebaLCD.c: 31: EscribeLCD_c('7');
   290   007F54  0E37               	movlw	55
   291   007F56  ECEA  F03E         	call	_EscribeLCD_c
   292                           
   293                           ;PruebaLCD.c: 32: EscribeLCD_c(';');
   294   007F5A  0E3B               	movlw	59
   295   007F5C  ECEA  F03E         	call	_EscribeLCD_c
   296   007F60                     l1039:
   297                           
   298                           ;PruebaLCD.c: 34: RD1=1;
   299   007F60  8283               	bsf	3971,1,c	;volatile
   300   007F62  D7FE               	goto	l1039
   301   007F64                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _InicializaLCD *****************
   305 ;; Defined at:
   306 ;;		line 76 in file "LibLCDXC8.h"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 3
   327 ;; This function calls:
   328 ;;		_BorraLCD
   329 ;;		_EnviaDato
   330 ;;		_HabilitaLCD
   331 ;;		_RetardoLCD
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338   007F64                     __ptext1:
   339                           	callstack 0
   340   007F64                     _InicializaLCD:
   341                           	callstack 27
   342                           
   343                           ;LibLCDXC8.h: 78: LATD2=0;
   344                           
   345                           ;incstack = 0
   346   007F64  948C               	bcf	3980,2,c	;volatile
   347                           
   348                           ;LibLCDXC8.h: 79: if(interfaz==4)
   349   007F66  0E04               	movlw	4
   350   007F68  1808               	xorwf	_interfaz^0,w,c
   351   007F6A  A4D8               	btfss	status,2,c
   352   007F6C  D004               	goto	l931
   353                           
   354                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
   355   007F6E  508C               	movf	140,w,c	;volatile
   356   007F70  0B0F               	andlw	15
   357   007F72  0930               	iorlw	48
   358   007F74  D001               	goto	L1
   359   007F76                     l931:
   360                           
   361                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
   362   007F76  0E3F               	movlw	63
   363   007F78                     L1:
   364   007F78  6E8C               	movwf	140,c	;volatile
   365                           
   366                           ;LibLCDXC8.h: 83: HabilitaLCD();
   367   007F7A  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   368                           
   369                           ;LibLCDXC8.h: 84: RetardoLCD(1);
   370   007F7E  0E01               	movlw	1
   371   007F80  EC32  F03F         	call	_RetardoLCD
   372                           
   373                           ;LibLCDXC8.h: 85: if(interfaz==4)
   374   007F84  0E04               	movlw	4
   375   007F86  1808               	xorwf	_interfaz^0,w,c
   376   007F88  A4D8               	btfss	status,2,c
   377   007F8A  D004               	goto	l941
   378                           
   379                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x30;
   380   007F8C  508C               	movf	140,w,c	;volatile
   381   007F8E  0B0F               	andlw	15
   382   007F90  0930               	iorlw	48
   383   007F92  D001               	goto	L2
   384   007F94                     l941:
   385                           
   386                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
   387   007F94  0E3F               	movlw	63
   388   007F96                     L2:
   389   007F96  6E8C               	movwf	140,c	;volatile
   390                           
   391                           ;LibLCDXC8.h: 89: HabilitaLCD();
   392   007F98  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   393                           
   394                           ;LibLCDXC8.h: 90: RetardoLCD(3);
   395   007F9C  0E03               	movlw	3
   396   007F9E  EC32  F03F         	call	_RetardoLCD
   397                           
   398                           ;LibLCDXC8.h: 91: if(interfaz==4)
   399   007FA2  0E04               	movlw	4
   400   007FA4  1808               	xorwf	_interfaz^0,w,c
   401   007FA6  A4D8               	btfss	status,2,c
   402   007FA8  D004               	goto	l951
   403                           
   404                           ;LibLCDXC8.h: 92: LATD=(LATD & 0b00001111) | 0x30;
   405   007FAA  508C               	movf	140,w,c	;volatile
   406   007FAC  0B0F               	andlw	15
   407   007FAE  0930               	iorlw	48
   408   007FB0  D001               	goto	L3
   409   007FB2                     l951:
   410                           
   411                           ;LibLCDXC8.h: 93: else;LibLCDXC8.h: 94: LATD=0x3F;
   412   007FB2  0E3F               	movlw	63
   413   007FB4                     L3:
   414   007FB4  6E8C               	movwf	140,c	;volatile
   415                           
   416                           ;LibLCDXC8.h: 95: HabilitaLCD();
   417   007FB6  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   418                           
   419                           ;LibLCDXC8.h: 96: RetardoLCD(4);
   420   007FBA  0E04               	movlw	4
   421   007FBC  EC32  F03F         	call	_RetardoLCD
   422                           
   423                           ;LibLCDXC8.h: 97: if(interfaz==4){
   424   007FC0  0E04               	movlw	4
   425   007FC2  1808               	xorwf	_interfaz^0,w,c
   426   007FC4  A4D8               	btfss	status,2,c
   427   007FC6  D011               	goto	l971
   428                           
   429                           ;LibLCDXC8.h: 98: LATD=(LATD & 0b00001111) | 0x20;
   430   007FC8  508C               	movf	140,w,c	;volatile
   431   007FCA  0B0F               	andlw	15
   432   007FCC  0920               	iorlw	32
   433   007FCE  6E8C               	movwf	140,c	;volatile
   434                           
   435                           ;LibLCDXC8.h: 99: HabilitaLCD();
   436   007FD0  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   437                           
   438                           ;LibLCDXC8.h: 100: RetardoLCD(4);
   439   007FD4  0E04               	movlw	4
   440   007FD6  EC32  F03F         	call	_RetardoLCD
   441                           
   442                           ;LibLCDXC8.h: 101: EnviaDato(0x2F);
   443   007FDA  0E2F               	movlw	47
   444   007FDC  EC0F  F03F         	call	_EnviaDato
   445                           
   446                           ;LibLCDXC8.h: 102: HabilitaLCD();
   447   007FE0  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   448                           
   449                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   450   007FE4  0E04               	movlw	4
   451   007FE6  EC32  F03F         	call	_RetardoLCD
   452   007FEA                     l971:
   453                           
   454                           ;LibLCDXC8.h: 104: };LibLCDXC8.h: 105: BorraLCD();
   455   007FEA  ECD5  F03E         	call	_BorraLCD	;wreg free
   456                           
   457                           ;LibLCDXC8.h: 106: EnviaDato(0xF);
   458   007FEE  0E0F               	movlw	15
   459   007FF0  EC0F  F03F         	call	_EnviaDato
   460                           
   461                           ;LibLCDXC8.h: 107: HabilitaLCD();
   462   007FF4  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   463                           
   464                           ;LibLCDXC8.h: 108: RetardoLCD(4);
   465   007FF8  0E04               	movlw	4
   466   007FFA  EC32  F03F         	call	_RetardoLCD
   467   007FFE  0012               	return		;funcret
   468   008000                     __end_of_InicializaLCD:
   469                           	callstack 0
   470                           
   471 ;; *************** function _BorraLCD *****************
   472 ;; Defined at:
   473 ;;		line 117 in file "LibLCDXC8.h"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 2
   494 ;; This function calls:
   495 ;;		_EnviaDato
   496 ;;		_HabilitaLCD
   497 ;;		_RetardoLCD
   498 ;; This function is called by:
   499 ;;		_InicializaLCD
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text2
   504   007DAA                     __ptext2:
   505                           	callstack 0
   506   007DAA                     _BorraLCD:
   507                           	callstack 27
   508                           
   509                           ;LibLCDXC8.h: 119: LATD2=0;
   510                           
   511                           ;incstack = 0
   512   007DAA  948C               	bcf	3980,2,c	;volatile
   513                           
   514                           ;LibLCDXC8.h: 120: EnviaDato(0x01);
   515   007DAC  0E01               	movlw	1
   516   007DAE  EC0F  F03F         	call	_EnviaDato
   517                           
   518                           ;LibLCDXC8.h: 121: HabilitaLCD();
   519   007DB2  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   520                           
   521                           ;LibLCDXC8.h: 122: RetardoLCD(2);
   522   007DB6  0E02               	movlw	2
   523   007DB8  EC32  F03F         	call	_RetardoLCD
   524   007DBC  0012               	return		;funcret
   525   007DBE                     __end_of_BorraLCD:
   526                           	callstack 0
   527                           
   528 ;; *************** function _EscribeLCD_c *****************
   529 ;; Defined at:
   530 ;;		line 141 in file "LibLCDXC8.h"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  a               1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  a               1    4[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 2
   551 ;; This function calls:
   552 ;;		_EnviaDato
   553 ;;		_HabilitaLCD
   554 ;;		_RetardoLCD
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text3
   561   007DD4                     __ptext3:
   562                           	callstack 0
   563   007DD4                     _EscribeLCD_c:
   564                           	callstack 28
   565                           
   566                           ;incstack = 0
   567                           ;EscribeLCD_c@a stored from wreg
   568   007DD4  6E05               	movwf	EscribeLCD_c@a^0,c
   569                           
   570                           ;LibLCDXC8.h: 145: LATD2=1;
   571   007DD6  848C               	bsf	3980,2,c	;volatile
   572                           
   573                           ;LibLCDXC8.h: 146: EnviaDato(a);
   574   007DD8  5005               	movf	EscribeLCD_c@a^0,w,c
   575   007DDA  EC0F  F03F         	call	_EnviaDato
   576                           
   577                           ;LibLCDXC8.h: 147: HabilitaLCD();
   578   007DDE  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   579                           
   580                           ;LibLCDXC8.h: 148: RetardoLCD(4);
   581   007DE2  0E04               	movlw	4
   582   007DE4  EC32  F03F         	call	_RetardoLCD
   583   007DE8  0012               	return		;funcret
   584   007DEA                     __end_of_EscribeLCD_c:
   585                           	callstack 0
   586                           
   587 ;; *************** function _DireccionaLCD *****************
   588 ;; Defined at:
   589 ;;		line 257 in file "LibLCDXC8.h"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  a               1    wreg     unsigned char 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  a               1    4[COMRAM] unsigned char 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   603 ;;      Params:         0       0       0       0       0       0       0       0       0
   604 ;;      Locals:         1       0       0       0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0
   606 ;;      Totals:         1       0       0       0       0       0       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 2
   610 ;; This function calls:
   611 ;;		_EnviaDato
   612 ;;		_HabilitaLCD
   613 ;;		_RetardoLCD
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text4
   620   007DBE                     __ptext4:
   621                           	callstack 0
   622   007DBE                     _DireccionaLCD:
   623                           	callstack 28
   624                           
   625                           ;incstack = 0
   626                           ;DireccionaLCD@a stored from wreg
   627   007DBE  6E05               	movwf	DireccionaLCD@a^0,c
   628                           
   629                           ;LibLCDXC8.h: 260: LATD2=0;
   630   007DC0  948C               	bcf	3980,2,c	;volatile
   631                           
   632                           ;LibLCDXC8.h: 261: EnviaDato(a);
   633   007DC2  5005               	movf	DireccionaLCD@a^0,w,c
   634   007DC4  EC0F  F03F         	call	_EnviaDato
   635                           
   636                           ;LibLCDXC8.h: 262: HabilitaLCD();
   637   007DC8  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   638                           
   639                           ;LibLCDXC8.h: 263: RetardoLCD(4);
   640   007DCC  0E04               	movlw	4
   641   007DCE  EC32  F03F         	call	_RetardoLCD
   642   007DD2  0012               	return		;funcret
   643   007DD4                     __end_of_DireccionaLCD:
   644                           	callstack 0
   645                           
   646 ;; *************** function _EnviaDato *****************
   647 ;; Defined at:
   648 ;;		line 64 in file "LibLCDXC8.h"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  a               1    wreg     unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  a               1    3[COMRAM] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   662 ;;      Params:         0       0       0       0       0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0       0       0       0       0
   664 ;;      Temps:          1       0       0       0       0       0       0       0       0
   665 ;;      Totals:         2       0       0       0       0       0       0       0       0
   666 ;;Total ram usage:        2 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 1
   669 ;; This function calls:
   670 ;;		_HabilitaLCD
   671 ;;		_RetardoLCD
   672 ;; This function is called by:
   673 ;;		_InicializaLCD
   674 ;;		_BorraLCD
   675 ;;		_EscribeLCD_c
   676 ;;		_DireccionaLCD
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text5
   681   007E1E                     __ptext5:
   682                           	callstack 0
   683   007E1E                     _EnviaDato:
   684                           	callstack 28
   685                           
   686                           ;incstack = 0
   687                           ;EnviaDato@a stored from wreg
   688   007E1E  6E04               	movwf	EnviaDato@a^0,c
   689                           
   690                           ;LibLCDXC8.h: 65: if(interfaz==4){
   691   007E20  0E04               	movlw	4
   692   007E22  1808               	xorwf	_interfaz^0,w,c
   693   007E24  A4D8               	btfss	status,2,c
   694   007E26  D017               	goto	l909
   695                           
   696                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | (a & 0b11110000);
   697   007E28  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   698   007E2C  0EF0               	movlw	240
   699   007E2E  1603               	andwf	??_EnviaDato^0,f,c
   700   007E30  508C               	movf	140,w,c	;volatile
   701   007E32  0B0F               	andlw	15
   702   007E34  1003               	iorwf	??_EnviaDato^0,w,c
   703   007E36  6E8C               	movwf	140,c	;volatile
   704                           
   705                           ;LibLCDXC8.h: 67: HabilitaLCD();
   706   007E38  ECCE  F03E         	call	_HabilitaLCD	;wreg free
   707                           
   708                           ;LibLCDXC8.h: 68: RetardoLCD(1);
   709   007E3C  0E01               	movlw	1
   710   007E3E  EC32  F03F         	call	_RetardoLCD
   711                           
   712                           ;LibLCDXC8.h: 69: LATD=(LATD & 0b00001111) | (a<<4);
   713   007E42  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   714   007E46  3A03               	swapf	??_EnviaDato^0,f,c
   715   007E48  0EF0               	movlw	240
   716   007E4A  1603               	andwf	??_EnviaDato^0,f,c
   717   007E4C  508C               	movf	140,w,c	;volatile
   718   007E4E  0B0F               	andlw	15
   719   007E50  1003               	iorwf	??_EnviaDato^0,w,c
   720   007E52  6E8C               	movwf	140,c	;volatile
   721                           
   722                           ;LibLCDXC8.h: 72: }else if(interfaz==8){
   723   007E54  0012               	return	
   724   007E56                     l909:
   725   007E56  0E08               	movlw	8
   726   007E58  1808               	xorwf	_interfaz^0,w,c
   727   007E5A  A4D8               	btfss	status,2,c
   728   007E5C  0012               	return	
   729                           
   730                           ;LibLCDXC8.h: 73: LATD=a;
   731   007E5E  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
   732   007E62  0012               	return		;funcret
   733   007E64                     __end_of_EnviaDato:
   734                           	callstack 0
   735                           
   736 ;; *************** function _RetardoLCD *****************
   737 ;; Defined at:
   738 ;;		line 293 in file "LibLCDXC8.h"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  a               1    wreg     unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  a               1    1[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   752 ;;      Params:         0       0       0       0       0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0       0       0       0       0
   754 ;;      Temps:          1       0       0       0       0       0       0       0       0
   755 ;;      Totals:         2       0       0       0       0       0       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_EnviaDato
   762 ;;		_InicializaLCD
   763 ;;		_BorraLCD
   764 ;;		_EscribeLCD_c
   765 ;;		_DireccionaLCD
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text6
   770   007E64                     __ptext6:
   771                           	callstack 0
   772   007E64                     _RetardoLCD:
   773                           	callstack 29
   774                           
   775                           ;incstack = 0
   776                           ;RetardoLCD@a stored from wreg
   777   007E64  6E02               	movwf	RetardoLCD@a^0,c
   778                           
   779                           ;LibLCDXC8.h: 294: switch(a){
   780   007E66  D023               	goto	l897
   781   007E68                     l887:
   782   007E68  0E27               	movlw	39
   783   007E6A  6E01               	movwf	??_RetardoLCD^0,c
   784   007E6C  0EF5               	movlw	245
   785   007E6E                     u117:
   786   007E6E  2EE8               	decfsz	wreg,f,c
   787   007E70  D7FE               	bra	u117
   788   007E72  2E01               	decfsz	??_RetardoLCD^0,f,c
   789   007E74  D7FC               	bra	u117
   790   007E76  F000               	nop	
   791                           
   792                           ;LibLCDXC8.h: 297: break;
   793   007E78  0012               	return	
   794   007E7A                     l889:
   795   007E7A  0E03               	movlw	3
   796   007E7C  6E01               	movwf	??_RetardoLCD^0,c
   797   007E7E  0E98               	movlw	152
   798   007E80                     u127:
   799   007E80  2EE8               	decfsz	wreg,f,c
   800   007E82  D7FE               	bra	u127
   801   007E84  2E01               	decfsz	??_RetardoLCD^0,f,c
   802   007E86  D7FC               	bra	u127
   803                           
   804                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(8000000/4000000.0)));
   805   007E88  0EB6               	movlw	182
   806   007E8A                     u137:
   807   007E8A  D000               	nop2	
   808   007E8C  D000               	nop2	
   809   007E8E  2EE8               	decfsz	wreg,f,c
   810   007E90  D7FC               	bra	u137
   811   007E92  D000               	nop2	
   812   007E94  D000               	nop2	
   813   007E96  D000               	nop2	
   814                           
   815                           ;LibLCDXC8.h: 301: break;
   816   007E98  0012               	return	
   817   007E9A                     l891:
   818   007E9A  0E42               	movlw	66
   819   007E9C                     u147:
   820   007E9C  2EE8               	decfsz	wreg,f,c
   821   007E9E  D7FE               	bra	u147
   822   007EA0  D000               	nop2	
   823                           
   824                           ;LibLCDXC8.h: 304: break;
   825   007EA2  0012               	return	
   826   007EA4                     l893:
   827   007EA4  0E1A               	movlw	26
   828   007EA6                     u157:
   829   007EA6  2EE8               	decfsz	wreg,f,c
   830   007EA8  D7FE               	bra	u157
   831   007EAA  D000               	nop2	
   832                           
   833                           ;LibLCDXC8.h: 307: break;
   834   007EAC  0012               	return	
   835   007EAE                     l897:
   836   007EAE  5002               	movf	RetardoLCD@a^0,w,c
   837                           
   838                           ; Switch size 1, requested type "simple"
   839                           ; Number of cases is 4, Range of values is 1 to 4
   840                           ; switch strategies available:
   841                           ; Name         Instructions Cycles
   842                           ; simple_byte           13     7 (average)
   843                           ;	Chosen strategy is simple_byte
   844   007EB0  0A01               	xorlw	1	; case 1
   845   007EB2  B4D8               	btfsc	status,2,c
   846   007EB4  D7D9               	goto	l887
   847   007EB6  0A03               	xorlw	3	; case 2
   848   007EB8  B4D8               	btfsc	status,2,c
   849   007EBA  D7DF               	goto	l889
   850   007EBC  0A01               	xorlw	1	; case 3
   851   007EBE  B4D8               	btfsc	status,2,c
   852   007EC0  D7EC               	goto	l891
   853   007EC2  0A07               	xorlw	7	; case 4
   854   007EC4  A4D8               	btfss	status,2,c
   855   007EC6  0012               	return	
   856   007EC8  D7ED               	goto	l893
   857   007ECA                     __end_of_RetardoLCD:
   858                           	callstack 0
   859                           
   860 ;; *************** function _HabilitaLCD *****************
   861 ;; Defined at:
   862 ;;		line 110 in file "LibLCDXC8.h"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_EnviaDato
   886 ;;		_InicializaLCD
   887 ;;		_BorraLCD
   888 ;;		_EscribeLCD_c
   889 ;;		_DireccionaLCD
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text7
   894   007D9C                     __ptext7:
   895                           	callstack 0
   896   007D9C                     _HabilitaLCD:
   897                           	callstack 29
   898                           
   899                           ;LibLCDXC8.h: 112: LATD3=1;
   900                           
   901                           ;incstack = 0
   902   007D9C  868C               	bsf	3980,3,c	;volatile
   903                           
   904                           ;LibLCDXC8.h: 113: _delay((unsigned long)((40)*(8000000/4000000.0)));
   905   007D9E  0E1A               	movlw	26
   906   007DA0                     u167:
   907   007DA0  2EE8               	decfsz	wreg,f,c
   908   007DA2  D7FE               	bra	u167
   909   007DA4  D000               	nop2	
   910                           
   911                           ;LibLCDXC8.h: 115: LATD3=0;
   912   007DA6  968C               	bcf	3980,3,c	;volatile
   913   007DA8  0012               	return		;funcret
   914   007DAA                     __end_of_HabilitaLCD:
   915                           	callstack 0
   916                           
   917 ;; *************** function _ConfiguraLCD *****************
   918 ;; Defined at:
   919 ;;		line 60 in file "LibLCDXC8.h"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  a               1    wreg     unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  a               1    0[COMRAM] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         0       0       0       0       0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         1       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        1 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text8
   947   007DEA                     __ptext8:
   948                           	callstack 0
   949   007DEA                     _ConfiguraLCD:
   950                           	callstack 30
   951                           
   952                           ;incstack = 0
   953                           ;ConfiguraLCD@a stored from wreg
   954   007DEA  6E01               	movwf	ConfiguraLCD@a^0,c
   955                           
   956                           ;LibLCDXC8.h: 61: if(a==4 | a ==8)
   957   007DEC  0E04               	movlw	4
   958   007DEE  1801               	xorwf	ConfiguraLCD@a^0,w,c
   959   007DF0  B4D8               	btfsc	status,2,c
   960   007DF2  D004               	goto	u40
   961   007DF4  0E08               	movlw	8
   962   007DF6  1801               	xorwf	ConfiguraLCD@a^0,w,c
   963   007DF8  A4D8               	btfss	status,2,c
   964   007DFA  0012               	return	
   965   007DFC                     u40:
   966                           
   967                           ;LibLCDXC8.h: 62: interfaz=a;
   968   007DFC  C001  F008         	movff	ConfiguraLCD@a,_interfaz
   969   007E00  0012               	return		;funcret
   970   007E02                     __end_of_ConfiguraLCD:
   971                           	callstack 0
   972   000000                     
   973                           	psect	rparam
   974   000000                     
   975                           	psect	idloc
   976                           
   977                           ;Config register IDLOC0 @ 0x200000
   978                           ;	unspecified, using default values
   979   200000                     	org	2097152
   980   200000  FF                 	db	255
   981                           
   982                           ;Config register IDLOC1 @ 0x200001
   983                           ;	unspecified, using default values
   984   200001                     	org	2097153
   985   200001  FF                 	db	255
   986                           
   987                           ;Config register IDLOC2 @ 0x200002
   988                           ;	unspecified, using default values
   989   200002                     	org	2097154
   990   200002  FF                 	db	255
   991                           
   992                           ;Config register IDLOC3 @ 0x200003
   993                           ;	unspecified, using default values
   994   200003                     	org	2097155
   995   200003  FF                 	db	255
   996                           
   997                           ;Config register IDLOC4 @ 0x200004
   998                           ;	unspecified, using default values
   999   200004                     	org	2097156
  1000   200004  FF                 	db	255
  1001                           
  1002                           ;Config register IDLOC5 @ 0x200005
  1003                           ;	unspecified, using default values
  1004   200005                     	org	2097157
  1005   200005  FF                 	db	255
  1006                           
  1007                           ;Config register IDLOC6 @ 0x200006
  1008                           ;	unspecified, using default values
  1009   200006                     	org	2097158
  1010   200006  FF                 	db	255
  1011                           
  1012                           ;Config register IDLOC7 @ 0x200007
  1013                           ;	unspecified, using default values
  1014   200007                     	org	2097159
  1015   200007  FF                 	db	255
  1016                           
  1017                           	psect	config
  1018                           
  1019                           ;Config register CONFIG1L @ 0x300000
  1020                           ;	unspecified, using default values
  1021                           ;	PLL Prescaler Selection bits
  1022                           ;	PLLDIV = 0x0, unprogrammed default
  1023                           ;	System Clock Postscaler Selection bits
  1024                           ;	CPUDIV = 0x0, unprogrammed default
  1025                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1026                           ;	USBDIV = 0x0, unprogrammed default
  1027   300000                     	org	3145728
  1028   300000  00                 	db	0
  1029                           
  1030                           ;Config register CONFIG1H @ 0x300001
  1031                           ;	Oscillator Selection bits
  1032                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1033                           ;	Fail-Safe Clock Monitor Enable bit
  1034                           ;	FCMEN = 0x0, unprogrammed default
  1035                           ;	Internal/External Oscillator Switchover bit
  1036                           ;	IESO = 0x0, unprogrammed default
  1037   300001                     	org	3145729
  1038   300001  09                 	db	9
  1039                           
  1040                           ;Config register CONFIG2L @ 0x300002
  1041                           ;	unspecified, using default values
  1042                           ;	Power-up Timer Enable bit
  1043                           ;	PWRT = 0x1, unprogrammed default
  1044                           ;	Brown-out Reset Enable bits
  1045                           ;	BOR = 0x3, unprogrammed default
  1046                           ;	Brown-out Reset Voltage bits
  1047                           ;	BORV = 0x3, unprogrammed default
  1048                           ;	USB Voltage Regulator Enable bit
  1049                           ;	VREGEN = 0x0, unprogrammed default
  1050   300002                     	org	3145730
  1051   300002  1F                 	db	31
  1052                           
  1053                           ;Config register CONFIG2H @ 0x300003
  1054                           ;	Watchdog Timer Enable bit
  1055                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1056                           ;	Watchdog Timer Postscale Select bits
  1057                           ;	WDTPS = 0xF, unprogrammed default
  1058   300003                     	org	3145731
  1059   300003  1E                 	db	30
  1060                           
  1061                           ; Padding undefined space
  1062   300004                     	org	3145732
  1063   300004  FF                 	db	255
  1064                           
  1065                           ;Config register CONFIG3H @ 0x300005
  1066                           ;	unspecified, using default values
  1067                           ;	CCP2 MUX bit
  1068                           ;	CCP2MX = 0x1, unprogrammed default
  1069                           ;	PORTB A/D Enable bit
  1070                           ;	PBADEN = 0x1, unprogrammed default
  1071                           ;	Low-Power Timer 1 Oscillator Enable bit
  1072                           ;	LPT1OSC = 0x0, unprogrammed default
  1073                           ;	MCLR Pin Enable bit
  1074                           ;	MCLRE = 0x1, unprogrammed default
  1075   300005                     	org	3145733
  1076   300005  83                 	db	131
  1077                           
  1078                           ;Config register CONFIG4L @ 0x300006
  1079                           ;	Stack Full/Underflow Reset Enable bit
  1080                           ;	STVREN = 0x1, unprogrammed default
  1081                           ;	Single-Supply ICSP Enable bit
  1082                           ;	LVP = OFF, Single-Supply ICSP disabled
  1083                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1084                           ;	ICPRT = 0x0, unprogrammed default
  1085                           ;	Extended Instruction Set Enable bit
  1086                           ;	XINST = 0x0, unprogrammed default
  1087                           ;	Background Debugger Enable bit
  1088                           ;	DEBUG = 0x1, unprogrammed default
  1089   300006                     	org	3145734
  1090   300006  81                 	db	129
  1091                           
  1092                           ; Padding undefined space
  1093   300007                     	org	3145735
  1094   300007  FF                 	db	255
  1095                           
  1096                           ;Config register CONFIG5L @ 0x300008
  1097                           ;	unspecified, using default values
  1098                           ;	Code Protection bit
  1099                           ;	CP0 = 0x1, unprogrammed default
  1100                           ;	Code Protection bit
  1101                           ;	CP1 = 0x1, unprogrammed default
  1102                           ;	Code Protection bit
  1103                           ;	CP2 = 0x1, unprogrammed default
  1104                           ;	Code Protection bit
  1105                           ;	CP3 = 0x1, unprogrammed default
  1106   300008                     	org	3145736
  1107   300008  0F                 	db	15
  1108                           
  1109                           ;Config register CONFIG5H @ 0x300009
  1110                           ;	unspecified, using default values
  1111                           ;	Boot Block Code Protection bit
  1112                           ;	CPB = 0x1, unprogrammed default
  1113                           ;	Data EEPROM Code Protection bit
  1114                           ;	CPD = 0x1, unprogrammed default
  1115   300009                     	org	3145737
  1116   300009  C0                 	db	192
  1117                           
  1118                           ;Config register CONFIG6L @ 0x30000A
  1119                           ;	unspecified, using default values
  1120                           ;	Write Protection bit
  1121                           ;	WRT0 = 0x1, unprogrammed default
  1122                           ;	Write Protection bit
  1123                           ;	WRT1 = 0x1, unprogrammed default
  1124                           ;	Write Protection bit
  1125                           ;	WRT2 = 0x1, unprogrammed default
  1126                           ;	Write Protection bit
  1127                           ;	WRT3 = 0x1, unprogrammed default
  1128   30000A                     	org	3145738
  1129   30000A  0F                 	db	15
  1130                           
  1131                           ;Config register CONFIG6H @ 0x30000B
  1132                           ;	unspecified, using default values
  1133                           ;	Configuration Register Write Protection bit
  1134                           ;	WRTC = 0x1, unprogrammed default
  1135                           ;	Boot Block Write Protection bit
  1136                           ;	WRTB = 0x1, unprogrammed default
  1137                           ;	Data EEPROM Write Protection bit
  1138                           ;	WRTD = 0x1, unprogrammed default
  1139   30000B                     	org	3145739
  1140   30000B  E0                 	db	224
  1141                           
  1142                           ;Config register CONFIG7L @ 0x30000C
  1143                           ;	unspecified, using default values
  1144                           ;	Table Read Protection bit
  1145                           ;	EBTR0 = 0x1, unprogrammed default
  1146                           ;	Table Read Protection bit
  1147                           ;	EBTR1 = 0x1, unprogrammed default
  1148                           ;	Table Read Protection bit
  1149                           ;	EBTR2 = 0x1, unprogrammed default
  1150                           ;	Table Read Protection bit
  1151                           ;	EBTR3 = 0x1, unprogrammed default
  1152   30000C                     	org	3145740
  1153   30000C  0F                 	db	15
  1154                           
  1155                           ;Config register CONFIG7H @ 0x30000D
  1156                           ;	unspecified, using default values
  1157                           ;	Boot Block Table Read Protection bit
  1158                           ;	EBTRB = 0x1, unprogrammed default
  1159   30000D                     	org	3145741
  1160   30000D  40                 	db	64
  1161                           tosu	equ	0xFFF
  1162                           tosh	equ	0xFFE
  1163                           tosl	equ	0xFFD
  1164                           stkptr	equ	0xFFC
  1165                           pclatu	equ	0xFFB
  1166                           pclath	equ	0xFFA
  1167                           pcl	equ	0xFF9
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           indf0	equ	0xFEF
  1175                           postinc0	equ	0xFEE
  1176                           postdec0	equ	0xFED
  1177                           preinc0	equ	0xFEC
  1178                           plusw0	equ	0xFEB
  1179                           fsr0h	equ	0xFEA
  1180                           fsr0l	equ	0xFE9
  1181                           wreg	equ	0xFE8
  1182                           indf1	equ	0xFE7
  1183                           postinc1	equ	0xFE6
  1184                           postdec1	equ	0xFE5
  1185                           preinc1	equ	0xFE4
  1186                           plusw1	equ	0xFE3
  1187                           fsr1h	equ	0xFE2
  1188                           fsr1l	equ	0xFE1
  1189                           bsr	equ	0xFE0
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           postdec2	equ	0xFDD
  1193                           preinc2	equ	0xFDC
  1194                           plusw2	equ	0xFDB
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DireccionaLCD
    _main->_EscribeLCD_c
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              5 COMRAM     2     2      0
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       8       1        8.4%
BITBIGSFRhlh        3D      0       0      22        0.0%
BITBIGSFRhh         2C      0       0      21        0.0%
BITBIGSFRll         23      0       0      25        0.0%
BITBIGSFRlh          8      0       0      24        0.0%
BITBIGSFRhll         8      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       3        0.0%
DATA                 0      0       8       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu May 18 20:18:33 2023

                     u40 7DFC                       u97 7EE2               EnviaDato@a 0004  
          _InicializaLCD 7F64                      l931 7F76                      l909 7E56  
                    l941 7F94                      l951 7FB2                      l891 7E9A  
                    l971 7FEA                      l893 7EA4                      l887 7E68  
                    l889 7E7A                      l897 7EAE                      _RD0 7C18  
                    _RD1 7C19                      u107 7F04                      u117 7E6E  
                    u127 7E80                      u137 7E8A                      u147 7E9C  
                    u157 7EA6                      u167 7DA0                      wreg 0FE8  
                   l1039 7F60                     _LATD 0F8C           ??_EscribeLCD_c 0005  
                   _main 7ECA                     start 0000             ___param_bank 0000  
         ?_InicializaLCD 0001                    ?_main 0001            EscribeLCD_c@a 0005  
                  _LATD2 7C62                    _LATD3 7C63                    _IRCF0 7E9C  
                  _IRCF1 7E9D                    _TRISD 0F95                    tablat 0FF5  
            _HabilitaLCD 7D9C                    status 0FD8         __end_of_BorraLCD 7DBE  
        __initialization 7E02             __end_of_main 7F64                   ??_main 0006  
   __end_of_ConfiguraLCD 7E02            __activetblptr 0002           DireccionaLCD@a 0005  
  __end_of_DireccionaLCD 7DD4               _RetardoLCD 7E64          ??_InicializaLCD 0005  
                 isa$std 0001     __end_of_EscribeLCD_c 7DEA             __pdataCOMRAM 0008  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7E14            ___rparam_used 0001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 7E64                ?_BorraLCD 0001  
            ?_RetardoLCD 0001              RetardoLCD@a 0002               ??_BorraLCD 0005  
           ?_HabilitaLCD 0001             _ConfiguraLCD 7DEA                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E02                  __ramtop 0800  
                __ptext0 7ECA                  __ptext1 7F64                  __ptext2 7DAA  
                __ptext3 7DD4                  __ptext4 7DBE                  __ptext5 7E1E  
                __ptext6 7E64                  __ptext7 7D9C                  __ptext8 7DEA  
   end_of_initialization 7E14            __Lmediumconst 0000             _EscribeLCD_c 7DD4  
          __pidataCOMRAM 7D9B    __end_of_InicializaLCD 8000                _EnviaDato 7E1E  
    start_initialization 7E02             ??_RetardoLCD 0001               ?_EnviaDato 0001  
     __end_of_RetardoLCD 7ECA            _DireccionaLCD 7DBE           ?_DireccionaLCD 0001  
            ??_EnviaDato 0003                 _BorraLCD 7DAA                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 0001          ??_DireccionaLCD 0005  
               _interfaz 0008                 isa$xinst 0000            ??_HabilitaLCD 0001  
          ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0001            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 7DAA  
