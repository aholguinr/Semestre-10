

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Feb 05 19:17:46 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.32
    42                           ; Generated 02/02/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0013AA                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _interfaz
    82  0013AA  08                 	db	8
    83  0000                     _ADRES	set	4035
    84  0000                     _TMR0	set	4054
    85  0000                     _T0CON	set	4053
    86  0000                     _TRISD	set	3989
    87  0000                     _LATB	set	3978
    88  0000                     _TRISB	set	3987
    89  0000                     _SPBRG	set	4015
    90  0000                     _BAUDCON	set	4024
    91  0000                     _RCSTA	set	4011
    92  0000                     _TXSTA	set	4012
    93  0000                     _ADCON2	set	4032
    94  0000                     _ADCON1	set	4033
    95  0000                     _ADCON0	set	4034
    96  0000                     _LATD	set	3980
    97  0000                     _GO	set	32273
    98  0000                     _LATD1	set	31841
    99  0000                     _RBIF	set	32656
   100  0000                     _PEIE	set	32662
   101  0000                     _GIE	set	32663
   102  0000                     _TMR0IE	set	32661
   103  0000                     _TMR0IF	set	32658
   104  0000                     _TRISE1	set	31921
   105  0000                     _TRISE0	set	31920
   106  0000                     _IRCF0	set	32412
   107  0000                     _IRCF1	set	32413
   108  0000                     _LATD3	set	31843
   109  0000                     _LATD2	set	31842
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	callstack 0
   114  000800  00                 	db	0
   115  000801  20                 	db	32
   116  000802  67                 	db	103	;'g'
   117  000803  72                 	db	114	;'r'
   118  000804  61                 	db	97	;'a'
   119  000805  64                 	db	100	;'d'
   120  000806  6F                 	db	111	;'o'
   121  000807  73                 	db	115	;'s'
   122  000808  20                 	db	32
   123  000809  46                 	db	70	;'F'
   124  00080A  61                 	db	97	;'a'
   125  00080B  68                 	db	104	;'h'
   126  00080C  72                 	db	114	;'r'
   127  00080D  65                 	db	101	;'e'
   128  00080E  6E                 	db	110	;'n'
   129  00080F  68                 	db	104	;'h'
   130  000810  65                 	db	101	;'e'
   131  000811  69                 	db	105	;'i'
   132  000812  74                 	db	116	;'t'
   133  000813  0A                 	db	10
   134  000814  00                 	db	0
   135  000815  20                 	db	32
   136  000816  67                 	db	103	;'g'
   137  000817  72                 	db	114	;'r'
   138  000818  61                 	db	97	;'a'
   139  000819  64                 	db	100	;'d'
   140  00081A  6F                 	db	111	;'o'
   141  00081B  73                 	db	115	;'s'
   142  00081C  20                 	db	32
   143  00081D  52                 	db	82	;'R'
   144  00081E  61                 	db	97	;'a'
   145  00081F  6E                 	db	110	;'n'
   146  000820  6B                 	db	107	;'k'
   147  000821  69                 	db	105	;'i'
   148  000822  6E                 	db	110	;'n'
   149  000823  65                 	db	101	;'e'
   150  000824  0A                 	db	10
   151  000825  00                 	db	0
   152  000826  20                 	db	32
   153  000827  67                 	db	103	;'g'
   154  000828  72                 	db	114	;'r'
   155  000829  61                 	db	97	;'a'
   156  00082A  64                 	db	100	;'d'
   157  00082B  6F                 	db	111	;'o'
   158  00082C  73                 	db	115	;'s'
   159  00082D  20                 	db	32
   160  00082E  43                 	db	67	;'C'
   161  00082F  65                 	db	101	;'e'
   162  000830  6C                 	db	108	;'l'
   163  000831  73                 	db	115	;'s'
   164  000832  69                 	db	105	;'i'
   165  000833  75                 	db	117	;'u'
   166  000834  73                 	db	115	;'s'
   167  000835  0A                 	db	10
   168  000836  00                 	db	0
   169  000837  20                 	db	32
   170  000838  67                 	db	103	;'g'
   171  000839  72                 	db	114	;'r'
   172  00083A  61                 	db	97	;'a'
   173  00083B  64                 	db	100	;'d'
   174  00083C  6F                 	db	111	;'o'
   175  00083D  73                 	db	115	;'s'
   176  00083E  20                 	db	32
   177  00083F  4B                 	db	75	;'K'
   178  000840  65                 	db	101	;'e'
   179  000841  6C                 	db	108	;'l'
   180  000842  76                 	db	118	;'v'
   181  000843  69                 	db	105	;'i'
   182  000844  6E                 	db	110	;'n'
   183  000845  0A                 	db	10
   184  000846  00                 	db	0
   185  000847                     STR_1:
   186  000847  4D                 	db	77	;'M'
   187  000848  69                 	db	105	;'i'
   188  000849  63                 	db	99	;'c'
   189  00084A  72                 	db	114	;'r'
   190  00084B  6F                 	db	111	;'o'
   191  00084C  73                 	db	115	;'s'
   192  00084D  20                 	db	32
   193  00084E  32                 	db	50	;'2'
   194  00084F  30                 	db	48	;'0'
   195  000850  32                 	db	50	;'2'
   196  000851  31                 	db	49	;'1'
   197  000852  2D                 	db	45
   198  000853  32                 	db	50	;'2'
   199  000854  00                 	db	0
   200  000855                     STR_2:
   201  000855  50                 	db	80	;'P'
   202  000856  72                 	db	114	;'r'
   203  000857  75                 	db	117	;'u'
   204  000858  65                 	db	101	;'e'
   205  000859  62                 	db	98	;'b'
   206  00085A  61                 	db	97	;'a'
   207  00085B  00                 	db	0
   208  00085C                     STR_3:
   209  00085C  54                 	db	84	;'T'
   210  00085D  3D                 	db	61	;'='
   211  00085E  00                 	db	0
   212  00085F  00                 	db	0	; dummy byte at the end
   213  0000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217  00125A                     __pcinit:
   218                           	callstack 0
   219  00125A                     start_initialization:
   220                           	callstack 0
   221  00125A                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to COMRAM (1 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226  00125A  0EAA               	movlw	low __pidataCOMRAM
   227  00125C  6EF6               	movwf	tblptrl,c
   228  00125E  0E13               	movlw	high __pidataCOMRAM
   229  001260  6EF7               	movwf	tblptrh,c
   230  001262  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231  001264  6EF8               	movwf	tblptru,c
   232  001266  0009               	tblrd		*+	;fetch initializer
   233  001268  CFF5 F049          	movff	tablat,__pdataCOMRAM
   234                           
   235                           ; Clear objects allocated to COMRAM (24 bytes)
   236  00126C  EE00  F031         	lfsr	0,__pbssCOMRAM
   237  001270  0E18               	movlw	24
   238  001272                     clear_0:
   239  001272  6AEE               	clrf	postinc0,c
   240  001274  06E8               	decf	wreg,f,c
   241  001276  E1FD               	bnz	clear_0
   242  001278                     end_of_initialization:
   243                           	callstack 0
   244  001278                     __end_of__initialization:
   245                           	callstack 0
   246  001278  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247  00127A  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248  00127C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  00127E  6EF8               	movwf	tblptru,c
   250  001280  0100               	movlb	0
   251  001282  EF30  F004         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254  000031                     __pbssCOMRAM:
   255                           	callstack 0
   256  000031                     _VoltAn2:
   257                           	callstack 0
   258  000031                     	ds	3
   259  000034                     _VoltAn0:
   260                           	callstack 0
   261  000034                     	ds	3
   262  000037                     _VoltAn1:
   263                           	callstack 0
   264  000037                     	ds	3
   265  00003A                     _Van2:
   266                           	callstack 0
   267  00003A                     	ds	3
   268  00003D                     _Van1:
   269                           	callstack 0
   270  00003D                     	ds	3
   271  000040                     _Van0:
   272                           	callstack 0
   273  000040                     	ds	3
   274  000043                     _TempAn0:
   275                           	callstack 0
   276  000043                     	ds	2
   277  000045                     _TempCelsius:
   278                           	callstack 0
   279  000045                     	ds	2
   280  000047                     _val:
   281                           	callstack 0
   282  000047                     	ds	1
   283  000048                     _LecturaDS:
   284                           	callstack 0
   285  000048                     	ds	1
   286                           
   287                           	psect	dataCOMRAM
   288  000049                     __pdataCOMRAM:
   289                           	callstack 0
   290  000049                     _interfaz:
   291                           	callstack 0
   292  000049                     	ds	1
   293                           
   294                           	psect	cstackCOMRAM
   295  000001                     __pcstackCOMRAM:
   296                           	callstack 0
   297  000001                     ??_RetardoLCD:
   298  000001                     ?_Conversion:
   299                           	callstack 0
   300  000001                     ?___awmod:
   301                           	callstack 0
   302  000001                     ?___ftpack:
   303                           	callstack 0
   304  000001                     ConfiguraLCD@a:
   305                           	callstack 0
   306  000001                     ___lbmod@divisor:
   307                           	callstack 0
   308  000001                     ___awmod@dividend:
   309                           	callstack 0
   310  000001                     ___ftpack@arg:
   311                           	callstack 0
   312                           
   313                           ; 3 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     RetardoLCD@a:
   316                           	callstack 0
   317  000002                     ___lbmod@dividend:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??_Conversion:
   323  000003                     ??_EnviaDato:
   324  000003                     ___lbmod@counter:
   325                           	callstack 0
   326  000003                     ___awmod@divisor:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330  000003                     	ds	1
   331  000004                     EnviaDato@a:
   332                           	callstack 0
   333  000004                     Conversion@canal:
   334                           	callstack 0
   335  000004                     ___ftpack@exp:
   336                           	callstack 0
   337  000004                     ___lbmod@rem:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x3
   341  000004                     	ds	1
   342  000005                     EscribeLCD_c@a:
   343                           	callstack 0
   344  000005                     DireccionaLCD@a:
   345                           	callstack 0
   346  000005                     ___awmod@counter:
   347                           	callstack 0
   348  000005                     ___ftpack@sign:
   349                           	callstack 0
   350  000005                     ___lbdiv@divisor:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x4
   354  000005                     	ds	1
   355  000006                     ??___ftpack:
   356  000006                     MensajeLCD_Var@a:
   357                           	callstack 0
   358  000006                     ___awmod@sign:
   359                           	callstack 0
   360  000006                     ___lbdiv@dividend:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x5
   364  000006                     	ds	1
   365  000007                     ___lbdiv@counter:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x6
   369  000007                     	ds	1
   370  000008                     ___lbdiv@quotient:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x7
   374  000008                     	ds	1
   375  000009                     ?___ftmul:
   376                           	callstack 0
   377  000009                     EscribeLCD_n8@b:
   378                           	callstack 0
   379  000009                     ___ftmul@f1:
   380                           	callstack 0
   381                           
   382                           ; 3 bytes @ 0x8
   383  000009                     	ds	1
   384  00000A                     EscribeLCD_n8@centena:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388  00000A                     	ds	1
   389  00000B                     EscribeLCD_n8@decena:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0xA
   393  00000B                     	ds	1
   394  00000C                     EscribeLCD_n8@unidad:
   395                           	callstack 0
   396  00000C                     ___ftmul@f2:
   397                           	callstack 0
   398                           
   399                           ; 3 bytes @ 0xB
   400  00000C                     	ds	1
   401  00000D                     EscribeLCD_n8@a:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xC
   405  00000D                     	ds	2
   406  00000F                     ??___ftmul:
   407                           
   408                           ; 1 bytes @ 0xE
   409  00000F                     	ds	3
   410  000012                     ___ftmul@exp:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x11
   414  000012                     	ds	1
   415  000013                     ___ftmul@f3_as_product:
   416                           	callstack 0
   417                           
   418                           ; 3 bytes @ 0x12
   419  000013                     	ds	3
   420  000016                     ___ftmul@cntr:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x15
   424  000016                     	ds	1
   425  000017                     ___ftmul@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x16
   429  000017                     	ds	1
   430  000018                     ?___ftdiv:
   431                           	callstack 0
   432  000018                     ?___fttol:
   433                           	callstack 0
   434  000018                     ___ftdiv@f1:
   435                           	callstack 0
   436  000018                     ___fttol@f1:
   437                           	callstack 0
   438                           
   439                           ; 3 bytes @ 0x17
   440  000018                     	ds	3
   441  00001B                     ___ftdiv@f2:
   442                           	callstack 0
   443                           
   444                           ; 3 bytes @ 0x1A
   445  00001B                     	ds	1
   446  00001C                     ??___fttol:
   447                           
   448                           ; 1 bytes @ 0x1B
   449  00001C                     	ds	2
   450  00001E                     ??___ftdiv:
   451                           
   452                           ; 1 bytes @ 0x1D
   453  00001E                     	ds	3
   454  000021                     ___ftdiv@cntr:
   455                           	callstack 0
   456  000021                     ___fttol@sign1:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x20
   460  000021                     	ds	1
   461  000022                     ___ftdiv@f3:
   462                           	callstack 0
   463  000022                     ___fttol@lval:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0x21
   467  000022                     	ds	3
   468  000025                     ___ftdiv@exp:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x24
   472  000025                     	ds	1
   473  000026                     ___ftdiv@sign:
   474                           	callstack 0
   475  000026                     ___fttol@exp1:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x25
   479  000026                     	ds	1
   480  000027                     ?_abs:
   481                           	callstack 0
   482  000027                     abs@a:
   483                           	callstack 0
   484  000027                     EscribeLCD_2Decimales@a:
   485                           	callstack 0
   486                           
   487                           ; 3 bytes @ 0x26
   488  000027                     	ds	2
   489  000029                     ??_abs:
   490                           
   491                           ; 1 bytes @ 0x28
   492  000029                     	ds	1
   493  00002A                     EscribeLCD_2Decimales@num:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x29
   497  00002A                     	ds	1
   498  00002B                     ?___awtoft:
   499                           	callstack 0
   500  00002B                     ___awtoft@c:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x2A
   504  00002B                     	ds	1
   505  00002C                     EscribeLCD_2Decimales@decimalesP:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x2B
   509  00002C                     	ds	1
   510  00002D                     EscribeLCD_2Decimales@unidad:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x2C
   514  00002D                     	ds	1
   515  00002E                     ___awtoft@sign:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x2D
   519  00002E                     	ds	1
   520  00002F                     ??_main:
   521                           
   522                           ; 1 bytes @ 0x2E
   523  00002F                     	ds	2
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 33 in file "Prueba.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0       0       0       0       0
   547 ;;      Totals:         2       0       0       0       0       0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels required when called: 5
   550 ;; This function calls:
   551 ;;		_BorraLCD
   552 ;;		_ConfiguraLCD
   553 ;;		_Conversion
   554 ;;		_DireccionaLCD
   555 ;;		_EscribeLCD_2Decimales
   556 ;;		_EscribeLCD_c
   557 ;;		_InicializaLCD
   558 ;;		_MensajeLCD_Var
   559 ;;		___awtoft
   560 ;;		___ftdiv
   561 ;;		___ftmul
   562 ;;		___fttol
   563 ;;		_abs
   564 ;; This function is called by:
   565 ;;		Startup code after reset
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text0
   570  000860                     __ptext0:
   571                           	callstack 0
   572  000860                     _main:
   573                           	callstack 26
   574                           
   575                           ;Prueba.c: 34: IRCF1=1;
   576                           
   577                           ;incstack = 0
   578  000860  8AD3               	bsf	4051,5,c	;volatile
   579                           
   580                           ;Prueba.c: 35: IRCF0=1;
   581  000862  88D3               	bsf	4051,4,c	;volatile
   582                           
   583                           ;Prueba.c: 37: ADCON0=0b00000001;
   584  000864  0E01               	movlw	1
   585  000866  6EC2               	movwf	194,c	;volatile
   586                           
   587                           ;Prueba.c: 38: ADCON1=13;
   588  000868  0E0D               	movlw	13
   589  00086A  6EC1               	movwf	193,c	;volatile
   590                           
   591                           ;Prueba.c: 39: ADCON2=0b10001000;
   592  00086C  0E88               	movlw	136
   593  00086E  6EC0               	movwf	192,c	;volatile
   594                           
   595                           ;Prueba.c: 41: TXSTA=0b00100100;
   596  000870  0E24               	movlw	36
   597  000872  6EAC               	movwf	172,c	;volatile
   598                           
   599                           ;Prueba.c: 42: RCSTA=0b10010000;
   600  000874  0E90               	movlw	144
   601  000876  6EAB               	movwf	171,c	;volatile
   602                           
   603                           ;Prueba.c: 43: BAUDCON=0b00001000;
   604  000878  0E08               	movlw	8
   605  00087A  6EB8               	movwf	184,c	;volatile
   606                           
   607                           ;Prueba.c: 44: SPBRG=207;
   608  00087C  0ECF               	movlw	207
   609  00087E  6EAF               	movwf	175,c	;volatile
   610                           
   611                           ;Prueba.c: 47: TRISB=0;
   612  000880  0E00               	movlw	0
   613  000882  6E93               	movwf	147,c	;volatile
   614                           
   615                           ;Prueba.c: 48: LATB=0;
   616  000884  0E00               	movlw	0
   617  000886  6E8A               	movwf	138,c	;volatile
   618                           
   619                           ;Prueba.c: 50: TRISD=0;
   620  000888  0E00               	movlw	0
   621  00088A  6E95               	movwf	149,c	;volatile
   622                           
   623                           ;Prueba.c: 51: LATD=0;
   624  00088C  0E00               	movlw	0
   625  00088E  6E8C               	movwf	140,c	;volatile
   626                           
   627                           ;Prueba.c: 53: TRISE0=1;
   628  000890  8096               	bsf	3990,0,c	;volatile
   629                           
   630                           ;Prueba.c: 54: TRISE1=1;
   631  000892  8296               	bsf	3990,1,c	;volatile
   632                           
   633                           ;Prueba.c: 56: T0CON=0b10000101;
   634  000894  0E85               	movlw	133
   635  000896  6ED5               	movwf	213,c	;volatile
   636                           
   637                           ;Prueba.c: 57: TMR0=34286;
   638  000898  0E85               	movlw	133
   639  00089A  6ED7               	movwf	215,c	;volatile
   640  00089C  0EEE               	movlw	238
   641  00089E  6ED6               	movwf	214,c	;volatile
   642                           
   643                           ;Prueba.c: 58: TMR0IF=0;
   644  0008A0  94F2               	bcf	4082,2,c	;volatile
   645                           
   646                           ;Prueba.c: 59: TMR0IE=1;
   647  0008A2  8AF2               	bsf	4082,5,c	;volatile
   648                           
   649                           ;Prueba.c: 60: GIE=1;
   650  0008A4  8EF2               	bsf	4082,7,c	;volatile
   651                           
   652                           ;Prueba.c: 61: PEIE=1;
   653  0008A6  8CF2               	bsf	4082,6,c	;volatile
   654                           
   655                           ;Prueba.c: 64: _delay((unsigned long)((500)*(8000000/4000.0)));
   656  0008A8  0E06               	movlw	6
   657  0008AA  6E30               	movwf	(??_main+1)^0,c
   658  0008AC  0E13               	movlw	19
   659  0008AE  6E2F               	movwf	??_main^0,c
   660  0008B0  0EAE               	movlw	174
   661  0008B2                     u987:
   662  0008B2  2EE8               	decfsz	wreg,f,c
   663  0008B4  D7FE               	bra	u987
   664  0008B6  2E2F               	decfsz	??_main^0,f,c
   665  0008B8  D7FC               	bra	u987
   666  0008BA  2E30               	decfsz	(??_main+1)^0,f,c
   667  0008BC  D7FA               	bra	u987
   668                           
   669                           ;Prueba.c: 65: ConfiguraLCD(4);
   670  0008BE  0E04               	movlw	4
   671  0008C0  ECA2  F009         	call	_ConfiguraLCD
   672                           
   673                           ;Prueba.c: 66: InicializaLCD();
   674  0008C4  ECDA  F007         	call	_InicializaLCD	;wreg free
   675                           
   676                           ;Prueba.c: 67: MensajeLCD_Var("Micros 2021-2");
   677  0008C8  0E47               	movlw	low STR_1
   678  0008CA  6E06               	movwf	MensajeLCD_Var@a^0,c
   679  0008CC  EC6C  F009         	call	_MensajeLCD_Var	;wreg free
   680                           
   681                           ;Prueba.c: 68: DireccionaLCD(0xC0);
   682  0008D0  0EC0               	movlw	192
   683  0008D2  ECB9  F009         	call	_DireccionaLCD
   684                           
   685                           ;Prueba.c: 69: MensajeLCD_Var("Prueba");
   686  0008D6  0E55               	movlw	low STR_2
   687  0008D8  6E06               	movwf	MensajeLCD_Var@a^0,c
   688  0008DA  EC6C  F009         	call	_MensajeLCD_Var	;wreg free
   689                           
   690                           ;Prueba.c: 70: _delay((unsigned long)((2000)*(8000000/4000.0)));
   691  0008DE  0E15               	movlw	21
   692  0008E0  6E30               	movwf	(??_main+1)^0,c
   693  0008E2  0E4B               	movlw	75
   694  0008E4  6E2F               	movwf	??_main^0,c
   695  0008E6  0EBE               	movlw	190
   696  0008E8                     u997:
   697  0008E8  2EE8               	decfsz	wreg,f,c
   698  0008EA  D7FE               	bra	u997
   699  0008EC  2E2F               	decfsz	??_main^0,f,c
   700  0008EE  D7FC               	bra	u997
   701  0008F0  2E30               	decfsz	(??_main+1)^0,f,c
   702  0008F2  D7FA               	bra	u997
   703  0008F4  D000               	nop2	
   704                           
   705                           ;Prueba.c: 71: BorraLCD();
   706  0008F6  ECC4  F009         	call	_BorraLCD	;wreg free
   707                           
   708                           ;Prueba.c: 73: val=0;
   709  0008FA  0E00               	movlw	0
   710  0008FC  6E47               	movwf	_val^0,c
   711  0008FE                     l1894:
   712                           
   713                           ;Prueba.c: 75: Van0=1023-Conversion(0)-526;
   714  0008FE  0E00               	movlw	0
   715  000900  EC80  F009         	call	_Conversion
   716  000904  5001               	movf	?_Conversion^0,w,c
   717  000906  08F1               	sublw	241
   718  000908  6E2B               	movwf	___awtoft@c^0,c
   719  00090A  5002               	movf	(?_Conversion+1)^0,w,c
   720  00090C  A0D8               	btfss	status,0,c
   721  00090E  2AE8               	incf	wreg,f,c
   722  000910  0801               	sublw	1
   723  000912  6E2C               	movwf	(___awtoft@c+1)^0,c
   724  000914  EC11  F009         	call	___awtoft	;wreg free
   725  000918  C02B  F040         	movff	?___awtoft,_Van0
   726  00091C  C02C  F041         	movff	?___awtoft+1,_Van0+1
   727  000920  C02D  F042         	movff	?___awtoft+2,_Van0+2
   728                           
   729                           ;Prueba.c: 76: Van1=1023-Conversion(1)-516;
   730  000924  0E01               	movlw	1
   731  000926  EC80  F009         	call	_Conversion
   732  00092A  5001               	movf	?_Conversion^0,w,c
   733  00092C  08FB               	sublw	251
   734  00092E  6E2B               	movwf	___awtoft@c^0,c
   735  000930  5002               	movf	(?_Conversion+1)^0,w,c
   736  000932  A0D8               	btfss	status,0,c
   737  000934  2AE8               	incf	wreg,f,c
   738  000936  0801               	sublw	1
   739  000938  6E2C               	movwf	(___awtoft@c+1)^0,c
   740  00093A  EC11  F009         	call	___awtoft	;wreg free
   741  00093E  C02B  F03D         	movff	?___awtoft,_Van1
   742  000942  C02C  F03E         	movff	?___awtoft+1,_Van1+1
   743  000946  C02D  F03F         	movff	?___awtoft+2,_Van1+2
   744                           
   745                           ;Prueba.c: 77: Van2=Conversion(2);
   746  00094A  0E02               	movlw	2
   747  00094C  EC80  F009         	call	_Conversion
   748  000950  C001  F02B         	movff	?_Conversion,___awtoft@c
   749  000954  C002  F02C         	movff	?_Conversion+1,___awtoft@c+1
   750  000958  EC11  F009         	call	___awtoft	;wreg free
   751  00095C  C02B  F03A         	movff	?___awtoft,_Van2
   752  000960  C02C  F03B         	movff	?___awtoft+1,_Van2+1
   753  000964  C02D  F03C         	movff	?___awtoft+2,_Van2+2
   754                           
   755                           ;Prueba.c: 78: VoltAn0=Van0*5/1024;
   756  000968  0E00               	movlw	0
   757  00096A  6E0C               	movwf	___ftmul@f2^0,c
   758  00096C  0EA0               	movlw	160
   759  00096E  6E0D               	movwf	(___ftmul@f2+1)^0,c
   760  000970  0E40               	movlw	64
   761  000972  6E0E               	movwf	(___ftmul@f2+2)^0,c
   762  000974  C040  F009         	movff	_Van0,___ftmul@f1
   763  000978  C041  F00A         	movff	_Van0+1,___ftmul@f1+1
   764  00097C  C042  F00B         	movff	_Van0+2,___ftmul@f1+2
   765  000980  ECBA  F005         	call	___ftmul	;wreg free
   766  000984  C009  F018         	movff	?___ftmul,___ftdiv@f1
   767  000988  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   768  00098C  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   769  000990  0E00               	movlw	0
   770  000992  6E1B               	movwf	___ftdiv@f2^0,c
   771  000994  0E80               	movlw	128
   772  000996  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   773  000998  0E44               	movlw	68
   774  00099A  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   775  00099C  EC34  F006         	call	___ftdiv	;wreg free
   776  0009A0  C018  F034         	movff	?___ftdiv,_VoltAn0
   777  0009A4  C019  F035         	movff	?___ftdiv+1,_VoltAn0+1
   778  0009A8  C01A  F036         	movff	?___ftdiv+2,_VoltAn0+2
   779                           
   780                           ;Prueba.c: 79: VoltAn1=Van1*5/1024;
   781  0009AC  0E00               	movlw	0
   782  0009AE  6E0C               	movwf	___ftmul@f2^0,c
   783  0009B0  0EA0               	movlw	160
   784  0009B2  6E0D               	movwf	(___ftmul@f2+1)^0,c
   785  0009B4  0E40               	movlw	64
   786  0009B6  6E0E               	movwf	(___ftmul@f2+2)^0,c
   787  0009B8  C03D  F009         	movff	_Van1,___ftmul@f1
   788  0009BC  C03E  F00A         	movff	_Van1+1,___ftmul@f1+1
   789  0009C0  C03F  F00B         	movff	_Van1+2,___ftmul@f1+2
   790  0009C4  ECBA  F005         	call	___ftmul	;wreg free
   791  0009C8  C009  F018         	movff	?___ftmul,___ftdiv@f1
   792  0009CC  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   793  0009D0  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   794  0009D4  0E00               	movlw	0
   795  0009D6  6E1B               	movwf	___ftdiv@f2^0,c
   796  0009D8  0E80               	movlw	128
   797  0009DA  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   798  0009DC  0E44               	movlw	68
   799  0009DE  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   800  0009E0  EC34  F006         	call	___ftdiv	;wreg free
   801  0009E4  C018  F037         	movff	?___ftdiv,_VoltAn1
   802  0009E8  C019  F038         	movff	?___ftdiv+1,_VoltAn1+1
   803  0009EC  C01A  F039         	movff	?___ftdiv+2,_VoltAn1+2
   804                           
   805                           ;Prueba.c: 80: VoltAn2=Van2*5/1024;
   806  0009F0  0E00               	movlw	0
   807  0009F2  6E0C               	movwf	___ftmul@f2^0,c
   808  0009F4  0EA0               	movlw	160
   809  0009F6  6E0D               	movwf	(___ftmul@f2+1)^0,c
   810  0009F8  0E40               	movlw	64
   811  0009FA  6E0E               	movwf	(___ftmul@f2+2)^0,c
   812  0009FC  C03A  F009         	movff	_Van2,___ftmul@f1
   813  000A00  C03B  F00A         	movff	_Van2+1,___ftmul@f1+1
   814  000A04  C03C  F00B         	movff	_Van2+2,___ftmul@f1+2
   815  000A08  ECBA  F005         	call	___ftmul	;wreg free
   816  000A0C  C009  F018         	movff	?___ftmul,___ftdiv@f1
   817  000A10  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   818  000A14  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   819  000A18  0E00               	movlw	0
   820  000A1A  6E1B               	movwf	___ftdiv@f2^0,c
   821  000A1C  0E80               	movlw	128
   822  000A1E  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   823  000A20  0E44               	movlw	68
   824  000A22  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   825  000A24  EC34  F006         	call	___ftdiv	;wreg free
   826  000A28  C018  F031         	movff	?___ftdiv,_VoltAn2
   827  000A2C  C019  F032         	movff	?___ftdiv+1,_VoltAn2+1
   828  000A30  C01A  F033         	movff	?___ftdiv+2,_VoltAn2+2
   829                           
   830                           ;Prueba.c: 81: BorraLCD();
   831  000A34  ECC4  F009         	call	_BorraLCD	;wreg free
   832                           
   833                           ;Prueba.c: 96: BorraLCD();
   834  000A38  ECC4  F009         	call	_BorraLCD	;wreg free
   835                           
   836                           ;Prueba.c: 97: if(Van0>=0){
   837  000A3C  BE42               	btfsc	(_Van0+2)^0,7,c
   838  000A3E  D017               	goto	l1914
   839                           
   840                           ;Prueba.c: 98: EscribeLCD_2Decimales(Van0/497);
   841  000A40  C040  F018         	movff	_Van0,___ftdiv@f1
   842  000A44  C041  F019         	movff	_Van0+1,___ftdiv@f1+1
   843  000A48  C042  F01A         	movff	_Van0+2,___ftdiv@f1+2
   844  000A4C  0E80               	movlw	128
   845  000A4E  6E1B               	movwf	___ftdiv@f2^0,c
   846  000A50  0EF8               	movlw	248
   847  000A52  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   848  000A54  0E43               	movlw	67
   849  000A56  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   850  000A58  EC34  F006         	call	___ftdiv	;wreg free
   851  000A5C  C018  F027         	movff	?___ftdiv,EscribeLCD_2Decimales@a
   852  000A60  C019  F028         	movff	?___ftdiv+1,EscribeLCD_2Decimales@a+1
   853  000A64  C01A  F029         	movff	?___ftdiv+2,EscribeLCD_2Decimales@a+2
   854  000A68  EC28  F008         	call	_EscribeLCD_2Decimales	;wreg free
   855                           
   856                           ;Prueba.c: 100: }else{
   857  000A6C  D033               	goto	l191
   858  000A6E                     l1914:
   859                           
   860                           ;Prueba.c: 101: EscribeLCD_c('-');
   861  000A6E  0E2D               	movlw	45
   862  000A70  ECAE  F009         	call	_EscribeLCD_c
   863                           
   864                           ;Prueba.c: 102: Van0=abs(Van0);
   865  000A74  C040  F018         	movff	_Van0,___fttol@f1
   866  000A78  C041  F019         	movff	_Van0+1,___fttol@f1+1
   867  000A7C  C042  F01A         	movff	_Van0+2,___fttol@f1+2
   868  000A80  EC1A  F007         	call	___fttol	;wreg free
   869  000A84  C018  F027         	movff	?___fttol,abs@a
   870  000A88  C019  F028         	movff	?___fttol+1,abs@a+1
   871  000A8C  EC58  F009         	call	_abs	;wreg free
   872  000A90  C027  F02B         	movff	?_abs,___awtoft@c
   873  000A94  C028  F02C         	movff	?_abs+1,___awtoft@c+1
   874  000A98  EC11  F009         	call	___awtoft	;wreg free
   875  000A9C  C02B  F040         	movff	?___awtoft,_Van0
   876  000AA0  C02C  F041         	movff	?___awtoft+1,_Van0+1
   877  000AA4  C02D  F042         	movff	?___awtoft+2,_Van0+2
   878                           
   879                           ;Prueba.c: 103: EscribeLCD_2Decimales(Van0/525);
   880  000AA8  C040  F018         	movff	_Van0,___ftdiv@f1
   881  000AAC  C041  F019         	movff	_Van0+1,___ftdiv@f1+1
   882  000AB0  C042  F01A         	movff	_Van0+2,___ftdiv@f1+2
   883  000AB4  0E40               	movlw	64
   884  000AB6  6E1B               	movwf	___ftdiv@f2^0,c
   885  000AB8  0E03               	movlw	3
   886  000ABA  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   887  000ABC  0E44               	movlw	68
   888  000ABE  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   889  000AC0  EC34  F006         	call	___ftdiv	;wreg free
   890  000AC4  C018  F027         	movff	?___ftdiv,EscribeLCD_2Decimales@a
   891  000AC8  C019  F028         	movff	?___ftdiv+1,EscribeLCD_2Decimales@a+1
   892  000ACC  C01A  F029         	movff	?___ftdiv+2,EscribeLCD_2Decimales@a+2
   893  000AD0  EC28  F008         	call	_EscribeLCD_2Decimales	;wreg free
   894  000AD4                     l191:
   895                           
   896                           ;Prueba.c: 105: };Prueba.c: 107: DireccionaLCD(0xC0);
   897  000AD4  0EC0               	movlw	192
   898  000AD6  ECB9  F009         	call	_DireccionaLCD
   899                           
   900                           ;Prueba.c: 108: if(Van1>=0){
   901  000ADA  BE3F               	btfsc	(_Van1+2)^0,7,c
   902  000ADC  D017               	goto	l1920
   903                           
   904                           ;Prueba.c: 109: EscribeLCD_2Decimales(Van1/507);
   905  000ADE  C03D  F018         	movff	_Van1,___ftdiv@f1
   906  000AE2  C03E  F019         	movff	_Van1+1,___ftdiv@f1+1
   907  000AE6  C03F  F01A         	movff	_Van1+2,___ftdiv@f1+2
   908  000AEA  0E80               	movlw	128
   909  000AEC  6E1B               	movwf	___ftdiv@f2^0,c
   910  000AEE  0EFD               	movlw	253
   911  000AF0  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   912  000AF2  0E43               	movlw	67
   913  000AF4  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   914  000AF6  EC34  F006         	call	___ftdiv	;wreg free
   915  000AFA  C018  F027         	movff	?___ftdiv,EscribeLCD_2Decimales@a
   916  000AFE  C019  F028         	movff	?___ftdiv+1,EscribeLCD_2Decimales@a+1
   917  000B02  C01A  F029         	movff	?___ftdiv+2,EscribeLCD_2Decimales@a+2
   918  000B06  EC28  F008         	call	_EscribeLCD_2Decimales	;wreg free
   919                           
   920                           ;Prueba.c: 112: }else{
   921  000B0A  D6F9               	goto	l1894
   922  000B0C                     l1920:
   923                           
   924                           ;Prueba.c: 113: EscribeLCD_c('-');
   925  000B0C  0E2D               	movlw	45
   926  000B0E  ECAE  F009         	call	_EscribeLCD_c
   927                           
   928                           ;Prueba.c: 114: Van1=abs(Van1);
   929  000B12  C03D  F018         	movff	_Van1,___fttol@f1
   930  000B16  C03E  F019         	movff	_Van1+1,___fttol@f1+1
   931  000B1A  C03F  F01A         	movff	_Van1+2,___fttol@f1+2
   932  000B1E  EC1A  F007         	call	___fttol	;wreg free
   933  000B22  C018  F027         	movff	?___fttol,abs@a
   934  000B26  C019  F028         	movff	?___fttol+1,abs@a+1
   935  000B2A  EC58  F009         	call	_abs	;wreg free
   936  000B2E  C027  F02B         	movff	?_abs,___awtoft@c
   937  000B32  C028  F02C         	movff	?_abs+1,___awtoft@c+1
   938  000B36  EC11  F009         	call	___awtoft	;wreg free
   939  000B3A  C02B  F03D         	movff	?___awtoft,_Van1
   940  000B3E  C02C  F03E         	movff	?___awtoft+1,_Van1+1
   941  000B42  C02D  F03F         	movff	?___awtoft+2,_Van1+2
   942                           
   943                           ;Prueba.c: 115: EscribeLCD_2Decimales(Van1/515);
   944  000B46  C03D  F018         	movff	_Van1,___ftdiv@f1
   945  000B4A  C03E  F019         	movff	_Van1+1,___ftdiv@f1+1
   946  000B4E  C03F  F01A         	movff	_Van1+2,___ftdiv@f1+2
   947  000B52  0EC0               	movlw	192
   948  000B54  6E1B               	movwf	___ftdiv@f2^0,c
   949  000B56  0E00               	movlw	0
   950  000B58  6E1C               	movwf	(___ftdiv@f2+1)^0,c
   951  000B5A  0E44               	movlw	68
   952  000B5C  6E1D               	movwf	(___ftdiv@f2+2)^0,c
   953  000B5E  EC34  F006         	call	___ftdiv	;wreg free
   954  000B62  C018  F027         	movff	?___ftdiv,EscribeLCD_2Decimales@a
   955  000B66  C019  F028         	movff	?___ftdiv+1,EscribeLCD_2Decimales@a+1
   956  000B6A  C01A  F029         	movff	?___ftdiv+2,EscribeLCD_2Decimales@a+2
   957  000B6E  EC28  F008         	call	_EscribeLCD_2Decimales	;wreg free
   958  000B72  D6C5               	goto	l1894
   959  000B74                     __end_of_main:
   960                           	callstack 0
   961                           
   962 ;; *************** function _abs *****************
   963 ;; Defined at:
   964 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\abs.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  a               2   38[COMRAM] int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2   38[COMRAM] int 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         2       0       0       0       0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0
   980 ;;      Temps:          2       0       0       0       0       0       0       0       0
   981 ;;      Totals:         4       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        4 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text1
   993  0012B0                     __ptext1:
   994                           	callstack 0
   995  0012B0                     _abs:
   996                           	callstack 29
   997                           
   998                           ;incstack = 0
   999  0012B0  AE28               	btfss	(abs@a+1)^0,7,c
  1000  0012B2  D00D               	goto	l951
  1001  0012B4  C027  F029         	movff	abs@a,??_abs
  1002  0012B8  C028  F02A         	movff	abs@a+1,??_abs+1
  1003  0012BC  1E29               	comf	??_abs^0,f,c
  1004  0012BE  1E2A               	comf	(??_abs+1)^0,f,c
  1005  0012C0  4A29               	infsnz	??_abs^0,f,c
  1006  0012C2  2A2A               	incf	(??_abs+1)^0,f,c
  1007  0012C4  C029  F027         	movff	??_abs,?_abs
  1008  0012C8  C02A  F028         	movff	??_abs+1,?_abs+1
  1009  0012CC  0012               	return	
  1010  0012CE                     l951:
  1011  0012CE  C027  F027         	movff	abs@a,?_abs
  1012  0012D2  C028  F028         	movff	abs@a+1,?_abs+1
  1013  0012D6  0012               	return		;funcret
  1014  0012D8                     __end_of_abs:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function ___ftdiv *****************
  1018 ;; Defined at:
  1019 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdiv.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  f1              3   23[COMRAM] float 
  1022 ;;  f2              3   26[COMRAM] float 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  f3              3   33[COMRAM] float 
  1025 ;;  sign            1   37[COMRAM] unsigned char 
  1026 ;;  exp             1   36[COMRAM] unsigned char 
  1027 ;;  cntr            1   32[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  3   23[COMRAM] float 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1037 ;;      Params:         6       0       0       0       0       0       0       0       0
  1038 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1039 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1040 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1041 ;;Total ram usage:       15 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 2
  1044 ;; This function calls:
  1045 ;;		___ftpack
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text2
  1052  000C68                     __ptext2:
  1053                           	callstack 0
  1054  000C68                     ___ftdiv:
  1055                           	callstack 28
  1056                           
  1057                           ;incstack = 0
  1058  000C68  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
  1059  000C6C  6A1F               	clrf	(??___ftdiv+1)^0,c
  1060  000C6E  6A20               	clrf	(??___ftdiv+2)^0,c
  1061  000C70  3419               	rlcf	(___ftdiv@f1+1)^0,w,c
  1062  000C72  361E               	rlcf	??___ftdiv^0,f,c
  1063  000C74  E301               	bnc	u901
  1064  000C76  801F               	bsf	(??___ftdiv+1)^0,0,c
  1065  000C78                     u901:
  1066  000C78  501E               	movf	??___ftdiv^0,w,c
  1067  000C7A  6E25               	movwf	___ftdiv@exp^0,c
  1068  000C7C  5025               	movf	___ftdiv@exp^0,w,c
  1069  000C7E  A4D8               	btfss	status,2,c
  1070  000C80  D007               	goto	l1810
  1071  000C82  0E00               	movlw	0
  1072  000C84  6E18               	movwf	?___ftdiv^0,c
  1073  000C86  0E00               	movlw	0
  1074  000C88  6E19               	movwf	(?___ftdiv+1)^0,c
  1075  000C8A  0E00               	movlw	0
  1076  000C8C  6E1A               	movwf	(?___ftdiv+2)^0,c
  1077  000C8E  0012               	return	
  1078  000C90                     l1810:
  1079  000C90  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
  1080  000C94  6A1F               	clrf	(??___ftdiv+1)^0,c
  1081  000C96  6A20               	clrf	(??___ftdiv+2)^0,c
  1082  000C98  341C               	rlcf	(___ftdiv@f2+1)^0,w,c
  1083  000C9A  361E               	rlcf	??___ftdiv^0,f,c
  1084  000C9C  E301               	bnc	u921
  1085  000C9E  801F               	bsf	(??___ftdiv+1)^0,0,c
  1086  000CA0                     u921:
  1087  000CA0  501E               	movf	??___ftdiv^0,w,c
  1088  000CA2  6E26               	movwf	___ftdiv@sign^0,c
  1089  000CA4  5026               	movf	___ftdiv@sign^0,w,c
  1090  000CA6  A4D8               	btfss	status,2,c
  1091  000CA8  D007               	goto	l1816
  1092  000CAA  0E00               	movlw	0
  1093  000CAC  6E18               	movwf	?___ftdiv^0,c
  1094  000CAE  0E00               	movlw	0
  1095  000CB0  6E19               	movwf	(?___ftdiv+1)^0,c
  1096  000CB2  0E00               	movlw	0
  1097  000CB4  6E1A               	movwf	(?___ftdiv+2)^0,c
  1098  000CB6  0012               	return	
  1099  000CB8                     l1816:
  1100  000CB8  0E00               	movlw	0
  1101  000CBA  6E22               	movwf	___ftdiv@f3^0,c
  1102  000CBC  0E00               	movlw	0
  1103  000CBE  6E23               	movwf	(___ftdiv@f3+1)^0,c
  1104  000CC0  0E00               	movlw	0
  1105  000CC2  6E24               	movwf	(___ftdiv@f3+2)^0,c
  1106  000CC4  5026               	movf	___ftdiv@sign^0,w,c
  1107  000CC6  0F89               	addlw	137
  1108  000CC8  5E25               	subwf	___ftdiv@exp^0,f,c
  1109  000CCA  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
  1110  000CCE  501D               	movf	(___ftdiv@f2+2)^0,w,c
  1111  000CD0  1A26               	xorwf	___ftdiv@sign^0,f,c
  1112  000CD2  0E80               	movlw	128
  1113  000CD4  1626               	andwf	___ftdiv@sign^0,f,c
  1114  000CD6  8E19               	bsf	(___ftdiv@f1+1)^0,7,c
  1115  000CD8  0EFF               	movlw	255
  1116  000CDA  1618               	andwf	___ftdiv@f1^0,f,c
  1117  000CDC  0EFF               	movlw	255
  1118  000CDE  1619               	andwf	(___ftdiv@f1+1)^0,f,c
  1119  000CE0  0E00               	movlw	0
  1120  000CE2  161A               	andwf	(___ftdiv@f1+2)^0,f,c
  1121  000CE4  8E1C               	bsf	(___ftdiv@f2+1)^0,7,c
  1122  000CE6  0EFF               	movlw	255
  1123  000CE8  161B               	andwf	___ftdiv@f2^0,f,c
  1124  000CEA  0EFF               	movlw	255
  1125  000CEC  161C               	andwf	(___ftdiv@f2+1)^0,f,c
  1126  000CEE  0E00               	movlw	0
  1127  000CF0  161D               	andwf	(___ftdiv@f2+2)^0,f,c
  1128  000CF2  0E18               	movlw	24
  1129  000CF4  6E21               	movwf	___ftdiv@cntr^0,c
  1130  000CF6                     l1836:
  1131  000CF6  90D8               	bcf	status,0,c
  1132  000CF8  3622               	rlcf	___ftdiv@f3^0,f,c
  1133  000CFA  3623               	rlcf	(___ftdiv@f3+1)^0,f,c
  1134  000CFC  3624               	rlcf	(___ftdiv@f3+2)^0,f,c
  1135  000CFE  501B               	movf	___ftdiv@f2^0,w,c
  1136  000D00  5C18               	subwf	___ftdiv@f1^0,w,c
  1137  000D02  501C               	movf	(___ftdiv@f2+1)^0,w,c
  1138  000D04  5819               	subwfb	(___ftdiv@f1+1)^0,w,c
  1139  000D06  501D               	movf	(___ftdiv@f2+2)^0,w,c
  1140  000D08  581A               	subwfb	(___ftdiv@f1+2)^0,w,c
  1141  000D0A  A0D8               	btfss	status,0,c
  1142  000D0C  D007               	goto	l630
  1143  000D0E  501B               	movf	___ftdiv@f2^0,w,c
  1144  000D10  5E18               	subwf	___ftdiv@f1^0,f,c
  1145  000D12  501C               	movf	(___ftdiv@f2+1)^0,w,c
  1146  000D14  5A19               	subwfb	(___ftdiv@f1+1)^0,f,c
  1147  000D16  501D               	movf	(___ftdiv@f2+2)^0,w,c
  1148  000D18  5A1A               	subwfb	(___ftdiv@f1+2)^0,f,c
  1149  000D1A  8022               	bsf	___ftdiv@f3^0,0,c
  1150  000D1C                     l630:
  1151  000D1C  90D8               	bcf	status,0,c
  1152  000D1E  3618               	rlcf	___ftdiv@f1^0,f,c
  1153  000D20  3619               	rlcf	(___ftdiv@f1+1)^0,f,c
  1154  000D22  361A               	rlcf	(___ftdiv@f1+2)^0,f,c
  1155  000D24  2E21               	decfsz	___ftdiv@cntr^0,f,c
  1156  000D26  D7E7               	goto	l1836
  1157  000D28  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
  1158  000D2C  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1159  000D30  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1160  000D34  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
  1161  000D38  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
  1162  000D3C  EC83  F007         	call	___ftpack	;wreg free
  1163  000D40  C001  F018         	movff	?___ftpack,?___ftdiv
  1164  000D44  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
  1165  000D48  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  1166  000D4C  0012               	return		;funcret
  1167  000D4E                     __end_of___ftdiv:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function ___awtoft *****************
  1171 ;; Defined at:
  1172 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awtoft.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  c               2   42[COMRAM] int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  sign            1   45[COMRAM] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  3   42[COMRAM] float 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         3       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1190 ;;Total ram usage:        4 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		___ftpack
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text3
  1201  001222                     __ptext3:
  1202                           	callstack 0
  1203  001222                     ___awtoft:
  1204                           	callstack 28
  1205                           
  1206                           ;incstack = 0
  1207  001222  0E00               	movlw	0
  1208  001224  6E2E               	movwf	___awtoft@sign^0,c
  1209  001226  AE2C               	btfss	(___awtoft@c+1)^0,7,c
  1210  001228  D006               	goto	l1858
  1211  00122A  6C2B               	negf	___awtoft@c^0,c
  1212  00122C  1E2C               	comf	(___awtoft@c+1)^0,f,c
  1213  00122E  B0D8               	btfsc	status,0,c
  1214  001230  2A2C               	incf	(___awtoft@c+1)^0,f,c
  1215  001232  0E01               	movlw	1
  1216  001234  6E2E               	movwf	___awtoft@sign^0,c
  1217  001236                     l1858:
  1218  001236  C02B  F001         	movff	___awtoft@c,___ftpack@arg
  1219  00123A  C02C  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1220  00123E  6A03               	clrf	(___ftpack@arg+2)^0,c
  1221  001240  0E8E               	movlw	142
  1222  001242  6E04               	movwf	___ftpack@exp^0,c
  1223  001244  C02E  F005         	movff	___awtoft@sign,___ftpack@sign
  1224  001248  EC83  F007         	call	___ftpack	;wreg free
  1225  00124C  C001  F02B         	movff	?___ftpack,?___awtoft
  1226  001250  C002  F02C         	movff	?___ftpack+1,?___awtoft+1
  1227  001254  C003  F02D         	movff	?___ftpack+2,?___awtoft+2
  1228  001258  0012               	return		;funcret
  1229  00125A                     __end_of___awtoft:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _MensajeLCD_Var *****************
  1233 ;; Defined at:
  1234 ;;		line 299 in file "LibLCDXC8.h"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  a               1    5[COMRAM] PTR unsigned char 
  1237 ;;		 -> STR_3(3), STR_2(7), STR_1(14), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1249 ;;      Params:         1       0       0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1252 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1253 ;;Total ram usage:        1 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 4
  1256 ;; This function calls:
  1257 ;;		_EscribeLCD_c
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text4
  1264  0012D8                     __ptext4:
  1265                           	callstack 0
  1266  0012D8                     _MensajeLCD_Var:
  1267                           	callstack 26
  1268                           
  1269                           ;LibLCDXC8.h: 303: while(*a != '\0'){
  1270                           
  1271                           ;incstack = 0
  1272  0012D8  D009               	goto	l1792
  1273  0012DA                     l1788:
  1274                           
  1275                           ;LibLCDXC8.h: 304: EscribeLCD_c(*a);
  1276  0012DA  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1277  0012DE                     	if	1	;There is more than 1 active tblptr byte
  1278  0012DE  0E08               	movlw	high __smallconst
  1279  0012E0  6EF7               	movwf	tblptrh,c
  1280  0012E2                     	endif
  1281  0012E2                     	if	0	;tblptru may be non-zero
  1282  0012E2                     	endif
  1283  0012E2                     	if	0	;tblptru may be non-zero
  1284  0012E2                     	endif
  1285  0012E2  0008               	tblrd		*
  1286  0012E4  50F5               	movf	tablat,w,c
  1287  0012E6  ECAE  F009         	call	_EscribeLCD_c
  1288                           
  1289                           ;LibLCDXC8.h: 305: a++;
  1290  0012EA  2A06               	incf	MensajeLCD_Var@a^0,f,c
  1291  0012EC                     l1792:
  1292  0012EC  C006  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1293  0012F0                     	if	1	;There is more than 1 active tblptr byte
  1294  0012F0  0E08               	movlw	high __smallconst
  1295  0012F2  6EF7               	movwf	tblptrh,c
  1296  0012F4                     	endif
  1297  0012F4                     	if	0	;tblptru may be non-zero
  1298  0012F4                     	endif
  1299  0012F4                     	if	0	;tblptru may be non-zero
  1300  0012F4                     	endif
  1301  0012F4  0008               	tblrd		*
  1302  0012F6  50F5               	movf	tablat,w,c
  1303  0012F8  0900               	iorlw	0
  1304  0012FA  B4D8               	btfsc	status,2,c
  1305  0012FC  0012               	return	
  1306  0012FE  D7ED               	goto	l1788
  1307  001300                     __end_of_MensajeLCD_Var:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _InicializaLCD *****************
  1311 ;; Defined at:
  1312 ;;		line 67 in file "LibLCDXC8.h"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 4
  1333 ;; This function calls:
  1334 ;;		_BorraLCD
  1335 ;;		_EnviaDato
  1336 ;;		_HabilitaLCD
  1337 ;;		_RetardoLCD
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344  000FB4                     __ptext5:
  1345                           	callstack 0
  1346  000FB4                     _InicializaLCD:
  1347                           	callstack 26
  1348                           
  1349                           ;LibLCDXC8.h: 69: LATD2=0;
  1350                           
  1351                           ;incstack = 0
  1352  000FB4  948C               	bcf	3980,2,c	;volatile
  1353                           
  1354                           ;LibLCDXC8.h: 70: if(interfaz==4)
  1355  000FB6  0E04               	movlw	4
  1356  000FB8  1849               	xorwf	_interfaz^0,w,c
  1357  000FBA  A4D8               	btfss	status,2,c
  1358  000FBC  D004               	goto	l1342
  1359                           
  1360                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
  1361  000FBE  508C               	movf	140,w,c	;volatile
  1362  000FC0  0B0F               	andlw	15
  1363  000FC2  0930               	iorlw	48
  1364  000FC4  D001               	goto	L1
  1365  000FC6                     l1342:
  1366                           
  1367                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
  1368  000FC6  0E3F               	movlw	63
  1369  000FC8                     L1:
  1370  000FC8  6E8C               	movwf	140,c	;volatile
  1371                           
  1372                           ;LibLCDXC8.h: 74: HabilitaLCD();
  1373  000FCA  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1374                           
  1375                           ;LibLCDXC8.h: 75: RetardoLCD(1);
  1376  000FCE  0E01               	movlw	1
  1377  000FD0  EC9E  F008         	call	_RetardoLCD
  1378                           
  1379                           ;LibLCDXC8.h: 76: if(interfaz==4)
  1380  000FD4  0E04               	movlw	4
  1381  000FD6  1849               	xorwf	_interfaz^0,w,c
  1382  000FD8  A4D8               	btfss	status,2,c
  1383  000FDA  D004               	goto	l1352
  1384                           
  1385                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
  1386  000FDC  508C               	movf	140,w,c	;volatile
  1387  000FDE  0B0F               	andlw	15
  1388  000FE0  0930               	iorlw	48
  1389  000FE2  D001               	goto	L2
  1390  000FE4                     l1352:
  1391                           
  1392                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  1393  000FE4  0E3F               	movlw	63
  1394  000FE6                     L2:
  1395  000FE6  6E8C               	movwf	140,c	;volatile
  1396                           
  1397                           ;LibLCDXC8.h: 80: HabilitaLCD();
  1398  000FE8  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1399                           
  1400                           ;LibLCDXC8.h: 81: RetardoLCD(3);
  1401  000FEC  0E03               	movlw	3
  1402  000FEE  EC9E  F008         	call	_RetardoLCD
  1403                           
  1404                           ;LibLCDXC8.h: 82: if(interfaz==4)
  1405  000FF2  0E04               	movlw	4
  1406  000FF4  1849               	xorwf	_interfaz^0,w,c
  1407  000FF6  A4D8               	btfss	status,2,c
  1408  000FF8  D004               	goto	l1362
  1409                           
  1410                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x30;
  1411  000FFA  508C               	movf	140,w,c	;volatile
  1412  000FFC  0B0F               	andlw	15
  1413  000FFE  0930               	iorlw	48
  1414  001000  D001               	goto	L3
  1415  001002                     l1362:
  1416                           
  1417                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
  1418  001002  0E3F               	movlw	63
  1419  001004                     L3:
  1420  001004  6E8C               	movwf	140,c	;volatile
  1421                           
  1422                           ;LibLCDXC8.h: 86: HabilitaLCD();
  1423  001006  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1424                           
  1425                           ;LibLCDXC8.h: 87: RetardoLCD(4);
  1426  00100A  0E04               	movlw	4
  1427  00100C  EC9E  F008         	call	_RetardoLCD
  1428                           
  1429                           ;LibLCDXC8.h: 88: if(interfaz==4){
  1430  001010  0E04               	movlw	4
  1431  001012  1849               	xorwf	_interfaz^0,w,c
  1432  001014  A4D8               	btfss	status,2,c
  1433  001016  D011               	goto	l1382
  1434                           
  1435                           ;LibLCDXC8.h: 89: LATD=(LATD & 0b00001111) | 0x20;
  1436  001018  508C               	movf	140,w,c	;volatile
  1437  00101A  0B0F               	andlw	15
  1438  00101C  0920               	iorlw	32
  1439  00101E  6E8C               	movwf	140,c	;volatile
  1440                           
  1441                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1442  001020  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1443                           
  1444                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1445  001024  0E04               	movlw	4
  1446  001026  EC9E  F008         	call	_RetardoLCD
  1447                           
  1448                           ;LibLCDXC8.h: 92: EnviaDato(0x2F);
  1449  00102A  0E2F               	movlw	47
  1450  00102C  ECD1  F008         	call	_EnviaDato
  1451                           
  1452                           ;LibLCDXC8.h: 93: HabilitaLCD();
  1453  001030  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1454                           
  1455                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  1456  001034  0E04               	movlw	4
  1457  001036  EC9E  F008         	call	_RetardoLCD
  1458  00103A                     l1382:
  1459                           
  1460                           ;LibLCDXC8.h: 95: };LibLCDXC8.h: 96: BorraLCD();
  1461  00103A  ECC4  F009         	call	_BorraLCD	;wreg free
  1462                           
  1463                           ;LibLCDXC8.h: 97: EnviaDato(0xF);
  1464  00103E  0E0F               	movlw	15
  1465  001040  ECD1  F008         	call	_EnviaDato
  1466                           
  1467                           ;LibLCDXC8.h: 98: HabilitaLCD();
  1468  001044  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1469                           
  1470                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  1471  001048  0E04               	movlw	4
  1472  00104A  EC9E  F008         	call	_RetardoLCD
  1473  00104E  0012               	return		;funcret
  1474  001050                     __end_of_InicializaLCD:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _BorraLCD *****************
  1478 ;; Defined at:
  1479 ;;		line 110 in file "LibLCDXC8.h"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 3
  1500 ;; This function calls:
  1501 ;;		_EnviaDato
  1502 ;;		_HabilitaLCD
  1503 ;;		_RetardoLCD
  1504 ;; This function is called by:
  1505 ;;		_InicializaLCD
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text6
  1511  001388                     __ptext6:
  1512                           	callstack 0
  1513  001388                     _BorraLCD:
  1514                           	callstack 26
  1515                           
  1516                           ;LibLCDXC8.h: 112: LATD2=0;
  1517                           
  1518                           ;incstack = 0
  1519  001388  948C               	bcf	3980,2,c	;volatile
  1520                           
  1521                           ;LibLCDXC8.h: 113: EnviaDato(0x01);
  1522  00138A  0E01               	movlw	1
  1523  00138C  ECD1  F008         	call	_EnviaDato
  1524                           
  1525                           ;LibLCDXC8.h: 114: HabilitaLCD();
  1526  001390  ECCE  F009         	call	_HabilitaLCD	;wreg free
  1527                           
  1528                           ;LibLCDXC8.h: 115: RetardoLCD(2);
  1529  001394  0E02               	movlw	2
  1530  001396  EC9E  F008         	call	_RetardoLCD
  1531  00139A  0012               	return		;funcret
  1532  00139C                     __end_of_BorraLCD:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _EscribeLCD_2Decimales *****************
  1536 ;; Defined at:
  1537 ;;		line 339 in file "LibLCDXC8.h"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  a               3   38[COMRAM] void 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  num             2   41[COMRAM] int 
  1542 ;;  unidad          1   44[COMRAM] unsigned char 
  1543 ;;  decimalesP      1   43[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1553 ;;      Params:         3       0       0       0       0       0       0       0       0
  1554 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1556 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1557 ;;Total ram usage:        7 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 4
  1560 ;; This function calls:
  1561 ;;		_EscribeLCD_c
  1562 ;;		_EscribeLCD_n8
  1563 ;;		___awmod
  1564 ;;		___ftmul
  1565 ;;		___fttol
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text7
  1572  001050                     __ptext7:
  1573                           	callstack 0
  1574  001050                     _EscribeLCD_2Decimales:
  1575                           	callstack 26
  1576                           
  1577                           ;LibLCDXC8.h: 340: int num;;LibLCDXC8.h: 341: char decimalesP;;LibLCDXC8.h: 342: char un
      +                          idad;;LibLCDXC8.h: 343: unidad=a;
  1578                           
  1579                           ;incstack = 0
  1580  001050  C027  F018         	movff	EscribeLCD_2Decimales@a,___fttol@f1
  1581  001054  C028  F019         	movff	EscribeLCD_2Decimales@a+1,___fttol@f1+1
  1582  001058  C029  F01A         	movff	EscribeLCD_2Decimales@a+2,___fttol@f1+2
  1583  00105C  EC1A  F007         	call	___fttol	;wreg free
  1584  001060  5018               	movf	?___fttol^0,w,c
  1585  001062  6E2D               	movwf	EscribeLCD_2Decimales@unidad^0,c
  1586                           
  1587                           ;LibLCDXC8.h: 344: num=(a*100);
  1588  001064  0E00               	movlw	0
  1589  001066  6E0C               	movwf	___ftmul@f2^0,c
  1590  001068  0EC8               	movlw	200
  1591  00106A  6E0D               	movwf	(___ftmul@f2+1)^0,c
  1592  00106C  0E42               	movlw	66
  1593  00106E  6E0E               	movwf	(___ftmul@f2+2)^0,c
  1594  001070  C027  F009         	movff	EscribeLCD_2Decimales@a,___ftmul@f1
  1595  001074  C028  F00A         	movff	EscribeLCD_2Decimales@a+1,___ftmul@f1+1
  1596  001078  C029  F00B         	movff	EscribeLCD_2Decimales@a+2,___ftmul@f1+2
  1597  00107C  ECBA  F005         	call	___ftmul	;wreg free
  1598  001080  C009  F018         	movff	?___ftmul,___fttol@f1
  1599  001084  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1600  001088  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1601  00108C  EC1A  F007         	call	___fttol	;wreg free
  1602  001090  C018  F02A         	movff	?___fttol,EscribeLCD_2Decimales@num
  1603  001094  C019  F02B         	movff	?___fttol+1,EscribeLCD_2Decimales@num+1
  1604                           
  1605                           ;LibLCDXC8.h: 345: decimalesP=num%100;
  1606  001098  C02A  F001         	movff	EscribeLCD_2Decimales@num,___awmod@dividend
  1607  00109C  C02B  F002         	movff	EscribeLCD_2Decimales@num+1,___awmod@dividend+1
  1608  0010A0  0E00               	movlw	0
  1609  0010A2  6E04               	movwf	(___awmod@divisor+1)^0,c
  1610  0010A4  0E64               	movlw	100
  1611  0010A6  6E03               	movwf	___awmod@divisor^0,c
  1612  0010A8  EC66  F008         	call	___awmod	;wreg free
  1613  0010AC  5001               	movf	?___awmod^0,w,c
  1614  0010AE  6E2C               	movwf	EscribeLCD_2Decimales@decimalesP^0,c
  1615                           
  1616                           ;LibLCDXC8.h: 346: EscribeLCD_n8(unidad,1);
  1617  0010B0  0E01               	movlw	1
  1618  0010B2  6E09               	movwf	EscribeLCD_n8@b^0,c
  1619  0010B4  502D               	movf	EscribeLCD_2Decimales@unidad^0,w,c
  1620  0010B6  ECA7  F006         	call	_EscribeLCD_n8
  1621                           
  1622                           ;LibLCDXC8.h: 347: EscribeLCD_c('.');
  1623  0010BA  0E2E               	movlw	46
  1624  0010BC  ECAE  F009         	call	_EscribeLCD_c
  1625                           
  1626                           ;LibLCDXC8.h: 348: EscribeLCD_n8(decimalesP,2);
  1627  0010C0  0E02               	movlw	2
  1628  0010C2  6E09               	movwf	EscribeLCD_n8@b^0,c
  1629  0010C4  502C               	movf	EscribeLCD_2Decimales@decimalesP^0,w,c
  1630  0010C6  ECA7  F006         	call	_EscribeLCD_n8
  1631  0010CA  0012               	return		;funcret
  1632  0010CC                     __end_of_EscribeLCD_2Decimales:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function ___fttol *****************
  1636 ;; Defined at:
  1637 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fttol.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  f1              3   23[COMRAM] float 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  lval            4   33[COMRAM] unsigned long 
  1642 ;;  exp1            1   37[COMRAM] unsigned char 
  1643 ;;  sign1           1   32[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  4   23[COMRAM] long 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1653 ;;      Params:         4       0       0       0       0       0       0       0       0
  1654 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1655 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1656 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1657 ;;Total ram usage:       15 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_EscribeLCD_2Decimales
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669  000E34                     __ptext8:
  1670                           	callstack 0
  1671  000E34                     ___fttol:
  1672                           	callstack 29
  1673                           
  1674                           ;incstack = 0
  1675  000E34  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  1676  000E38  6A1D               	clrf	(??___fttol+1)^0,c
  1677  000E3A  6A1E               	clrf	(??___fttol+2)^0,c
  1678  000E3C  3419               	rlcf	(___fttol@f1+1)^0,w,c
  1679  000E3E  361C               	rlcf	??___fttol^0,f,c
  1680  000E40  E301               	bnc	u791
  1681  000E42  801D               	bsf	(??___fttol+1)^0,0,c
  1682  000E44                     u791:
  1683  000E44  501C               	movf	??___fttol^0,w,c
  1684  000E46  6E26               	movwf	___fttol@exp1^0,c
  1685  000E48  5026               	movf	___fttol@exp1^0,w,c
  1686  000E4A  A4D8               	btfss	status,2,c
  1687  000E4C  D009               	goto	l1746
  1688  000E4E                     u800:
  1689  000E4E  0E00               	movlw	0
  1690  000E50  6E18               	movwf	?___fttol^0,c
  1691  000E52  0E00               	movlw	0
  1692  000E54  6E19               	movwf	(?___fttol+1)^0,c
  1693  000E56  0E00               	movlw	0
  1694  000E58  6E1A               	movwf	(?___fttol+2)^0,c
  1695  000E5A  0E00               	movlw	0
  1696  000E5C  6E1B               	movwf	(?___fttol+3)^0,c
  1697  000E5E  0012               	return	
  1698  000E60                     l1746:
  1699  000E60  0E17               	movlw	23
  1700  000E62  6E1C               	movwf	??___fttol^0,c
  1701  000E64  C018  F01D         	movff	___fttol@f1,??___fttol+1
  1702  000E68  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  1703  000E6C  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  1704  000E70  281C               	incf	??___fttol^0,w,c
  1705  000E72  6E20               	movwf	(??___fttol+4)^0,c
  1706  000E74  D004               	goto	u810
  1707  000E76                     u815:
  1708  000E76  90D8               	bcf	status,0,c
  1709  000E78  321F               	rrcf	(??___fttol+3)^0,f,c
  1710  000E7A  321E               	rrcf	(??___fttol+2)^0,f,c
  1711  000E7C  321D               	rrcf	(??___fttol+1)^0,f,c
  1712  000E7E                     u810:
  1713  000E7E  2E20               	decfsz	(??___fttol+4)^0,f,c
  1714  000E80  D7FA               	goto	u815
  1715  000E82  501D               	movf	(??___fttol+1)^0,w,c
  1716  000E84  6E21               	movwf	___fttol@sign1^0,c
  1717  000E86  8E19               	bsf	(___fttol@f1+1)^0,7,c
  1718  000E88  0EFF               	movlw	255
  1719  000E8A  1618               	andwf	___fttol@f1^0,f,c
  1720  000E8C  0EFF               	movlw	255
  1721  000E8E  1619               	andwf	(___fttol@f1+1)^0,f,c
  1722  000E90  0E00               	movlw	0
  1723  000E92  161A               	andwf	(___fttol@f1+2)^0,f,c
  1724  000E94  5018               	movf	___fttol@f1^0,w,c
  1725  000E96  6E22               	movwf	___fttol@lval^0,c
  1726  000E98  5019               	movf	(___fttol@f1+1)^0,w,c
  1727  000E9A  6E23               	movwf	(___fttol@lval+1)^0,c
  1728  000E9C  501A               	movf	(___fttol@f1+2)^0,w,c
  1729  000E9E  6E24               	movwf	(___fttol@lval+2)^0,c
  1730  000EA0  6A25               	clrf	(___fttol@lval+3)^0,c
  1731  000EA2  0E8E               	movlw	142
  1732  000EA4  5E26               	subwf	___fttol@exp1^0,f,c
  1733  000EA6  AE26               	btfss	___fttol@exp1^0,7,c
  1734  000EA8  D00D               	goto	l1768
  1735  000EAA  5026               	movf	___fttol@exp1^0,w,c
  1736  000EAC  0A80               	xorlw	128
  1737  000EAE  0F8F               	addlw	143
  1738  000EB0  A0D8               	btfss	status,0,c
  1739  000EB2  D7CD               	goto	u800
  1740  000EB4                     l1764:
  1741  000EB4  90D8               	bcf	status,0,c
  1742  000EB6  3225               	rrcf	(___fttol@lval+3)^0,f,c
  1743  000EB8  3224               	rrcf	(___fttol@lval+2)^0,f,c
  1744  000EBA  3223               	rrcf	(___fttol@lval+1)^0,f,c
  1745  000EBC  3222               	rrcf	___fttol@lval^0,f,c
  1746  000EBE  3E26               	incfsz	___fttol@exp1^0,f,c
  1747  000EC0  D7F9               	goto	l1764
  1748  000EC2  D00D               	goto	u850
  1749  000EC4                     l1768:
  1750  000EC4  0E17               	movlw	23
  1751  000EC6  6426               	cpfsgt	___fttol@exp1^0,c
  1752  000EC8  D007               	goto	l1776
  1753  000ECA  D7C1               	goto	u800
  1754  000ECC                     l1774:
  1755  000ECC  90D8               	bcf	status,0,c
  1756  000ECE  3622               	rlcf	___fttol@lval^0,f,c
  1757  000ED0  3623               	rlcf	(___fttol@lval+1)^0,f,c
  1758  000ED2  3624               	rlcf	(___fttol@lval+2)^0,f,c
  1759  000ED4  3625               	rlcf	(___fttol@lval+3)^0,f,c
  1760  000ED6  0626               	decf	___fttol@exp1^0,f,c
  1761  000ED8                     l1776:
  1762  000ED8  5026               	movf	___fttol@exp1^0,w,c
  1763  000EDA  A4D8               	btfss	status,2,c
  1764  000EDC  D7F7               	goto	l1774
  1765  000EDE                     u850:
  1766  000EDE  5021               	movf	___fttol@sign1^0,w,c
  1767  000EE0  B4D8               	btfsc	status,2,c
  1768  000EE2  D008               	goto	l1782
  1769  000EE4  1E25               	comf	(___fttol@lval+3)^0,f,c
  1770  000EE6  1E24               	comf	(___fttol@lval+2)^0,f,c
  1771  000EE8  1E23               	comf	(___fttol@lval+1)^0,f,c
  1772  000EEA  6C22               	negf	___fttol@lval^0,c
  1773  000EEC  0E00               	movlw	0
  1774  000EEE  2223               	addwfc	(___fttol@lval+1)^0,f,c
  1775  000EF0  2224               	addwfc	(___fttol@lval+2)^0,f,c
  1776  000EF2  2225               	addwfc	(___fttol@lval+3)^0,f,c
  1777  000EF4                     l1782:
  1778  000EF4  C022  F018         	movff	___fttol@lval,?___fttol
  1779  000EF8  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  1780  000EFC  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  1781  000F00  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  1782  000F04  0012               	return		;funcret
  1783  000F06                     __end_of___fttol:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function ___ftmul *****************
  1787 ;; Defined at:
  1788 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftmul.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  f1              3    8[COMRAM] float 
  1791 ;;  f2              3   11[COMRAM] float 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  1794 ;;  sign            1   22[COMRAM] unsigned char 
  1795 ;;  cntr            1   21[COMRAM] unsigned char 
  1796 ;;  exp             1   17[COMRAM] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  3    8[COMRAM] float 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1806 ;;      Params:         6       0       0       0       0       0       0       0       0
  1807 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1808 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1809 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1810 ;;Total ram usage:       15 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 2
  1813 ;; This function calls:
  1814 ;;		___ftpack
  1815 ;; This function is called by:
  1816 ;;		_EscribeLCD_2Decimales
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text9
  1822  000B74                     __ptext9:
  1823                           	callstack 0
  1824  000B74                     ___ftmul:
  1825                           	callstack 28
  1826                           
  1827                           ;incstack = 0
  1828  000B74  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  1829  000B78  6A10               	clrf	(??___ftmul+1)^0,c
  1830  000B7A  6A11               	clrf	(??___ftmul+2)^0,c
  1831  000B7C  340A               	rlcf	(___ftmul@f1+1)^0,w,c
  1832  000B7E  360F               	rlcf	??___ftmul^0,f,c
  1833  000B80  E301               	bnc	u671
  1834  000B82  8010               	bsf	(??___ftmul+1)^0,0,c
  1835  000B84                     u671:
  1836  000B84  500F               	movf	??___ftmul^0,w,c
  1837  000B86  6E12               	movwf	___ftmul@exp^0,c
  1838  000B88  5012               	movf	___ftmul@exp^0,w,c
  1839  000B8A  A4D8               	btfss	status,2,c
  1840  000B8C  D007               	goto	l1662
  1841  000B8E  0E00               	movlw	0
  1842  000B90  6E09               	movwf	?___ftmul^0,c
  1843  000B92  0E00               	movlw	0
  1844  000B94  6E0A               	movwf	(?___ftmul+1)^0,c
  1845  000B96  0E00               	movlw	0
  1846  000B98  6E0B               	movwf	(?___ftmul+2)^0,c
  1847  000B9A  0012               	return	
  1848  000B9C                     l1662:
  1849  000B9C  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  1850  000BA0  6A10               	clrf	(??___ftmul+1)^0,c
  1851  000BA2  6A11               	clrf	(??___ftmul+2)^0,c
  1852  000BA4  340D               	rlcf	(___ftmul@f2+1)^0,w,c
  1853  000BA6  360F               	rlcf	??___ftmul^0,f,c
  1854  000BA8  E301               	bnc	u691
  1855  000BAA  8010               	bsf	(??___ftmul+1)^0,0,c
  1856  000BAC                     u691:
  1857  000BAC  500F               	movf	??___ftmul^0,w,c
  1858  000BAE  6E17               	movwf	___ftmul@sign^0,c
  1859  000BB0  5017               	movf	___ftmul@sign^0,w,c
  1860  000BB2  A4D8               	btfss	status,2,c
  1861  000BB4  D007               	goto	l1668
  1862  000BB6  0E00               	movlw	0
  1863  000BB8  6E09               	movwf	?___ftmul^0,c
  1864  000BBA  0E00               	movlw	0
  1865  000BBC  6E0A               	movwf	(?___ftmul+1)^0,c
  1866  000BBE  0E00               	movlw	0
  1867  000BC0  6E0B               	movwf	(?___ftmul+2)^0,c
  1868  000BC2  0012               	return	
  1869  000BC4                     l1668:
  1870  000BC4  5017               	movf	___ftmul@sign^0,w,c
  1871  000BC6  0F7B               	addlw	123
  1872  000BC8  2612               	addwf	___ftmul@exp^0,f,c
  1873  000BCA  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  1874  000BCE  500E               	movf	(___ftmul@f2+2)^0,w,c
  1875  000BD0  1A17               	xorwf	___ftmul@sign^0,f,c
  1876  000BD2  0E80               	movlw	128
  1877  000BD4  1617               	andwf	___ftmul@sign^0,f,c
  1878  000BD6  8E0A               	bsf	(___ftmul@f1+1)^0,7,c
  1879  000BD8  8E0D               	bsf	(___ftmul@f2+1)^0,7,c
  1880  000BDA  0EFF               	movlw	255
  1881  000BDC  160C               	andwf	___ftmul@f2^0,f,c
  1882  000BDE  0EFF               	movlw	255
  1883  000BE0  160D               	andwf	(___ftmul@f2+1)^0,f,c
  1884  000BE2  0E00               	movlw	0
  1885  000BE4  160E               	andwf	(___ftmul@f2+2)^0,f,c
  1886  000BE6  0E00               	movlw	0
  1887  000BE8  6E13               	movwf	___ftmul@f3_as_product^0,c
  1888  000BEA  0E00               	movlw	0
  1889  000BEC  6E14               	movwf	(___ftmul@f3_as_product+1)^0,c
  1890  000BEE  0E00               	movlw	0
  1891  000BF0  6E15               	movwf	(___ftmul@f3_as_product+2)^0,c
  1892  000BF2  0E07               	movlw	7
  1893  000BF4  6E16               	movwf	___ftmul@cntr^0,c
  1894  000BF6                     l1682:
  1895  000BF6  A009               	btfss	___ftmul@f1^0,0,c
  1896  000BF8  D006               	goto	l1686
  1897  000BFA  500C               	movf	___ftmul@f2^0,w,c
  1898  000BFC  2613               	addwf	___ftmul@f3_as_product^0,f,c
  1899  000BFE  500D               	movf	(___ftmul@f2+1)^0,w,c
  1900  000C00  2214               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1901  000C02  500E               	movf	(___ftmul@f2+2)^0,w,c
  1902  000C04  2215               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1903  000C06                     l1686:
  1904  000C06  90D8               	bcf	status,0,c
  1905  000C08  320B               	rrcf	(___ftmul@f1+2)^0,f,c
  1906  000C0A  320A               	rrcf	(___ftmul@f1+1)^0,f,c
  1907  000C0C  3209               	rrcf	___ftmul@f1^0,f,c
  1908  000C0E  90D8               	bcf	status,0,c
  1909  000C10  360C               	rlcf	___ftmul@f2^0,f,c
  1910  000C12  360D               	rlcf	(___ftmul@f2+1)^0,f,c
  1911  000C14  360E               	rlcf	(___ftmul@f2+2)^0,f,c
  1912  000C16  2E16               	decfsz	___ftmul@cntr^0,f,c
  1913  000C18  D7EE               	goto	l1682
  1914  000C1A  0E09               	movlw	9
  1915  000C1C  6E16               	movwf	___ftmul@cntr^0,c
  1916  000C1E                     l1692:
  1917  000C1E  A009               	btfss	___ftmul@f1^0,0,c
  1918  000C20  D006               	goto	l1696
  1919  000C22  500C               	movf	___ftmul@f2^0,w,c
  1920  000C24  2613               	addwf	___ftmul@f3_as_product^0,f,c
  1921  000C26  500D               	movf	(___ftmul@f2+1)^0,w,c
  1922  000C28  2214               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1923  000C2A  500E               	movf	(___ftmul@f2+2)^0,w,c
  1924  000C2C  2215               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1925  000C2E                     l1696:
  1926  000C2E  90D8               	bcf	status,0,c
  1927  000C30  320B               	rrcf	(___ftmul@f1+2)^0,f,c
  1928  000C32  320A               	rrcf	(___ftmul@f1+1)^0,f,c
  1929  000C34  3209               	rrcf	___ftmul@f1^0,f,c
  1930  000C36  90D8               	bcf	status,0,c
  1931  000C38  3215               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  1932  000C3A  3214               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  1933  000C3C  3213               	rrcf	___ftmul@f3_as_product^0,f,c
  1934  000C3E  2E16               	decfsz	___ftmul@cntr^0,f,c
  1935  000C40  D7EE               	goto	l1692
  1936  000C42  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1937  000C46  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1938  000C4A  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1939  000C4E  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  1940  000C52  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  1941  000C56  EC83  F007         	call	___ftpack	;wreg free
  1942  000C5A  C001  F009         	movff	?___ftpack,?___ftmul
  1943  000C5E  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1944  000C62  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1945  000C66  0012               	return		;funcret
  1946  000C68                     __end_of___ftmul:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function ___ftpack *****************
  1950 ;; Defined at:
  1951 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\float.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  arg             3    0[COMRAM] unsigned um
  1954 ;;  exp             1    3[COMRAM] unsigned char 
  1955 ;;  sign            1    4[COMRAM] unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  3    0[COMRAM] float 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         5       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1970 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        8 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		___awtoft
  1978 ;;		___ftdiv
  1979 ;;		___ftmul
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text10
  1984  000F06                     __ptext10:
  1985                           	callstack 0
  1986  000F06                     ___ftpack:
  1987                           	callstack 28
  1988                           
  1989                           ;incstack = 0
  1990  000F06  5004               	movf	___ftpack@exp^0,w,c
  1991  000F08  B4D8               	btfsc	status,2,c
  1992  000F0A  D005               	goto	u560
  1993  000F0C  5001               	movf	___ftpack@arg^0,w,c
  1994  000F0E  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  1995  000F10  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  1996  000F12  A4D8               	btfss	status,2,c
  1997  000F14  D00C               	goto	l1552
  1998  000F16                     u560:
  1999  000F16  0E00               	movlw	0
  2000  000F18  6E01               	movwf	?___ftpack^0,c
  2001  000F1A  0E00               	movlw	0
  2002  000F1C  6E02               	movwf	(?___ftpack+1)^0,c
  2003  000F1E  0E00               	movlw	0
  2004  000F20  6E03               	movwf	(?___ftpack+2)^0,c
  2005  000F22  0012               	return	
  2006  000F24                     l1550:
  2007  000F24  2A04               	incf	___ftpack@exp^0,f,c
  2008  000F26  90D8               	bcf	status,0,c
  2009  000F28  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2010  000F2A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2011  000F2C  3201               	rrcf	___ftpack@arg^0,f,c
  2012  000F2E                     l1552:
  2013  000F2E  0E00               	movlw	0
  2014  000F30  1401               	andwf	___ftpack@arg^0,w,c
  2015  000F32  6E06               	movwf	??___ftpack^0,c
  2016  000F34  0E00               	movlw	0
  2017  000F36  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2018  000F38  6E07               	movwf	(??___ftpack+1)^0,c
  2019  000F3A  0EFE               	movlw	254
  2020  000F3C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2021  000F3E  6E08               	movwf	(??___ftpack+2)^0,c
  2022  000F40  5006               	movf	??___ftpack^0,w,c
  2023  000F42  1007               	iorwf	(??___ftpack+1)^0,w,c
  2024  000F44  1008               	iorwf	(??___ftpack+2)^0,w,c
  2025  000F46  B4D8               	btfsc	status,2,c
  2026  000F48  D00C               	goto	l1558
  2027  000F4A  D7EC               	goto	l1550
  2028  000F4C                     l1554:
  2029  000F4C  2A04               	incf	___ftpack@exp^0,f,c
  2030  000F4E  0E01               	movlw	1
  2031  000F50  2601               	addwf	___ftpack@arg^0,f,c
  2032  000F52  0E00               	movlw	0
  2033  000F54  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2034  000F56  0E00               	movlw	0
  2035  000F58  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2036  000F5A  90D8               	bcf	status,0,c
  2037  000F5C  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2038  000F5E  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2039  000F60  3201               	rrcf	___ftpack@arg^0,f,c
  2040  000F62                     l1558:
  2041  000F62  0E00               	movlw	0
  2042  000F64  1401               	andwf	___ftpack@arg^0,w,c
  2043  000F66  6E06               	movwf	??___ftpack^0,c
  2044  000F68  0E00               	movlw	0
  2045  000F6A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2046  000F6C  6E07               	movwf	(??___ftpack+1)^0,c
  2047  000F6E  0EFF               	movlw	255
  2048  000F70  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2049  000F72  6E08               	movwf	(??___ftpack+2)^0,c
  2050  000F74  5006               	movf	??___ftpack^0,w,c
  2051  000F76  1007               	iorwf	(??___ftpack+1)^0,w,c
  2052  000F78  1008               	iorwf	(??___ftpack+2)^0,w,c
  2053  000F7A  B4D8               	btfsc	status,2,c
  2054  000F7C  D006               	goto	l1562
  2055  000F7E  D7E6               	goto	l1554
  2056  000F80                     l1560:
  2057  000F80  0604               	decf	___ftpack@exp^0,f,c
  2058  000F82  90D8               	bcf	status,0,c
  2059  000F84  3601               	rlcf	___ftpack@arg^0,f,c
  2060  000F86  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  2061  000F88  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  2062  000F8A                     l1562:
  2063  000F8A  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  2064  000F8C  D003               	goto	u600
  2065  000F8E  0E02               	movlw	2
  2066  000F90  6004               	cpfslt	___ftpack@exp^0,c
  2067  000F92  D7F6               	goto	l1560
  2068  000F94                     u600:
  2069  000F94  A004               	btfss	___ftpack@exp^0,0,c
  2070  000F96  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  2071  000F98  90D8               	bcf	status,0,c
  2072  000F9A  3204               	rrcf	___ftpack@exp^0,f,c
  2073  000F9C  5004               	movf	___ftpack@exp^0,w,c
  2074  000F9E  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  2075  000FA0  5005               	movf	___ftpack@sign^0,w,c
  2076  000FA2  A4D8               	btfss	status,2,c
  2077  000FA4  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  2078  000FA6  C001  F001         	movff	___ftpack@arg,?___ftpack
  2079  000FAA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2080  000FAE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2081  000FB2  0012               	return		;funcret
  2082  000FB4                     __end_of___ftpack:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function ___awmod *****************
  2086 ;; Defined at:
  2087 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  dividend        2    0[COMRAM] int 
  2090 ;;  divisor         2    2[COMRAM] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  sign            1    5[COMRAM] unsigned char 
  2093 ;;  counter         1    4[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    0[COMRAM] int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         4       0       0       0       0       0       0       0       0
  2104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2106 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2107 ;;Total ram usage:        6 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_EscribeLCD_2Decimales
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text11
  2118  0010CC                     __ptext11:
  2119                           	callstack 0
  2120  0010CC                     ___awmod:
  2121                           	callstack 28
  2122                           
  2123                           ;incstack = 0
  2124  0010CC  0E00               	movlw	0
  2125  0010CE  6E06               	movwf	___awmod@sign^0,c
  2126  0010D0  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  2127  0010D2  D006               	goto	l1712
  2128  0010D4  6C01               	negf	___awmod@dividend^0,c
  2129  0010D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2130  0010D8  B0D8               	btfsc	status,0,c
  2131  0010DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2132  0010DC  0E01               	movlw	1
  2133  0010DE  6E06               	movwf	___awmod@sign^0,c
  2134  0010E0                     l1712:
  2135  0010E0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2136  0010E2  D004               	goto	l1716
  2137  0010E4  6C03               	negf	___awmod@divisor^0,c
  2138  0010E6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2139  0010E8  B0D8               	btfsc	status,0,c
  2140  0010EA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2141  0010EC                     l1716:
  2142  0010EC  5003               	movf	___awmod@divisor^0,w,c
  2143  0010EE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2144  0010F0  B4D8               	btfsc	status,2,c
  2145  0010F2  D018               	goto	l1732
  2146  0010F4  0E01               	movlw	1
  2147  0010F6  6E05               	movwf	___awmod@counter^0,c
  2148  0010F8  D004               	goto	l1722
  2149  0010FA                     l1720:
  2150  0010FA  90D8               	bcf	status,0,c
  2151  0010FC  3603               	rlcf	___awmod@divisor^0,f,c
  2152  0010FE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2153  001100  2A05               	incf	___awmod@counter^0,f,c
  2154  001102                     l1722:
  2155  001102  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2156  001104  D7FA               	goto	l1720
  2157  001106                     u760:
  2158  001106  5003               	movf	___awmod@divisor^0,w,c
  2159  001108  5C01               	subwf	___awmod@dividend^0,w,c
  2160  00110A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2161  00110C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2162  00110E  A0D8               	btfss	status,0,c
  2163  001110  D004               	goto	l1728
  2164  001112  5003               	movf	___awmod@divisor^0,w,c
  2165  001114  5E01               	subwf	___awmod@dividend^0,f,c
  2166  001116  5004               	movf	(___awmod@divisor+1)^0,w,c
  2167  001118  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2168  00111A                     l1728:
  2169  00111A  90D8               	bcf	status,0,c
  2170  00111C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2171  00111E  3203               	rrcf	___awmod@divisor^0,f,c
  2172  001120  2E05               	decfsz	___awmod@counter^0,f,c
  2173  001122  D7F1               	goto	u760
  2174  001124                     l1732:
  2175  001124  5006               	movf	___awmod@sign^0,w,c
  2176  001126  B4D8               	btfsc	status,2,c
  2177  001128  D004               	goto	l1736
  2178  00112A  6C01               	negf	___awmod@dividend^0,c
  2179  00112C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2180  00112E  B0D8               	btfsc	status,0,c
  2181  001130  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2182  001132                     l1736:
  2183  001132  C001  F001         	movff	___awmod@dividend,?___awmod
  2184  001136  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2185  00113A  0012               	return		;funcret
  2186  00113C                     __end_of___awmod:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _EscribeLCD_n8 *****************
  2190 ;; Defined at:
  2191 ;;		line 128 in file "LibLCDXC8.h"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  a               1    wreg     unsigned char 
  2194 ;;  b               1    8[COMRAM] unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  a               1   12[COMRAM] unsigned char 
  2197 ;;  unidad          1   11[COMRAM] unsigned char 
  2198 ;;  decena          1   10[COMRAM] unsigned char 
  2199 ;;  centena         1    9[COMRAM] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         1       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        5 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 3
  2216 ;; This function calls:
  2217 ;;		_EnviaDato
  2218 ;;		_HabilitaLCD
  2219 ;;		_RetardoLCD
  2220 ;;		___lbdiv
  2221 ;;		___lbmod
  2222 ;; This function is called by:
  2223 ;;		_EscribeLCD_2Decimales
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text12
  2228  000D4E                     __ptext12:
  2229                           	callstack 0
  2230  000D4E                     _EscribeLCD_n8:
  2231                           	callstack 26
  2232                           
  2233                           ;incstack = 0
  2234                           ;EscribeLCD_n8@a stored from wreg
  2235  000D4E  6E0D               	movwf	EscribeLCD_n8@a^0,c
  2236                           
  2237                           ;LibLCDXC8.h: 133: unsigned char centena,decena,unidad;;LibLCDXC8.h: 134: LATD2=1;
  2238  000D50  848C               	bsf	3980,2,c	;volatile
  2239                           
  2240                           ;LibLCDXC8.h: 135: switch(b){
  2241  000D52  D065               	goto	l1654
  2242  000D54                     l1622:
  2243  000D54  0E0A               	movlw	10
  2244  000D56  6E01               	movwf	___lbmod@divisor^0,c
  2245  000D58  500D               	movf	EscribeLCD_n8@a^0,w,c
  2246  000D5A  EC43  F009         	call	___lbmod
  2247  000D5E  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2248                           
  2249                           ;LibLCDXC8.h: 137: EnviaDato(unidad+48);
  2250  000D60  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2251  000D62  0F30               	addlw	48
  2252  000D64  ECD1  F008         	call	_EnviaDato
  2253                           
  2254                           ;LibLCDXC8.h: 138: HabilitaLCD();
  2255  000D68  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2256                           
  2257                           ;LibLCDXC8.h: 139: RetardoLCD(4);
  2258  000D6C  0E04               	movlw	4
  2259  000D6E  EC9E  F008         	call	_RetardoLCD
  2260                           
  2261                           ;LibLCDXC8.h: 140: break;
  2262  000D72  0012               	return	
  2263  000D74                     l1628:
  2264  000D74  0E0A               	movlw	10
  2265  000D76  6E05               	movwf	___lbdiv@divisor^0,c
  2266  000D78  0E64               	movlw	100
  2267  000D7A  6E01               	movwf	___lbmod@divisor^0,c
  2268  000D7C  500D               	movf	EscribeLCD_n8@a^0,w,c
  2269  000D7E  EC43  F009         	call	___lbmod
  2270  000D82  ECF4  F008         	call	___lbdiv
  2271  000D86  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2272                           
  2273                           ;LibLCDXC8.h: 142: unidad=a%10;
  2274  000D88  0E0A               	movlw	10
  2275  000D8A  6E01               	movwf	___lbmod@divisor^0,c
  2276  000D8C  500D               	movf	EscribeLCD_n8@a^0,w,c
  2277  000D8E  EC43  F009         	call	___lbmod
  2278  000D92  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2279                           
  2280                           ;LibLCDXC8.h: 143: EnviaDato(decena+48);
  2281  000D94  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2282  000D96  0F30               	addlw	48
  2283  000D98  ECD1  F008         	call	_EnviaDato
  2284                           
  2285                           ;LibLCDXC8.h: 144: HabilitaLCD();
  2286  000D9C  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2287                           
  2288                           ;LibLCDXC8.h: 145: RetardoLCD(4);
  2289  000DA0  0E04               	movlw	4
  2290  000DA2  EC9E  F008         	call	_RetardoLCD
  2291                           
  2292                           ;LibLCDXC8.h: 146: EnviaDato(unidad+48);
  2293  000DA6  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2294  000DA8  0F30               	addlw	48
  2295  000DAA  ECD1  F008         	call	_EnviaDato
  2296                           
  2297                           ;LibLCDXC8.h: 147: HabilitaLCD();
  2298  000DAE  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2299                           
  2300                           ;LibLCDXC8.h: 148: RetardoLCD(4);
  2301  000DB2  0E04               	movlw	4
  2302  000DB4  EC9E  F008         	call	_RetardoLCD
  2303                           
  2304                           ;LibLCDXC8.h: 149: break;
  2305  000DB8  0012               	return	
  2306  000DBA                     l1638:
  2307  000DBA  0E64               	movlw	100
  2308  000DBC  6E05               	movwf	___lbdiv@divisor^0,c
  2309  000DBE  500D               	movf	EscribeLCD_n8@a^0,w,c
  2310  000DC0  ECF4  F008         	call	___lbdiv
  2311  000DC4  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  2312                           
  2313                           ;LibLCDXC8.h: 151: decena=(a%100)/10;
  2314  000DC6  0E0A               	movlw	10
  2315  000DC8  6E05               	movwf	___lbdiv@divisor^0,c
  2316  000DCA  0E64               	movlw	100
  2317  000DCC  6E01               	movwf	___lbmod@divisor^0,c
  2318  000DCE  500D               	movf	EscribeLCD_n8@a^0,w,c
  2319  000DD0  EC43  F009         	call	___lbmod
  2320  000DD4  ECF4  F008         	call	___lbdiv
  2321  000DD8  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  2322                           
  2323                           ;LibLCDXC8.h: 152: unidad=a%10;
  2324  000DDA  0E0A               	movlw	10
  2325  000DDC  6E01               	movwf	___lbmod@divisor^0,c
  2326  000DDE  500D               	movf	EscribeLCD_n8@a^0,w,c
  2327  000DE0  EC43  F009         	call	___lbmod
  2328  000DE4  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  2329                           
  2330                           ;LibLCDXC8.h: 153: EnviaDato(centena+48);
  2331  000DE6  500A               	movf	EscribeLCD_n8@centena^0,w,c
  2332  000DE8  0F30               	addlw	48
  2333  000DEA  ECD1  F008         	call	_EnviaDato
  2334                           
  2335                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2336  000DEE  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2337                           
  2338                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2339  000DF2  0E04               	movlw	4
  2340  000DF4  EC9E  F008         	call	_RetardoLCD
  2341                           
  2342                           ;LibLCDXC8.h: 156: EnviaDato(decena+48);
  2343  000DF8  500B               	movf	EscribeLCD_n8@decena^0,w,c
  2344  000DFA  0F30               	addlw	48
  2345  000DFC  ECD1  F008         	call	_EnviaDato
  2346                           
  2347                           ;LibLCDXC8.h: 157: HabilitaLCD();
  2348  000E00  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2349                           
  2350                           ;LibLCDXC8.h: 158: RetardoLCD(4);
  2351  000E04  0E04               	movlw	4
  2352  000E06  EC9E  F008         	call	_RetardoLCD
  2353                           
  2354                           ;LibLCDXC8.h: 159: EnviaDato(unidad+48);
  2355  000E0A  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  2356  000E0C  0F30               	addlw	48
  2357  000E0E  ECD1  F008         	call	_EnviaDato
  2358                           
  2359                           ;LibLCDXC8.h: 160: HabilitaLCD();
  2360  000E12  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2361                           
  2362                           ;LibLCDXC8.h: 161: RetardoLCD(4);
  2363  000E16  0E04               	movlw	4
  2364  000E18  EC9E  F008         	call	_RetardoLCD
  2365                           
  2366                           ;LibLCDXC8.h: 162: break;
  2367  000E1C  0012               	return	
  2368  000E1E                     l1654:
  2369  000E1E  5009               	movf	EscribeLCD_n8@b^0,w,c
  2370                           
  2371                           ; Switch size 1, requested type "simple"
  2372                           ; Number of cases is 3, Range of values is 1 to 3
  2373                           ; switch strategies available:
  2374                           ; Name         Instructions Cycles
  2375                           ; simple_byte           10     6 (average)
  2376                           ;	Chosen strategy is simple_byte
  2377  000E20  0A01               	xorlw	1	; case 1
  2378  000E22  B4D8               	btfsc	status,2,c
  2379  000E24  D797               	goto	l1622
  2380  000E26  0A03               	xorlw	3	; case 2
  2381  000E28  B4D8               	btfsc	status,2,c
  2382  000E2A  D7A4               	goto	l1628
  2383  000E2C  0A01               	xorlw	1	; case 3
  2384  000E2E  A4D8               	btfss	status,2,c
  2385  000E30  0012               	return	
  2386  000E32  D7C3               	goto	l1638
  2387  000E34                     __end_of_EscribeLCD_n8:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function ___lbmod *****************
  2391 ;; Defined at:
  2392 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  dividend        1    wreg     unsigned char 
  2395 ;;  divisor         1    0[COMRAM] unsigned char 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  dividend        1    1[COMRAM] unsigned char 
  2398 ;;  rem             1    3[COMRAM] unsigned char 
  2399 ;;  counter         1    2[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2409 ;;      Params:         1       0       0       0       0       0       0       0       0
  2410 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2412 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2413 ;;Total ram usage:        4 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_EscribeLCD_n8
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text13
  2424  001286                     __ptext13:
  2425                           	callstack 0
  2426  001286                     ___lbmod:
  2427                           	callstack 27
  2428                           
  2429                           ;incstack = 0
  2430                           ;___lbmod@dividend stored from wreg
  2431  001286  6E02               	movwf	___lbmod@dividend^0,c
  2432  001288  0E08               	movlw	8
  2433  00128A  6E03               	movwf	___lbmod@counter^0,c
  2434  00128C  0E00               	movlw	0
  2435  00128E  6E04               	movwf	___lbmod@rem^0,c
  2436  001290                     l1606:
  2437  001290  90D8               	bcf	status,0,c
  2438  001292  3402               	rlcf	___lbmod@dividend^0,w,c
  2439  001294  3404               	rlcf	___lbmod@rem^0,w,c
  2440  001296  6E04               	movwf	___lbmod@rem^0,c
  2441  001298  90D8               	bcf	status,0,c
  2442  00129A  3602               	rlcf	___lbmod@dividend^0,f,c
  2443  00129C  5001               	movf	___lbmod@divisor^0,w,c
  2444  00129E  5C04               	subwf	___lbmod@rem^0,w,c
  2445  0012A0  A0D8               	btfss	status,0,c
  2446  0012A2  D002               	goto	l1614
  2447  0012A4  5001               	movf	___lbmod@divisor^0,w,c
  2448  0012A6  5E04               	subwf	___lbmod@rem^0,f,c
  2449  0012A8                     l1614:
  2450  0012A8  2E03               	decfsz	___lbmod@counter^0,f,c
  2451  0012AA  D7F2               	goto	l1606
  2452  0012AC  5004               	movf	___lbmod@rem^0,w,c
  2453  0012AE  0012               	return		;funcret
  2454  0012B0                     __end_of___lbmod:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function ___lbdiv *****************
  2458 ;; Defined at:
  2459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbdiv.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  dividend        1    wreg     unsigned char 
  2462 ;;  divisor         1    4[COMRAM] unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  dividend        1    5[COMRAM] unsigned char 
  2465 ;;  quotient        1    7[COMRAM] unsigned char 
  2466 ;;  counter         1    6[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      unsigned char 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         1       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        4 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_EscribeLCD_n8
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text14
  2491  0011E8                     __ptext14:
  2492                           	callstack 0
  2493  0011E8                     ___lbdiv:
  2494                           	callstack 27
  2495                           
  2496                           ;incstack = 0
  2497                           ;___lbdiv@dividend stored from wreg
  2498  0011E8  6E06               	movwf	___lbdiv@dividend^0,c
  2499  0011EA  0E00               	movlw	0
  2500  0011EC  6E08               	movwf	___lbdiv@quotient^0,c
  2501  0011EE  5005               	movf	___lbdiv@divisor^0,w,c
  2502  0011F0  B4D8               	btfsc	status,2,c
  2503  0011F2  D015               	goto	l1600
  2504  0011F4  0E01               	movlw	1
  2505  0011F6  6E07               	movwf	___lbdiv@counter^0,c
  2506  0011F8  D003               	goto	l1588
  2507  0011FA                     l1584:
  2508  0011FA  90D8               	bcf	status,0,c
  2509  0011FC  3605               	rlcf	___lbdiv@divisor^0,f,c
  2510  0011FE  2A07               	incf	___lbdiv@counter^0,f,c
  2511  001200                     l1588:
  2512  001200  AE05               	btfss	___lbdiv@divisor^0,7,c
  2513  001202  D7FB               	goto	l1584
  2514  001204                     u640:
  2515  001204  90D8               	bcf	status,0,c
  2516  001206  3608               	rlcf	___lbdiv@quotient^0,f,c
  2517  001208  5005               	movf	___lbdiv@divisor^0,w,c
  2518  00120A  5C06               	subwf	___lbdiv@dividend^0,w,c
  2519  00120C  A0D8               	btfss	status,0,c
  2520  00120E  D003               	goto	l1596
  2521  001210  5005               	movf	___lbdiv@divisor^0,w,c
  2522  001212  5E06               	subwf	___lbdiv@dividend^0,f,c
  2523  001214  8008               	bsf	___lbdiv@quotient^0,0,c
  2524  001216                     l1596:
  2525  001216  90D8               	bcf	status,0,c
  2526  001218  3205               	rrcf	___lbdiv@divisor^0,f,c
  2527  00121A  2E07               	decfsz	___lbdiv@counter^0,f,c
  2528  00121C  D7F3               	goto	u640
  2529  00121E                     l1600:
  2530  00121E  5008               	movf	___lbdiv@quotient^0,w,c
  2531  001220  0012               	return		;funcret
  2532  001222                     __end_of___lbdiv:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _EscribeLCD_c *****************
  2536 ;; Defined at:
  2537 ;;		line 118 in file "LibLCDXC8.h"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  a               1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  a               1    4[COMRAM] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        1 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 3
  2558 ;; This function calls:
  2559 ;;		_EnviaDato
  2560 ;;		_HabilitaLCD
  2561 ;;		_RetardoLCD
  2562 ;; This function is called by:
  2563 ;;		_MensajeLCD_Var
  2564 ;;		_EscribeLCD_2Decimales
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text15
  2570  00135C                     __ptext15:
  2571                           	callstack 0
  2572  00135C                     _EscribeLCD_c:
  2573                           	callstack 26
  2574                           
  2575                           ;incstack = 0
  2576                           ;EscribeLCD_c@a stored from wreg
  2577  00135C  6E05               	movwf	EscribeLCD_c@a^0,c
  2578                           
  2579                           ;LibLCDXC8.h: 122: LATD2=1;
  2580  00135E  848C               	bsf	3980,2,c	;volatile
  2581                           
  2582                           ;LibLCDXC8.h: 123: EnviaDato(a);
  2583  001360  5005               	movf	EscribeLCD_c@a^0,w,c
  2584  001362  ECD1  F008         	call	_EnviaDato
  2585                           
  2586                           ;LibLCDXC8.h: 124: HabilitaLCD();
  2587  001366  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2588                           
  2589                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  2590  00136A  0E04               	movlw	4
  2591  00136C  EC9E  F008         	call	_RetardoLCD
  2592  001370  0012               	return		;funcret
  2593  001372                     __end_of_EscribeLCD_c:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _DireccionaLCD *****************
  2597 ;; Defined at:
  2598 ;;		line 309 in file "LibLCDXC8.h"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  a               1    wreg     unsigned char 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  a               1    4[COMRAM] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0
  2613 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2615 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        1 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 3
  2619 ;; This function calls:
  2620 ;;		_EnviaDato
  2621 ;;		_HabilitaLCD
  2622 ;;		_RetardoLCD
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text16
  2629  001372                     __ptext16:
  2630                           	callstack 0
  2631  001372                     _DireccionaLCD:
  2632                           	callstack 27
  2633                           
  2634                           ;incstack = 0
  2635                           ;DireccionaLCD@a stored from wreg
  2636  001372  6E05               	movwf	DireccionaLCD@a^0,c
  2637                           
  2638                           ;LibLCDXC8.h: 312: LATD2=0;
  2639  001374  948C               	bcf	3980,2,c	;volatile
  2640                           
  2641                           ;LibLCDXC8.h: 313: EnviaDato(a);
  2642  001376  5005               	movf	DireccionaLCD@a^0,w,c
  2643  001378  ECD1  F008         	call	_EnviaDato
  2644                           
  2645                           ;LibLCDXC8.h: 314: HabilitaLCD();
  2646  00137C  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2647                           
  2648                           ;LibLCDXC8.h: 315: RetardoLCD(4);
  2649  001380  0E04               	movlw	4
  2650  001382  EC9E  F008         	call	_RetardoLCD
  2651  001386  0012               	return		;funcret
  2652  001388                     __end_of_DireccionaLCD:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _EnviaDato *****************
  2656 ;; Defined at:
  2657 ;;		line 55 in file "LibLCDXC8.h"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  a               1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  a               1    3[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0
  2672 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2673 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2674 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2675 ;;Total ram usage:        2 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 2
  2678 ;; This function calls:
  2679 ;;		_HabilitaLCD
  2680 ;;		_RetardoLCD
  2681 ;; This function is called by:
  2682 ;;		_InicializaLCD
  2683 ;;		_BorraLCD
  2684 ;;		_EscribeLCD_c
  2685 ;;		_EscribeLCD_n8
  2686 ;;		_DireccionaLCD
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text17
  2691  0011A2                     __ptext17:
  2692                           	callstack 0
  2693  0011A2                     _EnviaDato:
  2694                           	callstack 26
  2695                           
  2696                           ;incstack = 0
  2697                           ;EnviaDato@a stored from wreg
  2698  0011A2  6E04               	movwf	EnviaDato@a^0,c
  2699                           
  2700                           ;LibLCDXC8.h: 56: if(interfaz==4){
  2701  0011A4  0E04               	movlw	4
  2702  0011A6  1849               	xorwf	_interfaz^0,w,c
  2703  0011A8  A4D8               	btfss	status,2,c
  2704  0011AA  D017               	goto	l1068
  2705                           
  2706                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2707  0011AC  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2708  0011B0  0EF0               	movlw	240
  2709  0011B2  1603               	andwf	??_EnviaDato^0,f,c
  2710  0011B4  508C               	movf	140,w,c	;volatile
  2711  0011B6  0B0F               	andlw	15
  2712  0011B8  1003               	iorwf	??_EnviaDato^0,w,c
  2713  0011BA  6E8C               	movwf	140,c	;volatile
  2714                           
  2715                           ;LibLCDXC8.h: 58: HabilitaLCD();
  2716  0011BC  ECCE  F009         	call	_HabilitaLCD	;wreg free
  2717                           
  2718                           ;LibLCDXC8.h: 59: RetardoLCD(1);
  2719  0011C0  0E01               	movlw	1
  2720  0011C2  EC9E  F008         	call	_RetardoLCD
  2721                           
  2722                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a<<4);
  2723  0011C6  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2724  0011CA  3A03               	swapf	??_EnviaDato^0,f,c
  2725  0011CC  0EF0               	movlw	240
  2726  0011CE  1603               	andwf	??_EnviaDato^0,f,c
  2727  0011D0  508C               	movf	140,w,c	;volatile
  2728  0011D2  0B0F               	andlw	15
  2729  0011D4  1003               	iorwf	??_EnviaDato^0,w,c
  2730  0011D6  6E8C               	movwf	140,c	;volatile
  2731                           
  2732                           ;LibLCDXC8.h: 63: }else if(interfaz==8){
  2733  0011D8  0012               	return	
  2734  0011DA                     l1068:
  2735  0011DA  0E08               	movlw	8
  2736  0011DC  1849               	xorwf	_interfaz^0,w,c
  2737  0011DE  A4D8               	btfss	status,2,c
  2738  0011E0  0012               	return	
  2739                           
  2740                           ;LibLCDXC8.h: 64: LATD=a;
  2741  0011E2  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  2742  0011E6  0012               	return		;funcret
  2743  0011E8                     __end_of_EnviaDato:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _RetardoLCD *****************
  2747 ;; Defined at:
  2748 ;;		line 318 in file "LibLCDXC8.h"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  a               1    wreg     unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  a               1    1[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2765 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:        2 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_EnviaDato
  2773 ;;		_InicializaLCD
  2774 ;;		_BorraLCD
  2775 ;;		_EscribeLCD_c
  2776 ;;		_EscribeLCD_n8
  2777 ;;		_DireccionaLCD
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text18
  2782  00113C                     __ptext18:
  2783                           	callstack 0
  2784  00113C                     _RetardoLCD:
  2785                           	callstack 27
  2786                           
  2787                           ;incstack = 0
  2788                           ;RetardoLCD@a stored from wreg
  2789  00113C  6E02               	movwf	RetardoLCD@a^0,c
  2790                           
  2791                           ;LibLCDXC8.h: 319: switch(a){
  2792  00113E  D023               	goto	l1056
  2793  001140                     l1046:
  2794  001140  0E27               	movlw	39
  2795  001142  6E01               	movwf	??_RetardoLCD^0,c
  2796  001144  0EF5               	movlw	245
  2797  001146                     u1007:
  2798  001146  2EE8               	decfsz	wreg,f,c
  2799  001148  D7FE               	bra	u1007
  2800  00114A  2E01               	decfsz	??_RetardoLCD^0,f,c
  2801  00114C  D7FC               	bra	u1007
  2802  00114E  F000               	nop	
  2803                           
  2804                           ;LibLCDXC8.h: 322: break;
  2805  001150  0012               	return	
  2806  001152                     l1048:
  2807  001152  0E03               	movlw	3
  2808  001154  6E01               	movwf	??_RetardoLCD^0,c
  2809  001156  0E98               	movlw	152
  2810  001158                     u1017:
  2811  001158  2EE8               	decfsz	wreg,f,c
  2812  00115A  D7FE               	bra	u1017
  2813  00115C  2E01               	decfsz	??_RetardoLCD^0,f,c
  2814  00115E  D7FC               	bra	u1017
  2815                           
  2816                           ;LibLCDXC8.h: 324: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2817  001160  0EB6               	movlw	182
  2818  001162                     u1027:
  2819  001162  D000               	nop2	
  2820  001164  D000               	nop2	
  2821  001166  2EE8               	decfsz	wreg,f,c
  2822  001168  D7FC               	bra	u1027
  2823  00116A  D000               	nop2	
  2824  00116C  D000               	nop2	
  2825  00116E  D000               	nop2	
  2826                           
  2827                           ;LibLCDXC8.h: 326: break;
  2828  001170  0012               	return	
  2829  001172                     l1050:
  2830  001172  0E42               	movlw	66
  2831  001174                     u1037:
  2832  001174  2EE8               	decfsz	wreg,f,c
  2833  001176  D7FE               	bra	u1037
  2834  001178  D000               	nop2	
  2835                           
  2836                           ;LibLCDXC8.h: 329: break;
  2837  00117A  0012               	return	
  2838  00117C                     l1052:
  2839  00117C  0E1A               	movlw	26
  2840  00117E                     u1047:
  2841  00117E  2EE8               	decfsz	wreg,f,c
  2842  001180  D7FE               	bra	u1047
  2843  001182  D000               	nop2	
  2844                           
  2845                           ;LibLCDXC8.h: 332: break;
  2846  001184  0012               	return	
  2847  001186                     l1056:
  2848  001186  5002               	movf	RetardoLCD@a^0,w,c
  2849                           
  2850                           ; Switch size 1, requested type "simple"
  2851                           ; Number of cases is 4, Range of values is 1 to 4
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte           13     7 (average)
  2855                           ;	Chosen strategy is simple_byte
  2856  001188  0A01               	xorlw	1	; case 1
  2857  00118A  B4D8               	btfsc	status,2,c
  2858  00118C  D7D9               	goto	l1046
  2859  00118E  0A03               	xorlw	3	; case 2
  2860  001190  B4D8               	btfsc	status,2,c
  2861  001192  D7DF               	goto	l1048
  2862  001194  0A01               	xorlw	1	; case 3
  2863  001196  B4D8               	btfsc	status,2,c
  2864  001198  D7EC               	goto	l1050
  2865  00119A  0A07               	xorlw	7	; case 4
  2866  00119C  A4D8               	btfss	status,2,c
  2867  00119E  0012               	return	
  2868  0011A0  D7ED               	goto	l1052
  2869  0011A2                     __end_of_RetardoLCD:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _HabilitaLCD *****************
  2873 ;; Defined at:
  2874 ;;		line 102 in file "LibLCDXC8.h"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_EnviaDato
  2899 ;;		_InicializaLCD
  2900 ;;		_BorraLCD
  2901 ;;		_EscribeLCD_c
  2902 ;;		_EscribeLCD_n8
  2903 ;;		_DireccionaLCD
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text19
  2908  00139C                     __ptext19:
  2909                           	callstack 0
  2910  00139C                     _HabilitaLCD:
  2911                           	callstack 27
  2912                           
  2913                           ;LibLCDXC8.h: 104: LATD3=1;
  2914                           
  2915                           ;incstack = 0
  2916  00139C  868C               	bsf	3980,3,c	;volatile
  2917                           
  2918                           ;LibLCDXC8.h: 105: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2919  00139E  0E1A               	movlw	26
  2920  0013A0                     u1057:
  2921  0013A0  2EE8               	decfsz	wreg,f,c
  2922  0013A2  D7FE               	bra	u1057
  2923  0013A4  D000               	nop2	
  2924                           
  2925                           ;LibLCDXC8.h: 107: LATD3=0;
  2926  0013A6  968C               	bcf	3980,3,c	;volatile
  2927  0013A8  0012               	return		;funcret
  2928  0013AA                     __end_of_HabilitaLCD:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _Conversion *****************
  2932 ;; Defined at:
  2933 ;;		line 205 in file "Prueba.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  canal           1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  canal           1    3[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    0[COMRAM] int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2947 ;;      Params:         2       0       0       0       0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2949 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2950 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        4 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text20
  2962  001300                     __ptext20:
  2963                           	callstack 0
  2964  001300                     _Conversion:
  2965                           	callstack 29
  2966                           
  2967                           ;incstack = 0
  2968                           ;Conversion@canal stored from wreg
  2969  001300  6E04               	movwf	Conversion@canal^0,c
  2970                           
  2971                           ;Prueba.c: 206: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  2972  001302  C004  F003         	movff	Conversion@canal,??_Conversion
  2973  001306  90D8               	bcf	status,0,c
  2974  001308  3603               	rlcf	??_Conversion^0,f,c
  2975  00130A  90D8               	bcf	status,0,c
  2976  00130C  3603               	rlcf	??_Conversion^0,f,c
  2977  00130E  50C2               	movf	194,w,c	;volatile
  2978  001310  0B03               	andlw	3
  2979  001312  1003               	iorwf	??_Conversion^0,w,c
  2980  001314  6EC2               	movwf	194,c	;volatile
  2981                           
  2982                           ;Prueba.c: 207: GO=1;
  2983  001316  82C2               	bsf	4034,1,c	;volatile
  2984  001318                     l243:
  2985  001318  B2C2               	btfsc	4034,1,c	;volatile
  2986  00131A  D7FE               	goto	l243
  2987                           
  2988                           ;Prueba.c: 209: return ADRES;
  2989  00131C  CFC3 F001          	movff	4035,?_Conversion	;volatile
  2990  001320  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  2991  001324  0012               	return		;funcret
  2992  001326                     __end_of_Conversion:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _ConfiguraLCD *****************
  2996 ;; Defined at:
  2997 ;;		line 51 in file "LibLCDXC8.h"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  a               1    wreg     unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  a               1    0[COMRAM] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0
  3012 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3014 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text21
  3026  001344                     __ptext21:
  3027                           	callstack 0
  3028  001344                     _ConfiguraLCD:
  3029                           	callstack 29
  3030                           
  3031                           ;incstack = 0
  3032                           ;ConfiguraLCD@a stored from wreg
  3033  001344  6E01               	movwf	ConfiguraLCD@a^0,c
  3034                           
  3035                           ;LibLCDXC8.h: 52: if(a==4 | a ==8)
  3036  001346  0E04               	movlw	4
  3037  001348  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3038  00134A  B4D8               	btfsc	status,2,c
  3039  00134C  D004               	goto	u360
  3040  00134E  0E08               	movlw	8
  3041  001350  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3042  001352  A4D8               	btfss	status,2,c
  3043  001354  0012               	return	
  3044  001356                     u360:
  3045                           
  3046                           ;LibLCDXC8.h: 53: interfaz=a;
  3047  001356  C001  F049         	movff	ConfiguraLCD@a,_interfaz
  3048  00135A  0012               	return		;funcret
  3049  00135C                     __end_of_ConfiguraLCD:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _ISR *****************
  3053 ;; Defined at:
  3054 ;;		line 124 in file "Prueba.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		Interrupt level 2
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	intcode
  3082  000008                     __pintcode:
  3083                           	callstack 0
  3084  000008                     _ISR:
  3085                           	callstack 26
  3086                           
  3087                           ;incstack = 0
  3088  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3089  00000A  ED93  F009         	call	int_func,f	;refresh shadow registers
  3090                           
  3091                           	psect	intcode_body
  3092  001326                     __pintcode_body:
  3093                           	callstack 26
  3094  001326                     int_func:
  3095                           	callstack 26
  3096  001326  0006               	pop		; remove dummy address from shadow register refresh
  3097                           
  3098                           ;Prueba.c: 127: };Prueba.c: 129: if(TMR0IF==1){
  3099                           
  3100                           ;Prueba.c: 126: if(RBIF==1){
  3101  001328  A4F2               	btfss	4082,2,c	;volatile
  3102  00132A  D00A               	goto	i2u54_45
  3103                           
  3104                           ;Prueba.c: 130: TMR0=34286;
  3105  00132C  0E85               	movlw	133
  3106  00132E  6ED7               	movwf	215,c	;volatile
  3107  001330  0EEE               	movlw	238
  3108  001332  6ED6               	movwf	214,c	;volatile
  3109                           
  3110                           ;Prueba.c: 131: TMR0IF=0;
  3111  001334  94F2               	bcf	4082,2,c	;volatile
  3112                           
  3113                           ;Prueba.c: 132: LATD1=LATD1^1;
  3114  001336  B28C               	btfsc	3980,1,c	;volatile
  3115  001338  D002               	goto	i2u53_40
  3116  00133A  828C               	bsf	3980,1,c	;volatile
  3117  00133C  D001               	goto	i2u54_45
  3118  00133E                     i2u53_40:
  3119  00133E  928C               	bcf	3980,1,c	;volatile
  3120  001340                     i2u54_45:
  3121  001340  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3122  001342  0011               	retfie		f
  3123  001344                     __end_of_ISR:
  3124                           	callstack 0
  3125                           
  3126                           	psect	rparam
  3127  0000                     
  3128                           	psect	temp
  3129  00004A                     btemp:
  3130                           	callstack 0
  3131  00004A                     	ds	1
  3132  0000                     int$flags	set	btemp
  3133  0000                     wtemp8	set	btemp+1
  3134  0000                     ttemp5	set	btemp+1
  3135  0000                     ttemp6	set	btemp+4
  3136  0000                     ttemp7	set	btemp+8
  3137                           
  3138                           	psect	idloc
  3139                           
  3140                           ;Config register IDLOC0 @ 0x200000
  3141                           ;	unspecified, using default values
  3142  200000                     	org	2097152
  3143  200000  FF                 	db	255
  3144                           
  3145                           ;Config register IDLOC1 @ 0x200001
  3146                           ;	unspecified, using default values
  3147  200001                     	org	2097153
  3148  200001  FF                 	db	255
  3149                           
  3150                           ;Config register IDLOC2 @ 0x200002
  3151                           ;	unspecified, using default values
  3152  200002                     	org	2097154
  3153  200002  FF                 	db	255
  3154                           
  3155                           ;Config register IDLOC3 @ 0x200003
  3156                           ;	unspecified, using default values
  3157  200003                     	org	2097155
  3158  200003  FF                 	db	255
  3159                           
  3160                           ;Config register IDLOC4 @ 0x200004
  3161                           ;	unspecified, using default values
  3162  200004                     	org	2097156
  3163  200004  FF                 	db	255
  3164                           
  3165                           ;Config register IDLOC5 @ 0x200005
  3166                           ;	unspecified, using default values
  3167  200005                     	org	2097157
  3168  200005  FF                 	db	255
  3169                           
  3170                           ;Config register IDLOC6 @ 0x200006
  3171                           ;	unspecified, using default values
  3172  200006                     	org	2097158
  3173  200006  FF                 	db	255
  3174                           
  3175                           ;Config register IDLOC7 @ 0x200007
  3176                           ;	unspecified, using default values
  3177  200007                     	org	2097159
  3178  200007  FF                 	db	255
  3179                           
  3180                           	psect	config
  3181                           
  3182                           ;Config register CONFIG1L @ 0x300000
  3183                           ;	unspecified, using default values
  3184                           ;	PLL Prescaler Selection bits
  3185                           ;	PLLDIV = 0x0, unprogrammed default
  3186                           ;	System Clock Postscaler Selection bits
  3187                           ;	CPUDIV = 0x0, unprogrammed default
  3188                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3189                           ;	USBDIV = 0x0, unprogrammed default
  3190  300000                     	org	3145728
  3191  300000  00                 	db	0
  3192                           
  3193                           ;Config register CONFIG1H @ 0x300001
  3194                           ;	Oscillator Selection bits
  3195                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3196                           ;	Fail-Safe Clock Monitor Enable bit
  3197                           ;	FCMEN = 0x0, unprogrammed default
  3198                           ;	Internal/External Oscillator Switchover bit
  3199                           ;	IESO = 0x0, unprogrammed default
  3200  300001                     	org	3145729
  3201  300001  09                 	db	9
  3202                           
  3203                           ;Config register CONFIG2L @ 0x300002
  3204                           ;	unspecified, using default values
  3205                           ;	Power-up Timer Enable bit
  3206                           ;	PWRT = 0x1, unprogrammed default
  3207                           ;	Brown-out Reset Enable bits
  3208                           ;	BOR = 0x3, unprogrammed default
  3209                           ;	Brown-out Reset Voltage bits
  3210                           ;	BORV = 0x3, unprogrammed default
  3211                           ;	USB Voltage Regulator Enable bit
  3212                           ;	VREGEN = 0x0, unprogrammed default
  3213  300002                     	org	3145730
  3214  300002  1F                 	db	31
  3215                           
  3216                           ;Config register CONFIG2H @ 0x300003
  3217                           ;	Watchdog Timer Enable bit
  3218                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3219                           ;	Watchdog Timer Postscale Select bits
  3220                           ;	WDTPS = 0xF, unprogrammed default
  3221  300003                     	org	3145731
  3222  300003  1E                 	db	30
  3223                           
  3224                           ; Padding undefined space
  3225  300004                     	org	3145732
  3226  300004  FF                 	db	255
  3227                           
  3228                           ;Config register CONFIG3H @ 0x300005
  3229                           ;	unspecified, using default values
  3230                           ;	CCP2 MUX bit
  3231                           ;	CCP2MX = 0x1, unprogrammed default
  3232                           ;	PORTB A/D Enable bit
  3233                           ;	PBADEN = 0x1, unprogrammed default
  3234                           ;	Low-Power Timer 1 Oscillator Enable bit
  3235                           ;	LPT1OSC = 0x0, unprogrammed default
  3236                           ;	MCLR Pin Enable bit
  3237                           ;	MCLRE = 0x1, unprogrammed default
  3238  300005                     	org	3145733
  3239  300005  83                 	db	131
  3240                           
  3241                           ;Config register CONFIG4L @ 0x300006
  3242                           ;	Stack Full/Underflow Reset Enable bit
  3243                           ;	STVREN = 0x1, unprogrammed default
  3244                           ;	Single-Supply ICSP Enable bit
  3245                           ;	LVP = OFF, Single-Supply ICSP disabled
  3246                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3247                           ;	ICPRT = 0x0, unprogrammed default
  3248                           ;	Extended Instruction Set Enable bit
  3249                           ;	XINST = 0x0, unprogrammed default
  3250                           ;	Background Debugger Enable bit
  3251                           ;	DEBUG = 0x1, unprogrammed default
  3252  300006                     	org	3145734
  3253  300006  81                 	db	129
  3254                           
  3255                           ; Padding undefined space
  3256  300007                     	org	3145735
  3257  300007  FF                 	db	255
  3258                           
  3259                           ;Config register CONFIG5L @ 0x300008
  3260                           ;	unspecified, using default values
  3261                           ;	Code Protection bit
  3262                           ;	CP0 = 0x1, unprogrammed default
  3263                           ;	Code Protection bit
  3264                           ;	CP1 = 0x1, unprogrammed default
  3265                           ;	Code Protection bit
  3266                           ;	CP2 = 0x1, unprogrammed default
  3267                           ;	Code Protection bit
  3268                           ;	CP3 = 0x1, unprogrammed default
  3269  300008                     	org	3145736
  3270  300008  0F                 	db	15
  3271                           
  3272                           ;Config register CONFIG5H @ 0x300009
  3273                           ;	unspecified, using default values
  3274                           ;	Boot Block Code Protection bit
  3275                           ;	CPB = 0x1, unprogrammed default
  3276                           ;	Data EEPROM Code Protection bit
  3277                           ;	CPD = 0x1, unprogrammed default
  3278  300009                     	org	3145737
  3279  300009  C0                 	db	192
  3280                           
  3281                           ;Config register CONFIG6L @ 0x30000A
  3282                           ;	unspecified, using default values
  3283                           ;	Write Protection bit
  3284                           ;	WRT0 = 0x1, unprogrammed default
  3285                           ;	Write Protection bit
  3286                           ;	WRT1 = 0x1, unprogrammed default
  3287                           ;	Write Protection bit
  3288                           ;	WRT2 = 0x1, unprogrammed default
  3289                           ;	Write Protection bit
  3290                           ;	WRT3 = 0x1, unprogrammed default
  3291  30000A                     	org	3145738
  3292  30000A  0F                 	db	15
  3293                           
  3294                           ;Config register CONFIG6H @ 0x30000B
  3295                           ;	unspecified, using default values
  3296                           ;	Configuration Register Write Protection bit
  3297                           ;	WRTC = 0x1, unprogrammed default
  3298                           ;	Boot Block Write Protection bit
  3299                           ;	WRTB = 0x1, unprogrammed default
  3300                           ;	Data EEPROM Write Protection bit
  3301                           ;	WRTD = 0x1, unprogrammed default
  3302  30000B                     	org	3145739
  3303  30000B  E0                 	db	224
  3304                           
  3305                           ;Config register CONFIG7L @ 0x30000C
  3306                           ;	unspecified, using default values
  3307                           ;	Table Read Protection bit
  3308                           ;	EBTR0 = 0x1, unprogrammed default
  3309                           ;	Table Read Protection bit
  3310                           ;	EBTR1 = 0x1, unprogrammed default
  3311                           ;	Table Read Protection bit
  3312                           ;	EBTR2 = 0x1, unprogrammed default
  3313                           ;	Table Read Protection bit
  3314                           ;	EBTR3 = 0x1, unprogrammed default
  3315  30000C                     	org	3145740
  3316  30000C  0F                 	db	15
  3317                           
  3318                           ;Config register CONFIG7H @ 0x30000D
  3319                           ;	unspecified, using default values
  3320                           ;	Boot Block Table Read Protection bit
  3321                           ;	EBTRB = 0x1, unprogrammed default
  3322  30000D                     	org	3145741
  3323  30000D  40                 	db	64
  3324                           tosu	equ	0xFFF
  3325                           tosh	equ	0xFFE
  3326                           tosl	equ	0xFFD
  3327                           stkptr	equ	0xFFC
  3328                           pclatu	equ	0xFFB
  3329                           pclath	equ	0xFFA
  3330                           pcl	equ	0xFF9
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           indf0	equ	0xFEF
  3338                           postinc0	equ	0xFEE
  3339                           postdec0	equ	0xFED
  3340                           preinc0	equ	0xFEC
  3341                           plusw0	equ	0xFEB
  3342                           fsr0h	equ	0xFEA
  3343                           fsr0l	equ	0xFE9
  3344                           wreg	equ	0xFE8
  3345                           indf1	equ	0xFE7
  3346                           postinc1	equ	0xFE6
  3347                           postdec1	equ	0xFE5
  3348                           preinc1	equ	0xFE4
  3349                           plusw1	equ	0xFE3
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           bsr	equ	0xFE0
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           preinc2	equ	0xFDC
  3357                           plusw2	equ	0xFDB
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8

Data Sizes:
    Strings     94
    Constant    0
    Data        1
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      73
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[3]), STR_2(CODE[7]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___awtoft
    _abs->___fttol
    ___ftdiv->___ftmul
    ___awtoft->_abs
    _MensajeLCD_Var->_EscribeLCD_c
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_2Decimales->___ftdiv
    _EscribeLCD_2Decimales->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   20724
                                             46 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
              _EscribeLCD_2Decimales
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _abs
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     218
                                             38 COMRAM     4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    4403
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3276
                                             42 COMRAM     4     1      3
                         _Conversion (ARG)
                           ___ftpack
                            ___fttol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     350
                                              5 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_2Decimales                                7     4      3    7204
                                             38 COMRAM     7     4      3
                       _EscribeLCD_c
                      _EscribeLCD_n8
                            ___awmod
                            ___ftdiv (ARG)
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4245
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2805
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1448
                                              8 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_2Decimales
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     ___awmod
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
   _EscribeLCD_c
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   ___awtoft
     _Conversion (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
     _abs (ARG)
       ___fttol (ARG)
   ___ftdiv
   ___ftmul
   ___fttol
   _abs

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      20        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Feb 05 19:17:46 2022

                             _GO 007E11                       EnviaDato@a 0004  
                  _InicializaLCD 0FB4                              l243 1318  
                            l191 0AD4                              l630 0D1C  
                            l951 12CE                              _GIE 007F97  
                            u360 1356                              u600 0F94  
                            _ISR 0008                              u640 1204  
                            u560 0F16                              u800 0E4E  
                            u810 0E7E                              u901 0C78  
                            u671 0B84                              u815 0E76  
                            u760 1106                              u921 0CA0  
                            u850 0EDE                              u691 0BAC  
                            u791 0E44                              u987 08B2  
                            u997 08E8                              _abs 12B0  
                            _val 0047                     ___awmod@sign 0006  
                            wreg 000FE8                             ?_ISR 0001  
                   ___ftdiv@cntr 0021                     ___ftdiv@sign 0026  
                           l1050 1172                             ?_abs 0027  
                           l1052 117C                             l1046 1140  
                           l1048 1152                             l1056 1186  
                           l1068 11DA                             l1342 0FC6  
                           l1600 121E                             l1352 0FE4  
                           l1362 1002                             l1614 12A8  
                           l1606 1290                             l1622 0D54  
                           l1550 0F24                             l1382 103A  
                           l1720 10FA                             l1712 10E0  
                           l1560 0F80                             l1552 0F2E  
                           l1722 1102                             l1562 0F8A  
                           l1554 0F4C                             l1810 0C90  
                           l1628 0D74                             l1732 1124  
                           l1716 10EC                             l1638 0DBA  
                           l1654 0E1E                             l1558 0F62  
                           l1662 0B9C                             l1584 11FA  
                           l1736 1132                             l1728 111A  
                           l1816 0CB8                             l1920 0B0C  
                           l1682 0BF6                             l1746 0E60  
                           l1914 0A6E                             l1596 1216  
                           l1588 1200                             l1692 0C1E  
                           l1668 0BC4                             l1764 0EB4  
                           l1836 0CF6                             l1686 0C06  
                           l1782 0EF4                             l1774 0ECC  
                           l1696 0C2E                             l1776 0ED8  
                           l1768 0EC4                             l1792 12EC  
                           l1858 1236                             l1788 12DA  
                           l1894 08FE                             STR_1 0847  
                           STR_2 0855                             STR_3 085C  
                           STR_5 0826                             STR_6 0837  
                           STR_7 0815                             STR_8 0801  
                           u1007 1146                             u1017 1158  
                           u1027 1162                             u1037 1174  
                           u1047 117E                             u1057 13A0  
                           _LATB 000F8A                             _LATD 000F8C  
                           _PEIE 007F96                             _RBIF 007F90  
                           _TMR0 000FD6                             _Van0 0040  
                           _Van1 003D                             _Van2 003A  
                 ??_EscribeLCD_c 0005                             abs@a 0027  
                           _main 0860                     ___ftpack@arg 0001  
                   ___ftpack@exp 0004                             btemp 004A  
                           start 000E                     ___ftmul@cntr 0016  
                   ___param_bank 000000                     ___ftmul@sign 0017  
                          ??_ISR 0001                     ___fttol@exp1 0026  
                          ??_abs 0029                     ___fttol@lval 0022  
                 ?_InicializaLCD 0001                            ?_main 0001  
                __end_of___lbdiv 1222                            _ADRES 000FC3  
                __end_of___awmod 113C                    EscribeLCD_c@a 0005  
                __end_of___lbmod 12B0                  __end_of___ftdiv 0D4E  
                __end_of___ftmul 0C68                            _T0CON 000FD5  
                __end_of___fttol 0F06                            _LATD1 007C61  
                          _LATD2 007C62                            _LATD3 007C63  
                          _IRCF0 007E9C                            _IRCF1 007E9D  
                          _RCSTA 000FAB                            _SPBRG 000FAF  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TXSTA 000FAC                  ??_EscribeLCD_n8 000A  
                  ___awtoft@sign 002E                    ___ftpack@sign 0005  
        __size_of_MensajeLCD_Var 0028                            tablat 000FF5  
                     _Conversion 1300                      _HabilitaLCD 139C  
                          ttemp5 004B                            ttemp6 004E  
                          ttemp7 0052                            status 000FD8  
                          wtemp8 004B                  ___lbdiv@divisor 0005  
                ___lbdiv@counter 0007                 __end_of_BorraLCD 139C  
                __initialization 125A                     __end_of_main 0B74  
                         ??_main 002F             __end_of_ConfiguraLCD 135C  
                  ___fttol@sign1 0021                    __activetblptr 000002  
       EscribeLCD_2Decimales@num 002A                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                 DireccionaLCD@a 0005                   EscribeLCD_n8@a 000D  
                 EscribeLCD_n8@b 0009                 __end_of___awtoft 125A  
               __end_of___ftpack 0FB4               __size_of_EnviaDato 0046  
                         _TMR0IE 007F95                           _TMR0IF 007F92  
                         _TRISE0 007CB0                           _TRISE1 007CB1  
          __end_of_DireccionaLCD 1388                       _RetardoLCD 113C  
           EscribeLCD_n8@centena 000A                        ??___lbdiv 0006  
                      ??___awmod 0005                        ??___lbmod 0002  
                      ??___ftdiv 001E                        ??___ftmul 000F  
                      ??___fttol 001C                  ??_InicializaLCD 0005  
                         clear_0 1272                  ___awmod@divisor 0003  
                         isa$std 000001                  ___awmod@counter 0005  
           __end_of_EscribeLCD_c 1372            ___ftmul@f3_as_product 0013  
                   __pdataCOMRAM 0049                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ___lbdiv@dividend 0006  
                    ?_Conversion 0001                  ___lbmod@divisor 0001  
                     __accesstop 0060          __end_of__initialization 1278  
                ___lbmod@counter 0003            _EscribeLCD_2Decimales 1050  
                  ___rparam_used 000001                       ___ftdiv@f1 0018  
                     ___ftdiv@f2 001B                       ___ftdiv@f3 0022  
                     ___awtoft@c 002B                       ___ftmul@f1 0009  
                     ___ftmul@f2 000C                       ___fttol@f1 0018  
                 __pcstackCOMRAM 0001                __end_of_EnviaDato 11E8  
               ___lbdiv@quotient 0008           EscribeLCD_2Decimales@a 0027  
EscribeLCD_2Decimales@decimalesP 002C      EscribeLCD_2Decimales@unidad 002D  
                      ?_BorraLCD 0001                   _MensajeLCD_Var 12D8  
                MensajeLCD_Var@a 0006                      ?_RetardoLCD 0001  
                    RetardoLCD@a 0002            __size_of_ConfiguraLCD 0018  
                        _BAUDCON 000FB8                        ?___awtoft 002B  
                      ?___ftpack 0001              __size_of_Conversion 0026  
         __end_of_MensajeLCD_Var 1300                          i2u53_40 133E  
                        i2u54_45 1340                       ??_BorraLCD 0005  
                    _TempCelsius 0045           ?_EscribeLCD_2Decimales 0027  
                   ?_HabilitaLCD 0001                     _ConfiguraLCD 1344  
                        __Hparam 0000                          _TempAn0 0043  
                        __Lparam 0000                          _VoltAn0 0034  
                        _VoltAn1 0037                          _VoltAn2 0031  
          __size_of_EscribeLCD_c 0016                          ___lbdiv 11E8  
                        ___awmod 10CC                          ___lbmod 1286  
                        ___ftdiv 0C68                          ___ftmul 0B74  
                        ___fttol 0E34                     __psmallconst 0800  
                        __pcinit 125A                       ??___awtoft 002E  
                     ??___ftpack 0006                          __ramtop 0800  
                        __ptext0 0860                          __ptext1 12B0  
                        __ptext2 0C68                          __ptext3 1222  
                        __ptext4 12D8                          __ptext5 0FB4  
                        __ptext6 1388                          __ptext7 1050  
                        __ptext8 0E34                          __ptext9 0B74  
                   __size_of_ISR 133C                     __size_of_abs 0028  
            __size_of_RetardoLCD 0066                 ___awmod@dividend 0001  
                ?_MensajeLCD_Var 0006            __end_of_EscribeLCD_n8 0E34  
                 __pintcode_body 1326             end_of_initialization 1278  
                Conversion@canal 0004                    __Lmediumconst 0000  
                        int_func 1326                     _EscribeLCD_c 135C  
                        postinc0 000FEE                 ___lbmod@dividend 0002  
                   ??_Conversion 0003                      ___lbmod@rem 0004  
                    ___ftdiv@exp 0025                      ___ftmul@exp 0012  
                  __pidataCOMRAM 13AA            __end_of_InicializaLCD 1050  
             __end_of_Conversion 1326                        _EnviaDato 11A2  
         __size_of_DireccionaLCD 0016              start_initialization 125A  
                      _LecturaDS 0048                      __end_of_ISR 1344  
                    __end_of_abs 12D8                __size_of_BorraLCD 0014  
                   ??_RetardoLCD 0001             __size_of_HabilitaLCD 000E  
            EscribeLCD_n8@decena 000B              EscribeLCD_n8@unidad 000C  
                     ?_EnviaDato 0001                __size_of___awtoft 0038  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0031  
             __end_of_RetardoLCD 11A2          ??_EscribeLCD_2Decimales 002A  
                  _DireccionaLCD 1372                        __pintcode 0008  
                       ?___lbdiv 0005                         ?___awmod 0001  
                       ?___lbmod 0001                         ?___ftdiv 0018  
                       ?___ftmul 0009                         ?___fttol 0018  
               ??_MensajeLCD_Var 0007                      __smallconst 0800  
                 ?_DireccionaLCD 0001                      ??_EnviaDato 0003  
                       _BorraLCD 1388                         __Hrparam 0000  
                       __Lrparam 0000           __size_of_EscribeLCD_n8 00E6  
               __size_of___lbdiv 003A                 __size_of___awmod 0070  
               __size_of___lbmod 002A                 __size_of___ftdiv 00E6  
               __size_of___ftmul 00F4                 __size_of___fttol 00D2  
                       ___awtoft 1222                         ___ftpack 0F06  
                  ConfiguraLCD@a 0001                         __ptext10 0F06  
                       __ptext11 10CC                         __ptext20 1300  
                       __ptext12 0D4E                         __ptext21 1344  
                       __ptext13 1286                         __ptext14 11E8  
                       __ptext15 135C                         __ptext16 1372  
                       __ptext17 11A2                         __ptext18 113C  
                       __ptext19 139C                  ??_DireccionaLCD 0005  
                  __size_of_main 0314                         _interfaz 0049  
                       isa$xinst 000000                         int$flags 004A  
                  _EscribeLCD_n8 0D4E   __size_of_EscribeLCD_2Decimales 007C  
  __end_of_EscribeLCD_2Decimales 10CC                         intlevel2 0000  
                  ??_HabilitaLCD 0001                    ?_ConfiguraLCD 0001  
         __size_of_InicializaLCD 009C                   ?_EscribeLCD_n8 0009  
                 ??_ConfiguraLCD 0001                    ?_EscribeLCD_c 0001  
            __end_of_HabilitaLCD 13AA  
